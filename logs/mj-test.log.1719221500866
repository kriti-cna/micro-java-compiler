INFO  22:11:54,816 - Compiling source file: C:\Users\elena\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  22:11:54,817 - ================= LEKSICKA ANALIZA =================
INFO  22:11:54,851 - #2 program
INFO  22:11:54,851 - #47 test301
INFO  22:11:54,851 - #3 const
INFO  22:11:54,853 - #47 int
INFO  22:11:54,853 - #47 a
INFO  22:11:54,854 - #24 =
INFO  22:11:54,854 - #46 10
INFO  22:11:54,854 - #27 ;
INFO  22:11:54,855 - #35 {
INFO  22:11:54,856 - #8 void
INFO  22:11:54,856 - #47 main
INFO  22:11:54,857 - #31 (
INFO  22:11:54,857 - #32 )
INFO  22:11:54,858 - #47 int
INFO  22:11:54,858 - #47 niz
INFO  22:11:54,858 - #33 [
INFO  22:11:54,858 - #34 ]
INFO  22:11:54,858 - #27 ;
INFO  22:11:54,865 - #35 {
INFO  22:11:54,865 - #47 niz
INFO  22:11:54,865 - #24 =
INFO  22:11:54,867 - #45 range
INFO  22:11:54,867 - #31 (
INFO  22:11:54,867 - #47 a
INFO  22:11:54,867 - #32 )
INFO  22:11:54,868 - #27 ;
INFO  22:11:54,868 - #5 print
INFO  22:11:54,868 - #31 (
INFO  22:11:54,868 - #47 niz
INFO  22:11:54,868 - #33 [
INFO  22:11:54,868 - #46 9
INFO  22:11:54,868 - #34 ]
INFO  22:11:54,868 - #32 )
INFO  22:11:54,870 - #27 ;
INFO  22:11:54,871 - #5 print
INFO  22:11:54,871 - #31 (
INFO  22:11:54,871 - #47 niz
INFO  22:11:54,871 - #33 [
INFO  22:11:54,871 - #46 0
INFO  22:11:54,871 - #34 ]
INFO  22:11:54,872 - #32 )
INFO  22:11:54,872 - #27 ;
INFO  22:11:54,872 - #36 }
INFO  22:11:54,872 - #36 }
INFO  22:11:54,874 - ================= PARSIRANO STABLO =================
INFO  22:11:54,879 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  Declarations(
    NoDeclarations(
    ) [NoDeclarations]
    ConstantDeclaration(
      ConDecl(
        Type(
         int
        ) [Type]
        ConstDef(
         a
          NumConst(
           10
          ) [NumConst]
        ) [ConstDef]
        NoConstantDeclaration(
        ) [NoConstantDeclaration]
      ) [ConDecl]
    ) [ConstantDeclaration]
  ) [Declarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      ListOfVarDecl(
        NoVarDeclarations(
        ) [NoVarDeclarations]
        VarDeclaration(
          Type(
           int
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             niz
              Brackets(
              ) [Brackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [ListOfVarDecl]
      Statements(
        Statements(
          Statements(
            NoStatements(
            ) [NoStatements]
            DesignatorStat(
              DesignatorExpr(
                Designator(
                  WithoutNamespace(
                   niz
                  ) [WithoutNamespace]
                  NoArrayExpression(
                  ) [NoArrayExpression]
                ) [Designator]
                AssignOperation(
                ) [AssignOperation]
                PositiveStartExpr(
                  SingleTerm(
                    RangeExpression(
                      PositiveStartExpr(
                        SingleTerm(
                          DesignatorFact(
                            Designator(
                              WithoutNamespace(
                               a
                              ) [WithoutNamespace]
                              NoArrayExpression(
                              ) [NoArrayExpression]
                            ) [Designator]
                          ) [DesignatorFact]
                        ) [SingleTerm]
                      ) [PositiveStartExpr]
                    ) [RangeExpression]
                  ) [SingleTerm]
                ) [PositiveStartExpr]
              ) [DesignatorExpr]
            ) [DesignatorStat]
          ) [Statements]
          PrintExpr(
            PositiveStartExpr(
              SingleTerm(
                DesignatorFact(
                  Designator(
                    WithoutNamespace(
                     niz
                    ) [WithoutNamespace]
                    AddArrayExpression(
                      BraExpr(
                        PositiveStartExpr(
                          SingleTerm(
                            NumberConst(
                             9
                            ) [NumberConst]
                          ) [SingleTerm]
                        ) [PositiveStartExpr]
                      ) [BraExpr]
                    ) [AddArrayExpression]
                  ) [Designator]
                ) [DesignatorFact]
              ) [SingleTerm]
            ) [PositiveStartExpr]
            NoNumConstOpt(
            ) [NoNumConstOpt]
          ) [PrintExpr]
        ) [Statements]
        PrintExpr(
          PositiveStartExpr(
            SingleTerm(
              DesignatorFact(
                Designator(
                  WithoutNamespace(
                   niz
                  ) [WithoutNamespace]
                  AddArrayExpression(
                    BraExpr(
                      PositiveStartExpr(
                        SingleTerm(
                          NumberConst(
                           0
                          ) [NumberConst]
                        ) [SingleTerm]
                      ) [PositiveStartExpr]
                    ) [BraExpr]
                  ) [AddArrayExpression]
                ) [Designator]
              ) [DesignatorFact]
            ) [SingleTerm]
          ) [PositiveStartExpr]
          NoNumConstOpt(
          ) [NoNumConstOpt]
        ) [PrintExpr]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  22:11:54,879 - ================ Semanticka obrada ===================
INFO  22:11:54,894 - Const a defined on line 2
INFO  22:11:54,894 - Symbol niz found on line 8
INFO  22:11:54,894 - Symbol a found on line 8
INFO  22:11:54,894 - Symbol niz found on line 9
INFO  22:11:54,894 - Symbol niz found on line 10
INFO  22:11:54,894 - main() method found on line 1
INFO  22:23:06,941 - Compiling source file: C:\Users\elena\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  22:23:06,943 - ================= LEKSICKA ANALIZA =================
INFO  22:23:06,963 - #2 program
INFO  22:23:06,963 - #47 test301
INFO  22:23:06,963 - #3 const
INFO  22:23:06,964 - #47 int
INFO  22:23:06,964 - #47 a
INFO  22:23:06,964 - #24 =
INFO  22:23:06,964 - #46 10
INFO  22:23:06,964 - #27 ;
INFO  22:23:06,966 - #35 {
INFO  22:23:06,966 - #8 void
INFO  22:23:06,966 - #47 main
INFO  22:23:06,966 - #31 (
INFO  22:23:06,966 - #32 )
INFO  22:23:06,966 - #47 int
INFO  22:23:06,967 - #47 niz
INFO  22:23:06,967 - #33 [
INFO  22:23:06,967 - #34 ]
INFO  22:23:06,967 - #27 ;
INFO  22:23:06,967 - #35 {
INFO  22:23:06,967 - #47 niz
INFO  22:23:06,968 - #24 =
INFO  22:23:06,968 - #45 range
INFO  22:23:06,969 - #31 (
INFO  22:23:06,969 - #47 a
INFO  22:23:06,969 - #32 )
INFO  22:23:06,969 - #27 ;
INFO  22:23:06,969 - #5 print
INFO  22:23:06,969 - #31 (
INFO  22:23:06,969 - #47 niz
INFO  22:23:06,969 - #33 [
INFO  22:23:06,969 - #46 9
INFO  22:23:06,969 - #34 ]
INFO  22:23:06,969 - #32 )
INFO  22:23:06,971 - #27 ;
INFO  22:23:06,971 - #5 print
INFO  22:23:06,971 - #31 (
INFO  22:23:06,971 - #47 niz
INFO  22:23:06,971 - #33 [
INFO  22:23:06,971 - #46 0
INFO  22:23:06,971 - #34 ]
INFO  22:23:06,971 - #32 )
INFO  22:23:06,971 - #27 ;
INFO  22:23:06,971 - #36 }
INFO  22:23:06,971 - #36 }
INFO  22:23:06,972 - ================= PARSIRANO STABLO =================
INFO  22:23:06,975 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  Declarations(
    NoDeclarations(
    ) [NoDeclarations]
    ConstantDeclaration(
      ConDecl(
        Type(
         int
        ) [Type]
        ConstDef(
         a
          NumConst(
           10
          ) [NumConst]
        ) [ConstDef]
        NoConstantDeclaration(
        ) [NoConstantDeclaration]
      ) [ConDecl]
    ) [ConstantDeclaration]
  ) [Declarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      ListOfVarDecl(
        NoVarDeclarations(
        ) [NoVarDeclarations]
        VarDeclaration(
          Type(
           int
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             niz
              Brackets(
              ) [Brackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [ListOfVarDecl]
      Statements(
        Statements(
          Statements(
            NoStatements(
            ) [NoStatements]
            DesignatorStat(
              DesignatorExpr(
                Designator(
                  WithoutNamespace(
                   niz
                  ) [WithoutNamespace]
                  NoArrayExpression(
                  ) [NoArrayExpression]
                ) [Designator]
                AssignOperation(
                ) [AssignOperation]
                PositiveStartExpr(
                  SingleTerm(
                    RangeExpression(
                      PositiveStartExpr(
                        SingleTerm(
                          DesignatorFact(
                            Designator(
                              WithoutNamespace(
                               a
                              ) [WithoutNamespace]
                              NoArrayExpression(
                              ) [NoArrayExpression]
                            ) [Designator]
                          ) [DesignatorFact]
                        ) [SingleTerm]
                      ) [PositiveStartExpr]
                    ) [RangeExpression]
                  ) [SingleTerm]
                ) [PositiveStartExpr]
              ) [DesignatorExpr]
            ) [DesignatorStat]
          ) [Statements]
          PrintExpr(
            PositiveStartExpr(
              SingleTerm(
                DesignatorFact(
                  Designator(
                    WithoutNamespace(
                     niz
                    ) [WithoutNamespace]
                    AddArrayExpression(
                      BraExpr(
                        PositiveStartExpr(
                          SingleTerm(
                            NumberConst(
                             9
                            ) [NumberConst]
                          ) [SingleTerm]
                        ) [PositiveStartExpr]
                      ) [BraExpr]
                    ) [AddArrayExpression]
                  ) [Designator]
                ) [DesignatorFact]
              ) [SingleTerm]
            ) [PositiveStartExpr]
            NoNumConstOpt(
            ) [NoNumConstOpt]
          ) [PrintExpr]
        ) [Statements]
        PrintExpr(
          PositiveStartExpr(
            SingleTerm(
              DesignatorFact(
                Designator(
                  WithoutNamespace(
                   niz
                  ) [WithoutNamespace]
                  AddArrayExpression(
                    BraExpr(
                      PositiveStartExpr(
                        SingleTerm(
                          NumberConst(
                           0
                          ) [NumberConst]
                        ) [SingleTerm]
                      ) [PositiveStartExpr]
                    ) [BraExpr]
                  ) [AddArrayExpression]
                ) [Designator]
              ) [DesignatorFact]
            ) [SingleTerm]
          ) [PositiveStartExpr]
          NoNumConstOpt(
          ) [NoNumConstOpt]
        ) [PrintExpr]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  22:23:06,975 - ================ Semanticka obrada ===================
INFO  22:23:06,977 - Const a defined on line 2
INFO  22:23:06,977 - Symbol niz found on line 8
INFO  22:23:06,977 - Symbol a found on line 8
INFO  22:23:06,977 - Symbol niz found on line 9
INFO  22:23:06,977 - Symbol niz found on line 10
INFO  22:23:06,978 - main() method found on line 1
INFO  22:23:06,979 - Parser SUCCESS!
INFO  22:24:04,811 - Compiling source file: C:\Users\elena\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  22:24:04,811 - ================= LEKSICKA ANALIZA =================
INFO  22:24:04,834 - #2 program
INFO  22:24:04,834 - #47 test301
INFO  22:24:04,834 - #3 const
INFO  22:24:04,835 - #47 int
INFO  22:24:04,835 - #47 a
INFO  22:24:04,835 - #24 =
INFO  22:24:04,835 - #46 10
INFO  22:24:04,835 - #27 ;
INFO  22:24:04,836 - #35 {
INFO  22:24:04,836 - #8 void
INFO  22:24:04,837 - #47 main
INFO  22:24:04,837 - #31 (
INFO  22:24:04,838 - #32 )
INFO  22:24:04,839 - #47 int
INFO  22:24:04,839 - #47 niz
INFO  22:24:04,839 - #33 [
INFO  22:24:04,839 - #34 ]
INFO  22:24:04,839 - #27 ;
INFO  22:24:04,840 - #35 {
INFO  22:24:04,840 - #47 niz
INFO  22:24:04,840 - #24 =
INFO  22:24:04,842 - #45 range
INFO  22:24:04,843 - #31 (
INFO  22:24:04,843 - #47 a
INFO  22:24:04,843 - #32 )
INFO  22:24:04,843 - #27 ;
INFO  22:24:04,843 - #5 print
INFO  22:24:04,843 - #31 (
INFO  22:24:04,843 - #47 niz
INFO  22:24:04,843 - #33 [
INFO  22:24:04,843 - #46 9
INFO  22:24:04,843 - #34 ]
INFO  22:24:04,843 - #32 )
INFO  22:24:04,844 - #27 ;
INFO  22:24:04,844 - #5 print
INFO  22:24:04,844 - #31 (
INFO  22:24:04,844 - #47 niz
INFO  22:24:04,844 - #33 [
INFO  22:24:04,844 - #46 0
INFO  22:24:04,844 - #34 ]
INFO  22:24:04,844 - #32 )
INFO  22:24:04,844 - #27 ;
INFO  22:24:04,844 - #36 }
INFO  22:24:04,844 - #36 }
INFO  22:24:04,845 - ================= PARSIRANO STABLO =================
INFO  22:24:04,849 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  Declarations(
    NoDeclarations(
    ) [NoDeclarations]
    ConstantDeclaration(
      ConDecl(
        Type(
         int
        ) [Type]
        ConstDef(
         a
          NumConst(
           10
          ) [NumConst]
        ) [ConstDef]
        NoConstantDeclaration(
        ) [NoConstantDeclaration]
      ) [ConDecl]
    ) [ConstantDeclaration]
  ) [Declarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      ListOfVarDecl(
        NoVarDeclarations(
        ) [NoVarDeclarations]
        VarDeclaration(
          Type(
           int
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             niz
              Brackets(
              ) [Brackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [ListOfVarDecl]
      Statements(
        Statements(
          Statements(
            NoStatements(
            ) [NoStatements]
            DesignatorStat(
              DesignatorExpr(
                Designator(
                  WithoutNamespace(
                   niz
                  ) [WithoutNamespace]
                  NoArrayExpression(
                  ) [NoArrayExpression]
                ) [Designator]
                AssignOperation(
                ) [AssignOperation]
                PositiveStartExpr(
                  SingleTerm(
                    RangeExpression(
                      PositiveStartExpr(
                        SingleTerm(
                          DesignatorFact(
                            Designator(
                              WithoutNamespace(
                               a
                              ) [WithoutNamespace]
                              NoArrayExpression(
                              ) [NoArrayExpression]
                            ) [Designator]
                          ) [DesignatorFact]
                        ) [SingleTerm]
                      ) [PositiveStartExpr]
                    ) [RangeExpression]
                  ) [SingleTerm]
                ) [PositiveStartExpr]
              ) [DesignatorExpr]
            ) [DesignatorStat]
          ) [Statements]
          PrintExpr(
            PositiveStartExpr(
              SingleTerm(
                DesignatorFact(
                  Designator(
                    WithoutNamespace(
                     niz
                    ) [WithoutNamespace]
                    AddArrayExpression(
                      BraExpr(
                        PositiveStartExpr(
                          SingleTerm(
                            NumberConst(
                             9
                            ) [NumberConst]
                          ) [SingleTerm]
                        ) [PositiveStartExpr]
                      ) [BraExpr]
                    ) [AddArrayExpression]
                  ) [Designator]
                ) [DesignatorFact]
              ) [SingleTerm]
            ) [PositiveStartExpr]
            NoNumConstOpt(
            ) [NoNumConstOpt]
          ) [PrintExpr]
        ) [Statements]
        PrintExpr(
          PositiveStartExpr(
            SingleTerm(
              DesignatorFact(
                Designator(
                  WithoutNamespace(
                   niz
                  ) [WithoutNamespace]
                  AddArrayExpression(
                    BraExpr(
                      PositiveStartExpr(
                        SingleTerm(
                          NumberConst(
                           0
                          ) [NumberConst]
                        ) [SingleTerm]
                      ) [PositiveStartExpr]
                    ) [BraExpr]
                  ) [AddArrayExpression]
                ) [Designator]
              ) [DesignatorFact]
            ) [SingleTerm]
          ) [PositiveStartExpr]
          NoNumConstOpt(
          ) [NoNumConstOpt]
        ) [PrintExpr]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  22:24:04,849 - ================ Semanticka obrada ===================
INFO  22:24:04,850 - Const a defined on line 2
INFO  22:24:04,850 - Symbol niz found on line 8
INFO  22:24:04,850 - Symbol a found on line 8
INFO  22:24:04,851 - Symbol niz found on line 9
INFO  22:24:04,851 - Symbol niz found on line 10
INFO  22:24:04,851 - main() method found on line 1
INFO  22:24:04,853 - Parser SUCCESS!
INFO  22:25:26,100 - Compiling source file: C:\Users\elena\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  22:25:26,101 - ================= LEKSICKA ANALIZA =================
INFO  22:25:26,126 - #2 program
INFO  22:25:26,126 - #47 test301
INFO  22:25:26,126 - #3 const
INFO  22:25:26,126 - #47 int
INFO  22:25:26,126 - #47 a
INFO  22:25:26,127 - #24 =
INFO  22:25:26,127 - #46 10
INFO  22:25:26,127 - #27 ;
INFO  22:25:26,127 - #35 {
INFO  22:25:26,127 - #8 void
INFO  22:25:26,128 - #47 main
INFO  22:25:26,128 - #31 (
INFO  22:25:26,129 - #32 )
INFO  22:25:26,130 - #47 int
INFO  22:25:26,130 - #47 niz
INFO  22:25:26,130 - #33 [
INFO  22:25:26,130 - #34 ]
INFO  22:25:26,130 - #27 ;
INFO  22:25:26,131 - #35 {
INFO  22:25:26,131 - #47 niz
INFO  22:25:26,133 - #24 =
INFO  22:25:26,133 - #45 range
INFO  22:25:26,133 - #31 (
INFO  22:25:26,133 - #47 a
INFO  22:25:26,133 - #32 )
INFO  22:25:26,134 - #27 ;
INFO  22:25:26,134 - #5 print
INFO  22:25:26,134 - #31 (
INFO  22:25:26,134 - #47 niz
INFO  22:25:26,134 - #33 [
INFO  22:25:26,134 - #46 9
INFO  22:25:26,134 - #34 ]
INFO  22:25:26,135 - #32 )
INFO  22:25:26,135 - #27 ;
INFO  22:25:26,136 - #5 print
INFO  22:25:26,136 - #31 (
INFO  22:25:26,136 - #47 niz
INFO  22:25:26,136 - #33 [
INFO  22:25:26,136 - #46 0
INFO  22:25:26,136 - #34 ]
INFO  22:25:26,136 - #32 )
INFO  22:25:26,136 - #27 ;
INFO  22:25:26,136 - #36 }
INFO  22:25:26,136 - #36 }
INFO  22:25:26,137 - ================= PARSIRANO STABLO =================
INFO  22:25:26,139 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  Declarations(
    NoDeclarations(
    ) [NoDeclarations]
    ConstantDeclaration(
      ConDecl(
        Type(
         int
        ) [Type]
        ConstDef(
         a
          NumConst(
           10
          ) [NumConst]
        ) [ConstDef]
        NoConstantDeclaration(
        ) [NoConstantDeclaration]
      ) [ConDecl]
    ) [ConstantDeclaration]
  ) [Declarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      ListOfVarDecl(
        NoVarDeclarations(
        ) [NoVarDeclarations]
        VarDeclaration(
          Type(
           int
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             niz
              Brackets(
              ) [Brackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [ListOfVarDecl]
      Statements(
        Statements(
          Statements(
            NoStatements(
            ) [NoStatements]
            DesignatorStat(
              DesignatorExpr(
                Designator(
                  WithoutNamespace(
                   niz
                  ) [WithoutNamespace]
                  NoArrayExpression(
                  ) [NoArrayExpression]
                ) [Designator]
                AssignOperation(
                ) [AssignOperation]
                PositiveStartExpr(
                  SingleTerm(
                    RangeExpression(
                      PositiveStartExpr(
                        SingleTerm(
                          DesignatorFact(
                            Designator(
                              WithoutNamespace(
                               a
                              ) [WithoutNamespace]
                              NoArrayExpression(
                              ) [NoArrayExpression]
                            ) [Designator]
                          ) [DesignatorFact]
                        ) [SingleTerm]
                      ) [PositiveStartExpr]
                    ) [RangeExpression]
                  ) [SingleTerm]
                ) [PositiveStartExpr]
              ) [DesignatorExpr]
            ) [DesignatorStat]
          ) [Statements]
          PrintExpr(
            PositiveStartExpr(
              SingleTerm(
                DesignatorFact(
                  Designator(
                    WithoutNamespace(
                     niz
                    ) [WithoutNamespace]
                    AddArrayExpression(
                      BraExpr(
                        PositiveStartExpr(
                          SingleTerm(
                            NumberConst(
                             9
                            ) [NumberConst]
                          ) [SingleTerm]
                        ) [PositiveStartExpr]
                      ) [BraExpr]
                    ) [AddArrayExpression]
                  ) [Designator]
                ) [DesignatorFact]
              ) [SingleTerm]
            ) [PositiveStartExpr]
            NoNumConstOpt(
            ) [NoNumConstOpt]
          ) [PrintExpr]
        ) [Statements]
        PrintExpr(
          PositiveStartExpr(
            SingleTerm(
              DesignatorFact(
                Designator(
                  WithoutNamespace(
                   niz
                  ) [WithoutNamespace]
                  AddArrayExpression(
                    BraExpr(
                      PositiveStartExpr(
                        SingleTerm(
                          NumberConst(
                           0
                          ) [NumberConst]
                        ) [SingleTerm]
                      ) [PositiveStartExpr]
                    ) [BraExpr]
                  ) [AddArrayExpression]
                ) [Designator]
              ) [DesignatorFact]
            ) [SingleTerm]
          ) [PositiveStartExpr]
          NoNumConstOpt(
          ) [NoNumConstOpt]
        ) [PrintExpr]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  22:25:26,139 - ================ Semanticka obrada ===================
INFO  22:25:26,142 - Const a defined on line 2
INFO  22:25:26,142 - Symbol niz found on line 8
INFO  22:25:26,142 - Symbol a found on line 8
INFO  22:25:26,142 - Symbol niz found on line 9
INFO  22:25:26,142 - Symbol niz found on line 10
INFO  22:25:26,142 - main() method found on line 1
INFO  22:25:26,144 - Parser SUCCESS!
INFO  22:25:29,751 - Compiling source file: C:\Users\elena\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  22:25:29,752 - ================= LEKSICKA ANALIZA =================
INFO  22:25:29,773 - #2 program
INFO  22:25:29,773 - #47 test301
INFO  22:25:29,773 - #3 const
INFO  22:25:29,775 - #47 int
INFO  22:25:29,775 - #47 a
INFO  22:25:29,775 - #24 =
INFO  22:25:29,775 - #46 10
INFO  22:25:29,775 - #27 ;
INFO  22:25:29,776 - #35 {
INFO  22:25:29,776 - #8 void
INFO  22:25:29,776 - #47 main
INFO  22:25:29,777 - #31 (
INFO  22:25:29,777 - #32 )
INFO  22:25:29,777 - #47 int
INFO  22:25:29,777 - #47 niz
INFO  22:25:29,777 - #33 [
INFO  22:25:29,778 - #34 ]
INFO  22:25:29,778 - #27 ;
INFO  22:25:29,778 - #35 {
INFO  22:25:29,778 - #47 niz
INFO  22:25:29,779 - #24 =
INFO  22:25:29,780 - #45 range
INFO  22:25:29,781 - #31 (
INFO  22:25:29,781 - #47 a
INFO  22:25:29,781 - #32 )
INFO  22:25:29,781 - #27 ;
INFO  22:25:29,782 - #5 print
INFO  22:25:29,782 - #31 (
INFO  22:25:29,782 - #47 niz
INFO  22:25:29,782 - #33 [
INFO  22:25:29,782 - #46 9
INFO  22:25:29,782 - #34 ]
INFO  22:25:29,782 - #32 )
INFO  22:25:29,784 - #27 ;
INFO  22:25:29,784 - #5 print
INFO  22:25:29,784 - #31 (
INFO  22:25:29,784 - #47 niz
INFO  22:25:29,784 - #33 [
INFO  22:25:29,784 - #46 0
INFO  22:25:29,784 - #34 ]
INFO  22:25:29,784 - #32 )
INFO  22:25:29,784 - #27 ;
INFO  22:25:29,784 - #36 }
INFO  22:25:29,784 - #36 }
INFO  22:25:29,785 - ================= PARSIRANO STABLO =================
INFO  22:25:29,788 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  Declarations(
    NoDeclarations(
    ) [NoDeclarations]
    ConstantDeclaration(
      ConDecl(
        Type(
         int
        ) [Type]
        ConstDef(
         a
          NumConst(
           10
          ) [NumConst]
        ) [ConstDef]
        NoConstantDeclaration(
        ) [NoConstantDeclaration]
      ) [ConDecl]
    ) [ConstantDeclaration]
  ) [Declarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      ListOfVarDecl(
        NoVarDeclarations(
        ) [NoVarDeclarations]
        VarDeclaration(
          Type(
           int
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             niz
              Brackets(
              ) [Brackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [ListOfVarDecl]
      Statements(
        Statements(
          Statements(
            NoStatements(
            ) [NoStatements]
            DesignatorStat(
              DesignatorExpr(
                Designator(
                  WithoutNamespace(
                   niz
                  ) [WithoutNamespace]
                  NoArrayExpression(
                  ) [NoArrayExpression]
                ) [Designator]
                AssignOperation(
                ) [AssignOperation]
                PositiveStartExpr(
                  SingleTerm(
                    RangeExpression(
                      PositiveStartExpr(
                        SingleTerm(
                          DesignatorFact(
                            Designator(
                              WithoutNamespace(
                               a
                              ) [WithoutNamespace]
                              NoArrayExpression(
                              ) [NoArrayExpression]
                            ) [Designator]
                          ) [DesignatorFact]
                        ) [SingleTerm]
                      ) [PositiveStartExpr]
                    ) [RangeExpression]
                  ) [SingleTerm]
                ) [PositiveStartExpr]
              ) [DesignatorExpr]
            ) [DesignatorStat]
          ) [Statements]
          PrintExpr(
            PositiveStartExpr(
              SingleTerm(
                DesignatorFact(
                  Designator(
                    WithoutNamespace(
                     niz
                    ) [WithoutNamespace]
                    AddArrayExpression(
                      BraExpr(
                        PositiveStartExpr(
                          SingleTerm(
                            NumberConst(
                             9
                            ) [NumberConst]
                          ) [SingleTerm]
                        ) [PositiveStartExpr]
                      ) [BraExpr]
                    ) [AddArrayExpression]
                  ) [Designator]
                ) [DesignatorFact]
              ) [SingleTerm]
            ) [PositiveStartExpr]
            NoNumConstOpt(
            ) [NoNumConstOpt]
          ) [PrintExpr]
        ) [Statements]
        PrintExpr(
          PositiveStartExpr(
            SingleTerm(
              DesignatorFact(
                Designator(
                  WithoutNamespace(
                   niz
                  ) [WithoutNamespace]
                  AddArrayExpression(
                    BraExpr(
                      PositiveStartExpr(
                        SingleTerm(
                          NumberConst(
                           0
                          ) [NumberConst]
                        ) [SingleTerm]
                      ) [PositiveStartExpr]
                    ) [BraExpr]
                  ) [AddArrayExpression]
                ) [Designator]
              ) [DesignatorFact]
            ) [SingleTerm]
          ) [PositiveStartExpr]
          NoNumConstOpt(
          ) [NoNumConstOpt]
        ) [PrintExpr]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  22:25:29,788 - ================ Semanticka obrada ===================
INFO  22:25:29,790 - Const a defined on line 2
INFO  22:25:29,791 - Symbol niz found on line 8
INFO  22:25:29,791 - Symbol a found on line 8
INFO  22:25:29,791 - Symbol niz found on line 9
INFO  22:25:29,791 - Symbol niz found on line 10
INFO  22:25:29,791 - main() method found on line 1
INFO  22:25:29,793 - Parser SUCCESS!
INFO  22:26:12,065 - Compiling source file: C:\Users\elena\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  22:26:12,067 - ================= LEKSICKA ANALIZA =================
INFO  22:26:12,092 - #2 program
INFO  22:26:12,092 - #47 test301
INFO  22:26:12,092 - #3 const
INFO  22:26:12,092 - #47 int
INFO  22:26:12,092 - #47 a
INFO  22:26:12,093 - #24 =
INFO  22:26:12,093 - #46 10
INFO  22:26:12,093 - #27 ;
INFO  22:26:12,093 - #35 {
INFO  22:26:12,093 - #8 void
INFO  22:26:12,093 - #47 main
INFO  22:26:12,093 - #31 (
INFO  22:26:12,093 - #32 )
INFO  22:26:12,095 - #47 int
INFO  22:26:12,095 - #47 niz
INFO  22:26:12,095 - #33 [
INFO  22:26:12,095 - #34 ]
INFO  22:26:12,095 - #27 ;
INFO  22:26:12,096 - #35 {
INFO  22:26:12,096 - #47 niz
INFO  22:26:12,096 - #24 =
INFO  22:26:12,097 - #45 range
INFO  22:26:12,097 - #31 (
INFO  22:26:12,097 - #47 a
INFO  22:26:12,097 - #32 )
INFO  22:26:12,097 - #27 ;
INFO  22:26:12,097 - #5 print
INFO  22:26:12,097 - #31 (
INFO  22:26:12,097 - #47 niz
INFO  22:26:12,097 - #33 [
INFO  22:26:12,097 - #46 9
INFO  22:26:12,097 - #34 ]
INFO  22:26:12,098 - #32 )
INFO  22:26:12,098 - #27 ;
INFO  22:26:12,098 - #5 print
INFO  22:26:12,098 - #31 (
INFO  22:26:12,098 - #47 niz
INFO  22:26:12,098 - #33 [
INFO  22:26:12,098 - #46 0
INFO  22:26:12,098 - #34 ]
INFO  22:26:12,100 - #32 )
INFO  22:26:12,100 - #27 ;
INFO  22:26:12,100 - #36 }
INFO  22:26:12,100 - #36 }
INFO  22:26:12,101 - ================= PARSIRANO STABLO =================
INFO  22:26:12,106 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  Declarations(
    NoDeclarations(
    ) [NoDeclarations]
    ConstantDeclaration(
      ConDecl(
        Type(
         int
        ) [Type]
        ConstDef(
         a
          NumConst(
           10
          ) [NumConst]
        ) [ConstDef]
        NoConstantDeclaration(
        ) [NoConstantDeclaration]
      ) [ConDecl]
    ) [ConstantDeclaration]
  ) [Declarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      ListOfVarDecl(
        NoVarDeclarations(
        ) [NoVarDeclarations]
        VarDeclaration(
          Type(
           int
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             niz
              Brackets(
              ) [Brackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [ListOfVarDecl]
      Statements(
        Statements(
          Statements(
            NoStatements(
            ) [NoStatements]
            DesignatorStat(
              DesignatorExpr(
                Designator(
                  WithoutNamespace(
                   niz
                  ) [WithoutNamespace]
                  NoArrayExpression(
                  ) [NoArrayExpression]
                ) [Designator]
                AssignOperation(
                ) [AssignOperation]
                PositiveStartExpr(
                  SingleTerm(
                    RangeExpression(
                      PositiveStartExpr(
                        SingleTerm(
                          DesignatorFact(
                            Designator(
                              WithoutNamespace(
                               a
                              ) [WithoutNamespace]
                              NoArrayExpression(
                              ) [NoArrayExpression]
                            ) [Designator]
                          ) [DesignatorFact]
                        ) [SingleTerm]
                      ) [PositiveStartExpr]
                    ) [RangeExpression]
                  ) [SingleTerm]
                ) [PositiveStartExpr]
              ) [DesignatorExpr]
            ) [DesignatorStat]
          ) [Statements]
          PrintExpr(
            PositiveStartExpr(
              SingleTerm(
                DesignatorFact(
                  Designator(
                    WithoutNamespace(
                     niz
                    ) [WithoutNamespace]
                    AddArrayExpression(
                      BraExpr(
                        PositiveStartExpr(
                          SingleTerm(
                            NumberConst(
                             9
                            ) [NumberConst]
                          ) [SingleTerm]
                        ) [PositiveStartExpr]
                      ) [BraExpr]
                    ) [AddArrayExpression]
                  ) [Designator]
                ) [DesignatorFact]
              ) [SingleTerm]
            ) [PositiveStartExpr]
            NoNumConstOpt(
            ) [NoNumConstOpt]
          ) [PrintExpr]
        ) [Statements]
        PrintExpr(
          PositiveStartExpr(
            SingleTerm(
              DesignatorFact(
                Designator(
                  WithoutNamespace(
                   niz
                  ) [WithoutNamespace]
                  AddArrayExpression(
                    BraExpr(
                      PositiveStartExpr(
                        SingleTerm(
                          NumberConst(
                           0
                          ) [NumberConst]
                        ) [SingleTerm]
                      ) [PositiveStartExpr]
                    ) [BraExpr]
                  ) [AddArrayExpression]
                ) [Designator]
              ) [DesignatorFact]
            ) [SingleTerm]
          ) [PositiveStartExpr]
          NoNumConstOpt(
          ) [NoNumConstOpt]
        ) [PrintExpr]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  22:26:12,106 - ================ Semanticka obrada ===================
INFO  22:26:12,108 - Const a defined on line 2
INFO  22:26:12,108 - Symbol niz found on line 8
INFO  22:26:12,108 - Symbol a found on line 8
INFO  22:26:12,108 - Symbol niz found on line 9
INFO  22:26:12,108 - Symbol niz found on line 10
INFO  22:26:12,108 - main() method found on line 1
INFO  22:26:12,110 - Parser SUCCESS!
INFO  22:29:32,062 - Compiling source file: C:\Users\elena\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  22:29:32,064 - ================= LEKSICKA ANALIZA =================
INFO  22:29:32,090 - #2 program
INFO  22:29:32,091 - #47 test301
INFO  22:29:32,091 - #3 const
INFO  22:29:32,091 - #47 int
INFO  22:29:32,091 - #47 a
INFO  22:29:32,092 - #24 =
INFO  22:29:32,092 - #46 10
INFO  22:29:32,092 - #27 ;
INFO  22:29:32,092 - #35 {
INFO  22:29:32,092 - #8 void
INFO  22:29:32,094 - #47 main
INFO  22:29:32,094 - #31 (
INFO  22:29:32,094 - #32 )
INFO  22:29:32,095 - #47 int
INFO  22:29:32,095 - #47 niz
INFO  22:29:32,095 - #33 [
INFO  22:29:32,096 - #34 ]
INFO  22:29:32,096 - #27 ;
INFO  22:29:32,096 - #35 {
INFO  22:29:32,096 - #47 niz
INFO  22:29:32,097 - #24 =
INFO  22:29:32,097 - #45 range
INFO  22:29:32,098 - #31 (
INFO  22:29:32,098 - #47 a
INFO  22:29:32,098 - #32 )
INFO  22:29:32,098 - #27 ;
INFO  22:29:32,098 - #5 print
INFO  22:29:32,099 - #31 (
INFO  22:29:32,099 - #47 niz
INFO  22:29:32,099 - #33 [
INFO  22:29:32,099 - #46 9
INFO  22:29:32,099 - #34 ]
INFO  22:29:32,099 - #32 )
INFO  22:29:32,100 - #27 ;
INFO  22:29:32,100 - #5 print
INFO  22:29:32,100 - #31 (
INFO  22:29:32,100 - #47 niz
INFO  22:29:32,100 - #33 [
INFO  22:29:32,100 - #46 0
INFO  22:29:32,100 - #34 ]
INFO  22:29:32,100 - #32 )
INFO  22:29:32,100 - #27 ;
INFO  22:29:32,100 - #36 }
INFO  22:29:32,100 - #36 }
INFO  22:29:32,102 - ================= PARSIRANO STABLO =================
INFO  22:29:32,106 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  Declarations(
    NoDeclarations(
    ) [NoDeclarations]
    ConstantDeclaration(
      ConDecl(
        Type(
         int
        ) [Type]
        ConstDef(
         a
          NumConst(
           10
          ) [NumConst]
        ) [ConstDef]
        NoConstantDeclaration(
        ) [NoConstantDeclaration]
      ) [ConDecl]
    ) [ConstantDeclaration]
  ) [Declarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      ListOfVarDecl(
        NoVarDeclarations(
        ) [NoVarDeclarations]
        VarDeclaration(
          Type(
           int
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             niz
              Brackets(
              ) [Brackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [ListOfVarDecl]
      Statements(
        Statements(
          Statements(
            NoStatements(
            ) [NoStatements]
            DesignatorStat(
              DesignatorExpr(
                Designator(
                  WithoutNamespace(
                   niz
                  ) [WithoutNamespace]
                  NoArrayExpression(
                  ) [NoArrayExpression]
                ) [Designator]
                AssignOperation(
                ) [AssignOperation]
                PositiveStartExpr(
                  SingleTerm(
                    RangeExpression(
                      PositiveStartExpr(
                        SingleTerm(
                          DesignatorFact(
                            Designator(
                              WithoutNamespace(
                               a
                              ) [WithoutNamespace]
                              NoArrayExpression(
                              ) [NoArrayExpression]
                            ) [Designator]
                          ) [DesignatorFact]
                        ) [SingleTerm]
                      ) [PositiveStartExpr]
                    ) [RangeExpression]
                  ) [SingleTerm]
                ) [PositiveStartExpr]
              ) [DesignatorExpr]
            ) [DesignatorStat]
          ) [Statements]
          PrintExpr(
            PositiveStartExpr(
              SingleTerm(
                DesignatorFact(
                  Designator(
                    WithoutNamespace(
                     niz
                    ) [WithoutNamespace]
                    AddArrayExpression(
                      BraExpr(
                        PositiveStartExpr(
                          SingleTerm(
                            NumberConst(
                             9
                            ) [NumberConst]
                          ) [SingleTerm]
                        ) [PositiveStartExpr]
                      ) [BraExpr]
                    ) [AddArrayExpression]
                  ) [Designator]
                ) [DesignatorFact]
              ) [SingleTerm]
            ) [PositiveStartExpr]
            NoNumConstOpt(
            ) [NoNumConstOpt]
          ) [PrintExpr]
        ) [Statements]
        PrintExpr(
          PositiveStartExpr(
            SingleTerm(
              DesignatorFact(
                Designator(
                  WithoutNamespace(
                   niz
                  ) [WithoutNamespace]
                  AddArrayExpression(
                    BraExpr(
                      PositiveStartExpr(
                        SingleTerm(
                          NumberConst(
                           0
                          ) [NumberConst]
                        ) [SingleTerm]
                      ) [PositiveStartExpr]
                    ) [BraExpr]
                  ) [AddArrayExpression]
                ) [Designator]
              ) [DesignatorFact]
            ) [SingleTerm]
          ) [PositiveStartExpr]
          NoNumConstOpt(
          ) [NoNumConstOpt]
        ) [PrintExpr]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  22:29:32,106 - ================ Semanticka obrada ===================
INFO  22:29:32,109 - Const a defined on line 2
INFO  22:29:32,109 - Symbol niz found on line 8
INFO  22:29:32,109 - Symbol a found on line 8
INFO  22:29:32,109 - Symbol niz found on line 9
INFO  22:29:32,109 - Symbol niz found on line 10
INFO  22:29:32,109 - main() method found on line 1
INFO  22:29:32,111 - Parser SUCCESS!
INFO  22:29:39,025 - Compiling source file: C:\Users\elena\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  22:29:39,025 - ================= LEKSICKA ANALIZA =================
INFO  22:29:39,049 - #2 program
INFO  22:29:39,049 - #47 test301
INFO  22:29:39,049 - #3 const
INFO  22:29:39,050 - #47 int
INFO  22:29:39,050 - #47 a
INFO  22:29:39,050 - #24 =
INFO  22:29:39,050 - #46 10
INFO  22:29:39,050 - #27 ;
INFO  22:29:39,051 - #35 {
INFO  22:29:39,051 - #8 void
INFO  22:29:39,051 - #47 main
INFO  22:29:39,051 - #31 (
INFO  22:29:39,051 - #32 )
INFO  22:29:39,053 - #47 int
INFO  22:29:39,053 - #47 niz
INFO  22:29:39,053 - #33 [
INFO  22:29:39,053 - #34 ]
INFO  22:29:39,053 - #27 ;
INFO  22:29:39,053 - #35 {
INFO  22:29:39,053 - #47 niz
INFO  22:29:39,054 - #24 =
INFO  22:29:39,055 - #45 range
INFO  22:29:39,056 - #31 (
INFO  22:29:39,056 - #47 a
INFO  22:29:39,056 - #32 )
INFO  22:29:39,057 - #27 ;
INFO  22:29:39,057 - #5 print
INFO  22:29:39,057 - #31 (
INFO  22:29:39,057 - #47 niz
INFO  22:29:39,057 - #33 [
INFO  22:29:39,058 - #46 9
INFO  22:29:39,058 - #34 ]
INFO  22:29:39,058 - #32 )
INFO  22:29:39,060 - #27 ;
INFO  22:29:39,060 - #5 print
INFO  22:29:39,060 - #31 (
INFO  22:29:39,060 - #47 niz
INFO  22:29:39,060 - #33 [
INFO  22:29:39,060 - #46 0
INFO  22:29:39,060 - #34 ]
INFO  22:29:39,060 - #32 )
INFO  22:29:39,060 - #27 ;
INFO  22:29:39,060 - #36 }
INFO  22:29:39,060 - #36 }
INFO  22:29:39,060 - ================= PARSIRANO STABLO =================
INFO  22:29:39,063 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  Declarations(
    NoDeclarations(
    ) [NoDeclarations]
    ConstantDeclaration(
      ConDecl(
        Type(
         int
        ) [Type]
        ConstDef(
         a
          NumConst(
           10
          ) [NumConst]
        ) [ConstDef]
        NoConstantDeclaration(
        ) [NoConstantDeclaration]
      ) [ConDecl]
    ) [ConstantDeclaration]
  ) [Declarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      ListOfVarDecl(
        NoVarDeclarations(
        ) [NoVarDeclarations]
        VarDeclaration(
          Type(
           int
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             niz
              Brackets(
              ) [Brackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [ListOfVarDecl]
      Statements(
        Statements(
          Statements(
            NoStatements(
            ) [NoStatements]
            DesignatorStat(
              DesignatorExpr(
                Designator(
                  WithoutNamespace(
                   niz
                  ) [WithoutNamespace]
                  NoArrayExpression(
                  ) [NoArrayExpression]
                ) [Designator]
                AssignOperation(
                ) [AssignOperation]
                PositiveStartExpr(
                  SingleTerm(
                    RangeExpression(
                      PositiveStartExpr(
                        SingleTerm(
                          DesignatorFact(
                            Designator(
                              WithoutNamespace(
                               a
                              ) [WithoutNamespace]
                              NoArrayExpression(
                              ) [NoArrayExpression]
                            ) [Designator]
                          ) [DesignatorFact]
                        ) [SingleTerm]
                      ) [PositiveStartExpr]
                    ) [RangeExpression]
                  ) [SingleTerm]
                ) [PositiveStartExpr]
              ) [DesignatorExpr]
            ) [DesignatorStat]
          ) [Statements]
          PrintExpr(
            PositiveStartExpr(
              SingleTerm(
                DesignatorFact(
                  Designator(
                    WithoutNamespace(
                     niz
                    ) [WithoutNamespace]
                    AddArrayExpression(
                      BraExpr(
                        PositiveStartExpr(
                          SingleTerm(
                            NumberConst(
                             9
                            ) [NumberConst]
                          ) [SingleTerm]
                        ) [PositiveStartExpr]
                      ) [BraExpr]
                    ) [AddArrayExpression]
                  ) [Designator]
                ) [DesignatorFact]
              ) [SingleTerm]
            ) [PositiveStartExpr]
            NoNumConstOpt(
            ) [NoNumConstOpt]
          ) [PrintExpr]
        ) [Statements]
        PrintExpr(
          PositiveStartExpr(
            SingleTerm(
              DesignatorFact(
                Designator(
                  WithoutNamespace(
                   niz
                  ) [WithoutNamespace]
                  AddArrayExpression(
                    BraExpr(
                      PositiveStartExpr(
                        SingleTerm(
                          NumberConst(
                           0
                          ) [NumberConst]
                        ) [SingleTerm]
                      ) [PositiveStartExpr]
                    ) [BraExpr]
                  ) [AddArrayExpression]
                ) [Designator]
              ) [DesignatorFact]
            ) [SingleTerm]
          ) [PositiveStartExpr]
          NoNumConstOpt(
          ) [NoNumConstOpt]
        ) [PrintExpr]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  22:29:39,064 - ================ Semanticka obrada ===================
INFO  22:29:39,066 - Const a defined on line 2
INFO  22:29:39,066 - Symbol niz found on line 8
INFO  22:29:39,066 - Symbol a found on line 8
INFO  22:29:39,066 - Symbol niz found on line 9
INFO  22:29:39,066 - Symbol niz found on line 10
INFO  22:29:39,066 - main() method found on line 1
INFO  22:29:39,068 - Parser SUCCESS!
INFO  22:30:24,821 - Compiling source file: C:\Users\elena\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  22:30:24,821 - ================= LEKSICKA ANALIZA =================
INFO  22:30:24,845 - #2 program
INFO  22:30:24,845 - #47 test301
INFO  22:30:24,845 - #3 const
INFO  22:30:24,846 - #47 int
INFO  22:30:24,846 - #47 a
INFO  22:30:24,846 - #24 =
INFO  22:30:24,846 - #46 10
INFO  22:30:24,846 - #27 ;
INFO  22:30:24,848 - #35 {
INFO  22:30:24,848 - #8 void
INFO  22:30:24,848 - #47 main
INFO  22:30:24,848 - #31 (
INFO  22:30:24,848 - #32 )
INFO  22:30:24,848 - #47 int
INFO  22:30:24,850 - #47 niz
INFO  22:30:24,850 - #33 [
INFO  22:30:24,850 - #34 ]
INFO  22:30:24,850 - #27 ;
INFO  22:30:24,850 - #35 {
INFO  22:30:24,850 - #47 niz
INFO  22:30:24,850 - #24 =
INFO  22:30:24,851 - #45 range
INFO  22:30:24,852 - #31 (
INFO  22:30:24,852 - #47 a
INFO  22:30:24,852 - #32 )
INFO  22:30:24,852 - #27 ;
INFO  22:30:24,852 - #5 print
INFO  22:30:24,852 - #31 (
INFO  22:30:24,852 - #47 niz
INFO  22:30:24,852 - #33 [
INFO  22:30:24,852 - #46 9
INFO  22:30:24,852 - #34 ]
INFO  22:30:24,852 - #32 )
INFO  22:30:24,853 - #27 ;
INFO  22:30:24,853 - #5 print
INFO  22:30:24,854 - #31 (
INFO  22:30:24,854 - #47 niz
INFO  22:30:24,854 - #33 [
INFO  22:30:24,854 - #46 0
INFO  22:30:24,854 - #34 ]
INFO  22:30:24,854 - #32 )
INFO  22:30:24,854 - #27 ;
INFO  22:30:24,854 - #36 }
INFO  22:30:24,854 - #36 }
INFO  22:30:24,855 - ================= PARSIRANO STABLO =================
INFO  22:30:24,858 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  Declarations(
    NoDeclarations(
    ) [NoDeclarations]
    ConstantDeclaration(
      ConDecl(
        Type(
         int
        ) [Type]
        ConstDef(
         a
          NumConst(
           10
          ) [NumConst]
        ) [ConstDef]
        NoConstantDeclaration(
        ) [NoConstantDeclaration]
      ) [ConDecl]
    ) [ConstantDeclaration]
  ) [Declarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      ListOfVarDecl(
        NoVarDeclarations(
        ) [NoVarDeclarations]
        VarDeclaration(
          Type(
           int
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             niz
              Brackets(
              ) [Brackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [ListOfVarDecl]
      Statements(
        Statements(
          Statements(
            NoStatements(
            ) [NoStatements]
            DesignatorStat(
              DesignatorExpr(
                Designator(
                  WithoutNamespace(
                   niz
                  ) [WithoutNamespace]
                  NoArrayExpression(
                  ) [NoArrayExpression]
                ) [Designator]
                AssignOperation(
                ) [AssignOperation]
                PositiveStartExpr(
                  SingleTerm(
                    RangeExpression(
                      PositiveStartExpr(
                        SingleTerm(
                          DesignatorFact(
                            Designator(
                              WithoutNamespace(
                               a
                              ) [WithoutNamespace]
                              NoArrayExpression(
                              ) [NoArrayExpression]
                            ) [Designator]
                          ) [DesignatorFact]
                        ) [SingleTerm]
                      ) [PositiveStartExpr]
                    ) [RangeExpression]
                  ) [SingleTerm]
                ) [PositiveStartExpr]
              ) [DesignatorExpr]
            ) [DesignatorStat]
          ) [Statements]
          PrintExpr(
            PositiveStartExpr(
              SingleTerm(
                DesignatorFact(
                  Designator(
                    WithoutNamespace(
                     niz
                    ) [WithoutNamespace]
                    AddArrayExpression(
                      BraExpr(
                        PositiveStartExpr(
                          SingleTerm(
                            NumberConst(
                             9
                            ) [NumberConst]
                          ) [SingleTerm]
                        ) [PositiveStartExpr]
                      ) [BraExpr]
                    ) [AddArrayExpression]
                  ) [Designator]
                ) [DesignatorFact]
              ) [SingleTerm]
            ) [PositiveStartExpr]
            NoNumConstOpt(
            ) [NoNumConstOpt]
          ) [PrintExpr]
        ) [Statements]
        PrintExpr(
          PositiveStartExpr(
            SingleTerm(
              DesignatorFact(
                Designator(
                  WithoutNamespace(
                   niz
                  ) [WithoutNamespace]
                  AddArrayExpression(
                    BraExpr(
                      PositiveStartExpr(
                        SingleTerm(
                          NumberConst(
                           0
                          ) [NumberConst]
                        ) [SingleTerm]
                      ) [PositiveStartExpr]
                    ) [BraExpr]
                  ) [AddArrayExpression]
                ) [Designator]
              ) [DesignatorFact]
            ) [SingleTerm]
          ) [PositiveStartExpr]
          NoNumConstOpt(
          ) [NoNumConstOpt]
        ) [PrintExpr]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  22:30:24,858 - ================ Semanticka obrada ===================
INFO  22:30:24,860 - Const a defined on line 2
INFO  22:30:24,860 - Symbol niz found on line 8
INFO  22:30:24,860 - Symbol a found on line 8
INFO  22:30:24,860 - Symbol niz found on line 9
INFO  22:30:24,860 - Symbol niz found on line 10
INFO  22:30:24,860 - main() method found on line 1
INFO  22:30:24,863 - Parser SUCCESS!
INFO  22:31:13,530 - Compiling source file: C:\Users\elena\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  22:31:13,530 - ================= LEKSICKA ANALIZA =================
INFO  22:31:13,558 - #2 program
INFO  22:31:13,558 - #47 test301
INFO  22:31:13,558 - #3 const
INFO  22:31:13,558 - #47 int
INFO  22:31:13,558 - #47 a
INFO  22:31:13,559 - #24 =
INFO  22:31:13,559 - #46 10
INFO  22:31:13,559 - #27 ;
INFO  22:31:13,560 - #35 {
INFO  22:31:13,560 - #8 void
INFO  22:31:13,560 - #47 main
INFO  22:31:13,560 - #31 (
INFO  22:31:13,561 - #32 )
INFO  22:31:13,561 - #47 int
INFO  22:31:13,561 - #47 niz
INFO  22:31:13,561 - #33 [
INFO  22:31:13,561 - #34 ]
INFO  22:31:13,562 - #27 ;
INFO  22:31:13,562 - #35 {
INFO  22:31:13,562 - #47 niz
INFO  22:31:13,562 - #24 =
INFO  22:31:13,564 - #45 range
INFO  22:31:13,564 - #31 (
INFO  22:31:13,564 - #47 a
INFO  22:31:13,564 - #32 )
INFO  22:31:13,564 - #27 ;
INFO  22:31:13,564 - #5 print
INFO  22:31:13,564 - #31 (
INFO  22:31:13,564 - #47 niz
INFO  22:31:13,564 - #33 [
INFO  22:31:13,565 - #46 9
INFO  22:31:13,565 - #34 ]
INFO  22:31:13,565 - #32 )
INFO  22:31:13,566 - #27 ;
INFO  22:31:13,566 - #5 print
INFO  22:31:13,567 - #31 (
INFO  22:31:13,567 - #47 niz
INFO  22:31:13,567 - #33 [
INFO  22:31:13,567 - #46 0
INFO  22:31:13,567 - #34 ]
INFO  22:31:13,567 - #32 )
INFO  22:31:13,567 - #27 ;
INFO  22:31:13,567 - #36 }
INFO  22:31:13,567 - #36 }
INFO  22:31:13,568 - ================= PARSIRANO STABLO =================
INFO  22:31:13,573 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  Declarations(
    NoDeclarations(
    ) [NoDeclarations]
    ConstantDeclaration(
      ConDecl(
        Type(
         int
        ) [Type]
        ConstDef(
         a
          NumConst(
           10
          ) [NumConst]
        ) [ConstDef]
        NoConstantDeclaration(
        ) [NoConstantDeclaration]
      ) [ConDecl]
    ) [ConstantDeclaration]
  ) [Declarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      ListOfVarDecl(
        NoVarDeclarations(
        ) [NoVarDeclarations]
        VarDeclaration(
          Type(
           int
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             niz
              Brackets(
              ) [Brackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [ListOfVarDecl]
      Statements(
        Statements(
          Statements(
            NoStatements(
            ) [NoStatements]
            DesignatorStat(
              DesignatorExpr(
                Designator(
                  WithoutNamespace(
                   niz
                  ) [WithoutNamespace]
                  NoArrayExpression(
                  ) [NoArrayExpression]
                ) [Designator]
                AssignOperation(
                ) [AssignOperation]
                PositiveStartExpr(
                  SingleTerm(
                    RangeExpression(
                      PositiveStartExpr(
                        SingleTerm(
                          DesignatorFact(
                            Designator(
                              WithoutNamespace(
                               a
                              ) [WithoutNamespace]
                              NoArrayExpression(
                              ) [NoArrayExpression]
                            ) [Designator]
                          ) [DesignatorFact]
                        ) [SingleTerm]
                      ) [PositiveStartExpr]
                    ) [RangeExpression]
                  ) [SingleTerm]
                ) [PositiveStartExpr]
              ) [DesignatorExpr]
            ) [DesignatorStat]
          ) [Statements]
          PrintExpr(
            PositiveStartExpr(
              SingleTerm(
                DesignatorFact(
                  Designator(
                    WithoutNamespace(
                     niz
                    ) [WithoutNamespace]
                    AddArrayExpression(
                      BraExpr(
                        PositiveStartExpr(
                          SingleTerm(
                            NumberConst(
                             9
                            ) [NumberConst]
                          ) [SingleTerm]
                        ) [PositiveStartExpr]
                      ) [BraExpr]
                    ) [AddArrayExpression]
                  ) [Designator]
                ) [DesignatorFact]
              ) [SingleTerm]
            ) [PositiveStartExpr]
            NoNumConstOpt(
            ) [NoNumConstOpt]
          ) [PrintExpr]
        ) [Statements]
        PrintExpr(
          PositiveStartExpr(
            SingleTerm(
              DesignatorFact(
                Designator(
                  WithoutNamespace(
                   niz
                  ) [WithoutNamespace]
                  AddArrayExpression(
                    BraExpr(
                      PositiveStartExpr(
                        SingleTerm(
                          NumberConst(
                           0
                          ) [NumberConst]
                        ) [SingleTerm]
                      ) [PositiveStartExpr]
                    ) [BraExpr]
                  ) [AddArrayExpression]
                ) [Designator]
              ) [DesignatorFact]
            ) [SingleTerm]
          ) [PositiveStartExpr]
          NoNumConstOpt(
          ) [NoNumConstOpt]
        ) [PrintExpr]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  22:31:13,573 - ================ Semanticka obrada ===================
INFO  22:31:13,575 - Const a defined on line 2
INFO  22:31:13,575 - Symbol niz found on line 8
INFO  22:31:13,575 - Symbol a found on line 8
INFO  22:31:13,575 - Symbol niz found on line 9
INFO  22:31:13,575 - Symbol niz found on line 10
INFO  22:31:13,575 - main() method found on line 1
INFO  22:31:13,578 - Parser SUCCESS!
INFO  22:31:32,099 - Compiling source file: C:\Users\elena\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  22:31:32,100 - ================= LEKSICKA ANALIZA =================
INFO  22:31:32,132 - #2 program
INFO  22:31:32,132 - #47 test301
INFO  22:31:32,132 - #3 const
INFO  22:31:32,134 - #47 int
INFO  22:31:32,134 - #47 a
INFO  22:31:32,134 - #24 =
INFO  22:31:32,134 - #46 10
INFO  22:31:32,134 - #27 ;
INFO  22:31:32,135 - #35 {
INFO  22:31:32,135 - #8 void
INFO  22:31:32,136 - #47 main
INFO  22:31:32,137 - #31 (
INFO  22:31:32,137 - #32 )
INFO  22:31:32,138 - #47 int
INFO  22:31:32,138 - #47 niz
INFO  22:31:32,138 - #33 [
INFO  22:31:32,138 - #34 ]
INFO  22:31:32,138 - #27 ;
INFO  22:31:32,140 - #35 {
INFO  22:31:32,140 - #47 niz
INFO  22:31:32,140 - #24 =
INFO  22:31:32,141 - #45 range
INFO  22:31:32,141 - #31 (
INFO  22:31:32,141 - #47 a
INFO  22:31:32,142 - #32 )
INFO  22:31:32,142 - #27 ;
INFO  22:31:32,142 - #5 print
INFO  22:31:32,142 - #31 (
INFO  22:31:32,142 - #47 niz
INFO  22:31:32,142 - #33 [
INFO  22:31:32,142 - #46 9
INFO  22:31:32,142 - #34 ]
INFO  22:31:32,142 - #32 )
INFO  22:31:32,143 - #27 ;
INFO  22:31:32,143 - #5 print
INFO  22:31:32,143 - #31 (
INFO  22:31:32,143 - #47 niz
INFO  22:31:32,143 - #33 [
INFO  22:31:32,143 - #46 0
INFO  22:31:32,143 - #34 ]
INFO  22:31:32,143 - #32 )
INFO  22:31:32,143 - #27 ;
INFO  22:31:32,143 - #36 }
INFO  22:31:32,144 - #36 }
INFO  22:31:32,145 - ================= PARSIRANO STABLO =================
INFO  22:31:32,150 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  Declarations(
    NoDeclarations(
    ) [NoDeclarations]
    ConstantDeclaration(
      ConDecl(
        Type(
         int
        ) [Type]
        ConstDef(
         a
          NumConst(
           10
          ) [NumConst]
        ) [ConstDef]
        NoConstantDeclaration(
        ) [NoConstantDeclaration]
      ) [ConDecl]
    ) [ConstantDeclaration]
  ) [Declarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      ListOfVarDecl(
        NoVarDeclarations(
        ) [NoVarDeclarations]
        VarDeclaration(
          Type(
           int
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             niz
              Brackets(
              ) [Brackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [ListOfVarDecl]
      Statements(
        Statements(
          Statements(
            NoStatements(
            ) [NoStatements]
            DesignatorStat(
              DesignatorExpr(
                Designator(
                  WithoutNamespace(
                   niz
                  ) [WithoutNamespace]
                  NoArrayExpression(
                  ) [NoArrayExpression]
                ) [Designator]
                AssignOperation(
                ) [AssignOperation]
                PositiveStartExpr(
                  SingleTerm(
                    RangeExpression(
                      PositiveStartExpr(
                        SingleTerm(
                          DesignatorFact(
                            Designator(
                              WithoutNamespace(
                               a
                              ) [WithoutNamespace]
                              NoArrayExpression(
                              ) [NoArrayExpression]
                            ) [Designator]
                          ) [DesignatorFact]
                        ) [SingleTerm]
                      ) [PositiveStartExpr]
                    ) [RangeExpression]
                  ) [SingleTerm]
                ) [PositiveStartExpr]
              ) [DesignatorExpr]
            ) [DesignatorStat]
          ) [Statements]
          PrintExpr(
            PositiveStartExpr(
              SingleTerm(
                DesignatorFact(
                  Designator(
                    WithoutNamespace(
                     niz
                    ) [WithoutNamespace]
                    AddArrayExpression(
                      BraExpr(
                        PositiveStartExpr(
                          SingleTerm(
                            NumberConst(
                             9
                            ) [NumberConst]
                          ) [SingleTerm]
                        ) [PositiveStartExpr]
                      ) [BraExpr]
                    ) [AddArrayExpression]
                  ) [Designator]
                ) [DesignatorFact]
              ) [SingleTerm]
            ) [PositiveStartExpr]
            NoNumConstOpt(
            ) [NoNumConstOpt]
          ) [PrintExpr]
        ) [Statements]
        PrintExpr(
          PositiveStartExpr(
            SingleTerm(
              DesignatorFact(
                Designator(
                  WithoutNamespace(
                   niz
                  ) [WithoutNamespace]
                  AddArrayExpression(
                    BraExpr(
                      PositiveStartExpr(
                        SingleTerm(
                          NumberConst(
                           0
                          ) [NumberConst]
                        ) [SingleTerm]
                      ) [PositiveStartExpr]
                    ) [BraExpr]
                  ) [AddArrayExpression]
                ) [Designator]
              ) [DesignatorFact]
            ) [SingleTerm]
          ) [PositiveStartExpr]
          NoNumConstOpt(
          ) [NoNumConstOpt]
        ) [PrintExpr]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  22:31:32,150 - ================ Semanticka obrada ===================
INFO  22:31:32,163 - Const a defined on line 2
INFO  22:31:32,163 - Symbol niz found on line 8
INFO  22:31:32,163 - Symbol a found on line 8
INFO  22:31:32,164 - Symbol niz found on line 9
INFO  22:31:32,164 - Symbol niz found on line 10
INFO  22:31:32,164 - main() method found on line 1
INFO  22:32:02,876 - Compiling source file: C:\Users\elena\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  22:32:02,877 - ================= LEKSICKA ANALIZA =================
INFO  22:32:02,902 - #2 program
INFO  22:32:02,902 - #47 test301
INFO  22:32:02,902 - #3 const
INFO  22:32:02,903 - #47 int
INFO  22:32:02,903 - #47 a
INFO  22:32:02,903 - #24 =
INFO  22:32:02,903 - #46 10
INFO  22:32:02,903 - #27 ;
INFO  22:32:02,904 - #35 {
INFO  22:32:02,904 - #8 void
INFO  22:32:02,904 - #47 main
INFO  22:32:02,904 - #31 (
INFO  22:32:02,904 - #32 )
INFO  22:32:02,905 - #47 int
INFO  22:32:02,905 - #47 niz
INFO  22:32:02,905 - #33 [
INFO  22:32:02,905 - #34 ]
INFO  22:32:02,905 - #27 ;
INFO  22:32:02,906 - #35 {
INFO  22:32:02,907 - #47 niz
INFO  22:32:02,907 - #24 =
INFO  22:32:02,910 - #45 range
INFO  22:32:02,910 - #31 (
INFO  22:32:02,910 - #47 a
INFO  22:32:02,910 - #32 )
INFO  22:32:02,911 - #27 ;
INFO  22:32:02,911 - #5 print
INFO  22:32:02,911 - #31 (
INFO  22:32:02,911 - #47 niz
INFO  22:32:02,911 - #33 [
INFO  22:32:02,911 - #46 9
INFO  22:32:02,911 - #34 ]
INFO  22:32:02,911 - #32 )
INFO  22:32:02,913 - #27 ;
INFO  22:32:02,913 - #5 print
INFO  22:32:02,913 - #31 (
INFO  22:32:02,913 - #47 niz
INFO  22:32:02,913 - #33 [
INFO  22:32:02,913 - #46 0
INFO  22:32:02,913 - #34 ]
INFO  22:32:02,914 - #32 )
INFO  22:32:02,914 - #27 ;
INFO  22:32:02,914 - #36 }
INFO  22:32:02,914 - #36 }
INFO  22:32:02,916 - ================= PARSIRANO STABLO =================
INFO  22:32:02,919 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  Declarations(
    NoDeclarations(
    ) [NoDeclarations]
    ConstantDeclaration(
      ConDecl(
        Type(
         int
        ) [Type]
        ConstDef(
         a
          NumConst(
           10
          ) [NumConst]
        ) [ConstDef]
        NoConstantDeclaration(
        ) [NoConstantDeclaration]
      ) [ConDecl]
    ) [ConstantDeclaration]
  ) [Declarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      ListOfVarDecl(
        NoVarDeclarations(
        ) [NoVarDeclarations]
        VarDeclaration(
          Type(
           int
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             niz
              Brackets(
              ) [Brackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [ListOfVarDecl]
      Statements(
        Statements(
          Statements(
            NoStatements(
            ) [NoStatements]
            DesignatorStat(
              DesignatorExpr(
                Designator(
                  WithoutNamespace(
                   niz
                  ) [WithoutNamespace]
                  NoArrayExpression(
                  ) [NoArrayExpression]
                ) [Designator]
                AssignOperation(
                ) [AssignOperation]
                PositiveStartExpr(
                  SingleTerm(
                    RangeExpression(
                      PositiveStartExpr(
                        SingleTerm(
                          DesignatorFact(
                            Designator(
                              WithoutNamespace(
                               a
                              ) [WithoutNamespace]
                              NoArrayExpression(
                              ) [NoArrayExpression]
                            ) [Designator]
                          ) [DesignatorFact]
                        ) [SingleTerm]
                      ) [PositiveStartExpr]
                    ) [RangeExpression]
                  ) [SingleTerm]
                ) [PositiveStartExpr]
              ) [DesignatorExpr]
            ) [DesignatorStat]
          ) [Statements]
          PrintExpr(
            PositiveStartExpr(
              SingleTerm(
                DesignatorFact(
                  Designator(
                    WithoutNamespace(
                     niz
                    ) [WithoutNamespace]
                    AddArrayExpression(
                      BraExpr(
                        PositiveStartExpr(
                          SingleTerm(
                            NumberConst(
                             9
                            ) [NumberConst]
                          ) [SingleTerm]
                        ) [PositiveStartExpr]
                      ) [BraExpr]
                    ) [AddArrayExpression]
                  ) [Designator]
                ) [DesignatorFact]
              ) [SingleTerm]
            ) [PositiveStartExpr]
            NoNumConstOpt(
            ) [NoNumConstOpt]
          ) [PrintExpr]
        ) [Statements]
        PrintExpr(
          PositiveStartExpr(
            SingleTerm(
              DesignatorFact(
                Designator(
                  WithoutNamespace(
                   niz
                  ) [WithoutNamespace]
                  AddArrayExpression(
                    BraExpr(
                      PositiveStartExpr(
                        SingleTerm(
                          NumberConst(
                           0
                          ) [NumberConst]
                        ) [SingleTerm]
                      ) [PositiveStartExpr]
                    ) [BraExpr]
                  ) [AddArrayExpression]
                ) [Designator]
              ) [DesignatorFact]
            ) [SingleTerm]
          ) [PositiveStartExpr]
          NoNumConstOpt(
          ) [NoNumConstOpt]
        ) [PrintExpr]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  22:32:02,919 - ================ Semanticka obrada ===================
INFO  22:32:02,921 - Const a defined on line 2
INFO  22:32:02,921 - Symbol niz found on line 8
INFO  22:32:02,921 - Symbol a found on line 8
INFO  22:32:02,921 - Symbol niz found on line 9
INFO  22:32:02,921 - Symbol niz found on line 10
INFO  22:32:02,921 - main() method found on line 1
INFO  22:32:02,922 - Parser SUCCESS!
INFO  22:34:01,017 - Compiling source file: C:\Users\elena\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  22:34:01,017 - ================= LEKSICKA ANALIZA =================
INFO  22:34:01,041 - #2 program
INFO  22:34:01,041 - #47 test301
INFO  22:34:01,041 - #3 const
INFO  22:34:01,042 - #47 int
INFO  22:34:01,042 - #47 a
INFO  22:34:01,042 - #24 =
INFO  22:34:01,042 - #46 10
INFO  22:34:01,042 - #27 ;
INFO  22:34:01,043 - #35 {
INFO  22:34:01,043 - #8 void
INFO  22:34:01,043 - #47 main
INFO  22:34:01,044 - #31 (
INFO  22:34:01,044 - #32 )
INFO  22:34:01,044 - #47 int
INFO  22:34:01,045 - #47 niz
INFO  22:34:01,045 - #33 [
INFO  22:34:01,045 - #34 ]
INFO  22:34:01,045 - #27 ;
INFO  22:34:01,046 - #35 {
INFO  22:34:01,046 - #47 niz
INFO  22:34:01,046 - #24 =
INFO  22:34:01,047 - #45 range
INFO  22:34:01,048 - #31 (
INFO  22:34:01,048 - #47 a
INFO  22:34:01,048 - #32 )
INFO  22:34:01,048 - #27 ;
INFO  22:34:01,048 - #5 print
INFO  22:34:01,048 - #31 (
INFO  22:34:01,048 - #47 niz
INFO  22:34:01,048 - #33 [
INFO  22:34:01,048 - #46 9
INFO  22:34:01,048 - #34 ]
INFO  22:34:01,048 - #32 )
INFO  22:34:01,051 - #27 ;
INFO  22:34:01,051 - #5 print
INFO  22:34:01,051 - #31 (
INFO  22:34:01,051 - #47 niz
INFO  22:34:01,051 - #33 [
INFO  22:34:01,051 - #46 0
INFO  22:34:01,051 - #34 ]
INFO  22:34:01,051 - #32 )
INFO  22:34:01,051 - #27 ;
INFO  22:34:01,052 - #36 }
INFO  22:34:01,052 - #36 }
INFO  22:34:01,053 - ================= PARSIRANO STABLO =================
INFO  22:34:01,055 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  Declarations(
    NoDeclarations(
    ) [NoDeclarations]
    ConstantDeclaration(
      ConDecl(
        Type(
         int
        ) [Type]
        ConstDef(
         a
          NumConst(
           10
          ) [NumConst]
        ) [ConstDef]
        NoConstantDeclaration(
        ) [NoConstantDeclaration]
      ) [ConDecl]
    ) [ConstantDeclaration]
  ) [Declarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      ListOfVarDecl(
        NoVarDeclarations(
        ) [NoVarDeclarations]
        VarDeclaration(
          Type(
           int
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             niz
              Brackets(
              ) [Brackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [ListOfVarDecl]
      Statements(
        Statements(
          Statements(
            NoStatements(
            ) [NoStatements]
            DesignatorStat(
              DesignatorExpr(
                Designator(
                  WithoutNamespace(
                   niz
                  ) [WithoutNamespace]
                  NoArrayExpression(
                  ) [NoArrayExpression]
                ) [Designator]
                AssignOperation(
                ) [AssignOperation]
                PositiveStartExpr(
                  SingleTerm(
                    RangeExpression(
                      PositiveStartExpr(
                        SingleTerm(
                          DesignatorFact(
                            Designator(
                              WithoutNamespace(
                               a
                              ) [WithoutNamespace]
                              NoArrayExpression(
                              ) [NoArrayExpression]
                            ) [Designator]
                          ) [DesignatorFact]
                        ) [SingleTerm]
                      ) [PositiveStartExpr]
                    ) [RangeExpression]
                  ) [SingleTerm]
                ) [PositiveStartExpr]
              ) [DesignatorExpr]
            ) [DesignatorStat]
          ) [Statements]
          PrintExpr(
            PositiveStartExpr(
              SingleTerm(
                DesignatorFact(
                  Designator(
                    WithoutNamespace(
                     niz
                    ) [WithoutNamespace]
                    AddArrayExpression(
                      BraExpr(
                        PositiveStartExpr(
                          SingleTerm(
                            NumberConst(
                             9
                            ) [NumberConst]
                          ) [SingleTerm]
                        ) [PositiveStartExpr]
                      ) [BraExpr]
                    ) [AddArrayExpression]
                  ) [Designator]
                ) [DesignatorFact]
              ) [SingleTerm]
            ) [PositiveStartExpr]
            NoNumConstOpt(
            ) [NoNumConstOpt]
          ) [PrintExpr]
        ) [Statements]
        PrintExpr(
          PositiveStartExpr(
            SingleTerm(
              DesignatorFact(
                Designator(
                  WithoutNamespace(
                   niz
                  ) [WithoutNamespace]
                  AddArrayExpression(
                    BraExpr(
                      PositiveStartExpr(
                        SingleTerm(
                          NumberConst(
                           0
                          ) [NumberConst]
                        ) [SingleTerm]
                      ) [PositiveStartExpr]
                    ) [BraExpr]
                  ) [AddArrayExpression]
                ) [Designator]
              ) [DesignatorFact]
            ) [SingleTerm]
          ) [PositiveStartExpr]
          NoNumConstOpt(
          ) [NoNumConstOpt]
        ) [PrintExpr]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  22:34:01,056 - ================ Semanticka obrada ===================
INFO  22:34:01,057 - Const a defined on line 2
INFO  22:34:01,058 - Symbol niz found on line 8
INFO  22:34:01,058 - Symbol a found on line 8
INFO  22:34:01,058 - Symbol niz found on line 9
INFO  22:34:01,058 - Symbol niz found on line 10
INFO  22:34:01,058 - main() method found on line 1
INFO  22:34:01,060 - Parser SUCCESS!
INFO  22:34:03,417 - Compiling source file: C:\Users\elena\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  22:34:03,418 - ================= LEKSICKA ANALIZA =================
INFO  22:34:03,443 - #2 program
INFO  22:34:03,443 - #47 test301
INFO  22:34:03,443 - #3 const
INFO  22:34:03,444 - #47 int
INFO  22:34:03,444 - #47 a
INFO  22:34:03,444 - #24 =
INFO  22:34:03,444 - #46 10
INFO  22:34:03,444 - #27 ;
INFO  22:34:03,444 - #35 {
INFO  22:34:03,445 - #8 void
INFO  22:34:03,445 - #47 main
INFO  22:34:03,445 - #31 (
INFO  22:34:03,445 - #32 )
INFO  22:34:03,446 - #47 int
INFO  22:34:03,446 - #47 niz
INFO  22:34:03,446 - #33 [
INFO  22:34:03,446 - #34 ]
INFO  22:34:03,446 - #27 ;
INFO  22:34:03,447 - #35 {
INFO  22:34:03,447 - #47 niz
INFO  22:34:03,448 - #24 =
INFO  22:34:03,449 - #45 range
INFO  22:34:03,449 - #31 (
INFO  22:34:03,451 - #47 a
INFO  22:34:03,451 - #32 )
INFO  22:34:03,451 - #27 ;
INFO  22:34:03,451 - #5 print
INFO  22:34:03,451 - #31 (
INFO  22:34:03,451 - #47 niz
INFO  22:34:03,451 - #33 [
INFO  22:34:03,451 - #46 9
INFO  22:34:03,452 - #34 ]
INFO  22:34:03,452 - #32 )
INFO  22:34:03,452 - #27 ;
INFO  22:34:03,452 - #5 print
INFO  22:34:03,452 - #31 (
INFO  22:34:03,452 - #47 niz
INFO  22:34:03,452 - #33 [
INFO  22:34:03,452 - #46 0
INFO  22:34:03,453 - #34 ]
INFO  22:34:03,453 - #32 )
INFO  22:34:03,453 - #27 ;
INFO  22:34:03,453 - #36 }
INFO  22:34:03,453 - #36 }
INFO  22:34:03,454 - ================= PARSIRANO STABLO =================
INFO  22:34:03,458 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  Declarations(
    NoDeclarations(
    ) [NoDeclarations]
    ConstantDeclaration(
      ConDecl(
        Type(
         int
        ) [Type]
        ConstDef(
         a
          NumConst(
           10
          ) [NumConst]
        ) [ConstDef]
        NoConstantDeclaration(
        ) [NoConstantDeclaration]
      ) [ConDecl]
    ) [ConstantDeclaration]
  ) [Declarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      ListOfVarDecl(
        NoVarDeclarations(
        ) [NoVarDeclarations]
        VarDeclaration(
          Type(
           int
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             niz
              Brackets(
              ) [Brackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [ListOfVarDecl]
      Statements(
        Statements(
          Statements(
            NoStatements(
            ) [NoStatements]
            DesignatorStat(
              DesignatorExpr(
                Designator(
                  WithoutNamespace(
                   niz
                  ) [WithoutNamespace]
                  NoArrayExpression(
                  ) [NoArrayExpression]
                ) [Designator]
                AssignOperation(
                ) [AssignOperation]
                PositiveStartExpr(
                  SingleTerm(
                    RangeExpression(
                      PositiveStartExpr(
                        SingleTerm(
                          DesignatorFact(
                            Designator(
                              WithoutNamespace(
                               a
                              ) [WithoutNamespace]
                              NoArrayExpression(
                              ) [NoArrayExpression]
                            ) [Designator]
                          ) [DesignatorFact]
                        ) [SingleTerm]
                      ) [PositiveStartExpr]
                    ) [RangeExpression]
                  ) [SingleTerm]
                ) [PositiveStartExpr]
              ) [DesignatorExpr]
            ) [DesignatorStat]
          ) [Statements]
          PrintExpr(
            PositiveStartExpr(
              SingleTerm(
                DesignatorFact(
                  Designator(
                    WithoutNamespace(
                     niz
                    ) [WithoutNamespace]
                    AddArrayExpression(
                      BraExpr(
                        PositiveStartExpr(
                          SingleTerm(
                            NumberConst(
                             9
                            ) [NumberConst]
                          ) [SingleTerm]
                        ) [PositiveStartExpr]
                      ) [BraExpr]
                    ) [AddArrayExpression]
                  ) [Designator]
                ) [DesignatorFact]
              ) [SingleTerm]
            ) [PositiveStartExpr]
            NoNumConstOpt(
            ) [NoNumConstOpt]
          ) [PrintExpr]
        ) [Statements]
        PrintExpr(
          PositiveStartExpr(
            SingleTerm(
              DesignatorFact(
                Designator(
                  WithoutNamespace(
                   niz
                  ) [WithoutNamespace]
                  AddArrayExpression(
                    BraExpr(
                      PositiveStartExpr(
                        SingleTerm(
                          NumberConst(
                           0
                          ) [NumberConst]
                        ) [SingleTerm]
                      ) [PositiveStartExpr]
                    ) [BraExpr]
                  ) [AddArrayExpression]
                ) [Designator]
              ) [DesignatorFact]
            ) [SingleTerm]
          ) [PositiveStartExpr]
          NoNumConstOpt(
          ) [NoNumConstOpt]
        ) [PrintExpr]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  22:34:03,458 - ================ Semanticka obrada ===================
INFO  22:34:03,460 - Const a defined on line 2
INFO  22:34:03,460 - Symbol niz found on line 8
INFO  22:34:03,460 - Symbol a found on line 8
INFO  22:34:03,460 - Symbol niz found on line 9
INFO  22:34:03,460 - Symbol niz found on line 10
INFO  22:34:03,460 - main() method found on line 1
INFO  22:34:03,463 - Parser SUCCESS!
INFO  22:40:34,966 - Compiling source file: C:\Users\elena\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  22:40:34,967 - ================= LEKSICKA ANALIZA =================
INFO  22:40:34,990 - #2 program
INFO  22:40:34,990 - #47 test301
INFO  22:40:34,990 - #3 const
INFO  22:40:34,990 - #47 int
INFO  22:40:34,990 - #47 a
INFO  22:40:34,991 - #24 =
INFO  22:40:34,991 - #46 10
INFO  22:40:34,991 - #27 ;
INFO  22:40:34,992 - #35 {
INFO  22:40:34,992 - #8 void
INFO  22:40:34,993 - #47 main
INFO  22:40:34,993 - #31 (
INFO  22:40:34,993 - #32 )
INFO  22:40:34,993 - #47 int
INFO  22:40:34,994 - #47 niz
INFO  22:40:34,994 - #33 [
INFO  22:40:34,994 - #34 ]
INFO  22:40:34,994 - #27 ;
INFO  22:40:34,995 - #35 {
INFO  22:40:34,995 - #47 niz
INFO  22:40:34,995 - #24 =
INFO  22:40:34,997 - #45 range
INFO  22:40:34,997 - #31 (
INFO  22:40:34,997 - #47 a
INFO  22:40:34,997 - #32 )
INFO  22:40:34,998 - #27 ;
INFO  22:40:34,998 - #5 print
INFO  22:40:34,998 - #31 (
INFO  22:40:34,998 - #47 niz
INFO  22:40:34,998 - #33 [
INFO  22:40:34,998 - #46 9
INFO  22:40:34,998 - #34 ]
INFO  22:40:34,998 - #32 )
INFO  22:40:34,999 - #27 ;
INFO  22:40:34,999 - #5 print
INFO  22:40:34,999 - #31 (
INFO  22:40:34,999 - #47 niz
INFO  22:40:34,999 - #33 [
INFO  22:40:34,999 - #46 0
INFO  22:40:34,999 - #34 ]
INFO  22:40:34,999 - #32 )
INFO  22:40:34,999 - #27 ;
INFO  22:40:34,999 - #36 }
INFO  22:40:34,999 - #36 }
INFO  22:40:35,000 - ================= PARSIRANO STABLO =================
INFO  22:40:35,003 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  Declarations(
    NoDeclarations(
    ) [NoDeclarations]
    ConstantDeclaration(
      ConDecl(
        Type(
         int
        ) [Type]
        ConstDef(
         a
          NumConst(
           10
          ) [NumConst]
        ) [ConstDef]
        NoConstantDeclaration(
        ) [NoConstantDeclaration]
      ) [ConDecl]
    ) [ConstantDeclaration]
  ) [Declarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      ListOfVarDecl(
        NoVarDeclarations(
        ) [NoVarDeclarations]
        VarDeclaration(
          Type(
           int
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             niz
              Brackets(
              ) [Brackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [ListOfVarDecl]
      Statements(
        Statements(
          Statements(
            NoStatements(
            ) [NoStatements]
            DesignatorStat(
              DesignatorExpr(
                Designator(
                  WithoutNamespace(
                   niz
                  ) [WithoutNamespace]
                  NoArrayExpression(
                  ) [NoArrayExpression]
                ) [Designator]
                AssignOperation(
                ) [AssignOperation]
                PositiveStartExpr(
                  SingleTerm(
                    RangeExpression(
                      PositiveStartExpr(
                        SingleTerm(
                          DesignatorFact(
                            Designator(
                              WithoutNamespace(
                               a
                              ) [WithoutNamespace]
                              NoArrayExpression(
                              ) [NoArrayExpression]
                            ) [Designator]
                          ) [DesignatorFact]
                        ) [SingleTerm]
                      ) [PositiveStartExpr]
                    ) [RangeExpression]
                  ) [SingleTerm]
                ) [PositiveStartExpr]
              ) [DesignatorExpr]
            ) [DesignatorStat]
          ) [Statements]
          PrintExpr(
            PositiveStartExpr(
              SingleTerm(
                DesignatorFact(
                  Designator(
                    WithoutNamespace(
                     niz
                    ) [WithoutNamespace]
                    AddArrayExpression(
                      BraExpr(
                        PositiveStartExpr(
                          SingleTerm(
                            NumberConst(
                             9
                            ) [NumberConst]
                          ) [SingleTerm]
                        ) [PositiveStartExpr]
                      ) [BraExpr]
                    ) [AddArrayExpression]
                  ) [Designator]
                ) [DesignatorFact]
              ) [SingleTerm]
            ) [PositiveStartExpr]
            NoNumConstOpt(
            ) [NoNumConstOpt]
          ) [PrintExpr]
        ) [Statements]
        PrintExpr(
          PositiveStartExpr(
            SingleTerm(
              DesignatorFact(
                Designator(
                  WithoutNamespace(
                   niz
                  ) [WithoutNamespace]
                  AddArrayExpression(
                    BraExpr(
                      PositiveStartExpr(
                        SingleTerm(
                          NumberConst(
                           0
                          ) [NumberConst]
                        ) [SingleTerm]
                      ) [PositiveStartExpr]
                    ) [BraExpr]
                  ) [AddArrayExpression]
                ) [Designator]
              ) [DesignatorFact]
            ) [SingleTerm]
          ) [PositiveStartExpr]
          NoNumConstOpt(
          ) [NoNumConstOpt]
        ) [PrintExpr]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  22:40:35,003 - ================ Semanticka obrada ===================
INFO  22:40:35,005 - Const a defined on line 2
INFO  22:40:35,005 - Symbol niz found on line 8
INFO  22:40:35,005 - Symbol a found on line 8
INFO  22:40:35,005 - Symbol niz found on line 9
INFO  22:40:35,005 - Symbol niz found on line 10
INFO  22:40:35,005 - main() method found on line 1
INFO  22:40:35,009 - Parser SUCCESS!
INFO  22:41:25,820 - Compiling source file: C:\Users\elena\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  22:41:25,820 - ================= LEKSICKA ANALIZA =================
INFO  22:41:25,847 - #2 program
INFO  22:41:25,847 - #47 test301
INFO  22:41:25,847 - #3 const
INFO  22:41:25,848 - #47 int
INFO  22:41:25,848 - #47 a
INFO  22:41:25,848 - #24 =
INFO  22:41:25,848 - #46 10
INFO  22:41:25,848 - #27 ;
INFO  22:41:25,850 - #35 {
INFO  22:41:25,850 - #8 void
INFO  22:41:25,850 - #47 main
INFO  22:41:25,850 - #31 (
INFO  22:41:25,851 - #32 )
INFO  22:41:25,851 - #47 int
INFO  22:41:25,852 - #47 niz
INFO  22:41:25,853 - #33 [
INFO  22:41:25,853 - #34 ]
INFO  22:41:25,853 - #27 ;
INFO  22:41:25,853 - #35 {
INFO  22:41:25,854 - #47 niz
INFO  22:41:25,854 - #24 =
INFO  22:41:25,854 - #45 range
INFO  22:41:25,855 - #31 (
INFO  22:41:25,855 - #47 a
INFO  22:41:25,855 - #32 )
INFO  22:41:25,855 - #27 ;
INFO  22:41:25,855 - #5 print
INFO  22:41:25,855 - #31 (
INFO  22:41:25,855 - #47 niz
INFO  22:41:25,856 - #33 [
INFO  22:41:25,856 - #46 9
INFO  22:41:25,856 - #34 ]
INFO  22:41:25,856 - #32 )
INFO  22:41:25,856 - #27 ;
INFO  22:41:25,856 - #5 print
INFO  22:41:25,857 - #31 (
INFO  22:41:25,857 - #47 niz
INFO  22:41:25,857 - #33 [
INFO  22:41:25,857 - #46 0
INFO  22:41:25,857 - #34 ]
INFO  22:41:25,857 - #32 )
INFO  22:41:25,857 - #27 ;
INFO  22:41:25,857 - #36 }
INFO  22:41:25,857 - #36 }
INFO  22:41:25,859 - ================= PARSIRANO STABLO =================
INFO  22:41:25,862 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  Declarations(
    NoDeclarations(
    ) [NoDeclarations]
    ConstantDeclaration(
      ConDecl(
        Type(
         int
        ) [Type]
        ConstDef(
         a
          NumConst(
           10
          ) [NumConst]
        ) [ConstDef]
        NoConstantDeclaration(
        ) [NoConstantDeclaration]
      ) [ConDecl]
    ) [ConstantDeclaration]
  ) [Declarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      ListOfVarDecl(
        NoVarDeclarations(
        ) [NoVarDeclarations]
        VarDeclaration(
          Type(
           int
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             niz
              Brackets(
              ) [Brackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [ListOfVarDecl]
      Statements(
        Statements(
          Statements(
            NoStatements(
            ) [NoStatements]
            DesignatorStat(
              DesignatorExpr(
                Designator(
                  WithoutNamespace(
                   niz
                  ) [WithoutNamespace]
                  NoArrayExpression(
                  ) [NoArrayExpression]
                ) [Designator]
                AssignOperation(
                ) [AssignOperation]
                PositiveStartExpr(
                  SingleTerm(
                    RangeExpression(
                      PositiveStartExpr(
                        SingleTerm(
                          DesignatorFact(
                            Designator(
                              WithoutNamespace(
                               a
                              ) [WithoutNamespace]
                              NoArrayExpression(
                              ) [NoArrayExpression]
                            ) [Designator]
                          ) [DesignatorFact]
                        ) [SingleTerm]
                      ) [PositiveStartExpr]
                    ) [RangeExpression]
                  ) [SingleTerm]
                ) [PositiveStartExpr]
              ) [DesignatorExpr]
            ) [DesignatorStat]
          ) [Statements]
          PrintExpr(
            PositiveStartExpr(
              SingleTerm(
                DesignatorFact(
                  Designator(
                    WithoutNamespace(
                     niz
                    ) [WithoutNamespace]
                    AddArrayExpression(
                      BraExpr(
                        PositiveStartExpr(
                          SingleTerm(
                            NumberConst(
                             9
                            ) [NumberConst]
                          ) [SingleTerm]
                        ) [PositiveStartExpr]
                      ) [BraExpr]
                    ) [AddArrayExpression]
                  ) [Designator]
                ) [DesignatorFact]
              ) [SingleTerm]
            ) [PositiveStartExpr]
            NoNumConstOpt(
            ) [NoNumConstOpt]
          ) [PrintExpr]
        ) [Statements]
        PrintExpr(
          PositiveStartExpr(
            SingleTerm(
              DesignatorFact(
                Designator(
                  WithoutNamespace(
                   niz
                  ) [WithoutNamespace]
                  AddArrayExpression(
                    BraExpr(
                      PositiveStartExpr(
                        SingleTerm(
                          NumberConst(
                           0
                          ) [NumberConst]
                        ) [SingleTerm]
                      ) [PositiveStartExpr]
                    ) [BraExpr]
                  ) [AddArrayExpression]
                ) [Designator]
              ) [DesignatorFact]
            ) [SingleTerm]
          ) [PositiveStartExpr]
          NoNumConstOpt(
          ) [NoNumConstOpt]
        ) [PrintExpr]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  22:41:25,862 - ================ Semanticka obrada ===================
INFO  22:41:25,864 - Const a defined on line 2
INFO  22:41:25,864 - Symbol niz found on line 8
INFO  22:41:25,864 - Symbol a found on line 8
INFO  22:41:25,864 - Symbol niz found on line 9
INFO  22:41:25,864 - Symbol niz found on line 10
INFO  22:41:25,864 - main() method found on line 1
INFO  22:41:25,866 - Parser SUCCESS!
INFO  22:42:13,213 - Compiling source file: C:\Users\elena\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  22:42:13,214 - ================= LEKSICKA ANALIZA =================
INFO  22:42:13,237 - #2 program
INFO  22:42:13,237 - #47 test301
INFO  22:42:13,237 - #3 const
INFO  22:42:13,238 - #47 int
INFO  22:42:13,238 - #47 a
INFO  22:42:13,238 - #24 =
INFO  22:42:13,238 - #46 10
INFO  22:42:13,238 - #27 ;
INFO  22:42:13,239 - #35 {
INFO  22:42:13,239 - #8 void
INFO  22:42:13,239 - #47 main
INFO  22:42:13,240 - #31 (
INFO  22:42:13,240 - #32 )
INFO  22:42:13,241 - #47 int
INFO  22:42:13,242 - #47 niz
INFO  22:42:13,242 - #33 [
INFO  22:42:13,242 - #34 ]
INFO  22:42:13,242 - #27 ;
INFO  22:42:13,243 - #35 {
INFO  22:42:13,243 - #47 niz
INFO  22:42:13,244 - #24 =
INFO  22:42:13,244 - #45 range
INFO  22:42:13,245 - #31 (
INFO  22:42:13,245 - #47 a
INFO  22:42:13,245 - #32 )
INFO  22:42:13,245 - #27 ;
INFO  22:42:13,245 - #5 print
INFO  22:42:13,247 - #31 (
INFO  22:42:13,247 - #47 niz
INFO  22:42:13,247 - #33 [
INFO  22:42:13,247 - #46 9
INFO  22:42:13,247 - #34 ]
INFO  22:42:13,247 - #32 )
INFO  22:42:13,248 - #27 ;
INFO  22:42:13,248 - #5 print
INFO  22:42:13,248 - #31 (
INFO  22:42:13,248 - #47 niz
INFO  22:42:13,248 - #33 [
INFO  22:42:13,248 - #46 0
INFO  22:42:13,248 - #34 ]
INFO  22:42:13,248 - #32 )
INFO  22:42:13,248 - #27 ;
INFO  22:42:13,248 - #36 }
INFO  22:42:13,248 - #36 }
INFO  22:42:13,249 - ================= PARSIRANO STABLO =================
INFO  22:42:13,251 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  Declarations(
    NoDeclarations(
    ) [NoDeclarations]
    ConstantDeclaration(
      ConDecl(
        Type(
         int
        ) [Type]
        ConstDef(
         a
          NumConst(
           10
          ) [NumConst]
        ) [ConstDef]
        NoConstantDeclaration(
        ) [NoConstantDeclaration]
      ) [ConDecl]
    ) [ConstantDeclaration]
  ) [Declarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      ListOfVarDecl(
        NoVarDeclarations(
        ) [NoVarDeclarations]
        VarDeclaration(
          Type(
           int
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             niz
              Brackets(
              ) [Brackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [ListOfVarDecl]
      Statements(
        Statements(
          Statements(
            NoStatements(
            ) [NoStatements]
            DesignatorStat(
              DesignatorExpr(
                Designator(
                  WithoutNamespace(
                   niz
                  ) [WithoutNamespace]
                  NoArrayExpression(
                  ) [NoArrayExpression]
                ) [Designator]
                AssignOperation(
                ) [AssignOperation]
                PositiveStartExpr(
                  SingleTerm(
                    RangeExpression(
                      PositiveStartExpr(
                        SingleTerm(
                          DesignatorFact(
                            Designator(
                              WithoutNamespace(
                               a
                              ) [WithoutNamespace]
                              NoArrayExpression(
                              ) [NoArrayExpression]
                            ) [Designator]
                          ) [DesignatorFact]
                        ) [SingleTerm]
                      ) [PositiveStartExpr]
                    ) [RangeExpression]
                  ) [SingleTerm]
                ) [PositiveStartExpr]
              ) [DesignatorExpr]
            ) [DesignatorStat]
          ) [Statements]
          PrintExpr(
            PositiveStartExpr(
              SingleTerm(
                DesignatorFact(
                  Designator(
                    WithoutNamespace(
                     niz
                    ) [WithoutNamespace]
                    AddArrayExpression(
                      BraExpr(
                        PositiveStartExpr(
                          SingleTerm(
                            NumberConst(
                             9
                            ) [NumberConst]
                          ) [SingleTerm]
                        ) [PositiveStartExpr]
                      ) [BraExpr]
                    ) [AddArrayExpression]
                  ) [Designator]
                ) [DesignatorFact]
              ) [SingleTerm]
            ) [PositiveStartExpr]
            NoNumConstOpt(
            ) [NoNumConstOpt]
          ) [PrintExpr]
        ) [Statements]
        PrintExpr(
          PositiveStartExpr(
            SingleTerm(
              DesignatorFact(
                Designator(
                  WithoutNamespace(
                   niz
                  ) [WithoutNamespace]
                  AddArrayExpression(
                    BraExpr(
                      PositiveStartExpr(
                        SingleTerm(
                          NumberConst(
                           0
                          ) [NumberConst]
                        ) [SingleTerm]
                      ) [PositiveStartExpr]
                    ) [BraExpr]
                  ) [AddArrayExpression]
                ) [Designator]
              ) [DesignatorFact]
            ) [SingleTerm]
          ) [PositiveStartExpr]
          NoNumConstOpt(
          ) [NoNumConstOpt]
        ) [PrintExpr]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  22:42:13,253 - ================ Semanticka obrada ===================
INFO  22:42:13,255 - Const a defined on line 2
INFO  22:42:13,255 - Symbol niz found on line 8
INFO  22:42:13,255 - Symbol a found on line 8
INFO  22:42:13,255 - Symbol niz found on line 9
INFO  22:42:13,255 - Symbol niz found on line 10
INFO  22:42:13,255 - main() method found on line 1
INFO  22:42:13,257 - Parser SUCCESS!
INFO  22:42:15,087 - Compiling source file: C:\Users\elena\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  22:42:15,088 - ================= LEKSICKA ANALIZA =================
INFO  22:42:15,109 - #2 program
INFO  22:42:15,109 - #47 test301
INFO  22:42:15,109 - #3 const
INFO  22:42:15,111 - #47 int
INFO  22:42:15,111 - #47 a
INFO  22:42:15,111 - #24 =
INFO  22:42:15,111 - #46 10
INFO  22:42:15,111 - #27 ;
INFO  22:42:15,112 - #35 {
INFO  22:42:15,112 - #8 void
INFO  22:42:15,112 - #47 main
INFO  22:42:15,112 - #31 (
INFO  22:42:15,113 - #32 )
INFO  22:42:15,113 - #47 int
INFO  22:42:15,113 - #47 niz
INFO  22:42:15,113 - #33 [
INFO  22:42:15,113 - #34 ]
INFO  22:42:15,113 - #27 ;
INFO  22:42:15,114 - #35 {
INFO  22:42:15,114 - #47 niz
INFO  22:42:15,114 - #24 =
INFO  22:42:15,115 - #45 range
INFO  22:42:15,116 - #31 (
INFO  22:42:15,116 - #47 a
INFO  22:42:15,116 - #32 )
INFO  22:42:15,116 - #27 ;
INFO  22:42:15,117 - #5 print
INFO  22:42:15,117 - #31 (
INFO  22:42:15,117 - #47 niz
INFO  22:42:15,117 - #33 [
INFO  22:42:15,117 - #46 9
INFO  22:42:15,117 - #34 ]
INFO  22:42:15,117 - #32 )
INFO  22:42:15,118 - #27 ;
INFO  22:42:15,118 - #5 print
INFO  22:42:15,118 - #31 (
INFO  22:42:15,118 - #47 niz
INFO  22:42:15,118 - #33 [
INFO  22:42:15,118 - #46 0
INFO  22:42:15,118 - #34 ]
INFO  22:42:15,119 - #32 )
INFO  22:42:15,119 - #27 ;
INFO  22:42:15,119 - #36 }
INFO  22:42:15,119 - #36 }
INFO  22:42:15,121 - ================= PARSIRANO STABLO =================
INFO  22:42:15,123 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  Declarations(
    NoDeclarations(
    ) [NoDeclarations]
    ConstantDeclaration(
      ConDecl(
        Type(
         int
        ) [Type]
        ConstDef(
         a
          NumConst(
           10
          ) [NumConst]
        ) [ConstDef]
        NoConstantDeclaration(
        ) [NoConstantDeclaration]
      ) [ConDecl]
    ) [ConstantDeclaration]
  ) [Declarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      ListOfVarDecl(
        NoVarDeclarations(
        ) [NoVarDeclarations]
        VarDeclaration(
          Type(
           int
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             niz
              Brackets(
              ) [Brackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [ListOfVarDecl]
      Statements(
        Statements(
          Statements(
            NoStatements(
            ) [NoStatements]
            DesignatorStat(
              DesignatorExpr(
                Designator(
                  WithoutNamespace(
                   niz
                  ) [WithoutNamespace]
                  NoArrayExpression(
                  ) [NoArrayExpression]
                ) [Designator]
                AssignOperation(
                ) [AssignOperation]
                PositiveStartExpr(
                  SingleTerm(
                    RangeExpression(
                      PositiveStartExpr(
                        SingleTerm(
                          DesignatorFact(
                            Designator(
                              WithoutNamespace(
                               a
                              ) [WithoutNamespace]
                              NoArrayExpression(
                              ) [NoArrayExpression]
                            ) [Designator]
                          ) [DesignatorFact]
                        ) [SingleTerm]
                      ) [PositiveStartExpr]
                    ) [RangeExpression]
                  ) [SingleTerm]
                ) [PositiveStartExpr]
              ) [DesignatorExpr]
            ) [DesignatorStat]
          ) [Statements]
          PrintExpr(
            PositiveStartExpr(
              SingleTerm(
                DesignatorFact(
                  Designator(
                    WithoutNamespace(
                     niz
                    ) [WithoutNamespace]
                    AddArrayExpression(
                      BraExpr(
                        PositiveStartExpr(
                          SingleTerm(
                            NumberConst(
                             9
                            ) [NumberConst]
                          ) [SingleTerm]
                        ) [PositiveStartExpr]
                      ) [BraExpr]
                    ) [AddArrayExpression]
                  ) [Designator]
                ) [DesignatorFact]
              ) [SingleTerm]
            ) [PositiveStartExpr]
            NoNumConstOpt(
            ) [NoNumConstOpt]
          ) [PrintExpr]
        ) [Statements]
        PrintExpr(
          PositiveStartExpr(
            SingleTerm(
              DesignatorFact(
                Designator(
                  WithoutNamespace(
                   niz
                  ) [WithoutNamespace]
                  AddArrayExpression(
                    BraExpr(
                      PositiveStartExpr(
                        SingleTerm(
                          NumberConst(
                           0
                          ) [NumberConst]
                        ) [SingleTerm]
                      ) [PositiveStartExpr]
                    ) [BraExpr]
                  ) [AddArrayExpression]
                ) [Designator]
              ) [DesignatorFact]
            ) [SingleTerm]
          ) [PositiveStartExpr]
          NoNumConstOpt(
          ) [NoNumConstOpt]
        ) [PrintExpr]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  22:42:15,123 - ================ Semanticka obrada ===================
INFO  22:42:15,125 - Const a defined on line 2
INFO  22:42:15,125 - Symbol niz found on line 8
INFO  22:42:15,125 - Symbol a found on line 8
INFO  22:42:15,125 - Symbol niz found on line 9
INFO  22:42:15,126 - Symbol niz found on line 10
INFO  22:42:15,126 - main() method found on line 1
INFO  22:42:15,128 - Parser SUCCESS!
INFO  22:42:39,294 - Compiling source file: C:\Users\elena\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  22:42:39,295 - ================= LEKSICKA ANALIZA =================
INFO  22:42:39,326 - #2 program
INFO  22:42:39,327 - #47 test301
INFO  22:42:39,327 - #3 const
INFO  22:42:39,327 - #47 int
INFO  22:42:39,327 - #47 a
INFO  22:42:39,328 - #24 =
INFO  22:42:39,328 - #46 10
INFO  22:42:39,328 - #27 ;
INFO  22:42:39,328 - #35 {
INFO  22:42:39,328 - #8 void
INFO  22:42:39,329 - #47 main
INFO  22:42:39,329 - #31 (
INFO  22:42:39,329 - #32 )
INFO  22:42:39,329 - #47 int
INFO  22:42:39,330 - #47 niz
INFO  22:42:39,330 - #33 [
INFO  22:42:39,330 - #34 ]
INFO  22:42:39,330 - #27 ;
INFO  22:42:39,330 - #35 {
INFO  22:42:39,331 - #47 niz
INFO  22:42:39,331 - #24 =
INFO  22:42:39,333 - #45 range
INFO  22:42:39,333 - #31 (
INFO  22:42:39,333 - #47 a
INFO  22:42:39,333 - #32 )
INFO  22:42:39,333 - #27 ;
INFO  22:42:39,333 - #5 print
INFO  22:42:39,333 - #31 (
INFO  22:42:39,333 - #47 niz
INFO  22:42:39,333 - #33 [
INFO  22:42:39,333 - #46 9
INFO  22:42:39,333 - #34 ]
INFO  22:42:39,334 - #32 )
INFO  22:42:39,335 - #27 ;
INFO  22:42:39,336 - #5 print
INFO  22:42:39,336 - #31 (
INFO  22:42:39,337 - #47 niz
INFO  22:42:39,337 - #33 [
INFO  22:42:39,337 - #46 0
INFO  22:42:39,337 - #34 ]
INFO  22:42:39,337 - #32 )
INFO  22:42:39,337 - #27 ;
INFO  22:42:39,337 - #36 }
INFO  22:42:39,337 - #36 }
INFO  22:42:39,339 - ================= PARSIRANO STABLO =================
INFO  22:42:39,342 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  Declarations(
    NoDeclarations(
    ) [NoDeclarations]
    ConstantDeclaration(
      ConDecl(
        Type(
         int
        ) [Type]
        ConstDef(
         a
          NumConst(
           10
          ) [NumConst]
        ) [ConstDef]
        NoConstantDeclaration(
        ) [NoConstantDeclaration]
      ) [ConDecl]
    ) [ConstantDeclaration]
  ) [Declarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      ListOfVarDecl(
        NoVarDeclarations(
        ) [NoVarDeclarations]
        VarDeclaration(
          Type(
           int
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             niz
              Brackets(
              ) [Brackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [ListOfVarDecl]
      Statements(
        Statements(
          Statements(
            NoStatements(
            ) [NoStatements]
            DesignatorStat(
              DesignatorExpr(
                Designator(
                  WithoutNamespace(
                   niz
                  ) [WithoutNamespace]
                  NoArrayExpression(
                  ) [NoArrayExpression]
                ) [Designator]
                AssignOperation(
                ) [AssignOperation]
                PositiveStartExpr(
                  SingleTerm(
                    RangeExpression(
                      PositiveStartExpr(
                        SingleTerm(
                          DesignatorFact(
                            Designator(
                              WithoutNamespace(
                               a
                              ) [WithoutNamespace]
                              NoArrayExpression(
                              ) [NoArrayExpression]
                            ) [Designator]
                          ) [DesignatorFact]
                        ) [SingleTerm]
                      ) [PositiveStartExpr]
                    ) [RangeExpression]
                  ) [SingleTerm]
                ) [PositiveStartExpr]
              ) [DesignatorExpr]
            ) [DesignatorStat]
          ) [Statements]
          PrintExpr(
            PositiveStartExpr(
              SingleTerm(
                DesignatorFact(
                  Designator(
                    WithoutNamespace(
                     niz
                    ) [WithoutNamespace]
                    AddArrayExpression(
                      BraExpr(
                        PositiveStartExpr(
                          SingleTerm(
                            NumberConst(
                             9
                            ) [NumberConst]
                          ) [SingleTerm]
                        ) [PositiveStartExpr]
                      ) [BraExpr]
                    ) [AddArrayExpression]
                  ) [Designator]
                ) [DesignatorFact]
              ) [SingleTerm]
            ) [PositiveStartExpr]
            NoNumConstOpt(
            ) [NoNumConstOpt]
          ) [PrintExpr]
        ) [Statements]
        PrintExpr(
          PositiveStartExpr(
            SingleTerm(
              DesignatorFact(
                Designator(
                  WithoutNamespace(
                   niz
                  ) [WithoutNamespace]
                  AddArrayExpression(
                    BraExpr(
                      PositiveStartExpr(
                        SingleTerm(
                          NumberConst(
                           0
                          ) [NumberConst]
                        ) [SingleTerm]
                      ) [PositiveStartExpr]
                    ) [BraExpr]
                  ) [AddArrayExpression]
                ) [Designator]
              ) [DesignatorFact]
            ) [SingleTerm]
          ) [PositiveStartExpr]
          NoNumConstOpt(
          ) [NoNumConstOpt]
        ) [PrintExpr]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  22:42:39,342 - ================ Semanticka obrada ===================
INFO  22:42:39,345 - Const a defined on line 2
INFO  22:42:39,345 - Symbol niz found on line 8
INFO  22:42:39,346 - Symbol a found on line 8
INFO  22:42:39,346 - Symbol niz found on line 9
INFO  22:42:39,346 - Symbol niz found on line 10
INFO  22:42:39,346 - main() method found on line 1
INFO  22:42:39,349 - Parser SUCCESS!
INFO  22:44:18,335 - Compiling source file: C:\Users\elena\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  22:44:18,336 - ================= LEKSICKA ANALIZA =================
INFO  22:44:18,360 - #2 program
INFO  22:44:18,360 - #47 test301
INFO  22:44:18,360 - #3 const
INFO  22:44:18,360 - #47 int
INFO  22:44:18,361 - #47 a
INFO  22:44:18,361 - #24 =
INFO  22:44:18,361 - #46 10
INFO  22:44:18,361 - #27 ;
INFO  22:44:18,362 - #35 {
INFO  22:44:18,362 - #8 void
INFO  22:44:18,362 - #47 main
INFO  22:44:18,364 - #31 (
INFO  22:44:18,364 - #32 )
INFO  22:44:18,364 - #47 int
INFO  22:44:18,364 - #47 niz
INFO  22:44:18,364 - #33 [
INFO  22:44:18,364 - #34 ]
INFO  22:44:18,364 - #27 ;
INFO  22:44:18,365 - #35 {
INFO  22:44:18,365 - #47 niz
INFO  22:44:18,365 - #24 =
INFO  22:44:18,366 - #45 range
INFO  22:44:18,367 - #31 (
INFO  22:44:18,367 - #47 a
INFO  22:44:18,367 - #32 )
INFO  22:44:18,367 - #27 ;
INFO  22:44:18,367 - #5 print
INFO  22:44:18,367 - #31 (
INFO  22:44:18,367 - #47 niz
INFO  22:44:18,367 - #33 [
INFO  22:44:18,367 - #46 9
INFO  22:44:18,367 - #34 ]
INFO  22:44:18,368 - #32 )
INFO  22:44:18,368 - #27 ;
INFO  22:44:18,368 - #5 print
INFO  22:44:18,368 - #31 (
INFO  22:44:18,369 - #47 niz
INFO  22:44:18,369 - #33 [
INFO  22:44:18,369 - #46 0
INFO  22:44:18,369 - #34 ]
INFO  22:44:18,369 - #32 )
INFO  22:44:18,369 - #27 ;
INFO  22:44:18,369 - #36 }
INFO  22:44:18,369 - #36 }
INFO  22:44:18,371 - ================= PARSIRANO STABLO =================
INFO  22:44:18,375 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  Declarations(
    NoDeclarations(
    ) [NoDeclarations]
    ConstantDeclaration(
      ConDecl(
        Type(
         int
        ) [Type]
        ConstDef(
         a
          NumConst(
           10
          ) [NumConst]
        ) [ConstDef]
        NoConstantDeclaration(
        ) [NoConstantDeclaration]
      ) [ConDecl]
    ) [ConstantDeclaration]
  ) [Declarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      ListOfVarDecl(
        NoVarDeclarations(
        ) [NoVarDeclarations]
        VarDeclaration(
          Type(
           int
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             niz
              Brackets(
              ) [Brackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [ListOfVarDecl]
      Statements(
        Statements(
          Statements(
            NoStatements(
            ) [NoStatements]
            DesignatorStat(
              DesignatorExpr(
                Designator(
                  WithoutNamespace(
                   niz
                  ) [WithoutNamespace]
                  NoArrayExpression(
                  ) [NoArrayExpression]
                ) [Designator]
                AssignOperation(
                ) [AssignOperation]
                PositiveStartExpr(
                  SingleTerm(
                    RangeExpression(
                      PositiveStartExpr(
                        SingleTerm(
                          DesignatorFact(
                            Designator(
                              WithoutNamespace(
                               a
                              ) [WithoutNamespace]
                              NoArrayExpression(
                              ) [NoArrayExpression]
                            ) [Designator]
                          ) [DesignatorFact]
                        ) [SingleTerm]
                      ) [PositiveStartExpr]
                    ) [RangeExpression]
                  ) [SingleTerm]
                ) [PositiveStartExpr]
              ) [DesignatorExpr]
            ) [DesignatorStat]
          ) [Statements]
          PrintExpr(
            PositiveStartExpr(
              SingleTerm(
                DesignatorFact(
                  Designator(
                    WithoutNamespace(
                     niz
                    ) [WithoutNamespace]
                    AddArrayExpression(
                      BraExpr(
                        PositiveStartExpr(
                          SingleTerm(
                            NumberConst(
                             9
                            ) [NumberConst]
                          ) [SingleTerm]
                        ) [PositiveStartExpr]
                      ) [BraExpr]
                    ) [AddArrayExpression]
                  ) [Designator]
                ) [DesignatorFact]
              ) [SingleTerm]
            ) [PositiveStartExpr]
            NoNumConstOpt(
            ) [NoNumConstOpt]
          ) [PrintExpr]
        ) [Statements]
        PrintExpr(
          PositiveStartExpr(
            SingleTerm(
              DesignatorFact(
                Designator(
                  WithoutNamespace(
                   niz
                  ) [WithoutNamespace]
                  AddArrayExpression(
                    BraExpr(
                      PositiveStartExpr(
                        SingleTerm(
                          NumberConst(
                           0
                          ) [NumberConst]
                        ) [SingleTerm]
                      ) [PositiveStartExpr]
                    ) [BraExpr]
                  ) [AddArrayExpression]
                ) [Designator]
              ) [DesignatorFact]
            ) [SingleTerm]
          ) [PositiveStartExpr]
          NoNumConstOpt(
          ) [NoNumConstOpt]
        ) [PrintExpr]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  22:44:18,375 - ================ Semanticka obrada ===================
INFO  22:44:18,377 - Const a defined on line 2
INFO  22:44:18,377 - Symbol niz found on line 8
INFO  22:44:18,377 - Symbol a found on line 8
INFO  22:44:18,377 - Symbol niz found on line 9
INFO  22:44:18,377 - Symbol niz found on line 10
INFO  22:44:18,377 - main() method found on line 1
INFO  22:44:18,379 - Parser SUCCESS!
INFO  23:28:53,216 - Compiling source file: C:\Users\elena\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  23:28:53,218 - ================= LEKSICKA ANALIZA =================
INFO  23:28:53,274 - #2 program
INFO  23:28:53,274 - #47 test301
INFO  23:28:53,274 - #3 const
INFO  23:28:53,277 - #47 int
INFO  23:28:53,277 - #47 a
INFO  23:28:53,279 - #24 =
INFO  23:28:53,279 - #46 10
INFO  23:28:53,279 - #27 ;
INFO  23:28:53,281 - #35 {
INFO  23:28:53,281 - #8 void
INFO  23:28:53,282 - #47 main
INFO  23:28:53,283 - #31 (
INFO  23:28:53,285 - #32 )
INFO  23:28:53,285 - #47 int
INFO  23:28:53,287 - #47 niz
INFO  23:28:53,287 - #33 [
INFO  23:28:53,287 - #34 ]
INFO  23:28:53,287 - #27 ;
INFO  23:28:53,289 - #35 {
INFO  23:28:53,289 - #47 niz
INFO  23:28:53,290 - #24 =
INFO  23:28:53,292 - #45 range
INFO  23:28:53,294 - #31 (
INFO  23:28:53,294 - #47 a
INFO  23:28:53,294 - #32 )
INFO  23:28:53,294 - #27 ;
INFO  23:28:53,295 - #5 print
INFO  23:28:53,295 - #31 (
INFO  23:28:53,295 - #47 niz
INFO  23:28:53,295 - #33 [
INFO  23:28:53,295 - #46 9
INFO  23:28:53,295 - #34 ]
INFO  23:28:53,295 - #32 )
INFO  23:28:53,298 - #27 ;
INFO  23:28:53,298 - #5 print
INFO  23:28:53,298 - #31 (
INFO  23:28:53,298 - #47 niz
INFO  23:28:53,298 - #33 [
INFO  23:28:53,298 - #46 0
INFO  23:28:53,298 - #34 ]
INFO  23:28:53,298 - #32 )
INFO  23:28:53,299 - #27 ;
INFO  23:28:53,299 - #36 }
INFO  23:28:53,299 - #36 }
INFO  23:28:53,302 - ================= PARSIRANO STABLO =================
INFO  23:28:53,310 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  Declarations(
    NoDeclarations(
    ) [NoDeclarations]
    ConstantDeclaration(
      ConDecl(
        Type(
         int
        ) [Type]
        ConstDef(
         a
          NumConst(
           10
          ) [NumConst]
        ) [ConstDef]
        NoConstantDeclaration(
        ) [NoConstantDeclaration]
      ) [ConDecl]
    ) [ConstantDeclaration]
  ) [Declarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      ListOfVarDecl(
        NoVarDeclarations(
        ) [NoVarDeclarations]
        VarDeclaration(
          Type(
           int
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             niz
              Brackets(
              ) [Brackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [ListOfVarDecl]
      Statements(
        Statements(
          Statements(
            NoStatements(
            ) [NoStatements]
            DesignatorStat(
              DesignatorExpr(
                Designator(
                  WithoutNamespace(
                   niz
                  ) [WithoutNamespace]
                  NoArrayExpression(
                  ) [NoArrayExpression]
                ) [Designator]
                AssignOperation(
                ) [AssignOperation]
                PositiveStartExpr(
                  SingleTerm(
                    RangeExpression(
                      PositiveStartExpr(
                        SingleTerm(
                          DesignatorFact(
                            Designator(
                              WithoutNamespace(
                               a
                              ) [WithoutNamespace]
                              NoArrayExpression(
                              ) [NoArrayExpression]
                            ) [Designator]
                          ) [DesignatorFact]
                        ) [SingleTerm]
                      ) [PositiveStartExpr]
                    ) [RangeExpression]
                  ) [SingleTerm]
                ) [PositiveStartExpr]
              ) [DesignatorExpr]
            ) [DesignatorStat]
          ) [Statements]
          PrintExpr(
            PositiveStartExpr(
              SingleTerm(
                DesignatorFact(
                  Designator(
                    WithoutNamespace(
                     niz
                    ) [WithoutNamespace]
                    AddArrayExpression(
                      BraExpr(
                        PositiveStartExpr(
                          SingleTerm(
                            NumberConst(
                             9
                            ) [NumberConst]
                          ) [SingleTerm]
                        ) [PositiveStartExpr]
                      ) [BraExpr]
                    ) [AddArrayExpression]
                  ) [Designator]
                ) [DesignatorFact]
              ) [SingleTerm]
            ) [PositiveStartExpr]
            NoNumConstOpt(
            ) [NoNumConstOpt]
          ) [PrintExpr]
        ) [Statements]
        PrintExpr(
          PositiveStartExpr(
            SingleTerm(
              DesignatorFact(
                Designator(
                  WithoutNamespace(
                   niz
                  ) [WithoutNamespace]
                  AddArrayExpression(
                    BraExpr(
                      PositiveStartExpr(
                        SingleTerm(
                          NumberConst(
                           0
                          ) [NumberConst]
                        ) [SingleTerm]
                      ) [PositiveStartExpr]
                    ) [BraExpr]
                  ) [AddArrayExpression]
                ) [Designator]
              ) [DesignatorFact]
            ) [SingleTerm]
          ) [PositiveStartExpr]
          NoNumConstOpt(
          ) [NoNumConstOpt]
        ) [PrintExpr]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  23:28:53,310 - ================ Semanticka obrada ===================
INFO  23:28:53,335 - Const a defined on line 2
INFO  23:28:53,335 - Symbol niz found on line 8
INFO  23:28:53,335 - Symbol a found on line 8
INFO  23:28:53,335 - Symbol niz found on line 9
INFO  23:28:53,335 - Symbol niz found on line 10
INFO  23:28:53,335 - main() method found on line 1
INFO  23:28:53,351 - Parser SUCCESS!
INFO  23:28:59,539 - Compiling source file: C:\Users\elena\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  23:28:59,540 - ================= LEKSICKA ANALIZA =================
INFO  23:28:59,599 - #2 program
INFO  23:28:59,599 - #47 test301
INFO  23:28:59,599 - #3 const
INFO  23:28:59,601 - #47 int
INFO  23:28:59,602 - #47 a
INFO  23:28:59,603 - #24 =
INFO  23:28:59,603 - #46 10
INFO  23:28:59,603 - #27 ;
INFO  23:28:59,605 - #35 {
INFO  23:28:59,606 - #8 void
INFO  23:28:59,607 - #47 main
INFO  23:28:59,607 - #31 (
INFO  23:28:59,608 - #32 )
INFO  23:28:59,609 - #47 int
INFO  23:28:59,609 - #47 niz
INFO  23:28:59,609 - #33 [
INFO  23:28:59,609 - #34 ]
INFO  23:28:59,609 - #27 ;
INFO  23:28:59,611 - #35 {
INFO  23:28:59,612 - #47 niz
INFO  23:28:59,612 - #24 =
INFO  23:28:59,614 - #45 range
INFO  23:28:59,615 - #31 (
INFO  23:28:59,615 - #47 a
INFO  23:28:59,615 - #32 )
INFO  23:28:59,615 - #27 ;
INFO  23:28:59,615 - #5 print
INFO  23:28:59,615 - #31 (
INFO  23:28:59,616 - #47 niz
INFO  23:28:59,616 - #33 [
INFO  23:28:59,616 - #46 9
INFO  23:28:59,616 - #34 ]
INFO  23:28:59,616 - #32 )
INFO  23:28:59,618 - #27 ;
INFO  23:28:59,618 - #5 print
INFO  23:28:59,618 - #31 (
INFO  23:28:59,619 - #47 niz
INFO  23:28:59,619 - #33 [
INFO  23:28:59,619 - #46 0
INFO  23:28:59,619 - #34 ]
INFO  23:28:59,619 - #32 )
INFO  23:28:59,619 - #27 ;
INFO  23:28:59,619 - #36 }
INFO  23:28:59,619 - #36 }
INFO  23:28:59,623 - ================= PARSIRANO STABLO =================
INFO  23:28:59,630 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  Declarations(
    NoDeclarations(
    ) [NoDeclarations]
    ConstantDeclaration(
      ConDecl(
        Type(
         int
        ) [Type]
        ConstDef(
         a
          NumConst(
           10
          ) [NumConst]
        ) [ConstDef]
        NoConstantDeclaration(
        ) [NoConstantDeclaration]
      ) [ConDecl]
    ) [ConstantDeclaration]
  ) [Declarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      ListOfVarDecl(
        NoVarDeclarations(
        ) [NoVarDeclarations]
        VarDeclaration(
          Type(
           int
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             niz
              Brackets(
              ) [Brackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [ListOfVarDecl]
      Statements(
        Statements(
          Statements(
            NoStatements(
            ) [NoStatements]
            DesignatorStat(
              DesignatorExpr(
                Designator(
                  WithoutNamespace(
                   niz
                  ) [WithoutNamespace]
                  NoArrayExpression(
                  ) [NoArrayExpression]
                ) [Designator]
                AssignOperation(
                ) [AssignOperation]
                PositiveStartExpr(
                  SingleTerm(
                    RangeExpression(
                      PositiveStartExpr(
                        SingleTerm(
                          DesignatorFact(
                            Designator(
                              WithoutNamespace(
                               a
                              ) [WithoutNamespace]
                              NoArrayExpression(
                              ) [NoArrayExpression]
                            ) [Designator]
                          ) [DesignatorFact]
                        ) [SingleTerm]
                      ) [PositiveStartExpr]
                    ) [RangeExpression]
                  ) [SingleTerm]
                ) [PositiveStartExpr]
              ) [DesignatorExpr]
            ) [DesignatorStat]
          ) [Statements]
          PrintExpr(
            PositiveStartExpr(
              SingleTerm(
                DesignatorFact(
                  Designator(
                    WithoutNamespace(
                     niz
                    ) [WithoutNamespace]
                    AddArrayExpression(
                      BraExpr(
                        PositiveStartExpr(
                          SingleTerm(
                            NumberConst(
                             9
                            ) [NumberConst]
                          ) [SingleTerm]
                        ) [PositiveStartExpr]
                      ) [BraExpr]
                    ) [AddArrayExpression]
                  ) [Designator]
                ) [DesignatorFact]
              ) [SingleTerm]
            ) [PositiveStartExpr]
            NoNumConstOpt(
            ) [NoNumConstOpt]
          ) [PrintExpr]
        ) [Statements]
        PrintExpr(
          PositiveStartExpr(
            SingleTerm(
              DesignatorFact(
                Designator(
                  WithoutNamespace(
                   niz
                  ) [WithoutNamespace]
                  AddArrayExpression(
                    BraExpr(
                      PositiveStartExpr(
                        SingleTerm(
                          NumberConst(
                           0
                          ) [NumberConst]
                        ) [SingleTerm]
                      ) [PositiveStartExpr]
                    ) [BraExpr]
                  ) [AddArrayExpression]
                ) [Designator]
              ) [DesignatorFact]
            ) [SingleTerm]
          ) [PositiveStartExpr]
          NoNumConstOpt(
          ) [NoNumConstOpt]
        ) [PrintExpr]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  23:28:59,630 - ================ Semanticka obrada ===================
INFO  23:28:59,656 - Const a defined on line 2
INFO  23:28:59,656 - Symbol niz found on line 8
INFO  23:28:59,656 - Symbol a found on line 8
INFO  23:28:59,656 - Symbol niz found on line 9
INFO  23:28:59,656 - Symbol niz found on line 10
INFO  23:28:59,656 - main() method found on line 1
INFO  23:28:59,672 - Parser SUCCESS!
INFO  23:29:44,773 - Compiling source file: C:\Users\elena\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  23:29:44,774 - ================= LEKSICKA ANALIZA =================
INFO  23:29:44,823 - #2 program
INFO  23:29:44,823 - #47 test301
INFO  23:29:44,823 - #3 const
INFO  23:29:44,824 - #47 int
INFO  23:29:44,824 - #47 a
INFO  23:29:44,826 - #24 =
INFO  23:29:44,826 - #46 10
INFO  23:29:44,826 - #27 ;
INFO  23:29:44,828 - #35 {
INFO  23:29:44,828 - #8 void
INFO  23:29:44,829 - #47 main
INFO  23:29:44,830 - #31 (
INFO  23:29:44,830 - #32 )
INFO  23:29:44,832 - #47 int
INFO  23:29:44,832 - #47 niz
INFO  23:29:44,832 - #33 [
INFO  23:29:44,833 - #34 ]
INFO  23:29:44,833 - #27 ;
INFO  23:29:44,834 - #35 {
INFO  23:29:44,834 - #47 niz
INFO  23:29:44,835 - #24 =
INFO  23:29:44,837 - #45 range
INFO  23:29:44,838 - #31 (
INFO  23:29:44,838 - #47 a
INFO  23:29:44,838 - #32 )
INFO  23:29:44,839 - #27 ;
INFO  23:29:44,839 - #5 print
INFO  23:29:44,839 - #31 (
INFO  23:29:44,839 - #47 niz
INFO  23:29:44,840 - #32 )
INFO  23:29:44,841 - #27 ;
INFO  23:29:44,841 - #36 }
INFO  23:29:44,841 - #36 }
INFO  23:29:44,844 - ================= PARSIRANO STABLO =================
INFO  23:29:44,851 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  Declarations(
    NoDeclarations(
    ) [NoDeclarations]
    ConstantDeclaration(
      ConDecl(
        Type(
         int
        ) [Type]
        ConstDef(
         a
          NumConst(
           10
          ) [NumConst]
        ) [ConstDef]
        NoConstantDeclaration(
        ) [NoConstantDeclaration]
      ) [ConDecl]
    ) [ConstantDeclaration]
  ) [Declarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      ListOfVarDecl(
        NoVarDeclarations(
        ) [NoVarDeclarations]
        VarDeclaration(
          Type(
           int
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             niz
              Brackets(
              ) [Brackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [ListOfVarDecl]
      Statements(
        Statements(
          NoStatements(
          ) [NoStatements]
          DesignatorStat(
            DesignatorExpr(
              Designator(
                WithoutNamespace(
                 niz
                ) [WithoutNamespace]
                NoArrayExpression(
                ) [NoArrayExpression]
              ) [Designator]
              AssignOperation(
              ) [AssignOperation]
              PositiveStartExpr(
                SingleTerm(
                  RangeExpression(
                    PositiveStartExpr(
                      SingleTerm(
                        DesignatorFact(
                          Designator(
                            WithoutNamespace(
                             a
                            ) [WithoutNamespace]
                            NoArrayExpression(
                            ) [NoArrayExpression]
                          ) [Designator]
                        ) [DesignatorFact]
                      ) [SingleTerm]
                    ) [PositiveStartExpr]
                  ) [RangeExpression]
                ) [SingleTerm]
              ) [PositiveStartExpr]
            ) [DesignatorExpr]
          ) [DesignatorStat]
        ) [Statements]
        PrintExpr(
          PositiveStartExpr(
            SingleTerm(
              DesignatorFact(
                Designator(
                  WithoutNamespace(
                   niz
                  ) [WithoutNamespace]
                  NoArrayExpression(
                  ) [NoArrayExpression]
                ) [Designator]
              ) [DesignatorFact]
            ) [SingleTerm]
          ) [PositiveStartExpr]
          NoNumConstOpt(
          ) [NoNumConstOpt]
        ) [PrintExpr]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  23:29:44,851 - ================ Semanticka obrada ===================
INFO  23:29:44,873 - Const a defined on line 2
INFO  23:29:44,873 - Symbol niz found on line 8
INFO  23:29:44,873 - Symbol a found on line 8
INFO  23:29:44,873 - Symbol niz found on line 9
ERROR 23:29:44,873 - print() argument is not valid on line 9
INFO  23:29:44,873 - main() method found on line 1
ERROR 23:29:44,873 - Parser FAIL!
INFO  23:29:47,295 - Compiling source file: C:\Users\elena\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  23:29:47,297 - ================= LEKSICKA ANALIZA =================
INFO  23:29:47,348 - #2 program
INFO  23:29:47,348 - #47 test301
INFO  23:29:47,348 - #3 const
INFO  23:29:47,350 - #47 int
INFO  23:29:47,350 - #47 a
INFO  23:29:47,350 - #24 =
INFO  23:29:47,350 - #46 10
INFO  23:29:47,350 - #27 ;
INFO  23:29:47,351 - #35 {
INFO  23:29:47,351 - #8 void
INFO  23:29:47,352 - #47 main
INFO  23:29:47,353 - #31 (
INFO  23:29:47,353 - #32 )
INFO  23:29:47,354 - #47 int
INFO  23:29:47,354 - #47 niz
INFO  23:29:47,354 - #33 [
INFO  23:29:47,354 - #34 ]
INFO  23:29:47,354 - #27 ;
INFO  23:29:47,356 - #35 {
INFO  23:29:47,356 - #47 niz
INFO  23:29:47,357 - #24 =
INFO  23:29:47,358 - #45 range
INFO  23:29:47,359 - #31 (
INFO  23:29:47,359 - #47 a
INFO  23:29:47,360 - #32 )
INFO  23:29:47,360 - #27 ;
INFO  23:29:47,360 - #5 print
INFO  23:29:47,360 - #31 (
INFO  23:29:47,361 - #47 niz
INFO  23:29:47,361 - #32 )
INFO  23:29:47,362 - #27 ;
INFO  23:29:47,362 - #36 }
INFO  23:29:47,362 - #36 }
INFO  23:29:47,364 - ================= PARSIRANO STABLO =================
INFO  23:29:47,370 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  Declarations(
    NoDeclarations(
    ) [NoDeclarations]
    ConstantDeclaration(
      ConDecl(
        Type(
         int
        ) [Type]
        ConstDef(
         a
          NumConst(
           10
          ) [NumConst]
        ) [ConstDef]
        NoConstantDeclaration(
        ) [NoConstantDeclaration]
      ) [ConDecl]
    ) [ConstantDeclaration]
  ) [Declarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      ListOfVarDecl(
        NoVarDeclarations(
        ) [NoVarDeclarations]
        VarDeclaration(
          Type(
           int
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             niz
              Brackets(
              ) [Brackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [ListOfVarDecl]
      Statements(
        Statements(
          NoStatements(
          ) [NoStatements]
          DesignatorStat(
            DesignatorExpr(
              Designator(
                WithoutNamespace(
                 niz
                ) [WithoutNamespace]
                NoArrayExpression(
                ) [NoArrayExpression]
              ) [Designator]
              AssignOperation(
              ) [AssignOperation]
              PositiveStartExpr(
                SingleTerm(
                  RangeExpression(
                    PositiveStartExpr(
                      SingleTerm(
                        DesignatorFact(
                          Designator(
                            WithoutNamespace(
                             a
                            ) [WithoutNamespace]
                            NoArrayExpression(
                            ) [NoArrayExpression]
                          ) [Designator]
                        ) [DesignatorFact]
                      ) [SingleTerm]
                    ) [PositiveStartExpr]
                  ) [RangeExpression]
                ) [SingleTerm]
              ) [PositiveStartExpr]
            ) [DesignatorExpr]
          ) [DesignatorStat]
        ) [Statements]
        PrintExpr(
          PositiveStartExpr(
            SingleTerm(
              DesignatorFact(
                Designator(
                  WithoutNamespace(
                   niz
                  ) [WithoutNamespace]
                  NoArrayExpression(
                  ) [NoArrayExpression]
                ) [Designator]
              ) [DesignatorFact]
            ) [SingleTerm]
          ) [PositiveStartExpr]
          NoNumConstOpt(
          ) [NoNumConstOpt]
        ) [PrintExpr]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  23:29:47,370 - ================ Semanticka obrada ===================
INFO  23:29:47,390 - Const a defined on line 2
INFO  23:29:47,392 - Symbol niz found on line 8
INFO  23:29:47,392 - Symbol a found on line 8
INFO  23:29:47,392 - Symbol niz found on line 9
ERROR 23:29:47,392 - print() argument is not valid on line 9
INFO  23:29:47,392 - main() method found on line 1
ERROR 23:29:47,392 - Parser FAIL!
INFO  23:33:56,988 - Compiling source file: C:\Users\elena\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  23:33:56,989 - ================= LEKSICKA ANALIZA =================
INFO  23:33:57,037 - #2 program
INFO  23:33:57,037 - #47 test301
INFO  23:33:57,037 - #3 const
INFO  23:33:57,038 - #47 int
INFO  23:33:57,040 - #47 a
INFO  23:33:57,040 - #24 =
INFO  23:33:57,040 - #46 10
INFO  23:33:57,040 - #27 ;
INFO  23:33:57,041 - #35 {
INFO  23:33:57,041 - #8 void
INFO  23:33:57,042 - #47 main
INFO  23:33:57,042 - #31 (
INFO  23:33:57,043 - #32 )
INFO  23:33:57,044 - #47 int
INFO  23:33:57,044 - #47 niz
INFO  23:33:57,044 - #33 [
INFO  23:33:57,044 - #34 ]
INFO  23:33:57,044 - #27 ;
INFO  23:33:57,046 - #35 {
INFO  23:33:57,046 - #47 niz
INFO  23:33:57,047 - #24 =
INFO  23:33:57,049 - #45 range
INFO  23:33:57,051 - #31 (
INFO  23:33:57,051 - #47 a
INFO  23:33:57,051 - #32 )
INFO  23:33:57,051 - #27 ;
INFO  23:33:57,051 - #5 print
INFO  23:33:57,051 - #31 (
INFO  23:33:57,051 - #47 niz
INFO  23:33:57,051 - #32 )
INFO  23:33:57,054 - #27 ;
INFO  23:33:57,054 - #36 }
INFO  23:33:57,055 - #36 }
INFO  23:33:57,057 - ================= PARSIRANO STABLO =================
INFO  23:33:57,062 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  Declarations(
    NoDeclarations(
    ) [NoDeclarations]
    ConstantDeclaration(
      ConDecl(
        Type(
         int
        ) [Type]
        ConstDef(
         a
          NumConst(
           10
          ) [NumConst]
        ) [ConstDef]
        NoConstantDeclaration(
        ) [NoConstantDeclaration]
      ) [ConDecl]
    ) [ConstantDeclaration]
  ) [Declarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      ListOfVarDecl(
        NoVarDeclarations(
        ) [NoVarDeclarations]
        VarDeclaration(
          Type(
           int
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             niz
              Brackets(
              ) [Brackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [ListOfVarDecl]
      Statements(
        Statements(
          NoStatements(
          ) [NoStatements]
          DesignatorStat(
            DesignatorExpr(
              Designator(
                WithoutNamespace(
                 niz
                ) [WithoutNamespace]
                NoArrayExpression(
                ) [NoArrayExpression]
              ) [Designator]
              AssignOperation(
              ) [AssignOperation]
              PositiveStartExpr(
                SingleTerm(
                  RangeExpression(
                    PositiveStartExpr(
                      SingleTerm(
                        DesignatorFact(
                          Designator(
                            WithoutNamespace(
                             a
                            ) [WithoutNamespace]
                            NoArrayExpression(
                            ) [NoArrayExpression]
                          ) [Designator]
                        ) [DesignatorFact]
                      ) [SingleTerm]
                    ) [PositiveStartExpr]
                  ) [RangeExpression]
                ) [SingleTerm]
              ) [PositiveStartExpr]
            ) [DesignatorExpr]
          ) [DesignatorStat]
        ) [Statements]
        PrintExpr(
          PositiveStartExpr(
            SingleTerm(
              DesignatorFact(
                Designator(
                  WithoutNamespace(
                   niz
                  ) [WithoutNamespace]
                  NoArrayExpression(
                  ) [NoArrayExpression]
                ) [Designator]
              ) [DesignatorFact]
            ) [SingleTerm]
          ) [PositiveStartExpr]
          NoNumConstOpt(
          ) [NoNumConstOpt]
        ) [PrintExpr]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  23:33:57,064 - ================ Semanticka obrada ===================
INFO  23:33:57,067 - Const a defined on line 2
INFO  23:33:57,067 - Symbol niz found on line 8
INFO  23:33:57,067 - Symbol a found on line 8
INFO  23:33:57,067 - Symbol niz found on line 9
ERROR 23:33:57,067 - print() argument is not valid on line 9
INFO  23:33:57,067 - main() method found on line 1
ERROR 23:33:57,067 - Parser FAIL!
INFO  23:34:07,277 - Compiling source file: C:\Users\elena\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  23:34:07,278 - ================= LEKSICKA ANALIZA =================
INFO  23:34:07,347 - #2 program
INFO  23:34:07,347 - #47 test301
INFO  23:34:07,347 - #3 const
INFO  23:34:07,349 - #47 int
INFO  23:34:07,349 - #47 a
INFO  23:34:07,350 - #24 =
INFO  23:34:07,350 - #46 10
INFO  23:34:07,350 - #27 ;
INFO  23:34:07,351 - #35 {
INFO  23:34:07,351 - #8 void
INFO  23:34:07,352 - #47 main
INFO  23:34:07,353 - #31 (
INFO  23:34:07,353 - #32 )
INFO  23:34:07,354 - #47 int
INFO  23:34:07,355 - #47 niz
INFO  23:34:07,355 - #33 [
INFO  23:34:07,355 - #34 ]
INFO  23:34:07,355 - #27 ;
INFO  23:34:07,358 - #35 {
INFO  23:34:07,359 - #47 niz
INFO  23:34:07,360 - #24 =
INFO  23:34:07,363 - #45 range
INFO  23:34:07,365 - #31 (
INFO  23:34:07,365 - #47 a
INFO  23:34:07,365 - #32 )
INFO  23:34:07,366 - #27 ;
INFO  23:34:07,366 - #5 print
INFO  23:34:07,366 - #31 (
INFO  23:34:07,366 - #47 niz
INFO  23:34:07,366 - #32 )
INFO  23:34:07,367 - #27 ;
INFO  23:34:07,367 - #36 }
INFO  23:34:07,367 - #36 }
INFO  23:34:07,369 - ================= PARSIRANO STABLO =================
INFO  23:34:07,376 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  Declarations(
    NoDeclarations(
    ) [NoDeclarations]
    ConstantDeclaration(
      ConDecl(
        Type(
         int
        ) [Type]
        ConstDef(
         a
          NumConst(
           10
          ) [NumConst]
        ) [ConstDef]
        NoConstantDeclaration(
        ) [NoConstantDeclaration]
      ) [ConDecl]
    ) [ConstantDeclaration]
  ) [Declarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      ListOfVarDecl(
        NoVarDeclarations(
        ) [NoVarDeclarations]
        VarDeclaration(
          Type(
           int
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             niz
              Brackets(
              ) [Brackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [ListOfVarDecl]
      Statements(
        Statements(
          NoStatements(
          ) [NoStatements]
          DesignatorStat(
            DesignatorExpr(
              Designator(
                WithoutNamespace(
                 niz
                ) [WithoutNamespace]
                NoArrayExpression(
                ) [NoArrayExpression]
              ) [Designator]
              AssignOperation(
              ) [AssignOperation]
              PositiveStartExpr(
                SingleTerm(
                  RangeExpression(
                    PositiveStartExpr(
                      SingleTerm(
                        DesignatorFact(
                          Designator(
                            WithoutNamespace(
                             a
                            ) [WithoutNamespace]
                            NoArrayExpression(
                            ) [NoArrayExpression]
                          ) [Designator]
                        ) [DesignatorFact]
                      ) [SingleTerm]
                    ) [PositiveStartExpr]
                  ) [RangeExpression]
                ) [SingleTerm]
              ) [PositiveStartExpr]
            ) [DesignatorExpr]
          ) [DesignatorStat]
        ) [Statements]
        PrintExpr(
          PositiveStartExpr(
            SingleTerm(
              DesignatorFact(
                Designator(
                  WithoutNamespace(
                   niz
                  ) [WithoutNamespace]
                  NoArrayExpression(
                  ) [NoArrayExpression]
                ) [Designator]
              ) [DesignatorFact]
            ) [SingleTerm]
          ) [PositiveStartExpr]
          NoNumConstOpt(
          ) [NoNumConstOpt]
        ) [PrintExpr]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  23:34:07,376 - ================ Semanticka obrada ===================
INFO  23:34:07,401 - Const a defined on line 2
INFO  23:34:07,401 - Symbol niz found on line 8
INFO  23:34:07,401 - Symbol a found on line 8
INFO  23:34:07,403 - Symbol niz found on line 9
ERROR 23:34:07,403 - print() argument is not valid on line 9
INFO  23:34:07,403 - main() method found on line 1
ERROR 23:34:07,403 - Parser FAIL!
INFO  23:34:17,502 - Compiling source file: C:\Users\elena\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  23:34:17,503 - ================= LEKSICKA ANALIZA =================
INFO  23:34:17,556 - #2 program
INFO  23:34:17,556 - #47 test301
INFO  23:34:17,556 - #3 const
INFO  23:34:17,558 - #47 int
INFO  23:34:17,558 - #47 a
INFO  23:34:17,559 - #24 =
INFO  23:34:17,559 - #46 10
INFO  23:34:17,559 - #27 ;
INFO  23:34:17,561 - #35 {
INFO  23:34:17,561 - #8 void
INFO  23:34:17,562 - #47 main
INFO  23:34:17,563 - #31 (
INFO  23:34:17,565 - #32 )
INFO  23:34:17,566 - #47 int
INFO  23:34:17,567 - #47 niz
INFO  23:34:17,567 - #33 [
INFO  23:34:17,567 - #34 ]
INFO  23:34:17,567 - #27 ;
INFO  23:34:17,568 - #35 {
INFO  23:34:17,569 - #47 niz
INFO  23:34:17,569 - #24 =
INFO  23:34:17,571 - #45 range
INFO  23:34:17,573 - #31 (
INFO  23:34:17,573 - #47 a
INFO  23:34:17,573 - #32 )
INFO  23:34:17,574 - #27 ;
INFO  23:34:17,574 - #5 print
INFO  23:34:17,574 - #31 (
INFO  23:34:17,575 - #47 niz
INFO  23:34:17,575 - #32 )
INFO  23:34:17,575 - #27 ;
INFO  23:34:17,576 - #36 }
INFO  23:34:17,576 - #36 }
INFO  23:34:17,578 - ================= PARSIRANO STABLO =================
INFO  23:34:17,585 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  Declarations(
    NoDeclarations(
    ) [NoDeclarations]
    ConstantDeclaration(
      ConDecl(
        Type(
         int
        ) [Type]
        ConstDef(
         a
          NumConst(
           10
          ) [NumConst]
        ) [ConstDef]
        NoConstantDeclaration(
        ) [NoConstantDeclaration]
      ) [ConDecl]
    ) [ConstantDeclaration]
  ) [Declarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      ListOfVarDecl(
        NoVarDeclarations(
        ) [NoVarDeclarations]
        VarDeclaration(
          Type(
           int
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             niz
              Brackets(
              ) [Brackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [ListOfVarDecl]
      Statements(
        Statements(
          NoStatements(
          ) [NoStatements]
          DesignatorStat(
            DesignatorExpr(
              Designator(
                WithoutNamespace(
                 niz
                ) [WithoutNamespace]
                NoArrayExpression(
                ) [NoArrayExpression]
              ) [Designator]
              AssignOperation(
              ) [AssignOperation]
              PositiveStartExpr(
                SingleTerm(
                  RangeExpression(
                    PositiveStartExpr(
                      SingleTerm(
                        DesignatorFact(
                          Designator(
                            WithoutNamespace(
                             a
                            ) [WithoutNamespace]
                            NoArrayExpression(
                            ) [NoArrayExpression]
                          ) [Designator]
                        ) [DesignatorFact]
                      ) [SingleTerm]
                    ) [PositiveStartExpr]
                  ) [RangeExpression]
                ) [SingleTerm]
              ) [PositiveStartExpr]
            ) [DesignatorExpr]
          ) [DesignatorStat]
        ) [Statements]
        PrintExpr(
          PositiveStartExpr(
            SingleTerm(
              DesignatorFact(
                Designator(
                  WithoutNamespace(
                   niz
                  ) [WithoutNamespace]
                  NoArrayExpression(
                  ) [NoArrayExpression]
                ) [Designator]
              ) [DesignatorFact]
            ) [SingleTerm]
          ) [PositiveStartExpr]
          NoNumConstOpt(
          ) [NoNumConstOpt]
        ) [PrintExpr]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  23:34:17,585 - ================ Semanticka obrada ===================
INFO  23:34:17,606 - Const a defined on line 2
INFO  23:34:17,606 - Symbol niz found on line 8
INFO  23:34:17,606 - Symbol a found on line 8
INFO  23:34:17,606 - Symbol niz found on line 9
ERROR 23:34:17,607 - print() argument is not valid on line 9
INFO  23:34:17,607 - main() method found on line 1
ERROR 23:34:17,607 - Parser FAIL!
INFO  23:37:20,924 - Compiling source file: C:\Users\elena\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  23:37:20,926 - ================= LEKSICKA ANALIZA =================
INFO  23:37:20,986 - #2 program
INFO  23:37:20,986 - #47 test301
INFO  23:37:20,986 - #3 const
INFO  23:37:20,989 - #47 int
INFO  23:37:20,989 - #47 a
INFO  23:37:20,990 - #24 =
INFO  23:37:20,990 - #46 10
INFO  23:37:20,990 - #27 ;
INFO  23:37:20,991 - #35 {
INFO  23:37:20,992 - #8 void
INFO  23:37:20,992 - #47 main
INFO  23:37:20,993 - #31 (
INFO  23:37:20,993 - #32 )
INFO  23:37:20,994 - #47 int
INFO  23:37:20,995 - #47 niz
INFO  23:37:20,995 - #33 [
INFO  23:37:20,995 - #34 ]
INFO  23:37:20,995 - #27 ;
INFO  23:37:20,996 - #35 {
INFO  23:37:20,997 - #47 niz
INFO  23:37:20,998 - #24 =
INFO  23:37:20,999 - #45 range
INFO  23:37:21,001 - #31 (
INFO  23:37:21,001 - #47 a
INFO  23:37:21,001 - #32 )
INFO  23:37:21,002 - #27 ;
INFO  23:37:21,002 - #5 print
INFO  23:37:21,002 - #31 (
INFO  23:37:21,002 - #47 niz
INFO  23:37:21,002 - #32 )
INFO  23:37:21,003 - #27 ;
INFO  23:37:21,003 - #36 }
INFO  23:37:21,004 - #36 }
INFO  23:37:21,007 - ================= PARSIRANO STABLO =================
INFO  23:37:21,015 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  Declarations(
    NoDeclarations(
    ) [NoDeclarations]
    ConstantDeclaration(
      ConDecl(
        Type(
         int
        ) [Type]
        ConstDef(
         a
          NumConst(
           10
          ) [NumConst]
        ) [ConstDef]
        NoConstantDeclaration(
        ) [NoConstantDeclaration]
      ) [ConDecl]
    ) [ConstantDeclaration]
  ) [Declarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      ListOfVarDecl(
        NoVarDeclarations(
        ) [NoVarDeclarations]
        VarDeclaration(
          Type(
           int
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             niz
              Brackets(
              ) [Brackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [ListOfVarDecl]
      Statements(
        Statements(
          NoStatements(
          ) [NoStatements]
          DesignatorStat(
            DesignatorExpr(
              Designator(
                WithoutNamespace(
                 niz
                ) [WithoutNamespace]
                NoArrayExpression(
                ) [NoArrayExpression]
              ) [Designator]
              AssignOperation(
              ) [AssignOperation]
              PositiveStartExpr(
                SingleTerm(
                  RangeExpression(
                    PositiveStartExpr(
                      SingleTerm(
                        DesignatorFact(
                          Designator(
                            WithoutNamespace(
                             a
                            ) [WithoutNamespace]
                            NoArrayExpression(
                            ) [NoArrayExpression]
                          ) [Designator]
                        ) [DesignatorFact]
                      ) [SingleTerm]
                    ) [PositiveStartExpr]
                  ) [RangeExpression]
                ) [SingleTerm]
              ) [PositiveStartExpr]
            ) [DesignatorExpr]
          ) [DesignatorStat]
        ) [Statements]
        PrintExpr(
          PositiveStartExpr(
            SingleTerm(
              DesignatorFact(
                Designator(
                  WithoutNamespace(
                   niz
                  ) [WithoutNamespace]
                  NoArrayExpression(
                  ) [NoArrayExpression]
                ) [Designator]
              ) [DesignatorFact]
            ) [SingleTerm]
          ) [PositiveStartExpr]
          NoNumConstOpt(
          ) [NoNumConstOpt]
        ) [PrintExpr]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  23:37:21,015 - ================ Semanticka obrada ===================
INFO  23:37:21,035 - Const a defined on line 2
INFO  23:37:21,036 - Symbol niz found on line 8
INFO  23:37:21,036 - Symbol a found on line 8
INFO  23:37:21,036 - Symbol niz found on line 9
INFO  23:37:21,036 - main() method found on line 1
INFO  23:37:32,999 - Parser SUCCESS!
INFO  23:38:23,683 - Compiling source file: C:\Users\elena\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  23:38:23,685 - ================= LEKSICKA ANALIZA =================
INFO  23:38:23,741 - #2 program
INFO  23:38:23,741 - #47 test301
INFO  23:38:23,741 - #3 const
INFO  23:38:23,744 - #47 int
INFO  23:38:23,745 - #47 a
INFO  23:38:23,746 - #24 =
INFO  23:38:23,746 - #46 10
INFO  23:38:23,746 - #27 ;
INFO  23:38:23,748 - #35 {
INFO  23:38:23,748 - #8 void
INFO  23:38:23,749 - #47 main
INFO  23:38:23,750 - #31 (
INFO  23:38:23,751 - #32 )
INFO  23:38:23,752 - #47 int
INFO  23:38:23,753 - #47 niz
INFO  23:38:23,753 - #33 [
INFO  23:38:23,753 - #34 ]
INFO  23:38:23,753 - #27 ;
INFO  23:38:23,755 - #35 {
INFO  23:38:23,756 - #47 niz
INFO  23:38:23,757 - #24 =
INFO  23:38:23,760 - #45 range
INFO  23:38:23,761 - #31 (
INFO  23:38:23,761 - #47 a
INFO  23:38:23,761 - #32 )
INFO  23:38:23,761 - #27 ;
INFO  23:38:23,761 - #5 print
INFO  23:38:23,762 - #31 (
INFO  23:38:23,762 - #47 niz
INFO  23:38:23,762 - #32 )
INFO  23:38:23,762 - #27 ;
INFO  23:38:23,764 - #36 }
INFO  23:38:23,764 - #36 }
INFO  23:38:23,766 - ================= PARSIRANO STABLO =================
INFO  23:38:23,774 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  Declarations(
    NoDeclarations(
    ) [NoDeclarations]
    ConstantDeclaration(
      ConDecl(
        Type(
         int
        ) [Type]
        ConstDef(
         a
          NumConst(
           10
          ) [NumConst]
        ) [ConstDef]
        NoConstantDeclaration(
        ) [NoConstantDeclaration]
      ) [ConDecl]
    ) [ConstantDeclaration]
  ) [Declarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      ListOfVarDecl(
        NoVarDeclarations(
        ) [NoVarDeclarations]
        VarDeclaration(
          Type(
           int
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             niz
              Brackets(
              ) [Brackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [ListOfVarDecl]
      Statements(
        Statements(
          NoStatements(
          ) [NoStatements]
          DesignatorStat(
            DesignatorExpr(
              Designator(
                WithoutNamespace(
                 niz
                ) [WithoutNamespace]
                NoArrayExpression(
                ) [NoArrayExpression]
              ) [Designator]
              AssignOperation(
              ) [AssignOperation]
              PositiveStartExpr(
                SingleTerm(
                  RangeExpression(
                    PositiveStartExpr(
                      SingleTerm(
                        DesignatorFact(
                          Designator(
                            WithoutNamespace(
                             a
                            ) [WithoutNamespace]
                            NoArrayExpression(
                            ) [NoArrayExpression]
                          ) [Designator]
                        ) [DesignatorFact]
                      ) [SingleTerm]
                    ) [PositiveStartExpr]
                  ) [RangeExpression]
                ) [SingleTerm]
              ) [PositiveStartExpr]
            ) [DesignatorExpr]
          ) [DesignatorStat]
        ) [Statements]
        PrintExpr(
          PositiveStartExpr(
            SingleTerm(
              DesignatorFact(
                Designator(
                  WithoutNamespace(
                   niz
                  ) [WithoutNamespace]
                  NoArrayExpression(
                  ) [NoArrayExpression]
                ) [Designator]
              ) [DesignatorFact]
            ) [SingleTerm]
          ) [PositiveStartExpr]
          NoNumConstOpt(
          ) [NoNumConstOpt]
        ) [PrintExpr]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  23:38:23,774 - ================ Semanticka obrada ===================
INFO  23:38:23,799 - Const a defined on line 2
INFO  23:38:23,799 - Symbol niz found on line 8
INFO  23:38:23,799 - Symbol a found on line 8
INFO  23:38:23,799 - Symbol niz found on line 9
INFO  23:38:23,799 - main() method found on line 1
INFO  23:41:19,010 - Compiling source file: C:\Users\elena\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  23:41:19,012 - ================= LEKSICKA ANALIZA =================
INFO  23:41:19,106 - #2 program
INFO  23:41:19,106 - #47 test301
INFO  23:41:19,106 - #3 const
INFO  23:41:19,110 - #47 int
INFO  23:41:19,110 - #47 a
INFO  23:41:19,111 - #24 =
INFO  23:41:19,111 - #46 10
INFO  23:41:19,112 - #27 ;
INFO  23:41:19,114 - #35 {
INFO  23:41:19,115 - #8 void
INFO  23:41:19,117 - #47 main
INFO  23:41:19,118 - #31 (
INFO  23:41:19,119 - #32 )
INFO  23:41:19,121 - #47 int
INFO  23:41:19,122 - #47 niz
INFO  23:41:19,122 - #33 [
INFO  23:41:19,123 - #34 ]
INFO  23:41:19,123 - #27 ;
INFO  23:41:19,127 - #35 {
INFO  23:41:19,128 - #47 niz
INFO  23:41:19,130 - #24 =
INFO  23:41:19,134 - #45 range
INFO  23:41:19,137 - #31 (
INFO  23:41:19,137 - #47 a
INFO  23:41:19,137 - #32 )
INFO  23:41:19,138 - #27 ;
INFO  23:41:19,139 - #5 print
INFO  23:41:19,139 - #31 (
INFO  23:41:19,140 - #47 niz
INFO  23:41:19,140 - #32 )
INFO  23:41:19,142 - #27 ;
INFO  23:41:19,143 - #36 }
INFO  23:41:19,143 - #36 }
INFO  23:41:19,148 - ================= PARSIRANO STABLO =================
INFO  23:41:19,163 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  Declarations(
    NoDeclarations(
    ) [NoDeclarations]
    ConstantDeclaration(
      ConDecl(
        Type(
         int
        ) [Type]
        ConstDef(
         a
          NumConst(
           10
          ) [NumConst]
        ) [ConstDef]
        NoConstantDeclaration(
        ) [NoConstantDeclaration]
      ) [ConDecl]
    ) [ConstantDeclaration]
  ) [Declarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      ListOfVarDecl(
        NoVarDeclarations(
        ) [NoVarDeclarations]
        VarDeclaration(
          Type(
           int
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             niz
              Brackets(
              ) [Brackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [ListOfVarDecl]
      Statements(
        Statements(
          NoStatements(
          ) [NoStatements]
          DesignatorStat(
            DesignatorExpr(
              Designator(
                WithoutNamespace(
                 niz
                ) [WithoutNamespace]
                NoArrayExpression(
                ) [NoArrayExpression]
              ) [Designator]
              AssignOperation(
              ) [AssignOperation]
              PositiveStartExpr(
                SingleTerm(
                  RangeExpression(
                    PositiveStartExpr(
                      SingleTerm(
                        DesignatorFact(
                          Designator(
                            WithoutNamespace(
                             a
                            ) [WithoutNamespace]
                            NoArrayExpression(
                            ) [NoArrayExpression]
                          ) [Designator]
                        ) [DesignatorFact]
                      ) [SingleTerm]
                    ) [PositiveStartExpr]
                  ) [RangeExpression]
                ) [SingleTerm]
              ) [PositiveStartExpr]
            ) [DesignatorExpr]
          ) [DesignatorStat]
        ) [Statements]
        PrintExpr(
          PositiveStartExpr(
            SingleTerm(
              DesignatorFact(
                Designator(
                  WithoutNamespace(
                   niz
                  ) [WithoutNamespace]
                  NoArrayExpression(
                  ) [NoArrayExpression]
                ) [Designator]
              ) [DesignatorFact]
            ) [SingleTerm]
          ) [PositiveStartExpr]
          NoNumConstOpt(
          ) [NoNumConstOpt]
        ) [PrintExpr]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  23:41:19,164 - ================ Semanticka obrada ===================
INFO  23:41:19,172 - Const a defined on line 2
INFO  23:41:19,173 - Symbol niz found on line 8
INFO  23:41:19,173 - Symbol a found on line 8
INFO  23:41:19,175 - Symbol niz found on line 9
INFO  23:41:19,175 - main() method found on line 1
INFO  23:41:19,221 - Parser SUCCESS!
INFO  23:41:58,907 - Compiling source file: C:\Users\elena\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  23:41:58,907 - ================= LEKSICKA ANALIZA =================
INFO  23:41:58,954 - #2 program
INFO  23:41:58,954 - #47 test301
INFO  23:41:58,954 - #3 const
INFO  23:41:58,956 - #47 int
INFO  23:41:58,956 - #47 a
INFO  23:41:58,958 - #24 =
INFO  23:41:58,958 - #46 10
INFO  23:41:58,958 - #27 ;
INFO  23:41:58,960 - #35 {
INFO  23:41:58,960 - #8 void
INFO  23:41:58,961 - #47 main
INFO  23:41:58,961 - #31 (
INFO  23:41:58,962 - #32 )
INFO  23:41:58,963 - #47 int
INFO  23:41:58,964 - #47 niz
INFO  23:41:58,964 - #33 [
INFO  23:41:58,965 - #34 ]
INFO  23:41:58,965 - #27 ;
INFO  23:41:58,967 - #35 {
INFO  23:41:58,967 - #5 print
INFO  23:41:58,968 - #31 (
INFO  23:41:58,968 - #46 5
INFO  23:41:58,969 - #32 )
INFO  23:41:58,970 - #27 ;
INFO  23:41:58,970 - #47 niz
INFO  23:41:58,970 - #24 =
INFO  23:41:58,972 - #45 range
INFO  23:41:58,973 - #31 (
INFO  23:41:58,973 - #47 a
INFO  23:41:58,973 - #32 )
INFO  23:41:58,974 - #27 ;
INFO  23:41:58,974 - #5 print
INFO  23:41:58,974 - #31 (
INFO  23:41:58,974 - #47 niz
INFO  23:41:58,974 - #32 )
INFO  23:41:58,974 - #27 ;
INFO  23:41:58,974 - #36 }
INFO  23:41:58,974 - #36 }
INFO  23:41:58,977 - ================= PARSIRANO STABLO =================
INFO  23:41:58,983 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  Declarations(
    NoDeclarations(
    ) [NoDeclarations]
    ConstantDeclaration(
      ConDecl(
        Type(
         int
        ) [Type]
        ConstDef(
         a
          NumConst(
           10
          ) [NumConst]
        ) [ConstDef]
        NoConstantDeclaration(
        ) [NoConstantDeclaration]
      ) [ConDecl]
    ) [ConstantDeclaration]
  ) [Declarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      ListOfVarDecl(
        NoVarDeclarations(
        ) [NoVarDeclarations]
        VarDeclaration(
          Type(
           int
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             niz
              Brackets(
              ) [Brackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [ListOfVarDecl]
      Statements(
        Statements(
          Statements(
            NoStatements(
            ) [NoStatements]
            PrintExpr(
              PositiveStartExpr(
                SingleTerm(
                  NumberConst(
                   5
                  ) [NumberConst]
                ) [SingleTerm]
              ) [PositiveStartExpr]
              NoNumConstOpt(
              ) [NoNumConstOpt]
            ) [PrintExpr]
          ) [Statements]
          DesignatorStat(
            DesignatorExpr(
              Designator(
                WithoutNamespace(
                 niz
                ) [WithoutNamespace]
                NoArrayExpression(
                ) [NoArrayExpression]
              ) [Designator]
              AssignOperation(
              ) [AssignOperation]
              PositiveStartExpr(
                SingleTerm(
                  RangeExpression(
                    PositiveStartExpr(
                      SingleTerm(
                        DesignatorFact(
                          Designator(
                            WithoutNamespace(
                             a
                            ) [WithoutNamespace]
                            NoArrayExpression(
                            ) [NoArrayExpression]
                          ) [Designator]
                        ) [DesignatorFact]
                      ) [SingleTerm]
                    ) [PositiveStartExpr]
                  ) [RangeExpression]
                ) [SingleTerm]
              ) [PositiveStartExpr]
            ) [DesignatorExpr]
          ) [DesignatorStat]
        ) [Statements]
        PrintExpr(
          PositiveStartExpr(
            SingleTerm(
              DesignatorFact(
                Designator(
                  WithoutNamespace(
                   niz
                  ) [WithoutNamespace]
                  NoArrayExpression(
                  ) [NoArrayExpression]
                ) [Designator]
              ) [DesignatorFact]
            ) [SingleTerm]
          ) [PositiveStartExpr]
          NoNumConstOpt(
          ) [NoNumConstOpt]
        ) [PrintExpr]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  23:41:58,984 - ================ Semanticka obrada ===================
INFO  23:41:58,989 - Const a defined on line 2
INFO  23:41:58,989 - Symbol niz found on line 8
INFO  23:41:58,989 - Symbol a found on line 8
INFO  23:41:58,989 - Symbol niz found on line 9
INFO  23:41:58,989 - main() method found on line 1
INFO  23:41:58,993 - Parser SUCCESS!
INFO  23:42:37,974 - Compiling source file: C:\Users\elena\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  23:42:37,976 - ================= LEKSICKA ANALIZA =================
INFO  23:42:38,025 - #2 program
INFO  23:42:38,025 - #47 test301
INFO  23:42:38,025 - #3 const
INFO  23:42:38,026 - #47 int
INFO  23:42:38,026 - #47 a
INFO  23:42:38,027 - #24 =
INFO  23:42:38,027 - #46 10
INFO  23:42:38,027 - #27 ;
INFO  23:42:38,028 - #35 {
INFO  23:42:38,029 - #8 void
INFO  23:42:38,029 - #47 main
INFO  23:42:38,030 - #31 (
INFO  23:42:38,031 - #32 )
INFO  23:42:38,033 - #47 int
INFO  23:42:38,034 - #47 niz
INFO  23:42:38,034 - #33 [
INFO  23:42:38,034 - #34 ]
INFO  23:42:38,034 - #27 ;
INFO  23:42:38,035 - #35 {
INFO  23:42:38,036 - #5 print
INFO  23:42:38,036 - #31 (
INFO  23:42:38,036 - #46 13
INFO  23:42:38,036 - #32 )
INFO  23:42:38,037 - #27 ;
INFO  23:42:38,037 - #47 niz
INFO  23:42:38,037 - #24 =
INFO  23:42:38,039 - #45 range
INFO  23:42:38,040 - #31 (
INFO  23:42:38,040 - #47 a
INFO  23:42:38,040 - #32 )
INFO  23:42:38,041 - #27 ;
INFO  23:42:38,041 - #5 print
INFO  23:42:38,041 - #31 (
INFO  23:42:38,041 - #47 niz
INFO  23:42:38,041 - #32 )
INFO  23:42:38,041 - #27 ;
INFO  23:42:38,041 - #36 }
INFO  23:42:38,042 - #36 }
INFO  23:42:38,044 - ================= PARSIRANO STABLO =================
INFO  23:42:38,049 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  Declarations(
    NoDeclarations(
    ) [NoDeclarations]
    ConstantDeclaration(
      ConDecl(
        Type(
         int
        ) [Type]
        ConstDef(
         a
          NumConst(
           10
          ) [NumConst]
        ) [ConstDef]
        NoConstantDeclaration(
        ) [NoConstantDeclaration]
      ) [ConDecl]
    ) [ConstantDeclaration]
  ) [Declarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      ListOfVarDecl(
        NoVarDeclarations(
        ) [NoVarDeclarations]
        VarDeclaration(
          Type(
           int
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             niz
              Brackets(
              ) [Brackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [ListOfVarDecl]
      Statements(
        Statements(
          Statements(
            NoStatements(
            ) [NoStatements]
            PrintExpr(
              PositiveStartExpr(
                SingleTerm(
                  NumberConst(
                   13
                  ) [NumberConst]
                ) [SingleTerm]
              ) [PositiveStartExpr]
              NoNumConstOpt(
              ) [NoNumConstOpt]
            ) [PrintExpr]
          ) [Statements]
          DesignatorStat(
            DesignatorExpr(
              Designator(
                WithoutNamespace(
                 niz
                ) [WithoutNamespace]
                NoArrayExpression(
                ) [NoArrayExpression]
              ) [Designator]
              AssignOperation(
              ) [AssignOperation]
              PositiveStartExpr(
                SingleTerm(
                  RangeExpression(
                    PositiveStartExpr(
                      SingleTerm(
                        DesignatorFact(
                          Designator(
                            WithoutNamespace(
                             a
                            ) [WithoutNamespace]
                            NoArrayExpression(
                            ) [NoArrayExpression]
                          ) [Designator]
                        ) [DesignatorFact]
                      ) [SingleTerm]
                    ) [PositiveStartExpr]
                  ) [RangeExpression]
                ) [SingleTerm]
              ) [PositiveStartExpr]
            ) [DesignatorExpr]
          ) [DesignatorStat]
        ) [Statements]
        PrintExpr(
          PositiveStartExpr(
            SingleTerm(
              DesignatorFact(
                Designator(
                  WithoutNamespace(
                   niz
                  ) [WithoutNamespace]
                  NoArrayExpression(
                  ) [NoArrayExpression]
                ) [Designator]
              ) [DesignatorFact]
            ) [SingleTerm]
          ) [PositiveStartExpr]
          NoNumConstOpt(
          ) [NoNumConstOpt]
        ) [PrintExpr]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  23:42:38,049 - ================ Semanticka obrada ===================
INFO  23:42:38,053 - Const a defined on line 2
INFO  23:42:38,054 - Symbol niz found on line 8
INFO  23:42:38,054 - Symbol a found on line 8
INFO  23:42:38,054 - Symbol niz found on line 9
INFO  23:42:38,054 - main() method found on line 1
INFO  23:42:38,057 - Parser SUCCESS!
INFO  23:51:29,527 - Compiling source file: C:\Users\elena\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  23:51:29,528 - ================= LEKSICKA ANALIZA =================
INFO  23:51:29,563 - #2 program
INFO  23:51:29,565 - #47 test301
INFO  23:51:29,565 - #3 const
INFO  23:51:29,566 - #47 int
INFO  23:51:29,566 - #47 a
INFO  23:51:29,566 - #24 =
INFO  23:51:29,566 - #46 10
INFO  23:51:29,566 - #27 ;
INFO  23:51:29,567 - #35 {
INFO  23:51:29,567 - #8 void
INFO  23:51:29,568 - #47 main
INFO  23:51:29,568 - #31 (
INFO  23:51:29,569 - #32 )
INFO  23:51:29,569 - #47 int
INFO  23:51:29,569 - #47 niz
INFO  23:51:29,570 - #33 [
INFO  23:51:29,570 - #34 ]
INFO  23:51:29,570 - #27 ;
INFO  23:51:29,571 - #35 {
INFO  23:51:29,571 - #5 print
INFO  23:51:29,572 - #31 (
INFO  23:51:29,572 - #46 13
INFO  23:51:29,572 - #32 )
INFO  23:51:29,572 - #27 ;
INFO  23:51:29,572 - #47 niz
INFO  23:51:29,573 - #24 =
INFO  23:51:29,573 - #45 range
INFO  23:51:29,575 - #31 (
INFO  23:51:29,575 - #47 a
INFO  23:51:29,575 - #32 )
INFO  23:51:29,576 - #27 ;
INFO  23:51:29,576 - #5 print
INFO  23:51:29,576 - #31 (
INFO  23:51:29,576 - #47 niz
INFO  23:51:29,576 - #32 )
INFO  23:51:29,576 - #27 ;
INFO  23:51:29,576 - #36 }
INFO  23:51:29,576 - #36 }
INFO  23:51:29,578 - ================= PARSIRANO STABLO =================
INFO  23:51:29,584 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  Declarations(
    NoDeclarations(
    ) [NoDeclarations]
    ConstantDeclaration(
      ConDecl(
        Type(
         int
        ) [Type]
        ConstDef(
         a
          NumConst(
           10
          ) [NumConst]
        ) [ConstDef]
        NoConstantDeclaration(
        ) [NoConstantDeclaration]
      ) [ConDecl]
    ) [ConstantDeclaration]
  ) [Declarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      ListOfVarDecl(
        NoVarDeclarations(
        ) [NoVarDeclarations]
        VarDeclaration(
          Type(
           int
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             niz
              Brackets(
              ) [Brackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [ListOfVarDecl]
      Statements(
        Statements(
          Statements(
            NoStatements(
            ) [NoStatements]
            PrintExpr(
              PositiveStartExpr(
                SingleTerm(
                  NumberConst(
                   13
                  ) [NumberConst]
                ) [SingleTerm]
              ) [PositiveStartExpr]
              NoNumConstOpt(
              ) [NoNumConstOpt]
            ) [PrintExpr]
          ) [Statements]
          DesignatorStat(
            DesignatorExpr(
              Designator(
                WithoutNamespace(
                 niz
                ) [WithoutNamespace]
                NoArrayExpression(
                ) [NoArrayExpression]
              ) [Designator]
              AssignOperation(
              ) [AssignOperation]
              PositiveStartExpr(
                SingleTerm(
                  RangeExpression(
                    PositiveStartExpr(
                      SingleTerm(
                        DesignatorFact(
                          Designator(
                            WithoutNamespace(
                             a
                            ) [WithoutNamespace]
                            NoArrayExpression(
                            ) [NoArrayExpression]
                          ) [Designator]
                        ) [DesignatorFact]
                      ) [SingleTerm]
                    ) [PositiveStartExpr]
                  ) [RangeExpression]
                ) [SingleTerm]
              ) [PositiveStartExpr]
            ) [DesignatorExpr]
          ) [DesignatorStat]
        ) [Statements]
        PrintExpr(
          PositiveStartExpr(
            SingleTerm(
              DesignatorFact(
                Designator(
                  WithoutNamespace(
                   niz
                  ) [WithoutNamespace]
                  NoArrayExpression(
                  ) [NoArrayExpression]
                ) [Designator]
              ) [DesignatorFact]
            ) [SingleTerm]
          ) [PositiveStartExpr]
          NoNumConstOpt(
          ) [NoNumConstOpt]
        ) [PrintExpr]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  23:51:29,585 - ================ Semanticka obrada ===================
INFO  23:51:29,587 - Const a defined on line 2
INFO  23:51:29,589 - Symbol niz found on line 8
INFO  23:51:29,589 - Symbol a found on line 8
INFO  23:51:29,589 - Symbol niz found on line 9
INFO  23:51:29,589 - main() method found on line 1
INFO  23:51:29,592 - Parser SUCCESS!
INFO  23:51:38,954 - Compiling source file: C:\Users\elena\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  23:51:38,956 - ================= LEKSICKA ANALIZA =================
INFO  23:51:39,036 - #2 program
INFO  23:51:39,037 - #47 test301
INFO  23:51:39,037 - #3 const
INFO  23:51:39,039 - #47 int
INFO  23:51:39,039 - #47 a
INFO  23:51:39,040 - #24 =
INFO  23:51:39,041 - #46 10
INFO  23:51:39,041 - #27 ;
INFO  23:51:39,043 - #35 {
INFO  23:51:39,044 - #8 void
INFO  23:51:39,045 - #47 main
INFO  23:51:39,046 - #31 (
INFO  23:51:39,047 - #32 )
INFO  23:51:39,048 - #47 int
INFO  23:51:39,049 - #47 niz
INFO  23:51:39,049 - #33 [
INFO  23:51:39,049 - #34 ]
INFO  23:51:39,049 - #27 ;
INFO  23:51:39,051 - #35 {
INFO  23:51:39,052 - #5 print
INFO  23:51:39,053 - #31 (
INFO  23:51:39,053 - #46 13
INFO  23:51:39,053 - #32 )
INFO  23:51:39,055 - #27 ;
INFO  23:51:39,055 - #47 niz
INFO  23:51:39,055 - #24 =
INFO  23:51:39,057 - #45 range
INFO  23:51:39,059 - #31 (
INFO  23:51:39,059 - #47 a
INFO  23:51:39,059 - #32 )
INFO  23:51:39,060 - #27 ;
INFO  23:51:39,060 - #5 print
INFO  23:51:39,060 - #31 (
INFO  23:51:39,060 - #47 niz
INFO  23:51:39,060 - #32 )
INFO  23:51:39,061 - #27 ;
INFO  23:51:39,061 - #36 }
INFO  23:51:39,061 - #36 }
INFO  23:51:39,064 - ================= PARSIRANO STABLO =================
INFO  23:51:39,074 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  Declarations(
    NoDeclarations(
    ) [NoDeclarations]
    ConstantDeclaration(
      ConDecl(
        Type(
         int
        ) [Type]
        ConstDef(
         a
          NumConst(
           10
          ) [NumConst]
        ) [ConstDef]
        NoConstantDeclaration(
        ) [NoConstantDeclaration]
      ) [ConDecl]
    ) [ConstantDeclaration]
  ) [Declarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      ListOfVarDecl(
        NoVarDeclarations(
        ) [NoVarDeclarations]
        VarDeclaration(
          Type(
           int
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             niz
              Brackets(
              ) [Brackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [ListOfVarDecl]
      Statements(
        Statements(
          Statements(
            NoStatements(
            ) [NoStatements]
            PrintExpr(
              PositiveStartExpr(
                SingleTerm(
                  NumberConst(
                   13
                  ) [NumberConst]
                ) [SingleTerm]
              ) [PositiveStartExpr]
              NoNumConstOpt(
              ) [NoNumConstOpt]
            ) [PrintExpr]
          ) [Statements]
          DesignatorStat(
            DesignatorExpr(
              Designator(
                WithoutNamespace(
                 niz
                ) [WithoutNamespace]
                NoArrayExpression(
                ) [NoArrayExpression]
              ) [Designator]
              AssignOperation(
              ) [AssignOperation]
              PositiveStartExpr(
                SingleTerm(
                  RangeExpression(
                    PositiveStartExpr(
                      SingleTerm(
                        DesignatorFact(
                          Designator(
                            WithoutNamespace(
                             a
                            ) [WithoutNamespace]
                            NoArrayExpression(
                            ) [NoArrayExpression]
                          ) [Designator]
                        ) [DesignatorFact]
                      ) [SingleTerm]
                    ) [PositiveStartExpr]
                  ) [RangeExpression]
                ) [SingleTerm]
              ) [PositiveStartExpr]
            ) [DesignatorExpr]
          ) [DesignatorStat]
        ) [Statements]
        PrintExpr(
          PositiveStartExpr(
            SingleTerm(
              DesignatorFact(
                Designator(
                  WithoutNamespace(
                   niz
                  ) [WithoutNamespace]
                  NoArrayExpression(
                  ) [NoArrayExpression]
                ) [Designator]
              ) [DesignatorFact]
            ) [SingleTerm]
          ) [PositiveStartExpr]
          NoNumConstOpt(
          ) [NoNumConstOpt]
        ) [PrintExpr]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  23:51:39,074 - ================ Semanticka obrada ===================
INFO  23:51:39,101 - Const a defined on line 2
INFO  23:51:39,101 - Symbol niz found on line 8
INFO  23:51:39,101 - Symbol a found on line 8
INFO  23:51:39,101 - Symbol niz found on line 9
INFO  23:51:39,101 - main() method found on line 1
INFO  23:52:02,378 - Compiling source file: C:\Users\elena\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  23:52:02,379 - ================= LEKSICKA ANALIZA =================
INFO  23:52:02,442 - #2 program
INFO  23:52:02,442 - #47 test301
INFO  23:52:02,442 - #3 const
INFO  23:52:02,444 - #47 int
INFO  23:52:02,444 - #47 a
INFO  23:52:02,445 - #24 =
INFO  23:52:02,445 - #46 10
INFO  23:52:02,445 - #27 ;
INFO  23:52:02,447 - #35 {
INFO  23:52:02,447 - #8 void
INFO  23:52:02,449 - #47 main
INFO  23:52:02,451 - #31 (
INFO  23:52:02,452 - #32 )
INFO  23:52:02,452 - #47 int
INFO  23:52:02,453 - #47 niz
INFO  23:52:02,454 - #33 [
INFO  23:52:02,454 - #34 ]
INFO  23:52:02,454 - #27 ;
INFO  23:52:02,457 - #35 {
INFO  23:52:02,457 - #5 print
INFO  23:52:02,458 - #31 (
INFO  23:52:02,458 - #46 13
INFO  23:52:02,458 - #32 )
INFO  23:52:02,459 - #27 ;
INFO  23:52:02,459 - #47 niz
INFO  23:52:02,461 - #24 =
INFO  23:52:02,463 - #45 range
INFO  23:52:02,465 - #31 (
INFO  23:52:02,465 - #47 a
INFO  23:52:02,465 - #32 )
INFO  23:52:02,465 - #27 ;
INFO  23:52:02,466 - #5 print
INFO  23:52:02,466 - #31 (
INFO  23:52:02,466 - #47 niz
INFO  23:52:02,466 - #32 )
INFO  23:52:02,468 - #27 ;
INFO  23:52:02,468 - #36 }
INFO  23:52:02,468 - #36 }
INFO  23:52:02,470 - ================= PARSIRANO STABLO =================
INFO  23:52:02,478 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  Declarations(
    NoDeclarations(
    ) [NoDeclarations]
    ConstantDeclaration(
      ConDecl(
        Type(
         int
        ) [Type]
        ConstDef(
         a
          NumConst(
           10
          ) [NumConst]
        ) [ConstDef]
        NoConstantDeclaration(
        ) [NoConstantDeclaration]
      ) [ConDecl]
    ) [ConstantDeclaration]
  ) [Declarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      ListOfVarDecl(
        NoVarDeclarations(
        ) [NoVarDeclarations]
        VarDeclaration(
          Type(
           int
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             niz
              Brackets(
              ) [Brackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [ListOfVarDecl]
      Statements(
        Statements(
          Statements(
            NoStatements(
            ) [NoStatements]
            PrintExpr(
              PositiveStartExpr(
                SingleTerm(
                  NumberConst(
                   13
                  ) [NumberConst]
                ) [SingleTerm]
              ) [PositiveStartExpr]
              NoNumConstOpt(
              ) [NoNumConstOpt]
            ) [PrintExpr]
          ) [Statements]
          DesignatorStat(
            DesignatorExpr(
              Designator(
                WithoutNamespace(
                 niz
                ) [WithoutNamespace]
                NoArrayExpression(
                ) [NoArrayExpression]
              ) [Designator]
              AssignOperation(
              ) [AssignOperation]
              PositiveStartExpr(
                SingleTerm(
                  RangeExpression(
                    PositiveStartExpr(
                      SingleTerm(
                        DesignatorFact(
                          Designator(
                            WithoutNamespace(
                             a
                            ) [WithoutNamespace]
                            NoArrayExpression(
                            ) [NoArrayExpression]
                          ) [Designator]
                        ) [DesignatorFact]
                      ) [SingleTerm]
                    ) [PositiveStartExpr]
                  ) [RangeExpression]
                ) [SingleTerm]
              ) [PositiveStartExpr]
            ) [DesignatorExpr]
          ) [DesignatorStat]
        ) [Statements]
        PrintExpr(
          PositiveStartExpr(
            SingleTerm(
              DesignatorFact(
                Designator(
                  WithoutNamespace(
                   niz
                  ) [WithoutNamespace]
                  NoArrayExpression(
                  ) [NoArrayExpression]
                ) [Designator]
              ) [DesignatorFact]
            ) [SingleTerm]
          ) [PositiveStartExpr]
          NoNumConstOpt(
          ) [NoNumConstOpt]
        ) [PrintExpr]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  23:52:02,478 - ================ Semanticka obrada ===================
INFO  23:52:02,484 - Const a defined on line 2
INFO  23:52:02,484 - Symbol niz found on line 8
INFO  23:52:02,484 - Symbol a found on line 8
INFO  23:52:02,485 - Symbol niz found on line 9
INFO  23:52:02,485 - main() method found on line 1
INFO  23:52:02,489 - Parser SUCCESS!
INFO  23:52:04,565 - Compiling source file: C:\Users\elena\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  23:52:04,566 - ================= LEKSICKA ANALIZA =================
INFO  23:52:04,613 - #2 program
INFO  23:52:04,613 - #47 test301
INFO  23:52:04,613 - #3 const
INFO  23:52:04,615 - #47 int
INFO  23:52:04,616 - #47 a
INFO  23:52:04,616 - #24 =
INFO  23:52:04,616 - #46 10
INFO  23:52:04,616 - #27 ;
INFO  23:52:04,619 - #35 {
INFO  23:52:04,620 - #8 void
INFO  23:52:04,620 - #47 main
INFO  23:52:04,621 - #31 (
INFO  23:52:04,621 - #32 )
INFO  23:52:04,622 - #47 int
INFO  23:52:04,623 - #47 niz
INFO  23:52:04,623 - #33 [
INFO  23:52:04,623 - #34 ]
INFO  23:52:04,623 - #27 ;
INFO  23:52:04,625 - #35 {
INFO  23:52:04,625 - #5 print
INFO  23:52:04,626 - #31 (
INFO  23:52:04,626 - #46 13
INFO  23:52:04,626 - #32 )
INFO  23:52:04,627 - #27 ;
INFO  23:52:04,627 - #47 niz
INFO  23:52:04,628 - #24 =
INFO  23:52:04,631 - #45 range
INFO  23:52:04,632 - #31 (
INFO  23:52:04,632 - #47 a
INFO  23:52:04,633 - #32 )
INFO  23:52:04,633 - #27 ;
INFO  23:52:04,633 - #5 print
INFO  23:52:04,633 - #31 (
INFO  23:52:04,634 - #47 niz
INFO  23:52:04,634 - #32 )
INFO  23:52:04,634 - #27 ;
INFO  23:52:04,634 - #36 }
INFO  23:52:04,634 - #36 }
INFO  23:52:04,636 - ================= PARSIRANO STABLO =================
INFO  23:52:04,640 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  Declarations(
    NoDeclarations(
    ) [NoDeclarations]
    ConstantDeclaration(
      ConDecl(
        Type(
         int
        ) [Type]
        ConstDef(
         a
          NumConst(
           10
          ) [NumConst]
        ) [ConstDef]
        NoConstantDeclaration(
        ) [NoConstantDeclaration]
      ) [ConDecl]
    ) [ConstantDeclaration]
  ) [Declarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      ListOfVarDecl(
        NoVarDeclarations(
        ) [NoVarDeclarations]
        VarDeclaration(
          Type(
           int
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             niz
              Brackets(
              ) [Brackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [ListOfVarDecl]
      Statements(
        Statements(
          Statements(
            NoStatements(
            ) [NoStatements]
            PrintExpr(
              PositiveStartExpr(
                SingleTerm(
                  NumberConst(
                   13
                  ) [NumberConst]
                ) [SingleTerm]
              ) [PositiveStartExpr]
              NoNumConstOpt(
              ) [NoNumConstOpt]
            ) [PrintExpr]
          ) [Statements]
          DesignatorStat(
            DesignatorExpr(
              Designator(
                WithoutNamespace(
                 niz
                ) [WithoutNamespace]
                NoArrayExpression(
                ) [NoArrayExpression]
              ) [Designator]
              AssignOperation(
              ) [AssignOperation]
              PositiveStartExpr(
                SingleTerm(
                  RangeExpression(
                    PositiveStartExpr(
                      SingleTerm(
                        DesignatorFact(
                          Designator(
                            WithoutNamespace(
                             a
                            ) [WithoutNamespace]
                            NoArrayExpression(
                            ) [NoArrayExpression]
                          ) [Designator]
                        ) [DesignatorFact]
                      ) [SingleTerm]
                    ) [PositiveStartExpr]
                  ) [RangeExpression]
                ) [SingleTerm]
              ) [PositiveStartExpr]
            ) [DesignatorExpr]
          ) [DesignatorStat]
        ) [Statements]
        PrintExpr(
          PositiveStartExpr(
            SingleTerm(
              DesignatorFact(
                Designator(
                  WithoutNamespace(
                   niz
                  ) [WithoutNamespace]
                  NoArrayExpression(
                  ) [NoArrayExpression]
                ) [Designator]
              ) [DesignatorFact]
            ) [SingleTerm]
          ) [PositiveStartExpr]
          NoNumConstOpt(
          ) [NoNumConstOpt]
        ) [PrintExpr]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  23:52:04,641 - ================ Semanticka obrada ===================
INFO  23:52:04,644 - Const a defined on line 2
INFO  23:52:04,644 - Symbol niz found on line 8
INFO  23:52:04,645 - Symbol a found on line 8
INFO  23:52:04,645 - Symbol niz found on line 9
INFO  23:52:04,645 - main() method found on line 1
INFO  23:52:04,649 - Parser SUCCESS!
INFO  23:52:04,824 - Compiling source file: C:\Users\elena\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  23:52:04,824 - ================= LEKSICKA ANALIZA =================
INFO  23:52:04,861 - #2 program
INFO  23:52:04,861 - #47 test301
INFO  23:52:04,861 - #3 const
INFO  23:52:04,862 - #47 int
INFO  23:52:04,862 - #47 a
INFO  23:52:04,863 - #24 =
INFO  23:52:04,863 - #46 10
INFO  23:52:04,863 - #27 ;
INFO  23:52:04,864 - #35 {
INFO  23:52:04,864 - #8 void
INFO  23:52:04,865 - #47 main
INFO  23:52:04,865 - #31 (
INFO  23:52:04,866 - #32 )
INFO  23:52:04,866 - #47 int
INFO  23:52:04,867 - #47 niz
INFO  23:52:04,867 - #33 [
INFO  23:52:04,867 - #34 ]
INFO  23:52:04,867 - #27 ;
INFO  23:52:04,869 - #35 {
INFO  23:52:04,869 - #5 print
INFO  23:52:04,870 - #31 (
INFO  23:52:04,870 - #46 13
INFO  23:52:04,870 - #32 )
INFO  23:52:04,871 - #27 ;
INFO  23:52:04,871 - #47 niz
INFO  23:52:04,872 - #24 =
INFO  23:52:04,873 - #45 range
INFO  23:52:04,874 - #31 (
INFO  23:52:04,874 - #47 a
INFO  23:52:04,874 - #32 )
INFO  23:52:04,875 - #27 ;
INFO  23:52:04,875 - #5 print
INFO  23:52:04,875 - #31 (
INFO  23:52:04,875 - #47 niz
INFO  23:52:04,875 - #32 )
INFO  23:52:04,875 - #27 ;
INFO  23:52:04,876 - #36 }
INFO  23:52:04,876 - #36 }
INFO  23:52:04,878 - ================= PARSIRANO STABLO =================
INFO  23:52:04,884 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  Declarations(
    NoDeclarations(
    ) [NoDeclarations]
    ConstantDeclaration(
      ConDecl(
        Type(
         int
        ) [Type]
        ConstDef(
         a
          NumConst(
           10
          ) [NumConst]
        ) [ConstDef]
        NoConstantDeclaration(
        ) [NoConstantDeclaration]
      ) [ConDecl]
    ) [ConstantDeclaration]
  ) [Declarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      ListOfVarDecl(
        NoVarDeclarations(
        ) [NoVarDeclarations]
        VarDeclaration(
          Type(
           int
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             niz
              Brackets(
              ) [Brackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [ListOfVarDecl]
      Statements(
        Statements(
          Statements(
            NoStatements(
            ) [NoStatements]
            PrintExpr(
              PositiveStartExpr(
                SingleTerm(
                  NumberConst(
                   13
                  ) [NumberConst]
                ) [SingleTerm]
              ) [PositiveStartExpr]
              NoNumConstOpt(
              ) [NoNumConstOpt]
            ) [PrintExpr]
          ) [Statements]
          DesignatorStat(
            DesignatorExpr(
              Designator(
                WithoutNamespace(
                 niz
                ) [WithoutNamespace]
                NoArrayExpression(
                ) [NoArrayExpression]
              ) [Designator]
              AssignOperation(
              ) [AssignOperation]
              PositiveStartExpr(
                SingleTerm(
                  RangeExpression(
                    PositiveStartExpr(
                      SingleTerm(
                        DesignatorFact(
                          Designator(
                            WithoutNamespace(
                             a
                            ) [WithoutNamespace]
                            NoArrayExpression(
                            ) [NoArrayExpression]
                          ) [Designator]
                        ) [DesignatorFact]
                      ) [SingleTerm]
                    ) [PositiveStartExpr]
                  ) [RangeExpression]
                ) [SingleTerm]
              ) [PositiveStartExpr]
            ) [DesignatorExpr]
          ) [DesignatorStat]
        ) [Statements]
        PrintExpr(
          PositiveStartExpr(
            SingleTerm(
              DesignatorFact(
                Designator(
                  WithoutNamespace(
                   niz
                  ) [WithoutNamespace]
                  NoArrayExpression(
                  ) [NoArrayExpression]
                ) [Designator]
              ) [DesignatorFact]
            ) [SingleTerm]
          ) [PositiveStartExpr]
          NoNumConstOpt(
          ) [NoNumConstOpt]
        ) [PrintExpr]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  23:52:04,884 - ================ Semanticka obrada ===================
INFO  23:52:04,888 - Const a defined on line 2
INFO  23:52:04,889 - Symbol niz found on line 8
INFO  23:52:04,889 - Symbol a found on line 8
INFO  23:52:04,889 - Symbol niz found on line 9
INFO  23:52:04,889 - main() method found on line 1
INFO  23:52:04,893 - Parser SUCCESS!
INFO  23:52:07,022 - Compiling source file: C:\Users\elena\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  23:52:07,023 - ================= LEKSICKA ANALIZA =================
INFO  23:52:07,085 - #2 program
INFO  23:52:07,085 - #47 test301
INFO  23:52:07,085 - #3 const
INFO  23:52:07,088 - #47 int
INFO  23:52:07,088 - #47 a
INFO  23:52:07,089 - #24 =
INFO  23:52:07,089 - #46 10
INFO  23:52:07,089 - #27 ;
INFO  23:52:07,091 - #35 {
INFO  23:52:07,091 - #8 void
INFO  23:52:07,092 - #47 main
INFO  23:52:07,093 - #31 (
INFO  23:52:07,094 - #32 )
INFO  23:52:07,095 - #47 int
INFO  23:52:07,096 - #47 niz
INFO  23:52:07,096 - #33 [
INFO  23:52:07,096 - #34 ]
INFO  23:52:07,096 - #27 ;
INFO  23:52:07,098 - #35 {
INFO  23:52:07,098 - #5 print
INFO  23:52:07,099 - #31 (
INFO  23:52:07,099 - #46 13
INFO  23:52:07,099 - #32 )
INFO  23:52:07,101 - #27 ;
INFO  23:52:07,101 - #47 niz
INFO  23:52:07,101 - #24 =
INFO  23:52:07,105 - #45 range
INFO  23:52:07,107 - #31 (
INFO  23:52:07,107 - #47 a
INFO  23:52:07,107 - #32 )
INFO  23:52:07,107 - #27 ;
INFO  23:52:07,108 - #5 print
INFO  23:52:07,108 - #31 (
INFO  23:52:07,108 - #47 niz
INFO  23:52:07,108 - #32 )
INFO  23:52:07,108 - #27 ;
INFO  23:52:07,109 - #36 }
INFO  23:52:07,109 - #36 }
INFO  23:52:07,112 - ================= PARSIRANO STABLO =================
INFO  23:52:07,119 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  Declarations(
    NoDeclarations(
    ) [NoDeclarations]
    ConstantDeclaration(
      ConDecl(
        Type(
         int
        ) [Type]
        ConstDef(
         a
          NumConst(
           10
          ) [NumConst]
        ) [ConstDef]
        NoConstantDeclaration(
        ) [NoConstantDeclaration]
      ) [ConDecl]
    ) [ConstantDeclaration]
  ) [Declarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      ListOfVarDecl(
        NoVarDeclarations(
        ) [NoVarDeclarations]
        VarDeclaration(
          Type(
           int
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             niz
              Brackets(
              ) [Brackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [ListOfVarDecl]
      Statements(
        Statements(
          Statements(
            NoStatements(
            ) [NoStatements]
            PrintExpr(
              PositiveStartExpr(
                SingleTerm(
                  NumberConst(
                   13
                  ) [NumberConst]
                ) [SingleTerm]
              ) [PositiveStartExpr]
              NoNumConstOpt(
              ) [NoNumConstOpt]
            ) [PrintExpr]
          ) [Statements]
          DesignatorStat(
            DesignatorExpr(
              Designator(
                WithoutNamespace(
                 niz
                ) [WithoutNamespace]
                NoArrayExpression(
                ) [NoArrayExpression]
              ) [Designator]
              AssignOperation(
              ) [AssignOperation]
              PositiveStartExpr(
                SingleTerm(
                  RangeExpression(
                    PositiveStartExpr(
                      SingleTerm(
                        DesignatorFact(
                          Designator(
                            WithoutNamespace(
                             a
                            ) [WithoutNamespace]
                            NoArrayExpression(
                            ) [NoArrayExpression]
                          ) [Designator]
                        ) [DesignatorFact]
                      ) [SingleTerm]
                    ) [PositiveStartExpr]
                  ) [RangeExpression]
                ) [SingleTerm]
              ) [PositiveStartExpr]
            ) [DesignatorExpr]
          ) [DesignatorStat]
        ) [Statements]
        PrintExpr(
          PositiveStartExpr(
            SingleTerm(
              DesignatorFact(
                Designator(
                  WithoutNamespace(
                   niz
                  ) [WithoutNamespace]
                  NoArrayExpression(
                  ) [NoArrayExpression]
                ) [Designator]
              ) [DesignatorFact]
            ) [SingleTerm]
          ) [PositiveStartExpr]
          NoNumConstOpt(
          ) [NoNumConstOpt]
        ) [PrintExpr]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  23:52:07,119 - ================ Semanticka obrada ===================
INFO  23:52:07,127 - Const a defined on line 2
INFO  23:52:07,127 - Symbol niz found on line 8
INFO  23:52:07,127 - Symbol a found on line 8
INFO  23:52:07,127 - Symbol niz found on line 9
INFO  23:52:07,127 - main() method found on line 1
INFO  23:52:07,133 - Parser SUCCESS!
INFO  23:54:33,535 - Compiling source file: C:\Users\elena\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  23:54:33,536 - ================= LEKSICKA ANALIZA =================
INFO  23:54:33,581 - #2 program
INFO  23:54:33,581 - #47 test301
INFO  23:54:33,583 - #3 const
INFO  23:54:33,584 - #47 int
INFO  23:54:33,584 - #47 a
INFO  23:54:33,585 - #24 =
INFO  23:54:33,585 - #46 10
INFO  23:54:33,585 - #27 ;
INFO  23:54:33,586 - #35 {
INFO  23:54:33,587 - #8 void
INFO  23:54:33,587 - #47 main
INFO  23:54:33,588 - #31 (
INFO  23:54:33,589 - #32 )
INFO  23:54:33,589 - #47 int
INFO  23:54:33,590 - #47 niz
INFO  23:54:33,590 - #33 [
INFO  23:54:33,590 - #34 ]
INFO  23:54:33,590 - #27 ;
INFO  23:54:33,592 - #35 {
INFO  23:54:33,592 - #5 print
INFO  23:54:33,593 - #31 (
INFO  23:54:33,594 - #46 13
INFO  23:54:33,594 - #32 )
INFO  23:54:33,595 - #27 ;
INFO  23:54:33,595 - #47 niz
INFO  23:54:33,595 - #24 =
INFO  23:54:33,597 - #45 range
INFO  23:54:33,598 - #31 (
INFO  23:54:33,598 - #47 a
INFO  23:54:33,598 - #32 )
INFO  23:54:33,599 - #27 ;
INFO  23:54:33,599 - #5 print
INFO  23:54:33,599 - #31 (
INFO  23:54:33,599 - #47 niz
INFO  23:54:33,599 - #32 )
INFO  23:54:33,600 - #27 ;
INFO  23:54:33,600 - #36 }
INFO  23:54:33,600 - #36 }
INFO  23:54:33,603 - ================= PARSIRANO STABLO =================
INFO  23:54:33,609 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  Declarations(
    NoDeclarations(
    ) [NoDeclarations]
    ConstantDeclaration(
      ConDecl(
        Type(
         int
        ) [Type]
        ConstDef(
         a
          NumConst(
           10
          ) [NumConst]
        ) [ConstDef]
        NoConstantDeclaration(
        ) [NoConstantDeclaration]
      ) [ConDecl]
    ) [ConstantDeclaration]
  ) [Declarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      ListOfVarDecl(
        NoVarDeclarations(
        ) [NoVarDeclarations]
        VarDeclaration(
          Type(
           int
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             niz
              Brackets(
              ) [Brackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [ListOfVarDecl]
      Statements(
        Statements(
          Statements(
            NoStatements(
            ) [NoStatements]
            PrintExpr(
              PositiveStartExpr(
                SingleTerm(
                  NumberConst(
                   13
                  ) [NumberConst]
                ) [SingleTerm]
              ) [PositiveStartExpr]
              NoNumConstOpt(
              ) [NoNumConstOpt]
            ) [PrintExpr]
          ) [Statements]
          DesignatorStat(
            DesignatorExpr(
              Designator(
                WithoutNamespace(
                 niz
                ) [WithoutNamespace]
                NoArrayExpression(
                ) [NoArrayExpression]
              ) [Designator]
              AssignOperation(
              ) [AssignOperation]
              PositiveStartExpr(
                SingleTerm(
                  RangeExpression(
                    PositiveStartExpr(
                      SingleTerm(
                        DesignatorFact(
                          Designator(
                            WithoutNamespace(
                             a
                            ) [WithoutNamespace]
                            NoArrayExpression(
                            ) [NoArrayExpression]
                          ) [Designator]
                        ) [DesignatorFact]
                      ) [SingleTerm]
                    ) [PositiveStartExpr]
                  ) [RangeExpression]
                ) [SingleTerm]
              ) [PositiveStartExpr]
            ) [DesignatorExpr]
          ) [DesignatorStat]
        ) [Statements]
        PrintExpr(
          PositiveStartExpr(
            SingleTerm(
              DesignatorFact(
                Designator(
                  WithoutNamespace(
                   niz
                  ) [WithoutNamespace]
                  NoArrayExpression(
                  ) [NoArrayExpression]
                ) [Designator]
              ) [DesignatorFact]
            ) [SingleTerm]
          ) [PositiveStartExpr]
          NoNumConstOpt(
          ) [NoNumConstOpt]
        ) [PrintExpr]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  23:54:33,610 - ================ Semanticka obrada ===================
INFO  23:54:33,615 - Const a defined on line 2
INFO  23:54:33,615 - Symbol niz found on line 8
INFO  23:54:33,615 - Symbol a found on line 8
INFO  23:54:33,615 - Symbol niz found on line 9
INFO  23:54:33,615 - main() method found on line 1
INFO  23:54:33,620 - Parser SUCCESS!
INFO  00:03:08,962 - Compiling source file: C:\Users\elena\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  00:03:08,964 - ================= LEKSICKA ANALIZA =================
INFO  00:03:09,025 - #2 program
INFO  00:03:09,025 - #47 test301
INFO  00:03:09,025 - #3 const
INFO  00:03:09,027 - #47 int
INFO  00:03:09,027 - #47 a
INFO  00:03:09,028 - #24 =
INFO  00:03:09,028 - #46 10
INFO  00:03:09,028 - #27 ;
INFO  00:03:09,030 - #35 {
INFO  00:03:09,030 - #8 void
INFO  00:03:09,031 - #47 main
INFO  00:03:09,031 - #31 (
INFO  00:03:09,033 - #32 )
INFO  00:03:09,034 - #47 int
INFO  00:03:09,034 - #47 niz
INFO  00:03:09,035 - #33 [
INFO  00:03:09,035 - #34 ]
INFO  00:03:09,035 - #27 ;
INFO  00:03:09,037 - #35 {
INFO  00:03:09,037 - #5 print
INFO  00:03:09,038 - #31 (
INFO  00:03:09,038 - #46 13
INFO  00:03:09,038 - #32 )
INFO  00:03:09,040 - #27 ;
INFO  00:03:09,041 - #47 niz
INFO  00:03:09,041 - #24 =
INFO  00:03:09,043 - #45 range
INFO  00:03:09,044 - #31 (
INFO  00:03:09,044 - #47 a
INFO  00:03:09,044 - #32 )
INFO  00:03:09,045 - #27 ;
INFO  00:03:09,045 - #5 print
INFO  00:03:09,045 - #31 (
INFO  00:03:09,045 - #47 niz
INFO  00:03:09,045 - #32 )
INFO  00:03:09,046 - #27 ;
INFO  00:03:09,046 - #36 }
INFO  00:03:09,046 - #36 }
INFO  00:03:09,048 - ================= PARSIRANO STABLO =================
INFO  00:03:09,057 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  Declarations(
    NoDeclarations(
    ) [NoDeclarations]
    ConstantDeclaration(
      ConDecl(
        Type(
         int
        ) [Type]
        ConstDef(
         a
          NumConst(
           10
          ) [NumConst]
        ) [ConstDef]
        NoConstantDeclaration(
        ) [NoConstantDeclaration]
      ) [ConDecl]
    ) [ConstantDeclaration]
  ) [Declarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      ListOfVarDecl(
        NoVarDeclarations(
        ) [NoVarDeclarations]
        VarDeclaration(
          Type(
           int
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             niz
              Brackets(
              ) [Brackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [ListOfVarDecl]
      Statements(
        Statements(
          Statements(
            NoStatements(
            ) [NoStatements]
            PrintExpr(
              PositiveStartExpr(
                SingleTerm(
                  NumberConst(
                   13
                  ) [NumberConst]
                ) [SingleTerm]
              ) [PositiveStartExpr]
              NoNumConstOpt(
              ) [NoNumConstOpt]
            ) [PrintExpr]
          ) [Statements]
          DesignatorStat(
            DesignatorExpr(
              Designator(
                WithoutNamespace(
                 niz
                ) [WithoutNamespace]
                NoArrayExpression(
                ) [NoArrayExpression]
              ) [Designator]
              AssignOperation(
              ) [AssignOperation]
              PositiveStartExpr(
                SingleTerm(
                  RangeExpression(
                    PositiveStartExpr(
                      SingleTerm(
                        DesignatorFact(
                          Designator(
                            WithoutNamespace(
                             a
                            ) [WithoutNamespace]
                            NoArrayExpression(
                            ) [NoArrayExpression]
                          ) [Designator]
                        ) [DesignatorFact]
                      ) [SingleTerm]
                    ) [PositiveStartExpr]
                  ) [RangeExpression]
                ) [SingleTerm]
              ) [PositiveStartExpr]
            ) [DesignatorExpr]
          ) [DesignatorStat]
        ) [Statements]
        PrintExpr(
          PositiveStartExpr(
            SingleTerm(
              DesignatorFact(
                Designator(
                  WithoutNamespace(
                   niz
                  ) [WithoutNamespace]
                  NoArrayExpression(
                  ) [NoArrayExpression]
                ) [Designator]
              ) [DesignatorFact]
            ) [SingleTerm]
          ) [PositiveStartExpr]
          NoNumConstOpt(
          ) [NoNumConstOpt]
        ) [PrintExpr]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  00:03:09,058 - ================ Semanticka obrada ===================
INFO  00:03:09,062 - Const a defined on line 2
INFO  00:03:09,063 - Symbol niz found on line 8
INFO  00:03:09,063 - Symbol a found on line 8
INFO  00:03:09,063 - Symbol niz found on line 9
INFO  00:03:09,063 - main() method found on line 1
INFO  00:03:09,067 - Parser SUCCESS!
INFO  00:03:14,294 - Compiling source file: C:\Users\elena\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  00:03:14,295 - ================= LEKSICKA ANALIZA =================
INFO  00:03:14,363 - #2 program
INFO  00:03:14,363 - #47 test301
INFO  00:03:14,363 - #3 const
INFO  00:03:14,365 - #47 int
INFO  00:03:14,365 - #47 a
INFO  00:03:14,365 - #24 =
INFO  00:03:14,365 - #46 10
INFO  00:03:14,367 - #27 ;
INFO  00:03:14,367 - #35 {
INFO  00:03:14,368 - #8 void
INFO  00:03:14,369 - #47 main
INFO  00:03:14,369 - #31 (
INFO  00:03:14,370 - #32 )
INFO  00:03:14,371 - #47 int
INFO  00:03:14,372 - #47 niz
INFO  00:03:14,372 - #33 [
INFO  00:03:14,372 - #34 ]
INFO  00:03:14,372 - #27 ;
INFO  00:03:14,375 - #35 {
INFO  00:03:14,376 - #5 print
INFO  00:03:14,376 - #31 (
INFO  00:03:14,376 - #46 13
INFO  00:03:14,376 - #32 )
INFO  00:03:14,377 - #27 ;
INFO  00:03:14,377 - #47 niz
INFO  00:03:14,378 - #24 =
INFO  00:03:14,379 - #45 range
INFO  00:03:14,380 - #31 (
INFO  00:03:14,380 - #47 a
INFO  00:03:14,380 - #32 )
INFO  00:03:14,380 - #27 ;
INFO  00:03:14,381 - #5 print
INFO  00:03:14,381 - #31 (
INFO  00:03:14,381 - #47 niz
INFO  00:03:14,381 - #32 )
INFO  00:03:14,381 - #27 ;
INFO  00:03:14,381 - #36 }
INFO  00:03:14,381 - #36 }
INFO  00:03:14,384 - ================= PARSIRANO STABLO =================
INFO  00:03:14,392 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  Declarations(
    NoDeclarations(
    ) [NoDeclarations]
    ConstantDeclaration(
      ConDecl(
        Type(
         int
        ) [Type]
        ConstDef(
         a
          NumConst(
           10
          ) [NumConst]
        ) [ConstDef]
        NoConstantDeclaration(
        ) [NoConstantDeclaration]
      ) [ConDecl]
    ) [ConstantDeclaration]
  ) [Declarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      ListOfVarDecl(
        NoVarDeclarations(
        ) [NoVarDeclarations]
        VarDeclaration(
          Type(
           int
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             niz
              Brackets(
              ) [Brackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [ListOfVarDecl]
      Statements(
        Statements(
          Statements(
            NoStatements(
            ) [NoStatements]
            PrintExpr(
              PositiveStartExpr(
                SingleTerm(
                  NumberConst(
                   13
                  ) [NumberConst]
                ) [SingleTerm]
              ) [PositiveStartExpr]
              NoNumConstOpt(
              ) [NoNumConstOpt]
            ) [PrintExpr]
          ) [Statements]
          DesignatorStat(
            DesignatorExpr(
              Designator(
                WithoutNamespace(
                 niz
                ) [WithoutNamespace]
                NoArrayExpression(
                ) [NoArrayExpression]
              ) [Designator]
              AssignOperation(
              ) [AssignOperation]
              PositiveStartExpr(
                SingleTerm(
                  RangeExpression(
                    PositiveStartExpr(
                      SingleTerm(
                        DesignatorFact(
                          Designator(
                            WithoutNamespace(
                             a
                            ) [WithoutNamespace]
                            NoArrayExpression(
                            ) [NoArrayExpression]
                          ) [Designator]
                        ) [DesignatorFact]
                      ) [SingleTerm]
                    ) [PositiveStartExpr]
                  ) [RangeExpression]
                ) [SingleTerm]
              ) [PositiveStartExpr]
            ) [DesignatorExpr]
          ) [DesignatorStat]
        ) [Statements]
        PrintExpr(
          PositiveStartExpr(
            SingleTerm(
              DesignatorFact(
                Designator(
                  WithoutNamespace(
                   niz
                  ) [WithoutNamespace]
                  NoArrayExpression(
                  ) [NoArrayExpression]
                ) [Designator]
              ) [DesignatorFact]
            ) [SingleTerm]
          ) [PositiveStartExpr]
          NoNumConstOpt(
          ) [NoNumConstOpt]
        ) [PrintExpr]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  00:03:14,392 - ================ Semanticka obrada ===================
INFO  00:03:14,414 - Const a defined on line 2
INFO  00:03:14,414 - Symbol niz found on line 8
INFO  00:03:14,414 - Symbol a found on line 8
INFO  00:03:14,414 - Symbol niz found on line 9
INFO  00:03:14,415 - main() method found on line 1
INFO  00:04:13,212 - Compiling source file: C:\Users\elena\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  00:04:13,214 - ================= LEKSICKA ANALIZA =================
INFO  00:04:13,362 - #2 program
INFO  00:04:13,362 - #47 test301
INFO  00:04:13,362 - #3 const
INFO  00:04:13,366 - #47 int
INFO  00:04:13,366 - #47 a
INFO  00:04:13,369 - #24 =
INFO  00:04:13,369 - #46 10
INFO  00:04:13,369 - #27 ;
INFO  00:04:13,373 - #35 {
INFO  00:04:13,375 - #8 void
INFO  00:04:13,377 - #47 main
INFO  00:04:13,379 - #31 (
INFO  00:04:13,380 - #32 )
INFO  00:04:13,382 - #47 int
INFO  00:04:13,383 - #47 niz
INFO  00:04:13,385 - #33 [
INFO  00:04:13,385 - #34 ]
INFO  00:04:13,385 - #27 ;
INFO  00:04:13,389 - #35 {
INFO  00:04:13,390 - #5 print
INFO  00:04:13,392 - #31 (
INFO  00:04:13,392 - #46 13
INFO  00:04:13,392 - #32 )
INFO  00:04:13,394 - #27 ;
INFO  00:04:13,395 - #47 niz
INFO  00:04:13,395 - #24 =
INFO  00:04:13,399 - #45 range
INFO  00:04:13,402 - #31 (
INFO  00:04:13,402 - #47 a
INFO  00:04:13,403 - #32 )
INFO  00:04:13,403 - #27 ;
INFO  00:04:13,404 - #5 print
INFO  00:04:13,405 - #31 (
INFO  00:04:13,405 - #47 niz
INFO  00:04:13,405 - #32 )
INFO  00:04:13,405 - #27 ;
INFO  00:04:13,406 - #36 }
INFO  00:04:13,406 - #36 }
INFO  00:04:13,411 - ================= PARSIRANO STABLO =================
INFO  00:04:13,427 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  Declarations(
    NoDeclarations(
    ) [NoDeclarations]
    ConstantDeclaration(
      ConDecl(
        Type(
         int
        ) [Type]
        ConstDef(
         a
          NumConst(
           10
          ) [NumConst]
        ) [ConstDef]
        NoConstantDeclaration(
        ) [NoConstantDeclaration]
      ) [ConDecl]
    ) [ConstantDeclaration]
  ) [Declarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      ListOfVarDecl(
        NoVarDeclarations(
        ) [NoVarDeclarations]
        VarDeclaration(
          Type(
           int
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             niz
              Brackets(
              ) [Brackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [ListOfVarDecl]
      Statements(
        Statements(
          Statements(
            NoStatements(
            ) [NoStatements]
            PrintExpr(
              PositiveStartExpr(
                SingleTerm(
                  NumberConst(
                   13
                  ) [NumberConst]
                ) [SingleTerm]
              ) [PositiveStartExpr]
              NoNumConstOpt(
              ) [NoNumConstOpt]
            ) [PrintExpr]
          ) [Statements]
          DesignatorStat(
            DesignatorExpr(
              Designator(
                WithoutNamespace(
                 niz
                ) [WithoutNamespace]
                NoArrayExpression(
                ) [NoArrayExpression]
              ) [Designator]
              AssignOperation(
              ) [AssignOperation]
              PositiveStartExpr(
                SingleTerm(
                  RangeExpression(
                    PositiveStartExpr(
                      SingleTerm(
                        DesignatorFact(
                          Designator(
                            WithoutNamespace(
                             a
                            ) [WithoutNamespace]
                            NoArrayExpression(
                            ) [NoArrayExpression]
                          ) [Designator]
                        ) [DesignatorFact]
                      ) [SingleTerm]
                    ) [PositiveStartExpr]
                  ) [RangeExpression]
                ) [SingleTerm]
              ) [PositiveStartExpr]
            ) [DesignatorExpr]
          ) [DesignatorStat]
        ) [Statements]
        PrintExpr(
          PositiveStartExpr(
            SingleTerm(
              DesignatorFact(
                Designator(
                  WithoutNamespace(
                   niz
                  ) [WithoutNamespace]
                  NoArrayExpression(
                  ) [NoArrayExpression]
                ) [Designator]
              ) [DesignatorFact]
            ) [SingleTerm]
          ) [PositiveStartExpr]
          NoNumConstOpt(
          ) [NoNumConstOpt]
        ) [PrintExpr]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  00:04:13,428 - ================ Semanticka obrada ===================
INFO  00:04:13,500 - Const a defined on line 2
INFO  00:04:13,501 - Symbol niz found on line 8
INFO  00:04:13,501 - Symbol a found on line 8
INFO  00:04:13,502 - Symbol niz found on line 9
INFO  00:04:13,502 - main() method found on line 1
INFO  11:02:47,710 - Compiling source file: C:\Users\elena\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  11:02:47,724 - ================= LEKSICKA ANALIZA =================
INFO  11:02:47,937 - #2 program
INFO  11:02:47,938 - #47 test301
INFO  11:02:47,938 - #3 const
INFO  11:02:47,943 - #47 int
INFO  11:02:47,943 - #47 a
INFO  11:02:47,945 - #24 =
INFO  11:02:47,945 - #46 10
INFO  11:02:47,945 - #27 ;
INFO  11:02:47,948 - #35 {
INFO  11:02:47,950 - #8 void
INFO  11:02:47,952 - #47 main
INFO  11:02:47,953 - #31 (
INFO  11:02:47,955 - #32 )
INFO  11:02:47,956 - #47 int
INFO  11:02:47,958 - #47 niz
INFO  11:02:47,958 - #33 [
INFO  11:02:47,958 - #34 ]
INFO  11:02:47,959 - #27 ;
INFO  11:02:47,962 - #35 {
INFO  11:02:47,963 - #5 print
INFO  11:02:47,965 - #31 (
INFO  11:02:47,965 - #46 13
INFO  11:02:47,965 - #32 )
INFO  11:02:47,967 - #27 ;
INFO  11:02:47,968 - #47 niz
INFO  11:02:47,968 - #24 =
INFO  11:02:47,973 - #45 range
INFO  11:02:47,976 - #31 (
INFO  11:02:47,976 - #47 a
INFO  11:02:47,977 - #32 )
INFO  11:02:47,977 - #27 ;
INFO  11:02:47,978 - #5 print
INFO  11:02:47,979 - #31 (
INFO  11:02:47,979 - #47 niz
INFO  11:02:47,979 - #32 )
INFO  11:02:47,980 - #27 ;
INFO  11:02:47,980 - #36 }
INFO  11:02:47,980 - #36 }
INFO  11:02:47,987 - ================= PARSIRANO STABLO =================
INFO  11:02:48,001 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  Declarations(
    NoDeclarations(
    ) [NoDeclarations]
    ConstantDeclaration(
      ConDecl(
        Type(
         int
        ) [Type]
        ConstDef(
         a
          NumConst(
           10
          ) [NumConst]
        ) [ConstDef]
        NoConstantDeclaration(
        ) [NoConstantDeclaration]
      ) [ConDecl]
    ) [ConstantDeclaration]
  ) [Declarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      ListOfVarDecl(
        NoVarDeclarations(
        ) [NoVarDeclarations]
        VarDeclaration(
          Type(
           int
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             niz
              Brackets(
              ) [Brackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [ListOfVarDecl]
      Statements(
        Statements(
          Statements(
            NoStatements(
            ) [NoStatements]
            PrintExpr(
              PositiveStartExpr(
                SingleTerm(
                  NumberConst(
                   13
                  ) [NumberConst]
                ) [SingleTerm]
              ) [PositiveStartExpr]
              NoNumConstOpt(
              ) [NoNumConstOpt]
            ) [PrintExpr]
          ) [Statements]
          DesignatorStat(
            DesignatorExpr(
              Designator(
                WithoutNamespace(
                 niz
                ) [WithoutNamespace]
                NoArrayExpression(
                ) [NoArrayExpression]
              ) [Designator]
              AssignOperation(
              ) [AssignOperation]
              PositiveStartExpr(
                SingleTerm(
                  RangeExpression(
                    PositiveStartExpr(
                      SingleTerm(
                        DesignatorFact(
                          Designator(
                            WithoutNamespace(
                             a
                            ) [WithoutNamespace]
                            NoArrayExpression(
                            ) [NoArrayExpression]
                          ) [Designator]
                        ) [DesignatorFact]
                      ) [SingleTerm]
                    ) [PositiveStartExpr]
                  ) [RangeExpression]
                ) [SingleTerm]
              ) [PositiveStartExpr]
            ) [DesignatorExpr]
          ) [DesignatorStat]
        ) [Statements]
        PrintExpr(
          PositiveStartExpr(
            SingleTerm(
              DesignatorFact(
                Designator(
                  WithoutNamespace(
                   niz
                  ) [WithoutNamespace]
                  NoArrayExpression(
                  ) [NoArrayExpression]
                ) [Designator]
              ) [DesignatorFact]
            ) [SingleTerm]
          ) [PositiveStartExpr]
          NoNumConstOpt(
          ) [NoNumConstOpt]
        ) [PrintExpr]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  11:02:48,002 - ================ Semanticka obrada ===================
INFO  11:02:48,021 - Const a defined on line 2
INFO  11:02:48,022 - Symbol niz found on line 8
INFO  11:02:48,022 - Symbol a found on line 8
INFO  11:02:48,022 - Symbol niz found on line 9
ERROR 11:02:48,022 - print() argument is not valid on line 9
INFO  11:02:48,022 - main() method found on line 1
ERROR 11:02:48,023 - Parser FAIL!
INFO  11:03:12,823 - Compiling source file: C:\Users\elena\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  11:03:12,824 - ================= LEKSICKA ANALIZA =================
INFO  11:03:12,861 - #2 program
INFO  11:03:12,861 - #47 test301
INFO  11:03:12,861 - #3 const
INFO  11:03:12,862 - #47 int
INFO  11:03:12,862 - #47 a
INFO  11:03:12,862 - #24 =
INFO  11:03:12,862 - #46 10
INFO  11:03:12,862 - #27 ;
INFO  11:03:12,864 - #35 {
INFO  11:03:12,864 - #8 void
INFO  11:03:12,865 - #47 main
INFO  11:03:12,865 - #31 (
INFO  11:03:12,866 - #32 )
INFO  11:03:12,867 - #47 int
INFO  11:03:12,867 - #47 niz
INFO  11:03:12,867 - #33 [
INFO  11:03:12,868 - #34 ]
INFO  11:03:12,868 - #27 ;
INFO  11:03:12,869 - #35 {
INFO  11:03:12,870 - #5 print
INFO  11:03:12,871 - #31 (
INFO  11:03:12,871 - #46 13
INFO  11:03:12,871 - #32 )
INFO  11:03:12,872 - #27 ;
INFO  11:03:12,872 - #47 niz
INFO  11:03:12,872 - #24 =
INFO  11:03:12,873 - #45 range
INFO  11:03:12,874 - #31 (
INFO  11:03:12,874 - #47 a
INFO  11:03:12,875 - #32 )
INFO  11:03:12,875 - #27 ;
INFO  11:03:12,876 - #5 print
INFO  11:03:12,876 - #31 (
INFO  11:03:12,876 - #47 niz
INFO  11:03:12,876 - #32 )
INFO  11:03:12,876 - #27 ;
INFO  11:03:12,876 - #36 }
INFO  11:03:12,877 - #36 }
INFO  11:03:12,878 - ================= PARSIRANO STABLO =================
INFO  11:03:12,885 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  Declarations(
    NoDeclarations(
    ) [NoDeclarations]
    ConstantDeclaration(
      ConDecl(
        Type(
         int
        ) [Type]
        ConstDef(
         a
          NumConst(
           10
          ) [NumConst]
        ) [ConstDef]
        NoConstantDeclaration(
        ) [NoConstantDeclaration]
      ) [ConDecl]
    ) [ConstantDeclaration]
  ) [Declarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      ListOfVarDecl(
        NoVarDeclarations(
        ) [NoVarDeclarations]
        VarDeclaration(
          Type(
           int
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             niz
              Brackets(
              ) [Brackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [ListOfVarDecl]
      Statements(
        Statements(
          Statements(
            NoStatements(
            ) [NoStatements]
            PrintExpr(
              PositiveStartExpr(
                SingleTerm(
                  NumberConst(
                   13
                  ) [NumberConst]
                ) [SingleTerm]
              ) [PositiveStartExpr]
              NoNumConstOpt(
              ) [NoNumConstOpt]
            ) [PrintExpr]
          ) [Statements]
          DesignatorStat(
            DesignatorExpr(
              Designator(
                WithoutNamespace(
                 niz
                ) [WithoutNamespace]
                NoArrayExpression(
                ) [NoArrayExpression]
              ) [Designator]
              AssignOperation(
              ) [AssignOperation]
              PositiveStartExpr(
                SingleTerm(
                  RangeExpression(
                    PositiveStartExpr(
                      SingleTerm(
                        DesignatorFact(
                          Designator(
                            WithoutNamespace(
                             a
                            ) [WithoutNamespace]
                            NoArrayExpression(
                            ) [NoArrayExpression]
                          ) [Designator]
                        ) [DesignatorFact]
                      ) [SingleTerm]
                    ) [PositiveStartExpr]
                  ) [RangeExpression]
                ) [SingleTerm]
              ) [PositiveStartExpr]
            ) [DesignatorExpr]
          ) [DesignatorStat]
        ) [Statements]
        PrintExpr(
          PositiveStartExpr(
            SingleTerm(
              DesignatorFact(
                Designator(
                  WithoutNamespace(
                   niz
                  ) [WithoutNamespace]
                  NoArrayExpression(
                  ) [NoArrayExpression]
                ) [Designator]
              ) [DesignatorFact]
            ) [SingleTerm]
          ) [PositiveStartExpr]
          NoNumConstOpt(
          ) [NoNumConstOpt]
        ) [PrintExpr]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  11:03:12,886 - ================ Semanticka obrada ===================
INFO  11:03:12,890 - Const a defined on line 2
INFO  11:03:12,891 - Symbol niz found on line 8
INFO  11:03:12,891 - Symbol a found on line 8
INFO  11:03:12,891 - Symbol niz found on line 9
ERROR 11:03:12,891 - print() argument is not valid on line 9
INFO  11:03:12,891 - main() method found on line 1
ERROR 11:03:12,891 - Parser FAIL!
INFO  11:05:46,379 - Compiling source file: C:\Users\elena\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  11:05:46,381 - ================= LEKSICKA ANALIZA =================
INFO  11:05:46,442 - #2 program
INFO  11:05:46,442 - #47 test301
INFO  11:05:46,442 - #3 const
INFO  11:05:46,445 - #47 int
INFO  11:05:46,446 - #47 a
INFO  11:05:46,447 - #24 =
INFO  11:05:46,447 - #46 10
INFO  11:05:46,447 - #27 ;
INFO  11:05:46,449 - #35 {
INFO  11:05:46,450 - #8 void
INFO  11:05:46,451 - #47 main
INFO  11:05:46,451 - #31 (
INFO  11:05:46,452 - #32 )
INFO  11:05:46,453 - #47 int
INFO  11:05:46,454 - #47 niz
INFO  11:05:46,454 - #33 [
INFO  11:05:46,455 - #34 ]
INFO  11:05:46,455 - #27 ;
INFO  11:05:46,457 - #35 {
INFO  11:05:46,457 - #5 print
INFO  11:05:46,458 - #31 (
INFO  11:05:46,458 - #46 13
INFO  11:05:46,459 - #32 )
INFO  11:05:46,460 - #27 ;
INFO  11:05:46,460 - #47 niz
INFO  11:05:46,460 - #24 =
INFO  11:05:46,463 - #45 range
INFO  11:05:46,465 - #31 (
INFO  11:05:46,465 - #47 a
INFO  11:05:46,466 - #32 )
INFO  11:05:46,466 - #27 ;
INFO  11:05:46,466 - #5 print
INFO  11:05:46,467 - #31 (
INFO  11:05:46,467 - #47 niz
INFO  11:05:46,467 - #32 )
INFO  11:05:46,467 - #27 ;
INFO  11:05:46,467 - #36 }
INFO  11:05:46,467 - #36 }
INFO  11:05:46,470 - ================= PARSIRANO STABLO =================
INFO  11:05:46,478 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  Declarations(
    NoDeclarations(
    ) [NoDeclarations]
    ConstantDeclaration(
      ConDecl(
        Type(
         int
        ) [Type]
        ConstDef(
         a
          NumConst(
           10
          ) [NumConst]
        ) [ConstDef]
        NoConstantDeclaration(
        ) [NoConstantDeclaration]
      ) [ConDecl]
    ) [ConstantDeclaration]
  ) [Declarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      ListOfVarDecl(
        NoVarDeclarations(
        ) [NoVarDeclarations]
        VarDeclaration(
          Type(
           int
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             niz
              Brackets(
              ) [Brackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [ListOfVarDecl]
      Statements(
        Statements(
          Statements(
            NoStatements(
            ) [NoStatements]
            PrintExpr(
              PositiveStartExpr(
                SingleTerm(
                  NumberConst(
                   13
                  ) [NumberConst]
                ) [SingleTerm]
              ) [PositiveStartExpr]
              NoNumConstOpt(
              ) [NoNumConstOpt]
            ) [PrintExpr]
          ) [Statements]
          DesignatorStat(
            DesignatorExpr(
              Designator(
                WithoutNamespace(
                 niz
                ) [WithoutNamespace]
                NoArrayExpression(
                ) [NoArrayExpression]
              ) [Designator]
              AssignOperation(
              ) [AssignOperation]
              PositiveStartExpr(
                SingleTerm(
                  RangeExpression(
                    PositiveStartExpr(
                      SingleTerm(
                        DesignatorFact(
                          Designator(
                            WithoutNamespace(
                             a
                            ) [WithoutNamespace]
                            NoArrayExpression(
                            ) [NoArrayExpression]
                          ) [Designator]
                        ) [DesignatorFact]
                      ) [SingleTerm]
                    ) [PositiveStartExpr]
                  ) [RangeExpression]
                ) [SingleTerm]
              ) [PositiveStartExpr]
            ) [DesignatorExpr]
          ) [DesignatorStat]
        ) [Statements]
        PrintExpr(
          PositiveStartExpr(
            SingleTerm(
              DesignatorFact(
                Designator(
                  WithoutNamespace(
                   niz
                  ) [WithoutNamespace]
                  NoArrayExpression(
                  ) [NoArrayExpression]
                ) [Designator]
              ) [DesignatorFact]
            ) [SingleTerm]
          ) [PositiveStartExpr]
          NoNumConstOpt(
          ) [NoNumConstOpt]
        ) [PrintExpr]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  11:05:46,479 - ================ Semanticka obrada ===================
INFO  11:05:46,484 - Const a defined on line 2
INFO  11:05:46,485 - Symbol niz found on line 8
INFO  11:05:46,485 - Symbol a found on line 8
INFO  11:05:46,485 - Symbol niz found on line 9
ERROR 11:05:46,485 - print() argument is not valid on line 9
INFO  11:05:46,485 - main() method found on line 1
ERROR 11:05:46,485 - Parser FAIL!
INFO  11:06:39,031 - Compiling source file: C:\Users\elena\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  11:06:39,032 - ================= LEKSICKA ANALIZA =================
INFO  11:06:39,107 - #2 program
INFO  11:06:39,107 - #47 test301
INFO  11:06:39,108 - #3 const
INFO  11:06:39,111 - #47 int
INFO  11:06:39,111 - #47 a
INFO  11:06:39,112 - #24 =
INFO  11:06:39,112 - #46 10
INFO  11:06:39,112 - #27 ;
INFO  11:06:39,114 - #35 {
INFO  11:06:39,115 - #8 void
INFO  11:06:39,116 - #47 main
INFO  11:06:39,117 - #31 (
INFO  11:06:39,118 - #32 )
INFO  11:06:39,120 - #47 int
INFO  11:06:39,121 - #47 niz
INFO  11:06:39,122 - #33 [
INFO  11:06:39,122 - #34 ]
INFO  11:06:39,122 - #27 ;
INFO  11:06:39,125 - #35 {
INFO  11:06:39,126 - #5 print
INFO  11:06:39,128 - #31 (
INFO  11:06:39,128 - #46 13
INFO  11:06:39,128 - #32 )
INFO  11:06:39,129 - #27 ;
INFO  11:06:39,129 - #47 niz
INFO  11:06:39,130 - #24 =
INFO  11:06:39,133 - #45 range
INFO  11:06:39,135 - #31 (
INFO  11:06:39,135 - #47 a
INFO  11:06:39,136 - #32 )
INFO  11:06:39,136 - #27 ;
INFO  11:06:39,137 - #5 print
INFO  11:06:39,137 - #31 (
INFO  11:06:39,137 - #47 niz
INFO  11:06:39,138 - #32 )
INFO  11:06:39,138 - #27 ;
INFO  11:06:39,138 - #36 }
INFO  11:06:39,138 - #36 }
INFO  11:06:39,141 - ================= PARSIRANO STABLO =================
INFO  11:06:39,151 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  Declarations(
    NoDeclarations(
    ) [NoDeclarations]
    ConstantDeclaration(
      ConDecl(
        Type(
         int
        ) [Type]
        ConstDef(
         a
          NumConst(
           10
          ) [NumConst]
        ) [ConstDef]
        NoConstantDeclaration(
        ) [NoConstantDeclaration]
      ) [ConDecl]
    ) [ConstantDeclaration]
  ) [Declarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      ListOfVarDecl(
        NoVarDeclarations(
        ) [NoVarDeclarations]
        VarDeclaration(
          Type(
           int
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             niz
              Brackets(
              ) [Brackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [ListOfVarDecl]
      Statements(
        Statements(
          Statements(
            NoStatements(
            ) [NoStatements]
            PrintExpr(
              PositiveStartExpr(
                SingleTerm(
                  NumberConst(
                   13
                  ) [NumberConst]
                ) [SingleTerm]
              ) [PositiveStartExpr]
              NoNumConstOpt(
              ) [NoNumConstOpt]
            ) [PrintExpr]
          ) [Statements]
          DesignatorStat(
            DesignatorExpr(
              Designator(
                WithoutNamespace(
                 niz
                ) [WithoutNamespace]
                NoArrayExpression(
                ) [NoArrayExpression]
              ) [Designator]
              AssignOperation(
              ) [AssignOperation]
              PositiveStartExpr(
                SingleTerm(
                  RangeExpression(
                    PositiveStartExpr(
                      SingleTerm(
                        DesignatorFact(
                          Designator(
                            WithoutNamespace(
                             a
                            ) [WithoutNamespace]
                            NoArrayExpression(
                            ) [NoArrayExpression]
                          ) [Designator]
                        ) [DesignatorFact]
                      ) [SingleTerm]
                    ) [PositiveStartExpr]
                  ) [RangeExpression]
                ) [SingleTerm]
              ) [PositiveStartExpr]
            ) [DesignatorExpr]
          ) [DesignatorStat]
        ) [Statements]
        PrintExpr(
          PositiveStartExpr(
            SingleTerm(
              DesignatorFact(
                Designator(
                  WithoutNamespace(
                   niz
                  ) [WithoutNamespace]
                  NoArrayExpression(
                  ) [NoArrayExpression]
                ) [Designator]
              ) [DesignatorFact]
            ) [SingleTerm]
          ) [PositiveStartExpr]
          NoNumConstOpt(
          ) [NoNumConstOpt]
        ) [PrintExpr]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  11:06:39,152 - ================ Semanticka obrada ===================
INFO  11:06:39,159 - Const a defined on line 2
INFO  11:06:39,159 - Symbol niz found on line 8
INFO  11:06:39,160 - Symbol a found on line 8
INFO  11:06:39,160 - Symbol niz found on line 9
INFO  11:06:39,160 - main() method found on line 1
INFO  11:06:39,164 - Parser SUCCESS!
INFO  11:08:20,785 - Compiling source file: C:\Users\elena\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  11:08:20,786 - ================= LEKSICKA ANALIZA =================
INFO  11:08:20,840 - #2 program
INFO  11:08:20,841 - #47 test301
INFO  11:08:20,841 - #3 const
INFO  11:08:20,842 - #47 int
INFO  11:08:20,842 - #47 a
INFO  11:08:20,843 - #24 =
INFO  11:08:20,843 - #46 10
INFO  11:08:20,843 - #27 ;
INFO  11:08:20,844 - #35 {
INFO  11:08:20,845 - #8 void
INFO  11:08:20,846 - #47 main
INFO  11:08:20,846 - #31 (
INFO  11:08:20,847 - #32 )
INFO  11:08:20,847 - #47 int
INFO  11:08:20,848 - #47 niz
INFO  11:08:20,848 - #33 [
INFO  11:08:20,848 - #34 ]
INFO  11:08:20,848 - #27 ;
INFO  11:08:20,851 - #35 {
INFO  11:08:20,851 - #5 print
INFO  11:08:20,852 - #31 (
INFO  11:08:20,852 - #47 a
INFO  11:08:20,852 - #32 )
INFO  11:08:20,855 - #27 ;
INFO  11:08:20,855 - #36 }
INFO  11:08:20,855 - #36 }
INFO  11:08:20,858 - ================= PARSIRANO STABLO =================
INFO  11:08:20,864 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  Declarations(
    NoDeclarations(
    ) [NoDeclarations]
    ConstantDeclaration(
      ConDecl(
        Type(
         int
        ) [Type]
        ConstDef(
         a
          NumConst(
           10
          ) [NumConst]
        ) [ConstDef]
        NoConstantDeclaration(
        ) [NoConstantDeclaration]
      ) [ConDecl]
    ) [ConstantDeclaration]
  ) [Declarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      ListOfVarDecl(
        NoVarDeclarations(
        ) [NoVarDeclarations]
        VarDeclaration(
          Type(
           int
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             niz
              Brackets(
              ) [Brackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [ListOfVarDecl]
      Statements(
        NoStatements(
        ) [NoStatements]
        PrintExpr(
          PositiveStartExpr(
            SingleTerm(
              DesignatorFact(
                Designator(
                  WithoutNamespace(
                   a
                  ) [WithoutNamespace]
                  NoArrayExpression(
                  ) [NoArrayExpression]
                ) [Designator]
              ) [DesignatorFact]
            ) [SingleTerm]
          ) [PositiveStartExpr]
          NoNumConstOpt(
          ) [NoNumConstOpt]
        ) [PrintExpr]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  11:08:20,864 - ================ Semanticka obrada ===================
INFO  11:08:20,870 - Const a defined on line 2
INFO  11:08:20,870 - Symbol a found on line 7
INFO  11:08:20,870 - main() method found on line 1
INFO  11:08:20,875 - Parser SUCCESS!
INFO  11:11:51,429 - Compiling source file: C:\Users\elena\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  11:11:51,432 - ================= LEKSICKA ANALIZA =================
INFO  11:11:51,471 - #2 program
INFO  11:11:51,471 - #47 test301
INFO  11:11:51,471 - #3 const
INFO  11:11:51,473 - #47 int
INFO  11:11:51,473 - #47 a
INFO  11:11:51,473 - #24 =
INFO  11:11:51,473 - #46 10
INFO  11:11:51,474 - #27 ;
INFO  11:11:51,474 - #35 {
INFO  11:11:51,475 - #8 void
INFO  11:11:51,475 - #47 main
INFO  11:11:51,475 - #31 (
INFO  11:11:51,477 - #32 )
INFO  11:11:51,478 - #47 int
INFO  11:11:51,478 - #47 niz
INFO  11:11:51,478 - #33 [
INFO  11:11:51,478 - #34 ]
INFO  11:11:51,478 - #27 ;
INFO  11:11:51,480 - #35 {
INFO  11:11:51,480 - #5 print
INFO  11:11:51,480 - #31 (
INFO  11:11:51,480 - #47 a
INFO  11:11:51,481 - #32 )
INFO  11:11:51,484 - #27 ;
INFO  11:11:51,484 - #36 }
INFO  11:11:51,484 - #36 }
INFO  11:11:51,487 - ================= PARSIRANO STABLO =================
INFO  11:11:51,492 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  Declarations(
    NoDeclarations(
    ) [NoDeclarations]
    ConstantDeclaration(
      ConDecl(
        Type(
         int
        ) [Type]
        ConstDef(
         a
          NumConst(
           10
          ) [NumConst]
        ) [ConstDef]
        NoConstantDeclaration(
        ) [NoConstantDeclaration]
      ) [ConDecl]
    ) [ConstantDeclaration]
  ) [Declarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      ListOfVarDecl(
        NoVarDeclarations(
        ) [NoVarDeclarations]
        VarDeclaration(
          Type(
           int
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             niz
              Brackets(
              ) [Brackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [ListOfVarDecl]
      Statements(
        NoStatements(
        ) [NoStatements]
        PrintExpr(
          PositiveStartExpr(
            SingleTerm(
              DesignatorFact(
                Designator(
                  WithoutNamespace(
                   a
                  ) [WithoutNamespace]
                  NoArrayExpression(
                  ) [NoArrayExpression]
                ) [Designator]
              ) [DesignatorFact]
            ) [SingleTerm]
          ) [PositiveStartExpr]
          NoNumConstOpt(
          ) [NoNumConstOpt]
        ) [PrintExpr]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  11:11:51,492 - ================ Semanticka obrada ===================
INFO  11:11:51,495 - Const a defined on line 2
INFO  11:11:51,496 - Symbol a found on line 7
INFO  11:11:51,496 - main() method found on line 1
INFO  11:11:51,499 - Parser SUCCESS!
INFO  11:12:13,109 - Compiling source file: C:\Users\elena\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  11:12:13,111 - ================= LEKSICKA ANALIZA =================
INFO  11:12:13,261 - #2 program
INFO  11:12:13,261 - #47 test301
INFO  11:12:13,261 - #3 const
INFO  11:12:13,267 - #47 int
INFO  11:12:13,267 - #47 a
INFO  11:12:13,268 - #24 =
INFO  11:12:13,268 - #46 10
INFO  11:12:13,268 - #27 ;
INFO  11:12:13,271 - #35 {
INFO  11:12:13,272 - #8 void
INFO  11:12:13,274 - #47 main
INFO  11:12:13,275 - #31 (
INFO  11:12:13,276 - #32 )
INFO  11:12:13,279 - #47 int
INFO  11:12:13,280 - #47 niz
INFO  11:12:13,280 - #33 [
INFO  11:12:13,280 - #34 ]
INFO  11:12:13,280 - #27 ;
INFO  11:12:13,284 - #35 {
INFO  11:12:13,284 - #5 print
INFO  11:12:13,286 - #31 (
INFO  11:12:13,287 - #47 niz
INFO  11:12:13,287 - #32 )
INFO  11:12:13,291 - #27 ;
INFO  11:12:13,291 - #36 }
INFO  11:12:13,292 - #36 }
INFO  11:12:13,297 - ================= PARSIRANO STABLO =================
INFO  11:12:13,307 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  Declarations(
    NoDeclarations(
    ) [NoDeclarations]
    ConstantDeclaration(
      ConDecl(
        Type(
         int
        ) [Type]
        ConstDef(
         a
          NumConst(
           10
          ) [NumConst]
        ) [ConstDef]
        NoConstantDeclaration(
        ) [NoConstantDeclaration]
      ) [ConDecl]
    ) [ConstantDeclaration]
  ) [Declarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      ListOfVarDecl(
        NoVarDeclarations(
        ) [NoVarDeclarations]
        VarDeclaration(
          Type(
           int
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             niz
              Brackets(
              ) [Brackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [ListOfVarDecl]
      Statements(
        NoStatements(
        ) [NoStatements]
        PrintExpr(
          PositiveStartExpr(
            SingleTerm(
              DesignatorFact(
                Designator(
                  WithoutNamespace(
                   niz
                  ) [WithoutNamespace]
                  NoArrayExpression(
                  ) [NoArrayExpression]
                ) [Designator]
              ) [DesignatorFact]
            ) [SingleTerm]
          ) [PositiveStartExpr]
          NoNumConstOpt(
          ) [NoNumConstOpt]
        ) [PrintExpr]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  11:12:13,308 - ================ Semanticka obrada ===================
INFO  11:12:13,317 - Const a defined on line 2
INFO  11:12:13,317 - Symbol niz found on line 7
INFO  11:12:13,318 - main() method found on line 1
INFO  11:12:13,325 - Parser SUCCESS!
INFO  11:12:15,621 - Compiling source file: C:\Users\elena\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  11:12:15,623 - ================= LEKSICKA ANALIZA =================
INFO  11:12:15,639 - Compiling source file: C:\Users\elena\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  11:12:15,640 - ================= LEKSICKA ANALIZA =================
INFO  11:12:15,677 - #2 program
INFO  11:12:15,678 - #47 test301
INFO  11:12:15,678 - #3 const
INFO  11:12:15,680 - #47 int
INFO  11:12:15,680 - #47 a
INFO  11:12:15,680 - #24 =
INFO  11:12:15,681 - #46 10
INFO  11:12:15,681 - #27 ;
INFO  11:12:15,682 - #35 {
INFO  11:12:15,682 - #8 void
INFO  11:12:15,685 - #47 main
INFO  11:12:15,686 - #31 (
INFO  11:12:15,687 - #32 )
INFO  11:12:15,688 - #47 int
INFO  11:12:15,689 - #47 niz
INFO  11:12:15,689 - #33 [
INFO  11:12:15,689 - #34 ]
INFO  11:12:15,689 - #27 ;
INFO  11:12:15,690 - #35 {
INFO  11:12:15,691 - #5 print
INFO  11:12:15,691 - #31 (
INFO  11:12:15,692 - #47 niz
INFO  11:12:15,692 - #32 )
INFO  11:12:15,694 - #27 ;
INFO  11:12:15,694 - #36 }
INFO  11:12:15,694 - #36 }
INFO  11:12:15,696 - #2 program
INFO  11:12:15,696 - #47 test301
INFO  11:12:15,696 - ================= PARSIRANO STABLO =================
INFO  11:12:15,696 - #3 const
INFO  11:12:15,699 - #47 int
INFO  11:12:15,699 - #47 a
INFO  11:12:15,700 - #24 =
INFO  11:12:15,700 - #46 10
INFO  11:12:15,700 - #27 ;
INFO  11:12:15,701 - #35 {
INFO  11:12:15,702 - #8 void
INFO  11:12:15,702 - #47 main
INFO  11:12:15,703 - #31 (
INFO  11:12:15,703 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  Declarations(
    NoDeclarations(
    ) [NoDeclarations]
    ConstantDeclaration(
      ConDecl(
        Type(
         int
        ) [Type]
        ConstDef(
         a
          NumConst(
           10
          ) [NumConst]
        ) [ConstDef]
        NoConstantDeclaration(
        ) [NoConstantDeclaration]
      ) [ConDecl]
    ) [ConstantDeclaration]
  ) [Declarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      ListOfVarDecl(
        NoVarDeclarations(
        ) [NoVarDeclarations]
        VarDeclaration(
          Type(
           int
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             niz
              Brackets(
              ) [Brackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [ListOfVarDecl]
      Statements(
        NoStatements(
        ) [NoStatements]
        PrintExpr(
          PositiveStartExpr(
            SingleTerm(
              DesignatorFact(
                Designator(
                  WithoutNamespace(
                   niz
                  ) [WithoutNamespace]
                  NoArrayExpression(
                  ) [NoArrayExpression]
                ) [Designator]
              ) [DesignatorFact]
            ) [SingleTerm]
          ) [PositiveStartExpr]
          NoNumConstOpt(
          ) [NoNumConstOpt]
        ) [PrintExpr]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  11:12:15,703 - ================ Semanticka obrada ===================
INFO  11:12:15,705 - #32 )
INFO  11:12:15,706 - #47 int
INFO  11:12:15,707 - #47 niz
INFO  11:12:15,707 - #33 [
INFO  11:12:15,708 - #34 ]
INFO  11:12:15,708 - #27 ;
INFO  11:12:15,710 - #35 {
INFO  11:12:15,711 - #5 print
INFO  11:12:15,711 - #31 (
INFO  11:12:15,711 - Const a defined on line 2
INFO  11:12:15,711 - #47 niz
INFO  11:12:15,712 - #32 )
INFO  11:12:15,712 - Symbol niz found on line 7
INFO  11:12:15,712 - main() method found on line 1
INFO  11:12:15,714 - #27 ;
INFO  11:12:15,714 - #36 }
INFO  11:12:15,714 - #36 }
INFO  11:12:15,716 - Parser SUCCESS!
INFO  11:12:15,717 - ================= PARSIRANO STABLO =================
INFO  11:12:15,725 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  Declarations(
    NoDeclarations(
    ) [NoDeclarations]
    ConstantDeclaration(
      ConDecl(
        Type(
         int
        ) [Type]
        ConstDef(
         a
          NumConst(
           10
          ) [NumConst]
        ) [ConstDef]
        NoConstantDeclaration(
        ) [NoConstantDeclaration]
      ) [ConDecl]
    ) [ConstantDeclaration]
  ) [Declarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      ListOfVarDecl(
        NoVarDeclarations(
        ) [NoVarDeclarations]
        VarDeclaration(
          Type(
           int
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             niz
              Brackets(
              ) [Brackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [ListOfVarDecl]
      Statements(
        NoStatements(
        ) [NoStatements]
        PrintExpr(
          PositiveStartExpr(
            SingleTerm(
              DesignatorFact(
                Designator(
                  WithoutNamespace(
                   niz
                  ) [WithoutNamespace]
                  NoArrayExpression(
                  ) [NoArrayExpression]
                ) [Designator]
              ) [DesignatorFact]
            ) [SingleTerm]
          ) [PositiveStartExpr]
          NoNumConstOpt(
          ) [NoNumConstOpt]
        ) [PrintExpr]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  11:12:15,725 - ================ Semanticka obrada ===================
INFO  11:12:15,730 - Const a defined on line 2
INFO  11:12:15,731 - Symbol niz found on line 7
INFO  11:12:15,731 - main() method found on line 1
INFO  11:12:15,735 - Parser SUCCESS!
INFO  11:12:18,873 - Compiling source file: C:\Users\elena\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  11:12:18,874 - ================= LEKSICKA ANALIZA =================
INFO  11:12:18,931 - #2 program
INFO  11:12:18,931 - #47 test301
INFO  11:12:18,931 - #3 const
INFO  11:12:18,933 - #47 int
INFO  11:12:18,933 - #47 a
INFO  11:12:18,935 - #24 =
INFO  11:12:18,935 - #46 10
INFO  11:12:18,935 - #27 ;
INFO  11:12:18,937 - #35 {
INFO  11:12:18,937 - #8 void
INFO  11:12:18,939 - #47 main
INFO  11:12:18,940 - #31 (
INFO  11:12:18,941 - #32 )
INFO  11:12:18,942 - #47 int
INFO  11:12:18,943 - #47 niz
INFO  11:12:18,943 - #33 [
INFO  11:12:18,943 - #34 ]
INFO  11:12:18,943 - #27 ;
INFO  11:12:18,945 - #35 {
INFO  11:12:18,945 - #5 print
INFO  11:12:18,946 - #31 (
INFO  11:12:18,946 - #47 niz
INFO  11:12:18,946 - #32 )
INFO  11:12:18,949 - #27 ;
INFO  11:12:18,949 - #36 }
INFO  11:12:18,950 - #36 }
INFO  11:12:18,953 - ================= PARSIRANO STABLO =================
INFO  11:12:18,961 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  Declarations(
    NoDeclarations(
    ) [NoDeclarations]
    ConstantDeclaration(
      ConDecl(
        Type(
         int
        ) [Type]
        ConstDef(
         a
          NumConst(
           10
          ) [NumConst]
        ) [ConstDef]
        NoConstantDeclaration(
        ) [NoConstantDeclaration]
      ) [ConDecl]
    ) [ConstantDeclaration]
  ) [Declarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      ListOfVarDecl(
        NoVarDeclarations(
        ) [NoVarDeclarations]
        VarDeclaration(
          Type(
           int
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             niz
              Brackets(
              ) [Brackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [ListOfVarDecl]
      Statements(
        NoStatements(
        ) [NoStatements]
        PrintExpr(
          PositiveStartExpr(
            SingleTerm(
              DesignatorFact(
                Designator(
                  WithoutNamespace(
                   niz
                  ) [WithoutNamespace]
                  NoArrayExpression(
                  ) [NoArrayExpression]
                ) [Designator]
              ) [DesignatorFact]
            ) [SingleTerm]
          ) [PositiveStartExpr]
          NoNumConstOpt(
          ) [NoNumConstOpt]
        ) [PrintExpr]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  11:12:18,961 - ================ Semanticka obrada ===================
INFO  11:12:18,966 - Const a defined on line 2
INFO  11:12:18,966 - Symbol niz found on line 7
INFO  11:12:18,967 - main() method found on line 1
INFO  11:12:18,973 - Parser SUCCESS!
INFO  11:12:25,667 - Compiling source file: C:\Users\elena\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  11:12:25,669 - ================= LEKSICKA ANALIZA =================
INFO  11:12:25,734 - #2 program
INFO  11:12:25,734 - #47 test301
INFO  11:12:25,734 - #3 const
INFO  11:12:25,737 - #47 int
INFO  11:12:25,737 - #47 a
INFO  11:12:25,738 - #24 =
INFO  11:12:25,738 - #46 10
INFO  11:12:25,738 - #27 ;
INFO  11:12:25,741 - #35 {
INFO  11:12:25,742 - #8 void
INFO  11:12:25,743 - #47 main
INFO  11:12:25,744 - #31 (
INFO  11:12:25,744 - #32 )
INFO  11:12:25,746 - #47 int
INFO  11:12:25,746 - #47 niz
INFO  11:12:25,746 - #33 [
INFO  11:12:25,746 - #34 ]
INFO  11:12:25,747 - #27 ;
INFO  11:12:25,748 - #35 {
INFO  11:12:25,748 - #5 print
INFO  11:12:25,749 - #31 (
INFO  11:12:25,749 - #47 niz
INFO  11:12:25,749 - #32 )
INFO  11:12:25,752 - #27 ;
INFO  11:12:25,752 - #36 }
INFO  11:12:25,752 - #36 }
INFO  11:12:25,756 - ================= PARSIRANO STABLO =================
INFO  11:12:25,764 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  Declarations(
    NoDeclarations(
    ) [NoDeclarations]
    ConstantDeclaration(
      ConDecl(
        Type(
         int
        ) [Type]
        ConstDef(
         a
          NumConst(
           10
          ) [NumConst]
        ) [ConstDef]
        NoConstantDeclaration(
        ) [NoConstantDeclaration]
      ) [ConDecl]
    ) [ConstantDeclaration]
  ) [Declarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      ListOfVarDecl(
        NoVarDeclarations(
        ) [NoVarDeclarations]
        VarDeclaration(
          Type(
           int
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             niz
              Brackets(
              ) [Brackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [ListOfVarDecl]
      Statements(
        NoStatements(
        ) [NoStatements]
        PrintExpr(
          PositiveStartExpr(
            SingleTerm(
              DesignatorFact(
                Designator(
                  WithoutNamespace(
                   niz
                  ) [WithoutNamespace]
                  NoArrayExpression(
                  ) [NoArrayExpression]
                ) [Designator]
              ) [DesignatorFact]
            ) [SingleTerm]
          ) [PositiveStartExpr]
          NoNumConstOpt(
          ) [NoNumConstOpt]
        ) [PrintExpr]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  11:12:25,764 - ================ Semanticka obrada ===================
INFO  11:12:25,771 - Const a defined on line 2
INFO  11:12:25,771 - Symbol niz found on line 7
INFO  11:12:25,771 - main() method found on line 1
INFO  11:12:25,778 - Parser SUCCESS!
INFO  11:12:59,243 - Compiling source file: C:\Users\elena\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  11:12:59,245 - ================= LEKSICKA ANALIZA =================
INFO  11:12:59,302 - #2 program
INFO  11:12:59,302 - #47 test301
INFO  11:12:59,302 - #3 const
INFO  11:12:59,305 - #47 int
INFO  11:12:59,305 - #47 a
INFO  11:12:59,306 - #24 =
INFO  11:12:59,306 - #46 10
INFO  11:12:59,306 - #27 ;
INFO  11:12:59,308 - #35 {
INFO  11:12:59,308 - #8 void
INFO  11:12:59,309 - #47 main
INFO  11:12:59,309 - #31 (
INFO  11:12:59,310 - #32 )
INFO  11:12:59,311 - #47 int
INFO  11:12:59,312 - #47 niz
INFO  11:12:59,312 - #33 [
INFO  11:12:59,312 - #34 ]
INFO  11:12:59,312 - #27 ;
INFO  11:12:59,314 - #35 {
INFO  11:12:59,315 - #5 print
INFO  11:12:59,317 - #31 (
INFO  11:12:59,317 - #47 niz
INFO  11:12:59,317 - #32 )
INFO  11:12:59,321 - #27 ;
INFO  11:12:59,321 - #36 }
INFO  11:12:59,321 - #36 }
INFO  11:12:59,324 - ================= PARSIRANO STABLO =================
INFO  11:12:59,332 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  Declarations(
    NoDeclarations(
    ) [NoDeclarations]
    ConstantDeclaration(
      ConDecl(
        Type(
         int
        ) [Type]
        ConstDef(
         a
          NumConst(
           10
          ) [NumConst]
        ) [ConstDef]
        NoConstantDeclaration(
        ) [NoConstantDeclaration]
      ) [ConDecl]
    ) [ConstantDeclaration]
  ) [Declarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      ListOfVarDecl(
        NoVarDeclarations(
        ) [NoVarDeclarations]
        VarDeclaration(
          Type(
           int
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             niz
              Brackets(
              ) [Brackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [ListOfVarDecl]
      Statements(
        NoStatements(
        ) [NoStatements]
        PrintExpr(
          PositiveStartExpr(
            SingleTerm(
              DesignatorFact(
                Designator(
                  WithoutNamespace(
                   niz
                  ) [WithoutNamespace]
                  NoArrayExpression(
                  ) [NoArrayExpression]
                ) [Designator]
              ) [DesignatorFact]
            ) [SingleTerm]
          ) [PositiveStartExpr]
          NoNumConstOpt(
          ) [NoNumConstOpt]
        ) [PrintExpr]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  11:12:59,332 - ================ Semanticka obrada ===================
INFO  11:12:59,338 - Const a defined on line 2
INFO  11:12:59,339 - Symbol niz found on line 7
INFO  11:12:59,339 - main() method found on line 1
INFO  11:12:59,344 - Parser SUCCESS!
INFO  11:13:20,718 - Compiling source file: C:\Users\elena\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  11:13:20,718 - ================= LEKSICKA ANALIZA =================
INFO  11:13:20,760 - #2 program
INFO  11:13:20,760 - #47 test301
INFO  11:13:20,760 - #3 const
INFO  11:13:20,762 - #47 int
INFO  11:13:20,762 - #47 a
INFO  11:13:20,762 - #24 =
INFO  11:13:20,762 - #46 10
INFO  11:13:20,763 - #27 ;
INFO  11:13:20,764 - #35 {
INFO  11:13:20,764 - #8 void
INFO  11:13:20,764 - #47 main
INFO  11:13:20,765 - #31 (
INFO  11:13:20,765 - #32 )
INFO  11:13:20,767 - #47 int
INFO  11:13:20,767 - #47 niz
INFO  11:13:20,767 - #33 [
INFO  11:13:20,768 - #34 ]
INFO  11:13:20,768 - #27 ;
INFO  11:13:20,771 - #35 {
INFO  11:13:20,771 - #5 print
INFO  11:13:20,772 - #31 (
INFO  11:13:20,772 - #47 niz
INFO  11:13:20,772 - #32 )
INFO  11:13:20,774 - #27 ;
INFO  11:13:20,775 - #36 }
INFO  11:13:20,775 - #36 }
INFO  11:13:20,776 - ================= PARSIRANO STABLO =================
INFO  11:13:20,782 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  Declarations(
    NoDeclarations(
    ) [NoDeclarations]
    ConstantDeclaration(
      ConDecl(
        Type(
         int
        ) [Type]
        ConstDef(
         a
          NumConst(
           10
          ) [NumConst]
        ) [ConstDef]
        NoConstantDeclaration(
        ) [NoConstantDeclaration]
      ) [ConDecl]
    ) [ConstantDeclaration]
  ) [Declarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      ListOfVarDecl(
        NoVarDeclarations(
        ) [NoVarDeclarations]
        VarDeclaration(
          Type(
           int
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             niz
              Brackets(
              ) [Brackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [ListOfVarDecl]
      Statements(
        NoStatements(
        ) [NoStatements]
        PrintExpr(
          PositiveStartExpr(
            SingleTerm(
              DesignatorFact(
                Designator(
                  WithoutNamespace(
                   niz
                  ) [WithoutNamespace]
                  NoArrayExpression(
                  ) [NoArrayExpression]
                ) [Designator]
              ) [DesignatorFact]
            ) [SingleTerm]
          ) [PositiveStartExpr]
          NoNumConstOpt(
          ) [NoNumConstOpt]
        ) [PrintExpr]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  11:13:20,817 - ================ Semanticka obrada ===================
INFO  11:13:20,821 - Const a defined on line 2
INFO  11:13:20,821 - Symbol niz found on line 7
INFO  11:13:20,821 - main() method found on line 1
INFO  11:13:20,825 - Parser SUCCESS!
INFO  11:13:48,667 - Compiling source file: C:\Users\elena\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  11:13:48,669 - ================= LEKSICKA ANALIZA =================
INFO  11:13:48,726 - #2 program
INFO  11:13:48,726 - #47 test301
INFO  11:13:48,726 - #3 const
INFO  11:13:48,728 - #47 int
INFO  11:13:48,728 - #47 a
INFO  11:13:48,729 - #24 =
INFO  11:13:48,729 - #46 10
INFO  11:13:48,729 - #27 ;
INFO  11:13:48,731 - #35 {
INFO  11:13:48,731 - #8 void
INFO  11:13:48,732 - #47 main
INFO  11:13:48,733 - #31 (
INFO  11:13:48,734 - #32 )
INFO  11:13:48,735 - #47 int
INFO  11:13:48,735 - #47 niz
INFO  11:13:48,736 - #33 [
INFO  11:13:48,736 - #34 ]
INFO  11:13:48,736 - #27 ;
INFO  11:13:48,737 - #35 {
INFO  11:13:48,737 - #5 print
INFO  11:13:48,738 - #31 (
INFO  11:13:48,738 - #47 niz
INFO  11:13:48,738 - #32 )
INFO  11:13:48,740 - #27 ;
INFO  11:13:48,740 - #36 }
INFO  11:13:48,741 - #36 }
INFO  11:13:48,742 - ================= PARSIRANO STABLO =================
INFO  11:13:48,748 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  Declarations(
    NoDeclarations(
    ) [NoDeclarations]
    ConstantDeclaration(
      ConDecl(
        Type(
         int
        ) [Type]
        ConstDef(
         a
          NumConst(
           10
          ) [NumConst]
        ) [ConstDef]
        NoConstantDeclaration(
        ) [NoConstantDeclaration]
      ) [ConDecl]
    ) [ConstantDeclaration]
  ) [Declarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      ListOfVarDecl(
        NoVarDeclarations(
        ) [NoVarDeclarations]
        VarDeclaration(
          Type(
           int
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             niz
              Brackets(
              ) [Brackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [ListOfVarDecl]
      Statements(
        NoStatements(
        ) [NoStatements]
        PrintExpr(
          PositiveStartExpr(
            SingleTerm(
              DesignatorFact(
                Designator(
                  WithoutNamespace(
                   niz
                  ) [WithoutNamespace]
                  NoArrayExpression(
                  ) [NoArrayExpression]
                ) [Designator]
              ) [DesignatorFact]
            ) [SingleTerm]
          ) [PositiveStartExpr]
          NoNumConstOpt(
          ) [NoNumConstOpt]
        ) [PrintExpr]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  11:13:48,748 - ================ Semanticka obrada ===================
INFO  11:13:48,770 - Const a defined on line 2
INFO  11:13:48,770 - Symbol niz found on line 7
INFO  11:13:48,770 - main() method found on line 1
INFO  11:13:48,788 - Parser SUCCESS!
INFO  11:14:01,146 - Compiling source file: C:\Users\elena\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  11:14:01,146 - ================= LEKSICKA ANALIZA =================
INFO  11:14:01,269 - #2 program
INFO  11:14:01,269 - #47 test301
INFO  11:14:01,269 - #3 const
INFO  11:14:01,272 - #47 int
INFO  11:14:01,272 - #47 a
INFO  11:14:01,274 - #24 =
INFO  11:14:01,275 - #46 10
INFO  11:14:01,275 - #27 ;
INFO  11:14:01,279 - #35 {
INFO  11:14:01,280 - #8 void
INFO  11:14:01,281 - #47 main
INFO  11:14:01,283 - #31 (
INFO  11:14:01,285 - #32 )
INFO  11:14:01,286 - #47 int
INFO  11:14:01,287 - #47 niz
INFO  11:14:01,287 - #33 [
INFO  11:14:01,287 - #34 ]
INFO  11:14:01,287 - #27 ;
INFO  11:14:01,291 - #35 {
INFO  11:14:01,292 - #5 print
INFO  11:14:01,293 - #31 (
INFO  11:14:01,293 - #47 niz
INFO  11:14:01,293 - #32 )
INFO  11:14:01,299 - #27 ;
INFO  11:14:01,299 - #36 }
INFO  11:14:01,299 - #36 }
INFO  11:14:01,303 - ================= PARSIRANO STABLO =================
INFO  11:14:01,315 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  Declarations(
    NoDeclarations(
    ) [NoDeclarations]
    ConstantDeclaration(
      ConDecl(
        Type(
         int
        ) [Type]
        ConstDef(
         a
          NumConst(
           10
          ) [NumConst]
        ) [ConstDef]
        NoConstantDeclaration(
        ) [NoConstantDeclaration]
      ) [ConDecl]
    ) [ConstantDeclaration]
  ) [Declarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      ListOfVarDecl(
        NoVarDeclarations(
        ) [NoVarDeclarations]
        VarDeclaration(
          Type(
           int
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             niz
              Brackets(
              ) [Brackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [ListOfVarDecl]
      Statements(
        NoStatements(
        ) [NoStatements]
        PrintExpr(
          PositiveStartExpr(
            SingleTerm(
              DesignatorFact(
                Designator(
                  WithoutNamespace(
                   niz
                  ) [WithoutNamespace]
                  NoArrayExpression(
                  ) [NoArrayExpression]
                ) [Designator]
              ) [DesignatorFact]
            ) [SingleTerm]
          ) [PositiveStartExpr]
          NoNumConstOpt(
          ) [NoNumConstOpt]
        ) [PrintExpr]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  11:14:01,316 - ================ Semanticka obrada ===================
INFO  11:14:01,326 - Const a defined on line 2
INFO  11:14:01,326 - Symbol niz found on line 7
INFO  11:14:01,326 - main() method found on line 1
INFO  11:14:01,334 - Parser SUCCESS!
INFO  11:14:36,159 - Compiling source file: C:\Users\elena\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  11:14:36,162 - ================= LEKSICKA ANALIZA =================
INFO  11:14:36,425 - #2 program
INFO  11:14:36,425 - #47 test301
INFO  11:14:36,425 - #3 const
INFO  11:14:36,430 - #47 int
INFO  11:14:36,430 - #47 a
INFO  11:14:36,432 - #24 =
INFO  11:14:36,432 - #46 10
INFO  11:14:36,432 - #27 ;
INFO  11:14:36,436 - #35 {
INFO  11:14:36,437 - #8 void
INFO  11:14:36,439 - #47 main
INFO  11:14:36,441 - #31 (
INFO  11:14:36,443 - #32 )
INFO  11:14:36,445 - #47 int
INFO  11:14:36,446 - #47 niz
INFO  11:14:36,447 - #33 [
INFO  11:14:36,447 - #34 ]
INFO  11:14:36,447 - #27 ;
INFO  11:14:36,450 - #35 {
INFO  11:14:36,451 - #5 print
INFO  11:14:36,453 - #31 (
INFO  11:14:36,453 - #47 niz
INFO  11:14:36,453 - #32 )
INFO  11:14:36,459 - #27 ;
INFO  11:14:36,459 - #36 }
INFO  11:14:36,460 - #36 }
INFO  11:14:36,466 - ================= PARSIRANO STABLO =================
INFO  11:14:36,484 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  Declarations(
    NoDeclarations(
    ) [NoDeclarations]
    ConstantDeclaration(
      ConDecl(
        Type(
         int
        ) [Type]
        ConstDef(
         a
          NumConst(
           10
          ) [NumConst]
        ) [ConstDef]
        NoConstantDeclaration(
        ) [NoConstantDeclaration]
      ) [ConDecl]
    ) [ConstantDeclaration]
  ) [Declarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      ListOfVarDecl(
        NoVarDeclarations(
        ) [NoVarDeclarations]
        VarDeclaration(
          Type(
           int
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             niz
              Brackets(
              ) [Brackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [ListOfVarDecl]
      Statements(
        NoStatements(
        ) [NoStatements]
        PrintExpr(
          PositiveStartExpr(
            SingleTerm(
              DesignatorFact(
                Designator(
                  WithoutNamespace(
                   niz
                  ) [WithoutNamespace]
                  NoArrayExpression(
                  ) [NoArrayExpression]
                ) [Designator]
              ) [DesignatorFact]
            ) [SingleTerm]
          ) [PositiveStartExpr]
          NoNumConstOpt(
          ) [NoNumConstOpt]
        ) [PrintExpr]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  11:14:36,485 - ================ Semanticka obrada ===================
INFO  11:14:36,496 - Const a defined on line 2
INFO  11:14:36,496 - Symbol niz found on line 7
INFO  11:14:36,496 - main() method found on line 1
INFO  11:14:36,507 - Parser SUCCESS!
INFO  11:15:44,338 - Compiling source file: C:\Users\elena\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  11:15:44,339 - ================= LEKSICKA ANALIZA =================
INFO  11:15:44,396 - #2 program
INFO  11:15:44,397 - #47 test301
INFO  11:15:44,397 - #3 const
INFO  11:15:44,399 - #47 int
INFO  11:15:44,399 - #47 a
INFO  11:15:44,400 - #24 =
INFO  11:15:44,400 - #46 10
INFO  11:15:44,400 - #27 ;
INFO  11:15:44,402 - #35 {
INFO  11:15:44,402 - #8 void
INFO  11:15:44,403 - #47 main
INFO  11:15:44,404 - #31 (
INFO  11:15:44,404 - #32 )
INFO  11:15:44,406 - #47 int
INFO  11:15:44,407 - #47 niz
INFO  11:15:44,407 - #33 [
INFO  11:15:44,407 - #34 ]
INFO  11:15:44,407 - #27 ;
INFO  11:15:44,409 - #35 {
INFO  11:15:44,410 - #47 niz
INFO  11:15:44,411 - #24 =
INFO  11:15:44,413 - #45 range
INFO  11:15:44,414 - #31 (
INFO  11:15:44,415 - #46 7
INFO  11:15:44,415 - #32 )
INFO  11:15:44,415 - #27 ;
INFO  11:15:44,416 - #5 print
INFO  11:15:44,416 - #31 (
INFO  11:15:44,416 - #47 niz
INFO  11:15:44,416 - #32 )
INFO  11:15:44,417 - #27 ;
INFO  11:15:44,418 - #36 }
INFO  11:15:44,418 - #36 }
INFO  11:15:44,421 - ================= PARSIRANO STABLO =================
INFO  11:15:44,430 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  Declarations(
    NoDeclarations(
    ) [NoDeclarations]
    ConstantDeclaration(
      ConDecl(
        Type(
         int
        ) [Type]
        ConstDef(
         a
          NumConst(
           10
          ) [NumConst]
        ) [ConstDef]
        NoConstantDeclaration(
        ) [NoConstantDeclaration]
      ) [ConDecl]
    ) [ConstantDeclaration]
  ) [Declarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      ListOfVarDecl(
        NoVarDeclarations(
        ) [NoVarDeclarations]
        VarDeclaration(
          Type(
           int
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             niz
              Brackets(
              ) [Brackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [ListOfVarDecl]
      Statements(
        Statements(
          NoStatements(
          ) [NoStatements]
          DesignatorStat(
            DesignatorExpr(
              Designator(
                WithoutNamespace(
                 niz
                ) [WithoutNamespace]
                NoArrayExpression(
                ) [NoArrayExpression]
              ) [Designator]
              AssignOperation(
              ) [AssignOperation]
              PositiveStartExpr(
                SingleTerm(
                  RangeExpression(
                    PositiveStartExpr(
                      SingleTerm(
                        NumberConst(
                         7
                        ) [NumberConst]
                      ) [SingleTerm]
                    ) [PositiveStartExpr]
                  ) [RangeExpression]
                ) [SingleTerm]
              ) [PositiveStartExpr]
            ) [DesignatorExpr]
          ) [DesignatorStat]
        ) [Statements]
        PrintExpr(
          PositiveStartExpr(
            SingleTerm(
              DesignatorFact(
                Designator(
                  WithoutNamespace(
                   niz
                  ) [WithoutNamespace]
                  NoArrayExpression(
                  ) [NoArrayExpression]
                ) [Designator]
              ) [DesignatorFact]
            ) [SingleTerm]
          ) [PositiveStartExpr]
          NoNumConstOpt(
          ) [NoNumConstOpt]
        ) [PrintExpr]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  11:15:44,430 - ================ Semanticka obrada ===================
INFO  11:15:44,434 - Const a defined on line 2
INFO  11:15:44,434 - Symbol niz found on line 7
INFO  11:15:44,435 - Symbol niz found on line 8
INFO  11:15:44,435 - main() method found on line 1
INFO  11:15:44,440 - Parser SUCCESS!
