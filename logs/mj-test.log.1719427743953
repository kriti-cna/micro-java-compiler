INFO  20:45:02,850 - Compiling source file: C:\Users\elena\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  20:45:02,851 - ================= LEKSICKA ANALIZA =================
INFO  20:45:02,878 - #2 program
INFO  20:45:02,878 - #47 test301
INFO  20:45:02,878 - #47 int
INFO  20:45:02,880 - #47 a
INFO  20:45:02,881 - #29 ,
INFO  20:45:02,882 - #47 b
INFO  20:45:02,882 - #27 ;
INFO  20:45:02,882 - #35 {
INFO  20:45:02,882 - #8 void
INFO  20:45:02,883 - #47 main
INFO  20:45:02,883 - #31 (
INFO  20:45:02,884 - #32 )
INFO  20:45:02,884 - #47 int
INFO  20:45:02,885 - #47 niz
INFO  20:45:02,885 - #33 [
INFO  20:45:02,885 - #34 ]
INFO  20:45:02,885 - #27 ;
INFO  20:45:02,886 - #47 bool
INFO  20:45:02,886 - #47 nizb
INFO  20:45:02,886 - #33 [
INFO  20:45:02,886 - #34 ]
INFO  20:45:02,886 - #27 ;
INFO  20:45:02,886 - #47 int
INFO  20:45:02,886 - #47 a
INFO  20:45:02,886 - #27 ;
INFO  20:45:02,887 - #35 {
INFO  20:45:02,887 - #47 niz
INFO  20:45:02,887 - #24 =
INFO  20:45:02,889 - #45 range
INFO  20:45:02,889 - #31 (
INFO  20:45:02,889 - #46 7
INFO  20:45:02,889 - #32 )
INFO  20:45:02,889 - #27 ;
INFO  20:45:02,890 - #5 print
INFO  20:45:02,890 - #31 (
INFO  20:45:02,890 - #47 niz
INFO  20:45:02,890 - #32 )
INFO  20:45:02,891 - #27 ;
INFO  20:45:02,891 - #47 a
INFO  20:45:02,891 - #24 =
INFO  20:45:02,891 - #47 niz
INFO  20:45:02,891 - #27 ;
INFO  20:45:02,891 - #47 a
INFO  20:45:02,891 - #24 =
INFO  20:45:02,891 - #47 niz
INFO  20:45:02,891 - #33 [
INFO  20:45:02,891 - #46 0
INFO  20:45:02,892 - #34 ]
INFO  20:45:02,892 - #27 ;
INFO  20:45:02,892 - #36 }
INFO  20:45:02,892 - #36 }
INFO  20:45:02,893 - ================= PARSIRANO STABLO =================
INFO  20:45:02,896 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  Declarations(
    NoDeclarations(
    ) [NoDeclarations]
    VariableDeclaration(
      VarDeclaration(
        Type(
         int
        ) [Type]
        MultipleVarDeclarations(
          OneVarDeclaration(
            AddVarDecl1(
             a
              NoBrackets(
              ) [NoBrackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
          AddVarDecl1(
           b
            NoBrackets(
            ) [NoBrackets]
          ) [AddVarDecl1]
        ) [MultipleVarDeclarations]
      ) [VarDeclaration]
    ) [VariableDeclaration]
  ) [Declarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      ListOfVarDecl(
        ListOfVarDecl(
          ListOfVarDecl(
            NoVarDeclarations(
            ) [NoVarDeclarations]
            VarDeclaration(
              Type(
               int
              ) [Type]
              OneVarDeclaration(
                AddVarDecl1(
                 niz
                  Brackets(
                  ) [Brackets]
                ) [AddVarDecl1]
              ) [OneVarDeclaration]
            ) [VarDeclaration]
          ) [ListOfVarDecl]
          VarDeclaration(
            Type(
             bool
            ) [Type]
            OneVarDeclaration(
              AddVarDecl1(
               nizb
                Brackets(
                ) [Brackets]
              ) [AddVarDecl1]
            ) [OneVarDeclaration]
          ) [VarDeclaration]
        ) [ListOfVarDecl]
        VarDeclaration(
          Type(
           int
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             a
              NoBrackets(
              ) [NoBrackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [ListOfVarDecl]
      Statements(
        Statements(
          Statements(
            Statements(
              NoStatements(
              ) [NoStatements]
              DesignatorStat(
                DesignatorExpr(
                  Designator(
                    WithoutNamespace(
                     niz
                    ) [WithoutNamespace]
                    NoArrayExpression(
                    ) [NoArrayExpression]
                  ) [Designator]
                  AssignOperation(
                  ) [AssignOperation]
                  PositiveStartExpr(
                    SingleTerm(
                      RangeExpression(
                        PositiveStartExpr(
                          SingleTerm(
                            NumberConst(
                             7
                            ) [NumberConst]
                          ) [SingleTerm]
                        ) [PositiveStartExpr]
                      ) [RangeExpression]
                    ) [SingleTerm]
                  ) [PositiveStartExpr]
                ) [DesignatorExpr]
              ) [DesignatorStat]
            ) [Statements]
            PrintExpr(
              PositiveStartExpr(
                SingleTerm(
                  DesignatorFact(
                    Designator(
                      WithoutNamespace(
                       niz
                      ) [WithoutNamespace]
                      NoArrayExpression(
                      ) [NoArrayExpression]
                    ) [Designator]
                  ) [DesignatorFact]
                ) [SingleTerm]
              ) [PositiveStartExpr]
              NoNumConstOpt(
              ) [NoNumConstOpt]
            ) [PrintExpr]
          ) [Statements]
          DesignatorStat(
            DesignatorExpr(
              Designator(
                WithoutNamespace(
                 a
                ) [WithoutNamespace]
                NoArrayExpression(
                ) [NoArrayExpression]
              ) [Designator]
              AssignOperation(
              ) [AssignOperation]
              PositiveStartExpr(
                SingleTerm(
                  DesignatorFact(
                    Designator(
                      WithoutNamespace(
                       niz
                      ) [WithoutNamespace]
                      NoArrayExpression(
                      ) [NoArrayExpression]
                    ) [Designator]
                  ) [DesignatorFact]
                ) [SingleTerm]
              ) [PositiveStartExpr]
            ) [DesignatorExpr]
          ) [DesignatorStat]
        ) [Statements]
        DesignatorStat(
          DesignatorExpr(
            Designator(
              WithoutNamespace(
               a
              ) [WithoutNamespace]
              NoArrayExpression(
              ) [NoArrayExpression]
            ) [Designator]
            AssignOperation(
            ) [AssignOperation]
            PositiveStartExpr(
              SingleTerm(
                DesignatorFact(
                  Designator(
                    WithoutNamespace(
                     niz
                    ) [WithoutNamespace]
                    AddArrayExpression(
                      BraExpr(
                        PositiveStartExpr(
                          SingleTerm(
                            NumberConst(
                             0
                            ) [NumberConst]
                          ) [SingleTerm]
                        ) [PositiveStartExpr]
                      ) [BraExpr]
                    ) [AddArrayExpression]
                  ) [Designator]
                ) [DesignatorFact]
              ) [SingleTerm]
            ) [PositiveStartExpr]
          ) [DesignatorExpr]
        ) [DesignatorStat]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  20:45:02,897 - ================ Semanticka obrada ===================
INFO  20:45:29,268 - Symbol niz found on line 10
INFO  20:45:39,184 - Symbol niz found on line 11
INFO  20:45:39,185 - Symbol a found on line 12
INFO  20:45:39,185 - Symbol niz found on line 12
ERROR 20:45:39,185 - Error: Types not matching  on line 12
INFO  20:45:39,185 - Symbol a found on line 13
INFO  20:45:39,186 - Symbol niz found on line 13
INFO  20:45:39,186 - main() method found on line 1
INFO  20:46:38,805 - Compiling source file: C:\Users\elena\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  20:46:38,806 - ================= LEKSICKA ANALIZA =================
INFO  20:46:38,836 - #2 program
INFO  20:46:38,836 - #47 test301
INFO  20:46:38,836 - #47 int
INFO  20:46:38,837 - #47 a
INFO  20:46:38,838 - #29 ,
INFO  20:46:38,841 - #47 b
INFO  20:46:38,841 - #27 ;
INFO  20:46:38,841 - #35 {
INFO  20:46:38,842 - #8 void
INFO  20:46:38,842 - #47 main
INFO  20:46:38,842 - #31 (
INFO  20:46:38,843 - #32 )
INFO  20:46:38,843 - #47 int
INFO  20:46:38,844 - #47 niz
INFO  20:46:38,844 - #33 [
INFO  20:46:38,844 - #34 ]
INFO  20:46:38,844 - #27 ;
INFO  20:46:38,845 - #47 bool
INFO  20:46:38,845 - #47 nizb
INFO  20:46:38,845 - #33 [
INFO  20:46:38,845 - #34 ]
INFO  20:46:38,845 - #27 ;
INFO  20:46:38,845 - #47 int
INFO  20:46:38,845 - #47 a
INFO  20:46:38,845 - #27 ;
INFO  20:46:38,845 - #35 {
INFO  20:46:38,845 - #47 niz
INFO  20:46:38,846 - #24 =
INFO  20:46:38,847 - #45 range
INFO  20:46:38,848 - #31 (
INFO  20:46:38,848 - #46 7
INFO  20:46:38,848 - #32 )
INFO  20:46:38,850 - #27 ;
INFO  20:46:38,850 - #5 print
INFO  20:46:38,850 - #31 (
INFO  20:46:38,850 - #47 niz
INFO  20:46:38,850 - #32 )
INFO  20:46:38,851 - #27 ;
INFO  20:46:38,852 - #47 a
INFO  20:46:38,852 - #24 =
INFO  20:46:38,852 - #47 niz
INFO  20:46:38,852 - #27 ;
INFO  20:46:38,852 - #47 a
INFO  20:46:38,852 - #24 =
INFO  20:46:38,852 - #47 niz
INFO  20:46:38,852 - #33 [
INFO  20:46:38,852 - #46 0
INFO  20:46:38,852 - #34 ]
INFO  20:46:38,852 - #27 ;
INFO  20:46:38,853 - #36 }
INFO  20:46:38,853 - #36 }
INFO  20:46:38,855 - ================= PARSIRANO STABLO =================
INFO  20:46:38,861 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  Declarations(
    NoDeclarations(
    ) [NoDeclarations]
    VariableDeclaration(
      VarDeclaration(
        Type(
         int
        ) [Type]
        MultipleVarDeclarations(
          OneVarDeclaration(
            AddVarDecl1(
             a
              NoBrackets(
              ) [NoBrackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
          AddVarDecl1(
           b
            NoBrackets(
            ) [NoBrackets]
          ) [AddVarDecl1]
        ) [MultipleVarDeclarations]
      ) [VarDeclaration]
    ) [VariableDeclaration]
  ) [Declarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      ListOfVarDecl(
        ListOfVarDecl(
          ListOfVarDecl(
            NoVarDeclarations(
            ) [NoVarDeclarations]
            VarDeclaration(
              Type(
               int
              ) [Type]
              OneVarDeclaration(
                AddVarDecl1(
                 niz
                  Brackets(
                  ) [Brackets]
                ) [AddVarDecl1]
              ) [OneVarDeclaration]
            ) [VarDeclaration]
          ) [ListOfVarDecl]
          VarDeclaration(
            Type(
             bool
            ) [Type]
            OneVarDeclaration(
              AddVarDecl1(
               nizb
                Brackets(
                ) [Brackets]
              ) [AddVarDecl1]
            ) [OneVarDeclaration]
          ) [VarDeclaration]
        ) [ListOfVarDecl]
        VarDeclaration(
          Type(
           int
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             a
              NoBrackets(
              ) [NoBrackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [ListOfVarDecl]
      Statements(
        Statements(
          Statements(
            Statements(
              NoStatements(
              ) [NoStatements]
              DesignatorStat(
                DesignatorExpr(
                  Designator(
                    WithoutNamespace(
                     niz
                    ) [WithoutNamespace]
                    NoArrayExpression(
                    ) [NoArrayExpression]
                  ) [Designator]
                  AssignOperation(
                  ) [AssignOperation]
                  PositiveStartExpr(
                    SingleTerm(
                      RangeExpression(
                        PositiveStartExpr(
                          SingleTerm(
                            NumberConst(
                             7
                            ) [NumberConst]
                          ) [SingleTerm]
                        ) [PositiveStartExpr]
                      ) [RangeExpression]
                    ) [SingleTerm]
                  ) [PositiveStartExpr]
                ) [DesignatorExpr]
              ) [DesignatorStat]
            ) [Statements]
            PrintExpr(
              PositiveStartExpr(
                SingleTerm(
                  DesignatorFact(
                    Designator(
                      WithoutNamespace(
                       niz
                      ) [WithoutNamespace]
                      NoArrayExpression(
                      ) [NoArrayExpression]
                    ) [Designator]
                  ) [DesignatorFact]
                ) [SingleTerm]
              ) [PositiveStartExpr]
              NoNumConstOpt(
              ) [NoNumConstOpt]
            ) [PrintExpr]
          ) [Statements]
          DesignatorStat(
            DesignatorExpr(
              Designator(
                WithoutNamespace(
                 a
                ) [WithoutNamespace]
                NoArrayExpression(
                ) [NoArrayExpression]
              ) [Designator]
              AssignOperation(
              ) [AssignOperation]
              PositiveStartExpr(
                SingleTerm(
                  DesignatorFact(
                    Designator(
                      WithoutNamespace(
                       niz
                      ) [WithoutNamespace]
                      NoArrayExpression(
                      ) [NoArrayExpression]
                    ) [Designator]
                  ) [DesignatorFact]
                ) [SingleTerm]
              ) [PositiveStartExpr]
            ) [DesignatorExpr]
          ) [DesignatorStat]
        ) [Statements]
        DesignatorStat(
          DesignatorExpr(
            Designator(
              WithoutNamespace(
               a
              ) [WithoutNamespace]
              NoArrayExpression(
              ) [NoArrayExpression]
            ) [Designator]
            AssignOperation(
            ) [AssignOperation]
            PositiveStartExpr(
              SingleTerm(
                DesignatorFact(
                  Designator(
                    WithoutNamespace(
                     niz
                    ) [WithoutNamespace]
                    AddArrayExpression(
                      BraExpr(
                        PositiveStartExpr(
                          SingleTerm(
                            NumberConst(
                             0
                            ) [NumberConst]
                          ) [SingleTerm]
                        ) [PositiveStartExpr]
                      ) [BraExpr]
                    ) [AddArrayExpression]
                  ) [Designator]
                ) [DesignatorFact]
              ) [SingleTerm]
            ) [PositiveStartExpr]
          ) [DesignatorExpr]
        ) [DesignatorStat]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  20:46:38,861 - ================ Semanticka obrada ===================
INFO  20:46:38,865 - Symbol niz found on line 10
INFO  20:46:38,865 - Symbol niz found on line 11
INFO  20:46:38,865 - Symbol a found on line 12
INFO  20:46:38,865 - Symbol niz found on line 12
ERROR 20:46:38,865 - Error: Types not matching  on line 12
INFO  20:46:38,865 - Symbol a found on line 13
INFO  20:46:38,865 - Symbol niz found on line 13
INFO  20:46:38,866 - main() method found on line 1
ERROR 20:46:38,866 - Parser FAIL!
INFO  20:47:16,479 - main() method found on line 1
ERROR 20:47:20,983 - Parser FAIL!
