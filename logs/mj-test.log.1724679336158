INFO  15:32:31,766 - Compiling source file: C:\Users\se200106\Desktop\wsp\MJCompilerAVGUST3.zip_expanded\MJCompiler\test\program.mj
INFO  15:32:31,766 - ================= LEKSICKA ANALIZA =================
INFO  15:32:31,783 - #2 program
INFO  15:32:31,783 - #47 test301
INFO  15:32:31,783 - #3 const
INFO  15:32:31,784 - #47 int
INFO  15:32:31,784 - #47 nula
INFO  15:32:31,784 - #24 =
INFO  15:32:31,784 - #46 0
INFO  15:32:31,784 - #27 ;
INFO  15:32:31,785 - #3 const
INFO  15:32:31,785 - #47 int
INFO  15:32:31,785 - #47 jedan
INFO  15:32:31,785 - #24 =
INFO  15:32:31,785 - #46 1
INFO  15:32:31,785 - #27 ;
INFO  15:32:31,785 - #3 const
INFO  15:32:31,785 - #47 int
INFO  15:32:31,785 - #47 pet
INFO  15:32:31,785 - #24 =
INFO  15:32:31,786 - #46 5
INFO  15:32:31,786 - #27 ;
INFO  15:32:31,786 - #47 int
INFO  15:32:31,786 - #47 niz
INFO  15:32:31,786 - #33 [
INFO  15:32:31,786 - #34 ]
INFO  15:32:31,786 - #27 ;
INFO  15:32:31,787 - #47 char
INFO  15:32:31,787 - #47 mat
INFO  15:32:31,787 - #33 [
INFO  15:32:31,787 - #34 ]
INFO  15:32:31,787 - #33 [
INFO  15:32:31,787 - #34 ]
INFO  15:32:31,787 - #27 ;
INFO  15:32:31,787 - #47 int
INFO  15:32:31,787 - #47 mat2
INFO  15:32:31,787 - #33 [
INFO  15:32:31,787 - #34 ]
INFO  15:32:31,787 - #33 [
INFO  15:32:31,787 - #34 ]
INFO  15:32:31,787 - #27 ;
INFO  15:32:31,788 - #47 int
INFO  15:32:31,788 - #47 a
INFO  15:32:31,788 - #27 ;
INFO  15:32:31,788 - #35 {
INFO  15:32:31,788 - #8 void
INFO  15:32:31,788 - #47 main
INFO  15:32:31,788 - #31 (
INFO  15:32:31,789 - #32 )
INFO  15:32:31,789 - #35 {
INFO  15:32:31,789 - #47 mat
INFO  15:32:31,789 - #24 =
INFO  15:32:31,790 - #4 new
INFO  15:32:31,790 - #47 char
INFO  15:32:31,790 - #33 [
INFO  15:32:31,790 - #46 2
INFO  15:32:31,790 - #34 ]
INFO  15:32:31,791 - #33 [
INFO  15:32:31,791 - #46 3
INFO  15:32:31,791 - #34 ]
INFO  15:32:31,791 - #27 ;
INFO  15:32:31,791 - #47 mat2
INFO  15:32:31,791 - #24 =
INFO  15:32:31,791 - #4 new
INFO  15:32:31,791 - #47 int
INFO  15:32:31,791 - #33 [
INFO  15:32:31,791 - #46 2
INFO  15:32:31,791 - #34 ]
INFO  15:32:31,791 - #33 [
INFO  15:32:31,791 - #46 3
INFO  15:32:31,791 - #34 ]
INFO  15:32:31,791 - #27 ;
INFO  15:32:31,791 - #47 mat2
INFO  15:32:31,792 - #33 [
INFO  15:32:31,792 - #46 0
INFO  15:32:31,792 - #34 ]
INFO  15:32:31,792 - #33 [
INFO  15:32:31,792 - #46 0
INFO  15:32:31,792 - #34 ]
INFO  15:32:31,792 - #24 =
INFO  15:32:31,792 - #46 1
INFO  15:32:31,792 - #27 ;
INFO  15:32:31,792 - #47 mat
INFO  15:32:31,792 - #33 [
INFO  15:32:31,792 - #46 0
INFO  15:32:31,792 - #34 ]
INFO  15:32:31,792 - #33 [
INFO  15:32:31,792 - #46 0
INFO  15:32:31,792 - #34 ]
INFO  15:32:31,793 - #24 =
INFO  15:32:31,793 - #48 a
INFO  15:32:31,793 - #27 ;
INFO  15:32:31,793 - #36 }
INFO  15:32:31,793 - #36 }
INFO  15:32:31,793 - ================= PARSIRANO STABLO =================
INFO  15:32:31,796 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  Declarations(
    Declarations(
      Declarations(
        Declarations(
          Declarations(
            Declarations(
              Declarations(
                NoDeclarations(
                ) [NoDeclarations]
                ConstantDeclaration(
                  ConDecl(
                    Type(
                     int
                    ) [Type]
                    ConstDef(
                     nula
                      NumConst(
                       0
                      ) [NumConst]
                    ) [ConstDef]
                    NoConstantDeclaration(
                    ) [NoConstantDeclaration]
                  ) [ConDecl]
                ) [ConstantDeclaration]
              ) [Declarations]
              ConstantDeclaration(
                ConDecl(
                  Type(
                   int
                  ) [Type]
                  ConstDef(
                   jedan
                    NumConst(
                     1
                    ) [NumConst]
                  ) [ConstDef]
                  NoConstantDeclaration(
                  ) [NoConstantDeclaration]
                ) [ConDecl]
              ) [ConstantDeclaration]
            ) [Declarations]
            ConstantDeclaration(
              ConDecl(
                Type(
                 int
                ) [Type]
                ConstDef(
                 pet
                  NumConst(
                   5
                  ) [NumConst]
                ) [ConstDef]
                NoConstantDeclaration(
                ) [NoConstantDeclaration]
              ) [ConDecl]
            ) [ConstantDeclaration]
          ) [Declarations]
          VariableDeclaration(
            VarDeclaration(
              Type(
               int
              ) [Type]
              OneVarDeclaration(
                AddVarDecl1(
                 niz
                  Brackets(
                  ) [Brackets]
                ) [AddVarDecl1]
              ) [OneVarDeclaration]
            ) [VarDeclaration]
          ) [VariableDeclaration]
        ) [Declarations]
        VariableDeclaration(
          VarDeclaration(
            Type(
             char
            ) [Type]
            OneVarDeclaration(
              AddVarDecl1(
               mat
                TwoBrackets(
                ) [TwoBrackets]
              ) [AddVarDecl1]
            ) [OneVarDeclaration]
          ) [VarDeclaration]
        ) [VariableDeclaration]
      ) [Declarations]
      VariableDeclaration(
        VarDeclaration(
          Type(
           int
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             mat2
              TwoBrackets(
              ) [TwoBrackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [VariableDeclaration]
    ) [Declarations]
    VariableDeclaration(
      VarDeclaration(
        Type(
         int
        ) [Type]
        OneVarDeclaration(
          AddVarDecl1(
           a
            NoBrackets(
            ) [NoBrackets]
          ) [AddVarDecl1]
        ) [OneVarDeclaration]
      ) [VarDeclaration]
    ) [VariableDeclaration]
  ) [Declarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      NoVarDeclarations(
      ) [NoVarDeclarations]
      Statements(
        Statements(
          Statements(
            Statements(
              NoStatements(
              ) [NoStatements]
              DesignatorStat(
                DesignatorExpr(
                  Designator(
                    WithoutNamespace(
                     mat
                    ) [WithoutNamespace]
                    NoArrayExpression(
                    ) [NoArrayExpression]
                  ) [Designator]
                  AssignOperation(
                  ) [AssignOperation]
                  PositiveStartExpr(
                    SingleTerm(
                      NewTypeMat(
                        Type(
                         char
                        ) [Type]
                        PositiveStartExpr(
                          SingleTerm(
                            NumberConst(
                             2
                            ) [NumberConst]
                          ) [SingleTerm]
                        ) [PositiveStartExpr]
                        PositiveStartExpr(
                          SingleTerm(
                            NumberConst(
                             3
                            ) [NumberConst]
                          ) [SingleTerm]
                        ) [PositiveStartExpr]
                      ) [NewTypeMat]
                    ) [SingleTerm]
                  ) [PositiveStartExpr]
                ) [DesignatorExpr]
              ) [DesignatorStat]
            ) [Statements]
            DesignatorStat(
              DesignatorExpr(
                Designator(
                  WithoutNamespace(
                   mat2
                  ) [WithoutNamespace]
                  NoArrayExpression(
                  ) [NoArrayExpression]
                ) [Designator]
                AssignOperation(
                ) [AssignOperation]
                PositiveStartExpr(
                  SingleTerm(
                    NewTypeMat(
                      Type(
                       int
                      ) [Type]
                      PositiveStartExpr(
                        SingleTerm(
                          NumberConst(
                           2
                          ) [NumberConst]
                        ) [SingleTerm]
                      ) [PositiveStartExpr]
                      PositiveStartExpr(
                        SingleTerm(
                          NumberConst(
                           3
                          ) [NumberConst]
                        ) [SingleTerm]
                      ) [PositiveStartExpr]
                    ) [NewTypeMat]
                  ) [SingleTerm]
                ) [PositiveStartExpr]
              ) [DesignatorExpr]
            ) [DesignatorStat]
          ) [Statements]
          DesignatorStat(
            DesignatorExpr(
              Designator(
                WithoutNamespace(
                 mat2
                ) [WithoutNamespace]
                AddMatrixExpression(
                  BraExpr(
                    PositiveStartExpr(
                      SingleTerm(
                        NumberConst(
                         0
                        ) [NumberConst]
                      ) [SingleTerm]
                    ) [PositiveStartExpr]
                  ) [BraExpr]
                  BraExpr(
                    PositiveStartExpr(
                      SingleTerm(
                        NumberConst(
                         0
                        ) [NumberConst]
                      ) [SingleTerm]
                    ) [PositiveStartExpr]
                  ) [BraExpr]
                ) [AddMatrixExpression]
              ) [Designator]
              AssignOperation(
              ) [AssignOperation]
              PositiveStartExpr(
                SingleTerm(
                  NumberConst(
                   1
                  ) [NumberConst]
                ) [SingleTerm]
              ) [PositiveStartExpr]
            ) [DesignatorExpr]
          ) [DesignatorStat]
        ) [Statements]
        DesignatorStat(
          DesignatorExpr(
            Designator(
              WithoutNamespace(
               mat
              ) [WithoutNamespace]
              AddMatrixExpression(
                BraExpr(
                  PositiveStartExpr(
                    SingleTerm(
                      NumberConst(
                       0
                      ) [NumberConst]
                    ) [SingleTerm]
                  ) [PositiveStartExpr]
                ) [BraExpr]
                BraExpr(
                  PositiveStartExpr(
                    SingleTerm(
                      NumberConst(
                       0
                      ) [NumberConst]
                    ) [SingleTerm]
                  ) [PositiveStartExpr]
                ) [BraExpr]
              ) [AddMatrixExpression]
            ) [Designator]
            AssignOperation(
            ) [AssignOperation]
            PositiveStartExpr(
              SingleTerm(
                CharacterConst(
                 a
                ) [CharacterConst]
              ) [SingleTerm]
            ) [PositiveStartExpr]
          ) [DesignatorExpr]
        ) [DesignatorStat]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  15:32:31,796 - ================ Semanticka obrada ===================
INFO  15:32:31,798 - NEW CONST
INFO  15:32:31,798 - Con nula: int, 0, 0 on line 5
INFO  15:32:31,798 - NEW CONST
INFO  15:32:31,798 - Con jedan: int, 1, 0 on line 6
INFO  15:32:31,798 - NEW CONST
INFO  15:32:31,798 - Con pet: int, 5, 0 on line 7
INFO  15:32:31,798 - NEW SYMBOL
INFO  15:32:31,798 - Var niz: Arr of int, 0, 0 on line 9
INFO  15:32:31,798 - NEW SYMBOL
INFO  15:32:31,798 - Var mat: Matrix of char, 1, 0 on line 10
INFO  15:32:31,798 - NEW SYMBOL
INFO  15:32:31,798 - Var mat2: Matrix of int, 2, 0 on line 11
INFO  15:32:31,799 - NEW SYMBOL
INFO  15:32:31,799 - Var a: int, 3, 0 on line 13
INFO  15:32:31,799 - Var mat: Matrix of char, 1, 0 on line 18
INFO  15:32:31,799 - Var mat2: Matrix of int, 2, 0 on line 19
INFO  15:32:31,799 - Var mat2: Matrix of int, 2, 0 on line 20
INFO  15:32:31,799 - Var mat: Matrix of char, 1, 0 on line 21
INFO  15:32:31,799 - Meth main: notype, 0, 0 on line 3
INFO  15:32:31,801 - Parser SUCCESS!
