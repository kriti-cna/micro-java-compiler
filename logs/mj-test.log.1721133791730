INFO  21:03:13,561 - Compiling source file: C:\Users\elena\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  21:03:13,562 - ================= LEKSICKA ANALIZA =================
INFO  21:03:13,594 - #2 program
INFO  21:03:13,594 - #47 test301
INFO  21:03:13,594 - #47 int
INFO  21:03:13,596 - #47 a
INFO  21:03:13,596 - #29 ,
INFO  21:03:13,597 - #47 b
INFO  21:03:13,597 - #27 ;
INFO  21:03:13,597 - #35 {
INFO  21:03:13,597 - #8 void
INFO  21:03:13,598 - #47 main
INFO  21:03:13,599 - #31 (
INFO  21:03:13,599 - #32 )
INFO  21:03:13,600 - #47 int
INFO  21:03:13,600 - #47 niz
INFO  21:03:13,600 - #33 [
INFO  21:03:13,600 - #34 ]
INFO  21:03:13,601 - #27 ;
INFO  21:03:13,601 - #47 bool
INFO  21:03:13,611 - #47 nizb
INFO  21:03:13,612 - #33 [
INFO  21:03:13,612 - #34 ]
INFO  21:03:13,612 - #27 ;
INFO  21:03:13,613 - #47 int
INFO  21:03:13,613 - #47 a
INFO  21:03:13,613 - #27 ;
INFO  21:03:13,613 - #35 {
INFO  21:03:13,614 - #47 niz
INFO  21:03:13,616 - #24 =
INFO  21:03:13,622 - #45 range
INFO  21:03:13,624 - #31 (
INFO  21:03:13,624 - #46 7
INFO  21:03:13,624 - #32 )
INFO  21:03:13,625 - #27 ;
INFO  21:03:13,625 - #5 print
INFO  21:03:13,626 - #31 (
INFO  21:03:13,626 - #47 niz
INFO  21:03:13,626 - #32 )
INFO  21:03:13,627 - #27 ;
INFO  21:03:13,627 - #47 a
INFO  21:03:13,627 - #24 =
INFO  21:03:13,627 - #47 niz
INFO  21:03:13,628 - #33 [
INFO  21:03:13,628 - #46 0
INFO  21:03:13,628 - #34 ]
INFO  21:03:13,628 - #27 ;
INFO  21:03:13,629 - #36 }
INFO  21:03:13,629 - #36 }
INFO  21:03:13,631 - ================= PARSIRANO STABLO =================
INFO  21:03:13,638 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  Declarations(
    NoDeclarations(
    ) [NoDeclarations]
    VariableDeclaration(
      VarDeclaration(
        Type(
         int
        ) [Type]
        MultipleVarDeclarations(
          OneVarDeclaration(
            AddVarDecl1(
             a
              NoBrackets(
              ) [NoBrackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
          AddVarDecl1(
           b
            NoBrackets(
            ) [NoBrackets]
          ) [AddVarDecl1]
        ) [MultipleVarDeclarations]
      ) [VarDeclaration]
    ) [VariableDeclaration]
  ) [Declarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      ListOfVarDecl(
        ListOfVarDecl(
          ListOfVarDecl(
            NoVarDeclarations(
            ) [NoVarDeclarations]
            VarDeclaration(
              Type(
               int
              ) [Type]
              OneVarDeclaration(
                AddVarDecl1(
                 niz
                  Brackets(
                  ) [Brackets]
                ) [AddVarDecl1]
              ) [OneVarDeclaration]
            ) [VarDeclaration]
          ) [ListOfVarDecl]
          VarDeclaration(
            Type(
             bool
            ) [Type]
            OneVarDeclaration(
              AddVarDecl1(
               nizb
                Brackets(
                ) [Brackets]
              ) [AddVarDecl1]
            ) [OneVarDeclaration]
          ) [VarDeclaration]
        ) [ListOfVarDecl]
        VarDeclaration(
          Type(
           int
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             a
              NoBrackets(
              ) [NoBrackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [ListOfVarDecl]
      Statements(
        Statements(
          Statements(
            NoStatements(
            ) [NoStatements]
            DesignatorStat(
              DesignatorExpr(
                Designator(
                  WithoutNamespace(
                   niz
                  ) [WithoutNamespace]
                  NoArrayExpression(
                  ) [NoArrayExpression]
                ) [Designator]
                AssignOperation(
                ) [AssignOperation]
                PositiveStartExpr(
                  SingleTerm(
                    RangeExpression(
                      PositiveStartExpr(
                        SingleTerm(
                          NumberConst(
                           7
                          ) [NumberConst]
                        ) [SingleTerm]
                      ) [PositiveStartExpr]
                    ) [RangeExpression]
                  ) [SingleTerm]
                ) [PositiveStartExpr]
              ) [DesignatorExpr]
            ) [DesignatorStat]
          ) [Statements]
          PrintExpr(
            PositiveStartExpr(
              SingleTerm(
                DesignatorFact(
                  Designator(
                    WithoutNamespace(
                     niz
                    ) [WithoutNamespace]
                    NoArrayExpression(
                    ) [NoArrayExpression]
                  ) [Designator]
                ) [DesignatorFact]
              ) [SingleTerm]
            ) [PositiveStartExpr]
            NoNumConstOpt(
            ) [NoNumConstOpt]
          ) [PrintExpr]
        ) [Statements]
        DesignatorStat(
          DesignatorExpr(
            Designator(
              WithoutNamespace(
               a
              ) [WithoutNamespace]
              NoArrayExpression(
              ) [NoArrayExpression]
            ) [Designator]
            AssignOperation(
            ) [AssignOperation]
            PositiveStartExpr(
              SingleTerm(
                DesignatorFact(
                  Designator(
                    WithoutNamespace(
                     niz
                    ) [WithoutNamespace]
                    AddArrayExpression(
                      BraExpr(
                        PositiveStartExpr(
                          SingleTerm(
                            NumberConst(
                             0
                            ) [NumberConst]
                          ) [SingleTerm]
                        ) [PositiveStartExpr]
                      ) [BraExpr]
                    ) [AddArrayExpression]
                  ) [Designator]
                ) [DesignatorFact]
              ) [SingleTerm]
            ) [PositiveStartExpr]
          ) [DesignatorExpr]
        ) [DesignatorStat]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  21:03:13,638 - ================ Semanticka obrada ===================
INFO  21:03:13,662 - Symbol niz found on line 10
INFO  21:03:13,662 - Symbol niz found on line 11
INFO  21:03:13,662 - Symbol a found on line 12
INFO  21:03:13,662 - Symbol niz found on line 12
INFO  21:05:50,036 - Meth main: notype, 0, 0 on line 1
INFO  21:05:56,868 - main() method found on line 1
INFO  21:06:03,464 - Compiling source file: C:\Users\elena\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  21:06:03,464 - ================= LEKSICKA ANALIZA =================
INFO  21:06:03,486 - #2 program
INFO  21:06:03,486 - #47 test301
INFO  21:06:03,486 - #47 int
INFO  21:06:03,487 - #47 a
INFO  21:06:03,488 - #29 ,
INFO  21:06:03,488 - #47 b
INFO  21:06:03,488 - #27 ;
INFO  21:06:03,488 - #35 {
INFO  21:06:03,488 - #8 void
INFO  21:06:03,488 - #47 main
INFO  21:06:03,489 - #31 (
INFO  21:06:03,489 - #32 )
INFO  21:06:03,489 - #47 int
INFO  21:06:03,489 - #47 niz
INFO  21:06:03,490 - #33 [
INFO  21:06:03,490 - #34 ]
INFO  21:06:03,490 - #27 ;
INFO  21:06:03,490 - #47 bool
INFO  21:06:03,490 - #47 nizb
INFO  21:06:03,490 - #33 [
INFO  21:06:03,490 - #34 ]
INFO  21:06:03,490 - #27 ;
INFO  21:06:03,490 - #47 int
INFO  21:06:03,490 - #47 a
INFO  21:06:03,490 - #27 ;
INFO  21:06:03,490 - #35 {
INFO  21:06:03,490 - #47 niz
INFO  21:06:03,491 - #24 =
INFO  21:06:03,491 - #45 range
INFO  21:06:03,492 - #31 (
INFO  21:06:03,492 - #46 7
INFO  21:06:03,492 - #32 )
INFO  21:06:03,492 - #27 ;
INFO  21:06:03,492 - #5 print
INFO  21:06:03,493 - #31 (
INFO  21:06:03,493 - #47 niz
INFO  21:06:03,493 - #32 )
INFO  21:06:03,493 - #27 ;
INFO  21:06:03,493 - #47 a
INFO  21:06:03,493 - #24 =
INFO  21:06:03,493 - #47 niz
INFO  21:06:03,493 - #33 [
INFO  21:06:03,493 - #46 0
INFO  21:06:03,494 - #34 ]
INFO  21:06:03,494 - #27 ;
INFO  21:06:03,494 - #36 }
INFO  21:06:03,494 - #36 }
INFO  21:06:03,496 - ================= PARSIRANO STABLO =================
INFO  21:06:03,501 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  Declarations(
    NoDeclarations(
    ) [NoDeclarations]
    VariableDeclaration(
      VarDeclaration(
        Type(
         int
        ) [Type]
        MultipleVarDeclarations(
          OneVarDeclaration(
            AddVarDecl1(
             a
              NoBrackets(
              ) [NoBrackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
          AddVarDecl1(
           b
            NoBrackets(
            ) [NoBrackets]
          ) [AddVarDecl1]
        ) [MultipleVarDeclarations]
      ) [VarDeclaration]
    ) [VariableDeclaration]
  ) [Declarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      ListOfVarDecl(
        ListOfVarDecl(
          ListOfVarDecl(
            NoVarDeclarations(
            ) [NoVarDeclarations]
            VarDeclaration(
              Type(
               int
              ) [Type]
              OneVarDeclaration(
                AddVarDecl1(
                 niz
                  Brackets(
                  ) [Brackets]
                ) [AddVarDecl1]
              ) [OneVarDeclaration]
            ) [VarDeclaration]
          ) [ListOfVarDecl]
          VarDeclaration(
            Type(
             bool
            ) [Type]
            OneVarDeclaration(
              AddVarDecl1(
               nizb
                Brackets(
                ) [Brackets]
              ) [AddVarDecl1]
            ) [OneVarDeclaration]
          ) [VarDeclaration]
        ) [ListOfVarDecl]
        VarDeclaration(
          Type(
           int
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             a
              NoBrackets(
              ) [NoBrackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [ListOfVarDecl]
      Statements(
        Statements(
          Statements(
            NoStatements(
            ) [NoStatements]
            DesignatorStat(
              DesignatorExpr(
                Designator(
                  WithoutNamespace(
                   niz
                  ) [WithoutNamespace]
                  NoArrayExpression(
                  ) [NoArrayExpression]
                ) [Designator]
                AssignOperation(
                ) [AssignOperation]
                PositiveStartExpr(
                  SingleTerm(
                    RangeExpression(
                      PositiveStartExpr(
                        SingleTerm(
                          NumberConst(
                           7
                          ) [NumberConst]
                        ) [SingleTerm]
                      ) [PositiveStartExpr]
                    ) [RangeExpression]
                  ) [SingleTerm]
                ) [PositiveStartExpr]
              ) [DesignatorExpr]
            ) [DesignatorStat]
          ) [Statements]
          PrintExpr(
            PositiveStartExpr(
              SingleTerm(
                DesignatorFact(
                  Designator(
                    WithoutNamespace(
                     niz
                    ) [WithoutNamespace]
                    NoArrayExpression(
                    ) [NoArrayExpression]
                  ) [Designator]
                ) [DesignatorFact]
              ) [SingleTerm]
            ) [PositiveStartExpr]
            NoNumConstOpt(
            ) [NoNumConstOpt]
          ) [PrintExpr]
        ) [Statements]
        DesignatorStat(
          DesignatorExpr(
            Designator(
              WithoutNamespace(
               a
              ) [WithoutNamespace]
              NoArrayExpression(
              ) [NoArrayExpression]
            ) [Designator]
            AssignOperation(
            ) [AssignOperation]
            PositiveStartExpr(
              SingleTerm(
                DesignatorFact(
                  Designator(
                    WithoutNamespace(
                     niz
                    ) [WithoutNamespace]
                    AddArrayExpression(
                      BraExpr(
                        PositiveStartExpr(
                          SingleTerm(
                            NumberConst(
                             0
                            ) [NumberConst]
                          ) [SingleTerm]
                        ) [PositiveStartExpr]
                      ) [BraExpr]
                    ) [AddArrayExpression]
                  ) [Designator]
                ) [DesignatorFact]
              ) [SingleTerm]
            ) [PositiveStartExpr]
          ) [DesignatorExpr]
        ) [DesignatorStat]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  21:06:03,501 - ================ Semanticka obrada ===================
INFO  21:06:03,506 - Symbol niz found on line 10
INFO  21:06:03,506 - Symbol niz found on line 11
INFO  21:06:03,506 - Symbol a found on line 12
INFO  21:06:03,506 - Symbol niz found on line 12
INFO  21:06:03,506 - Meth main: notype, 0, 0 on line 1
INFO  21:06:03,506 - main() method found on line 1
INFO  21:06:03,508 - Parser SUCCESS!
INFO  21:08:05,433 - Compiling source file: C:\Users\elena\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  21:08:05,434 - ================= LEKSICKA ANALIZA =================
INFO  21:08:05,455 - #2 program
INFO  21:08:05,455 - #47 test301
INFO  21:08:05,455 - #47 int
INFO  21:08:05,456 - #47 a
INFO  21:08:05,456 - #29 ,
INFO  21:08:05,456 - #47 b
INFO  21:08:05,456 - #27 ;
INFO  21:08:05,457 - #35 {
INFO  21:08:05,457 - #8 void
INFO  21:08:05,457 - #47 main
INFO  21:08:05,457 - #31 (
INFO  21:08:05,458 - #32 )
INFO  21:08:05,458 - #47 int
INFO  21:08:05,458 - #47 niz
INFO  21:08:05,458 - #33 [
INFO  21:08:05,458 - #34 ]
INFO  21:08:05,458 - #27 ;
INFO  21:08:05,458 - #47 bool
INFO  21:08:05,459 - #47 nizb
INFO  21:08:05,459 - #33 [
INFO  21:08:05,459 - #34 ]
INFO  21:08:05,459 - #27 ;
INFO  21:08:05,459 - #47 int
INFO  21:08:05,459 - #47 a
INFO  21:08:05,459 - #27 ;
INFO  21:08:05,459 - #35 {
INFO  21:08:05,459 - #47 niz
INFO  21:08:05,459 - #24 =
INFO  21:08:05,460 - #45 range
INFO  21:08:05,461 - #31 (
INFO  21:08:05,461 - #46 7
INFO  21:08:05,461 - #32 )
INFO  21:08:05,461 - #27 ;
INFO  21:08:05,461 - #5 print
INFO  21:08:05,461 - #31 (
INFO  21:08:05,461 - #47 niz
INFO  21:08:05,461 - #32 )
INFO  21:08:05,461 - #27 ;
INFO  21:08:05,462 - #47 a
INFO  21:08:05,462 - #24 =
INFO  21:08:05,462 - #47 niz
INFO  21:08:05,462 - #33 [
INFO  21:08:05,462 - #46 0
INFO  21:08:05,462 - #34 ]
INFO  21:08:05,462 - #27 ;
INFO  21:08:05,463 - #36 }
INFO  21:08:05,463 - #36 }
INFO  21:08:05,463 - ================= PARSIRANO STABLO =================
INFO  21:08:05,467 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  Declarations(
    NoDeclarations(
    ) [NoDeclarations]
    VariableDeclaration(
      VarDeclaration(
        Type(
         int
        ) [Type]
        MultipleVarDeclarations(
          OneVarDeclaration(
            AddVarDecl1(
             a
              NoBrackets(
              ) [NoBrackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
          AddVarDecl1(
           b
            NoBrackets(
            ) [NoBrackets]
          ) [AddVarDecl1]
        ) [MultipleVarDeclarations]
      ) [VarDeclaration]
    ) [VariableDeclaration]
  ) [Declarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      ListOfVarDecl(
        ListOfVarDecl(
          ListOfVarDecl(
            NoVarDeclarations(
            ) [NoVarDeclarations]
            VarDeclaration(
              Type(
               int
              ) [Type]
              OneVarDeclaration(
                AddVarDecl1(
                 niz
                  Brackets(
                  ) [Brackets]
                ) [AddVarDecl1]
              ) [OneVarDeclaration]
            ) [VarDeclaration]
          ) [ListOfVarDecl]
          VarDeclaration(
            Type(
             bool
            ) [Type]
            OneVarDeclaration(
              AddVarDecl1(
               nizb
                Brackets(
                ) [Brackets]
              ) [AddVarDecl1]
            ) [OneVarDeclaration]
          ) [VarDeclaration]
        ) [ListOfVarDecl]
        VarDeclaration(
          Type(
           int
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             a
              NoBrackets(
              ) [NoBrackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [ListOfVarDecl]
      Statements(
        Statements(
          Statements(
            NoStatements(
            ) [NoStatements]
            DesignatorStat(
              DesignatorExpr(
                Designator(
                  WithoutNamespace(
                   niz
                  ) [WithoutNamespace]
                  NoArrayExpression(
                  ) [NoArrayExpression]
                ) [Designator]
                AssignOperation(
                ) [AssignOperation]
                PositiveStartExpr(
                  SingleTerm(
                    RangeExpression(
                      PositiveStartExpr(
                        SingleTerm(
                          NumberConst(
                           7
                          ) [NumberConst]
                        ) [SingleTerm]
                      ) [PositiveStartExpr]
                    ) [RangeExpression]
                  ) [SingleTerm]
                ) [PositiveStartExpr]
              ) [DesignatorExpr]
            ) [DesignatorStat]
          ) [Statements]
          PrintExpr(
            PositiveStartExpr(
              SingleTerm(
                DesignatorFact(
                  Designator(
                    WithoutNamespace(
                     niz
                    ) [WithoutNamespace]
                    NoArrayExpression(
                    ) [NoArrayExpression]
                  ) [Designator]
                ) [DesignatorFact]
              ) [SingleTerm]
            ) [PositiveStartExpr]
            NoNumConstOpt(
            ) [NoNumConstOpt]
          ) [PrintExpr]
        ) [Statements]
        DesignatorStat(
          DesignatorExpr(
            Designator(
              WithoutNamespace(
               a
              ) [WithoutNamespace]
              NoArrayExpression(
              ) [NoArrayExpression]
            ) [Designator]
            AssignOperation(
            ) [AssignOperation]
            PositiveStartExpr(
              SingleTerm(
                DesignatorFact(
                  Designator(
                    WithoutNamespace(
                     niz
                    ) [WithoutNamespace]
                    AddArrayExpression(
                      BraExpr(
                        PositiveStartExpr(
                          SingleTerm(
                            NumberConst(
                             0
                            ) [NumberConst]
                          ) [SingleTerm]
                        ) [PositiveStartExpr]
                      ) [BraExpr]
                    ) [AddArrayExpression]
                  ) [Designator]
                ) [DesignatorFact]
              ) [SingleTerm]
            ) [PositiveStartExpr]
          ) [DesignatorExpr]
        ) [DesignatorStat]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  21:08:05,467 - ================ Semanticka obrada ===================
INFO  21:08:05,469 - Symbol niz found on line 10
INFO  21:08:05,469 - Symbol niz found on line 11
INFO  21:08:05,469 - Symbol a found on line 12
INFO  21:08:05,469 - Symbol niz found on line 12
INFO  21:08:05,469 - Meth main: notype, 0, 0 on line 1
INFO  21:08:05,471 - Parser SUCCESS!
INFO  21:11:38,332 - Compiling source file: C:\Users\elena\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  21:11:38,332 - ================= LEKSICKA ANALIZA =================
INFO  21:11:38,365 - #2 program
INFO  21:11:38,365 - #47 test301
INFO  21:11:38,365 - #3 const
INFO  21:11:38,368 - #47 int
INFO  21:11:38,368 - #47 a
INFO  21:11:38,369 - #27 ;
ERROR 21:11:38,369 - 
Sintaksna greska on line 2
ERROR 21:11:38,369 - Fatalna greska, parsiranje se ne moze nastaviti on line 2
INFO  21:11:38,369 - ================= PARSIRANO STABLO =================
INFO  21:13:00,758 - Compiling source file: C:\Users\elena\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  21:13:00,759 - ================= LEKSICKA ANALIZA =================
INFO  21:13:00,778 - #2 program
INFO  21:13:00,778 - #47 test301
INFO  21:13:00,778 - #3 const
INFO  21:13:00,780 - #47 int
INFO  21:13:00,781 - #47 a
INFO  21:13:00,781 - #24 =
INFO  21:13:00,781 - #46 2
INFO  21:13:00,781 - #27 ;
INFO  21:13:00,781 - #35 {
INFO  21:13:00,782 - #8 void
INFO  21:13:00,782 - #47 main
INFO  21:13:00,782 - #31 (
INFO  21:13:00,782 - #32 )
INFO  21:13:00,783 - #47 int
INFO  21:13:00,783 - #47 niz
INFO  21:13:00,783 - #33 [
INFO  21:13:00,783 - #34 ]
INFO  21:13:00,783 - #27 ;
INFO  21:13:00,783 - #47 bool
INFO  21:13:00,785 - #47 nizb
INFO  21:13:00,785 - #33 [
INFO  21:13:00,785 - #34 ]
INFO  21:13:00,785 - #27 ;
INFO  21:13:00,785 - #47 int
INFO  21:13:00,785 - #47 a
INFO  21:13:00,785 - #27 ;
INFO  21:13:00,785 - #35 {
INFO  21:13:00,785 - #47 niz
INFO  21:13:00,786 - #24 =
INFO  21:13:00,786 - #45 range
INFO  21:13:00,787 - #31 (
INFO  21:13:00,787 - #46 7
INFO  21:13:00,787 - #32 )
INFO  21:13:00,787 - #27 ;
INFO  21:13:00,787 - #5 print
INFO  21:13:00,787 - #31 (
INFO  21:13:00,787 - #47 niz
INFO  21:13:00,787 - #32 )
INFO  21:13:00,788 - #27 ;
INFO  21:13:00,788 - #47 a
INFO  21:13:00,788 - #24 =
INFO  21:13:00,788 - #47 niz
INFO  21:13:00,788 - #33 [
INFO  21:13:00,788 - #46 0
INFO  21:13:00,788 - #34 ]
INFO  21:13:00,788 - #27 ;
INFO  21:13:00,788 - #36 }
INFO  21:13:00,788 - #36 }
INFO  21:13:00,789 - ================= PARSIRANO STABLO =================
INFO  21:13:00,791 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  Declarations(
    NoDeclarations(
    ) [NoDeclarations]
    ConstantDeclaration(
      ConDecl(
        Type(
         int
        ) [Type]
        ConstDef(
         a
          NumConst(
           2
          ) [NumConst]
        ) [ConstDef]
        NoConstantDeclaration(
        ) [NoConstantDeclaration]
      ) [ConDecl]
    ) [ConstantDeclaration]
  ) [Declarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      ListOfVarDecl(
        ListOfVarDecl(
          ListOfVarDecl(
            NoVarDeclarations(
            ) [NoVarDeclarations]
            VarDeclaration(
              Type(
               int
              ) [Type]
              OneVarDeclaration(
                AddVarDecl1(
                 niz
                  Brackets(
                  ) [Brackets]
                ) [AddVarDecl1]
              ) [OneVarDeclaration]
            ) [VarDeclaration]
          ) [ListOfVarDecl]
          VarDeclaration(
            Type(
             bool
            ) [Type]
            OneVarDeclaration(
              AddVarDecl1(
               nizb
                Brackets(
                ) [Brackets]
              ) [AddVarDecl1]
            ) [OneVarDeclaration]
          ) [VarDeclaration]
        ) [ListOfVarDecl]
        VarDeclaration(
          Type(
           int
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             a
              NoBrackets(
              ) [NoBrackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [ListOfVarDecl]
      Statements(
        Statements(
          Statements(
            NoStatements(
            ) [NoStatements]
            DesignatorStat(
              DesignatorExpr(
                Designator(
                  WithoutNamespace(
                   niz
                  ) [WithoutNamespace]
                  NoArrayExpression(
                  ) [NoArrayExpression]
                ) [Designator]
                AssignOperation(
                ) [AssignOperation]
                PositiveStartExpr(
                  SingleTerm(
                    RangeExpression(
                      PositiveStartExpr(
                        SingleTerm(
                          NumberConst(
                           7
                          ) [NumberConst]
                        ) [SingleTerm]
                      ) [PositiveStartExpr]
                    ) [RangeExpression]
                  ) [SingleTerm]
                ) [PositiveStartExpr]
              ) [DesignatorExpr]
            ) [DesignatorStat]
          ) [Statements]
          PrintExpr(
            PositiveStartExpr(
              SingleTerm(
                DesignatorFact(
                  Designator(
                    WithoutNamespace(
                     niz
                    ) [WithoutNamespace]
                    NoArrayExpression(
                    ) [NoArrayExpression]
                  ) [Designator]
                ) [DesignatorFact]
              ) [SingleTerm]
            ) [PositiveStartExpr]
            NoNumConstOpt(
            ) [NoNumConstOpt]
          ) [PrintExpr]
        ) [Statements]
        DesignatorStat(
          DesignatorExpr(
            Designator(
              WithoutNamespace(
               a
              ) [WithoutNamespace]
              NoArrayExpression(
              ) [NoArrayExpression]
            ) [Designator]
            AssignOperation(
            ) [AssignOperation]
            PositiveStartExpr(
              SingleTerm(
                DesignatorFact(
                  Designator(
                    WithoutNamespace(
                     niz
                    ) [WithoutNamespace]
                    AddArrayExpression(
                      BraExpr(
                        PositiveStartExpr(
                          SingleTerm(
                            NumberConst(
                             0
                            ) [NumberConst]
                          ) [SingleTerm]
                        ) [PositiveStartExpr]
                      ) [BraExpr]
                    ) [AddArrayExpression]
                  ) [Designator]
                ) [DesignatorFact]
              ) [SingleTerm]
            ) [PositiveStartExpr]
          ) [DesignatorExpr]
        ) [DesignatorStat]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  21:13:00,792 - ================ Semanticka obrada ===================
INFO  21:14:22,844 - Compiling source file: C:\Users\elena\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  21:14:22,845 - ================= LEKSICKA ANALIZA =================
INFO  21:14:22,881 - #2 program
INFO  21:14:22,882 - #47 test301
INFO  21:14:22,882 - #3 const
INFO  21:14:22,883 - #47 int
INFO  21:14:22,883 - #47 a
INFO  21:14:22,884 - #24 =
INFO  21:14:22,884 - #46 2
INFO  21:14:22,884 - #27 ;
INFO  21:14:22,886 - #35 {
INFO  21:14:22,886 - #8 void
INFO  21:14:22,887 - #47 main
INFO  21:14:22,887 - #31 (
INFO  21:14:22,888 - #32 )
INFO  21:14:22,888 - #47 int
INFO  21:14:22,889 - #47 niz
INFO  21:14:22,889 - #33 [
INFO  21:14:22,889 - #34 ]
INFO  21:14:22,889 - #27 ;
INFO  21:14:22,890 - #47 bool
INFO  21:14:22,890 - #47 nizb
INFO  21:14:22,890 - #33 [
INFO  21:14:22,890 - #34 ]
INFO  21:14:22,890 - #27 ;
INFO  21:14:22,890 - #47 int
INFO  21:14:22,890 - #47 a
INFO  21:14:22,890 - #27 ;
INFO  21:14:22,890 - #35 {
INFO  21:14:22,891 - #47 niz
INFO  21:14:22,891 - #24 =
INFO  21:14:22,892 - #45 range
INFO  21:14:22,892 - #31 (
INFO  21:14:22,892 - #46 7
INFO  21:14:22,892 - #32 )
INFO  21:14:22,893 - #27 ;
INFO  21:14:22,893 - #5 print
INFO  21:14:22,893 - #31 (
INFO  21:14:22,893 - #47 niz
INFO  21:14:22,893 - #32 )
INFO  21:14:22,893 - #27 ;
INFO  21:14:22,893 - #47 a
INFO  21:14:22,894 - #24 =
INFO  21:14:22,894 - #47 niz
INFO  21:14:22,894 - #33 [
INFO  21:14:22,894 - #46 0
INFO  21:14:22,894 - #34 ]
INFO  21:14:22,894 - #27 ;
INFO  21:14:22,894 - #36 }
INFO  21:14:22,895 - #36 }
INFO  21:14:22,896 - ================= PARSIRANO STABLO =================
INFO  21:14:22,900 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  Declarations(
    NoDeclarations(
    ) [NoDeclarations]
    ConstantDeclaration(
      ConDecl(
        Type(
         int
        ) [Type]
        ConstDef(
         a
          NumConst(
           2
          ) [NumConst]
        ) [ConstDef]
        NoConstantDeclaration(
        ) [NoConstantDeclaration]
      ) [ConDecl]
    ) [ConstantDeclaration]
  ) [Declarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      ListOfVarDecl(
        ListOfVarDecl(
          ListOfVarDecl(
            NoVarDeclarations(
            ) [NoVarDeclarations]
            VarDeclaration(
              Type(
               int
              ) [Type]
              OneVarDeclaration(
                AddVarDecl1(
                 niz
                  Brackets(
                  ) [Brackets]
                ) [AddVarDecl1]
              ) [OneVarDeclaration]
            ) [VarDeclaration]
          ) [ListOfVarDecl]
          VarDeclaration(
            Type(
             bool
            ) [Type]
            OneVarDeclaration(
              AddVarDecl1(
               nizb
                Brackets(
                ) [Brackets]
              ) [AddVarDecl1]
            ) [OneVarDeclaration]
          ) [VarDeclaration]
        ) [ListOfVarDecl]
        VarDeclaration(
          Type(
           int
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             a
              NoBrackets(
              ) [NoBrackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [ListOfVarDecl]
      Statements(
        Statements(
          Statements(
            NoStatements(
            ) [NoStatements]
            DesignatorStat(
              DesignatorExpr(
                Designator(
                  WithoutNamespace(
                   niz
                  ) [WithoutNamespace]
                  NoArrayExpression(
                  ) [NoArrayExpression]
                ) [Designator]
                AssignOperation(
                ) [AssignOperation]
                PositiveStartExpr(
                  SingleTerm(
                    RangeExpression(
                      PositiveStartExpr(
                        SingleTerm(
                          NumberConst(
                           7
                          ) [NumberConst]
                        ) [SingleTerm]
                      ) [PositiveStartExpr]
                    ) [RangeExpression]
                  ) [SingleTerm]
                ) [PositiveStartExpr]
              ) [DesignatorExpr]
            ) [DesignatorStat]
          ) [Statements]
          PrintExpr(
            PositiveStartExpr(
              SingleTerm(
                DesignatorFact(
                  Designator(
                    WithoutNamespace(
                     niz
                    ) [WithoutNamespace]
                    NoArrayExpression(
                    ) [NoArrayExpression]
                  ) [Designator]
                ) [DesignatorFact]
              ) [SingleTerm]
            ) [PositiveStartExpr]
            NoNumConstOpt(
            ) [NoNumConstOpt]
          ) [PrintExpr]
        ) [Statements]
        DesignatorStat(
          DesignatorExpr(
            Designator(
              WithoutNamespace(
               a
              ) [WithoutNamespace]
              NoArrayExpression(
              ) [NoArrayExpression]
            ) [Designator]
            AssignOperation(
            ) [AssignOperation]
            PositiveStartExpr(
              SingleTerm(
                DesignatorFact(
                  Designator(
                    WithoutNamespace(
                     niz
                    ) [WithoutNamespace]
                    AddArrayExpression(
                      BraExpr(
                        PositiveStartExpr(
                          SingleTerm(
                            NumberConst(
                             0
                            ) [NumberConst]
                          ) [SingleTerm]
                        ) [PositiveStartExpr]
                      ) [BraExpr]
                    ) [AddArrayExpression]
                  ) [Designator]
                ) [DesignatorFact]
              ) [SingleTerm]
            ) [PositiveStartExpr]
          ) [DesignatorExpr]
        ) [DesignatorStat]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  21:14:22,901 - ================ Semanticka obrada ===================
INFO  21:14:31,974 - Compiling source file: C:\Users\elena\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  21:14:31,976 - ================= LEKSICKA ANALIZA =================
INFO  21:14:32,013 - #2 program
INFO  21:14:32,013 - #47 test301
INFO  21:14:32,013 - #3 const
INFO  21:14:32,014 - #47 int
INFO  21:14:32,014 - #47 a
INFO  21:14:32,015 - #24 =
INFO  21:14:32,015 - #46 2
INFO  21:14:32,015 - #27 ;
INFO  21:14:32,016 - #35 {
INFO  21:14:32,016 - #8 void
INFO  21:14:32,016 - #47 main
INFO  21:14:32,016 - #31 (
INFO  21:14:32,017 - #32 )
INFO  21:14:32,017 - #47 int
INFO  21:14:32,018 - #47 niz
INFO  21:14:32,018 - #33 [
INFO  21:14:32,018 - #34 ]
INFO  21:14:32,019 - #27 ;
INFO  21:14:32,021 - #47 bool
INFO  21:14:32,021 - #47 nizb
INFO  21:14:32,021 - #33 [
INFO  21:14:32,021 - #34 ]
INFO  21:14:32,021 - #27 ;
INFO  21:14:32,021 - #47 int
INFO  21:14:32,021 - #47 a
INFO  21:14:32,021 - #27 ;
INFO  21:14:32,023 - #35 {
INFO  21:14:32,023 - #47 niz
INFO  21:14:32,024 - #24 =
INFO  21:14:32,027 - #45 range
INFO  21:14:32,028 - #31 (
INFO  21:14:32,029 - #46 7
INFO  21:14:32,029 - #32 )
INFO  21:14:32,029 - #27 ;
INFO  21:14:32,029 - #5 print
INFO  21:14:32,029 - #31 (
INFO  21:14:32,029 - #47 niz
INFO  21:14:32,029 - #32 )
INFO  21:14:32,031 - #27 ;
INFO  21:14:32,031 - #47 a
INFO  21:14:32,031 - #24 =
INFO  21:14:32,031 - #47 niz
INFO  21:14:32,031 - #33 [
INFO  21:14:32,031 - #46 0
INFO  21:14:32,031 - #34 ]
INFO  21:14:32,031 - #27 ;
INFO  21:14:32,032 - #36 }
INFO  21:14:32,033 - #36 }
INFO  21:14:32,035 - ================= PARSIRANO STABLO =================
INFO  21:14:32,040 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  Declarations(
    NoDeclarations(
    ) [NoDeclarations]
    ConstantDeclaration(
      ConDecl(
        Type(
         int
        ) [Type]
        ConstDef(
         a
          NumConst(
           2
          ) [NumConst]
        ) [ConstDef]
        NoConstantDeclaration(
        ) [NoConstantDeclaration]
      ) [ConDecl]
    ) [ConstantDeclaration]
  ) [Declarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      ListOfVarDecl(
        ListOfVarDecl(
          ListOfVarDecl(
            NoVarDeclarations(
            ) [NoVarDeclarations]
            VarDeclaration(
              Type(
               int
              ) [Type]
              OneVarDeclaration(
                AddVarDecl1(
                 niz
                  Brackets(
                  ) [Brackets]
                ) [AddVarDecl1]
              ) [OneVarDeclaration]
            ) [VarDeclaration]
          ) [ListOfVarDecl]
          VarDeclaration(
            Type(
             bool
            ) [Type]
            OneVarDeclaration(
              AddVarDecl1(
               nizb
                Brackets(
                ) [Brackets]
              ) [AddVarDecl1]
            ) [OneVarDeclaration]
          ) [VarDeclaration]
        ) [ListOfVarDecl]
        VarDeclaration(
          Type(
           int
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             a
              NoBrackets(
              ) [NoBrackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [ListOfVarDecl]
      Statements(
        Statements(
          Statements(
            NoStatements(
            ) [NoStatements]
            DesignatorStat(
              DesignatorExpr(
                Designator(
                  WithoutNamespace(
                   niz
                  ) [WithoutNamespace]
                  NoArrayExpression(
                  ) [NoArrayExpression]
                ) [Designator]
                AssignOperation(
                ) [AssignOperation]
                PositiveStartExpr(
                  SingleTerm(
                    RangeExpression(
                      PositiveStartExpr(
                        SingleTerm(
                          NumberConst(
                           7
                          ) [NumberConst]
                        ) [SingleTerm]
                      ) [PositiveStartExpr]
                    ) [RangeExpression]
                  ) [SingleTerm]
                ) [PositiveStartExpr]
              ) [DesignatorExpr]
            ) [DesignatorStat]
          ) [Statements]
          PrintExpr(
            PositiveStartExpr(
              SingleTerm(
                DesignatorFact(
                  Designator(
                    WithoutNamespace(
                     niz
                    ) [WithoutNamespace]
                    NoArrayExpression(
                    ) [NoArrayExpression]
                  ) [Designator]
                ) [DesignatorFact]
              ) [SingleTerm]
            ) [PositiveStartExpr]
            NoNumConstOpt(
            ) [NoNumConstOpt]
          ) [PrintExpr]
        ) [Statements]
        DesignatorStat(
          DesignatorExpr(
            Designator(
              WithoutNamespace(
               a
              ) [WithoutNamespace]
              NoArrayExpression(
              ) [NoArrayExpression]
            ) [Designator]
            AssignOperation(
            ) [AssignOperation]
            PositiveStartExpr(
              SingleTerm(
                DesignatorFact(
                  Designator(
                    WithoutNamespace(
                     niz
                    ) [WithoutNamespace]
                    AddArrayExpression(
                      BraExpr(
                        PositiveStartExpr(
                          SingleTerm(
                            NumberConst(
                             0
                            ) [NumberConst]
                          ) [SingleTerm]
                        ) [PositiveStartExpr]
                      ) [BraExpr]
                    ) [AddArrayExpression]
                  ) [Designator]
                ) [DesignatorFact]
              ) [SingleTerm]
            ) [PositiveStartExpr]
          ) [DesignatorExpr]
        ) [DesignatorStat]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  21:14:32,040 - ================ Semanticka obrada ===================
INFO  21:14:38,931 - Meth main: notype, 0, 0 on line 1
INFO  21:14:38,962 - Parser SUCCESS!
ERROR 21:15:05,442 - Const a already exist on line 2
INFO  21:15:31,426 - Compiling source file: C:\Users\elena\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  21:15:31,427 - ================= LEKSICKA ANALIZA =================
INFO  21:15:31,456 - #2 program
INFO  21:15:31,456 - #47 test301
INFO  21:15:31,456 - #3 const
INFO  21:15:31,458 - #47 int
INFO  21:15:31,458 - #47 d
INFO  21:15:31,459 - #24 =
INFO  21:15:31,459 - #46 2
INFO  21:15:31,459 - #27 ;
INFO  21:15:31,460 - #35 {
INFO  21:15:31,461 - #8 void
INFO  21:15:31,461 - #47 main
INFO  21:15:31,462 - #31 (
INFO  21:15:31,462 - #32 )
INFO  21:15:31,462 - #47 int
INFO  21:15:31,463 - #47 niz
INFO  21:15:31,463 - #33 [
INFO  21:15:31,463 - #34 ]
INFO  21:15:31,463 - #27 ;
INFO  21:15:31,464 - #47 bool
INFO  21:15:31,465 - #47 nizb
INFO  21:15:31,465 - #33 [
INFO  21:15:31,465 - #34 ]
INFO  21:15:31,465 - #27 ;
INFO  21:15:31,465 - #47 int
INFO  21:15:31,465 - #47 a
INFO  21:15:31,465 - #27 ;
INFO  21:15:31,466 - #35 {
INFO  21:15:31,466 - #47 niz
INFO  21:15:31,466 - #24 =
INFO  21:15:31,467 - #45 range
INFO  21:15:31,467 - #31 (
INFO  21:15:31,467 - #46 7
INFO  21:15:31,467 - #32 )
INFO  21:15:31,468 - #27 ;
INFO  21:15:31,468 - #5 print
INFO  21:15:31,468 - #31 (
INFO  21:15:31,468 - #47 niz
INFO  21:15:31,468 - #32 )
INFO  21:15:31,468 - #27 ;
INFO  21:15:31,468 - #47 a
INFO  21:15:31,468 - #24 =
INFO  21:15:31,468 - #47 niz
INFO  21:15:31,468 - #33 [
INFO  21:15:31,468 - #46 0
INFO  21:15:31,468 - #34 ]
INFO  21:15:31,470 - #27 ;
INFO  21:15:31,470 - #36 }
INFO  21:15:31,470 - #36 }
INFO  21:15:31,471 - ================= PARSIRANO STABLO =================
INFO  21:15:31,475 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  Declarations(
    NoDeclarations(
    ) [NoDeclarations]
    ConstantDeclaration(
      ConDecl(
        Type(
         int
        ) [Type]
        ConstDef(
         d
          NumConst(
           2
          ) [NumConst]
        ) [ConstDef]
        NoConstantDeclaration(
        ) [NoConstantDeclaration]
      ) [ConDecl]
    ) [ConstantDeclaration]
  ) [Declarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      ListOfVarDecl(
        ListOfVarDecl(
          ListOfVarDecl(
            NoVarDeclarations(
            ) [NoVarDeclarations]
            VarDeclaration(
              Type(
               int
              ) [Type]
              OneVarDeclaration(
                AddVarDecl1(
                 niz
                  Brackets(
                  ) [Brackets]
                ) [AddVarDecl1]
              ) [OneVarDeclaration]
            ) [VarDeclaration]
          ) [ListOfVarDecl]
          VarDeclaration(
            Type(
             bool
            ) [Type]
            OneVarDeclaration(
              AddVarDecl1(
               nizb
                Brackets(
                ) [Brackets]
              ) [AddVarDecl1]
            ) [OneVarDeclaration]
          ) [VarDeclaration]
        ) [ListOfVarDecl]
        VarDeclaration(
          Type(
           int
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             a
              NoBrackets(
              ) [NoBrackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [ListOfVarDecl]
      Statements(
        Statements(
          Statements(
            NoStatements(
            ) [NoStatements]
            DesignatorStat(
              DesignatorExpr(
                Designator(
                  WithoutNamespace(
                   niz
                  ) [WithoutNamespace]
                  NoArrayExpression(
                  ) [NoArrayExpression]
                ) [Designator]
                AssignOperation(
                ) [AssignOperation]
                PositiveStartExpr(
                  SingleTerm(
                    RangeExpression(
                      PositiveStartExpr(
                        SingleTerm(
                          NumberConst(
                           7
                          ) [NumberConst]
                        ) [SingleTerm]
                      ) [PositiveStartExpr]
                    ) [RangeExpression]
                  ) [SingleTerm]
                ) [PositiveStartExpr]
              ) [DesignatorExpr]
            ) [DesignatorStat]
          ) [Statements]
          PrintExpr(
            PositiveStartExpr(
              SingleTerm(
                DesignatorFact(
                  Designator(
                    WithoutNamespace(
                     niz
                    ) [WithoutNamespace]
                    NoArrayExpression(
                    ) [NoArrayExpression]
                  ) [Designator]
                ) [DesignatorFact]
              ) [SingleTerm]
            ) [PositiveStartExpr]
            NoNumConstOpt(
            ) [NoNumConstOpt]
          ) [PrintExpr]
        ) [Statements]
        DesignatorStat(
          DesignatorExpr(
            Designator(
              WithoutNamespace(
               a
              ) [WithoutNamespace]
              NoArrayExpression(
              ) [NoArrayExpression]
            ) [Designator]
            AssignOperation(
            ) [AssignOperation]
            PositiveStartExpr(
              SingleTerm(
                DesignatorFact(
                  Designator(
                    WithoutNamespace(
                     niz
                    ) [WithoutNamespace]
                    AddArrayExpression(
                      BraExpr(
                        PositiveStartExpr(
                          SingleTerm(
                            NumberConst(
                             0
                            ) [NumberConst]
                          ) [SingleTerm]
                        ) [PositiveStartExpr]
                      ) [BraExpr]
                    ) [AddArrayExpression]
                  ) [Designator]
                ) [DesignatorFact]
              ) [SingleTerm]
            ) [PositiveStartExpr]
          ) [DesignatorExpr]
        ) [DesignatorStat]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  21:15:31,475 - ================ Semanticka obrada ===================
INFO  21:15:31,509 - Const d defined on line 2
INFO  21:15:42,605 - Symbol niz found on line 10
INFO  21:15:42,606 - Symbol niz found on line 11
INFO  21:15:42,607 - Symbol a found on line 12
INFO  21:15:42,607 - Symbol niz found on line 12
INFO  21:15:42,608 - Meth main: notype, 0, 0 on line 1
INFO  21:15:42,640 - Parser SUCCESS!
INFO  21:15:55,704 - Compiling source file: C:\Users\elena\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  21:15:55,705 - ================= LEKSICKA ANALIZA =================
INFO  21:15:55,744 - #2 program
INFO  21:15:55,744 - #47 test301
INFO  21:15:55,744 - #3 const
INFO  21:15:55,746 - #47 int
INFO  21:15:55,746 - #47 d
INFO  21:15:55,746 - #24 =
INFO  21:15:55,746 - #46 2
INFO  21:15:55,746 - #27 ;
INFO  21:15:55,747 - #35 {
INFO  21:15:55,747 - #8 void
INFO  21:15:55,748 - #47 main
INFO  21:15:55,748 - #31 (
INFO  21:15:55,748 - #32 )
INFO  21:15:55,749 - #47 int
INFO  21:15:55,749 - #47 niz
INFO  21:15:55,749 - #33 [
INFO  21:15:55,749 - #34 ]
INFO  21:15:55,749 - #27 ;
INFO  21:15:55,750 - #47 bool
INFO  21:15:55,750 - #47 nizb
INFO  21:15:55,750 - #33 [
INFO  21:15:55,751 - #34 ]
INFO  21:15:55,751 - #27 ;
INFO  21:15:55,751 - #47 int
INFO  21:15:55,751 - #47 a
INFO  21:15:55,751 - #27 ;
INFO  21:15:55,752 - #35 {
INFO  21:15:55,753 - #47 niz
INFO  21:15:55,754 - #24 =
INFO  21:15:55,755 - #45 range
INFO  21:15:55,756 - #31 (
INFO  21:15:55,756 - #46 7
INFO  21:15:55,757 - #32 )
INFO  21:15:55,757 - #27 ;
INFO  21:15:55,757 - #5 print
INFO  21:15:55,757 - #31 (
INFO  21:15:55,757 - #47 niz
INFO  21:15:55,757 - #32 )
INFO  21:15:55,758 - #27 ;
INFO  21:15:55,758 - #47 a
INFO  21:15:55,758 - #24 =
INFO  21:15:55,759 - #47 niz
INFO  21:15:55,759 - #33 [
INFO  21:15:55,759 - #46 0
INFO  21:15:55,759 - #34 ]
INFO  21:15:55,759 - #27 ;
INFO  21:15:55,760 - #36 }
INFO  21:15:55,760 - #36 }
INFO  21:15:55,763 - ================= PARSIRANO STABLO =================
INFO  21:15:55,768 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  Declarations(
    NoDeclarations(
    ) [NoDeclarations]
    ConstantDeclaration(
      ConDecl(
        Type(
         int
        ) [Type]
        ConstDef(
         d
          NumConst(
           2
          ) [NumConst]
        ) [ConstDef]
        NoConstantDeclaration(
        ) [NoConstantDeclaration]
      ) [ConDecl]
    ) [ConstantDeclaration]
  ) [Declarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      ListOfVarDecl(
        ListOfVarDecl(
          ListOfVarDecl(
            NoVarDeclarations(
            ) [NoVarDeclarations]
            VarDeclaration(
              Type(
               int
              ) [Type]
              OneVarDeclaration(
                AddVarDecl1(
                 niz
                  Brackets(
                  ) [Brackets]
                ) [AddVarDecl1]
              ) [OneVarDeclaration]
            ) [VarDeclaration]
          ) [ListOfVarDecl]
          VarDeclaration(
            Type(
             bool
            ) [Type]
            OneVarDeclaration(
              AddVarDecl1(
               nizb
                Brackets(
                ) [Brackets]
              ) [AddVarDecl1]
            ) [OneVarDeclaration]
          ) [VarDeclaration]
        ) [ListOfVarDecl]
        VarDeclaration(
          Type(
           int
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             a
              NoBrackets(
              ) [NoBrackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [ListOfVarDecl]
      Statements(
        Statements(
          Statements(
            NoStatements(
            ) [NoStatements]
            DesignatorStat(
              DesignatorExpr(
                Designator(
                  WithoutNamespace(
                   niz
                  ) [WithoutNamespace]
                  NoArrayExpression(
                  ) [NoArrayExpression]
                ) [Designator]
                AssignOperation(
                ) [AssignOperation]
                PositiveStartExpr(
                  SingleTerm(
                    RangeExpression(
                      PositiveStartExpr(
                        SingleTerm(
                          NumberConst(
                           7
                          ) [NumberConst]
                        ) [SingleTerm]
                      ) [PositiveStartExpr]
                    ) [RangeExpression]
                  ) [SingleTerm]
                ) [PositiveStartExpr]
              ) [DesignatorExpr]
            ) [DesignatorStat]
          ) [Statements]
          PrintExpr(
            PositiveStartExpr(
              SingleTerm(
                DesignatorFact(
                  Designator(
                    WithoutNamespace(
                     niz
                    ) [WithoutNamespace]
                    NoArrayExpression(
                    ) [NoArrayExpression]
                  ) [Designator]
                ) [DesignatorFact]
              ) [SingleTerm]
            ) [PositiveStartExpr]
            NoNumConstOpt(
            ) [NoNumConstOpt]
          ) [PrintExpr]
        ) [Statements]
        DesignatorStat(
          DesignatorExpr(
            Designator(
              WithoutNamespace(
               a
              ) [WithoutNamespace]
              NoArrayExpression(
              ) [NoArrayExpression]
            ) [Designator]
            AssignOperation(
            ) [AssignOperation]
            PositiveStartExpr(
              SingleTerm(
                DesignatorFact(
                  Designator(
                    WithoutNamespace(
                     niz
                    ) [WithoutNamespace]
                    AddArrayExpression(
                      BraExpr(
                        PositiveStartExpr(
                          SingleTerm(
                            NumberConst(
                             0
                            ) [NumberConst]
                          ) [SingleTerm]
                        ) [PositiveStartExpr]
                      ) [BraExpr]
                    ) [AddArrayExpression]
                  ) [Designator]
                ) [DesignatorFact]
              ) [SingleTerm]
            ) [PositiveStartExpr]
          ) [DesignatorExpr]
        ) [DesignatorStat]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  21:15:55,768 - ================ Semanticka obrada ===================
INFO  21:15:58,774 - Const d defined on line 2
INFO  21:15:58,777 - Symbol niz found on line 10
INFO  21:15:58,777 - Symbol niz found on line 11
INFO  21:15:58,777 - Symbol a found on line 12
INFO  21:15:58,777 - Symbol niz found on line 12
INFO  21:15:58,778 - Meth main: notype, 0, 0 on line 1
INFO  21:15:58,815 - Parser SUCCESS!
INFO  21:16:57,674 - Compiling source file: C:\Users\elena\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  21:16:57,674 - ================= LEKSICKA ANALIZA =================
INFO  21:16:57,701 - #2 program
INFO  21:16:57,701 - #47 test301
INFO  21:16:57,701 - #3 const
INFO  21:16:57,702 - #47 int
INFO  21:16:57,703 - #47 d
INFO  21:16:57,703 - #24 =
INFO  21:16:57,703 - #46 2
INFO  21:16:57,703 - #27 ;
INFO  21:16:57,704 - #35 {
INFO  21:16:57,704 - #8 void
INFO  21:16:57,704 - #47 main
INFO  21:16:57,704 - #31 (
INFO  21:16:57,704 - #32 )
INFO  21:16:57,706 - #47 int
INFO  21:16:57,706 - #47 niz
INFO  21:16:57,706 - #33 [
INFO  21:16:57,706 - #34 ]
INFO  21:16:57,706 - #27 ;
INFO  21:16:57,707 - #47 bool
INFO  21:16:57,707 - #47 nizb
INFO  21:16:57,707 - #33 [
INFO  21:16:57,707 - #34 ]
INFO  21:16:57,707 - #27 ;
INFO  21:16:57,707 - #47 int
INFO  21:16:57,707 - #47 a
INFO  21:16:57,707 - #27 ;
INFO  21:16:57,707 - #35 {
INFO  21:16:57,707 - #47 niz
INFO  21:16:57,707 - #24 =
INFO  21:16:57,708 - #45 range
INFO  21:16:57,709 - #31 (
INFO  21:16:57,709 - #46 7
INFO  21:16:57,709 - #32 )
INFO  21:16:57,709 - #27 ;
INFO  21:16:57,709 - #5 print
INFO  21:16:57,709 - #31 (
INFO  21:16:57,709 - #47 niz
INFO  21:16:57,709 - #32 )
INFO  21:16:57,710 - #27 ;
INFO  21:16:57,710 - #47 a
INFO  21:16:57,710 - #24 =
INFO  21:16:57,710 - #47 niz
INFO  21:16:57,710 - #33 [
INFO  21:16:57,710 - #46 0
INFO  21:16:57,710 - #34 ]
INFO  21:16:57,710 - #27 ;
INFO  21:16:57,710 - #36 }
INFO  21:16:57,710 - #36 }
INFO  21:16:57,712 - ================= PARSIRANO STABLO =================
INFO  21:16:57,715 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  Declarations(
    NoDeclarations(
    ) [NoDeclarations]
    ConstantDeclaration(
      ConDecl(
        Type(
         int
        ) [Type]
        ConstDef(
         d
          NumConst(
           2
          ) [NumConst]
        ) [ConstDef]
        NoConstantDeclaration(
        ) [NoConstantDeclaration]
      ) [ConDecl]
    ) [ConstantDeclaration]
  ) [Declarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      ListOfVarDecl(
        ListOfVarDecl(
          ListOfVarDecl(
            NoVarDeclarations(
            ) [NoVarDeclarations]
            VarDeclaration(
              Type(
               int
              ) [Type]
              OneVarDeclaration(
                AddVarDecl1(
                 niz
                  Brackets(
                  ) [Brackets]
                ) [AddVarDecl1]
              ) [OneVarDeclaration]
            ) [VarDeclaration]
          ) [ListOfVarDecl]
          VarDeclaration(
            Type(
             bool
            ) [Type]
            OneVarDeclaration(
              AddVarDecl1(
               nizb
                Brackets(
                ) [Brackets]
              ) [AddVarDecl1]
            ) [OneVarDeclaration]
          ) [VarDeclaration]
        ) [ListOfVarDecl]
        VarDeclaration(
          Type(
           int
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             a
              NoBrackets(
              ) [NoBrackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [ListOfVarDecl]
      Statements(
        Statements(
          Statements(
            NoStatements(
            ) [NoStatements]
            DesignatorStat(
              DesignatorExpr(
                Designator(
                  WithoutNamespace(
                   niz
                  ) [WithoutNamespace]
                  NoArrayExpression(
                  ) [NoArrayExpression]
                ) [Designator]
                AssignOperation(
                ) [AssignOperation]
                PositiveStartExpr(
                  SingleTerm(
                    RangeExpression(
                      PositiveStartExpr(
                        SingleTerm(
                          NumberConst(
                           7
                          ) [NumberConst]
                        ) [SingleTerm]
                      ) [PositiveStartExpr]
                    ) [RangeExpression]
                  ) [SingleTerm]
                ) [PositiveStartExpr]
              ) [DesignatorExpr]
            ) [DesignatorStat]
          ) [Statements]
          PrintExpr(
            PositiveStartExpr(
              SingleTerm(
                DesignatorFact(
                  Designator(
                    WithoutNamespace(
                     niz
                    ) [WithoutNamespace]
                    NoArrayExpression(
                    ) [NoArrayExpression]
                  ) [Designator]
                ) [DesignatorFact]
              ) [SingleTerm]
            ) [PositiveStartExpr]
            NoNumConstOpt(
            ) [NoNumConstOpt]
          ) [PrintExpr]
        ) [Statements]
        DesignatorStat(
          DesignatorExpr(
            Designator(
              WithoutNamespace(
               a
              ) [WithoutNamespace]
              NoArrayExpression(
              ) [NoArrayExpression]
            ) [Designator]
            AssignOperation(
            ) [AssignOperation]
            PositiveStartExpr(
              SingleTerm(
                DesignatorFact(
                  Designator(
                    WithoutNamespace(
                     niz
                    ) [WithoutNamespace]
                    AddArrayExpression(
                      BraExpr(
                        PositiveStartExpr(
                          SingleTerm(
                            NumberConst(
                             0
                            ) [NumberConst]
                          ) [SingleTerm]
                        ) [PositiveStartExpr]
                      ) [BraExpr]
                    ) [AddArrayExpression]
                  ) [Designator]
                ) [DesignatorFact]
              ) [SingleTerm]
            ) [PositiveStartExpr]
          ) [DesignatorExpr]
        ) [DesignatorStat]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  21:16:57,716 - ================ Semanticka obrada ===================
INFO  21:16:57,720 - Const d defined on line 2
INFO  21:16:57,720 - Symbol niz found on line 10
INFO  21:16:57,720 - Symbol niz found on line 11
INFO  21:16:57,720 - Symbol a found on line 12
INFO  21:16:57,720 - Symbol niz found on line 12
INFO  21:16:57,720 - Meth main: notype, 0, 0 on line 1
INFO  21:16:57,723 - Parser SUCCESS!
INFO  21:17:20,800 - Compiling source file: C:\Users\elena\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  21:17:20,800 - ================= LEKSICKA ANALIZA =================
INFO  21:17:20,819 - #2 program
INFO  21:17:20,819 - #47 test301
INFO  21:17:20,819 - #3 const
INFO  21:17:20,820 - #47 int
INFO  21:17:20,820 - #47 d
INFO  21:17:20,820 - #24 =
INFO  21:17:20,820 - #46 2
INFO  21:17:20,820 - #27 ;
INFO  21:17:20,821 - #35 {
INFO  21:17:20,821 - #8 void
INFO  21:17:20,821 - #47 main
INFO  21:17:20,821 - #31 (
INFO  21:17:20,822 - #32 )
INFO  21:17:20,822 - #47 int
INFO  21:17:20,822 - #47 niz
INFO  21:17:20,822 - #33 [
INFO  21:17:20,822 - #34 ]
INFO  21:17:20,822 - #27 ;
INFO  21:17:20,823 - #47 bool
INFO  21:17:20,823 - #47 nizb
INFO  21:17:20,823 - #33 [
INFO  21:17:20,823 - #34 ]
INFO  21:17:20,823 - #27 ;
INFO  21:17:20,823 - #47 int
INFO  21:17:20,824 - #47 a
INFO  21:17:20,824 - #27 ;
INFO  21:17:20,824 - #35 {
INFO  21:17:20,824 - #47 niz
INFO  21:17:20,824 - #24 =
INFO  21:17:20,826 - #45 range
INFO  21:17:20,827 - #31 (
INFO  21:17:20,827 - #46 7
INFO  21:17:20,827 - #32 )
INFO  21:17:20,827 - #27 ;
INFO  21:17:20,827 - #5 print
INFO  21:17:20,827 - #31 (
INFO  21:17:20,827 - #47 niz
INFO  21:17:20,827 - #32 )
INFO  21:17:20,828 - #27 ;
INFO  21:17:20,828 - #47 a
INFO  21:17:20,828 - #24 =
INFO  21:17:20,828 - #47 niz
INFO  21:17:20,828 - #33 [
INFO  21:17:20,828 - #46 0
INFO  21:17:20,828 - #34 ]
INFO  21:17:20,828 - #27 ;
INFO  21:17:20,828 - #36 }
INFO  21:17:20,828 - #36 }
INFO  21:17:20,829 - ================= PARSIRANO STABLO =================
INFO  21:17:20,832 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  Declarations(
    NoDeclarations(
    ) [NoDeclarations]
    ConstantDeclaration(
      ConDecl(
        Type(
         int
        ) [Type]
        ConstDef(
         d
          NumConst(
           2
          ) [NumConst]
        ) [ConstDef]
        NoConstantDeclaration(
        ) [NoConstantDeclaration]
      ) [ConDecl]
    ) [ConstantDeclaration]
  ) [Declarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      ListOfVarDecl(
        ListOfVarDecl(
          ListOfVarDecl(
            NoVarDeclarations(
            ) [NoVarDeclarations]
            VarDeclaration(
              Type(
               int
              ) [Type]
              OneVarDeclaration(
                AddVarDecl1(
                 niz
                  Brackets(
                  ) [Brackets]
                ) [AddVarDecl1]
              ) [OneVarDeclaration]
            ) [VarDeclaration]
          ) [ListOfVarDecl]
          VarDeclaration(
            Type(
             bool
            ) [Type]
            OneVarDeclaration(
              AddVarDecl1(
               nizb
                Brackets(
                ) [Brackets]
              ) [AddVarDecl1]
            ) [OneVarDeclaration]
          ) [VarDeclaration]
        ) [ListOfVarDecl]
        VarDeclaration(
          Type(
           int
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             a
              NoBrackets(
              ) [NoBrackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [ListOfVarDecl]
      Statements(
        Statements(
          Statements(
            NoStatements(
            ) [NoStatements]
            DesignatorStat(
              DesignatorExpr(
                Designator(
                  WithoutNamespace(
                   niz
                  ) [WithoutNamespace]
                  NoArrayExpression(
                  ) [NoArrayExpression]
                ) [Designator]
                AssignOperation(
                ) [AssignOperation]
                PositiveStartExpr(
                  SingleTerm(
                    RangeExpression(
                      PositiveStartExpr(
                        SingleTerm(
                          NumberConst(
                           7
                          ) [NumberConst]
                        ) [SingleTerm]
                      ) [PositiveStartExpr]
                    ) [RangeExpression]
                  ) [SingleTerm]
                ) [PositiveStartExpr]
              ) [DesignatorExpr]
            ) [DesignatorStat]
          ) [Statements]
          PrintExpr(
            PositiveStartExpr(
              SingleTerm(
                DesignatorFact(
                  Designator(
                    WithoutNamespace(
                     niz
                    ) [WithoutNamespace]
                    NoArrayExpression(
                    ) [NoArrayExpression]
                  ) [Designator]
                ) [DesignatorFact]
              ) [SingleTerm]
            ) [PositiveStartExpr]
            NoNumConstOpt(
            ) [NoNumConstOpt]
          ) [PrintExpr]
        ) [Statements]
        DesignatorStat(
          DesignatorExpr(
            Designator(
              WithoutNamespace(
               a
              ) [WithoutNamespace]
              NoArrayExpression(
              ) [NoArrayExpression]
            ) [Designator]
            AssignOperation(
            ) [AssignOperation]
            PositiveStartExpr(
              SingleTerm(
                DesignatorFact(
                  Designator(
                    WithoutNamespace(
                     niz
                    ) [WithoutNamespace]
                    AddArrayExpression(
                      BraExpr(
                        PositiveStartExpr(
                          SingleTerm(
                            NumberConst(
                             0
                            ) [NumberConst]
                          ) [SingleTerm]
                        ) [PositiveStartExpr]
                      ) [BraExpr]
                    ) [AddArrayExpression]
                  ) [Designator]
                ) [DesignatorFact]
              ) [SingleTerm]
            ) [PositiveStartExpr]
          ) [DesignatorExpr]
        ) [DesignatorStat]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  21:17:20,832 - ================ Semanticka obrada ===================
INFO  21:18:14,966 - Compiling source file: C:\Users\elena\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  21:18:14,966 - ================= LEKSICKA ANALIZA =================
INFO  21:18:15,005 - #2 program
INFO  21:18:15,005 - #47 test301
INFO  21:18:15,005 - #3 const
INFO  21:18:15,006 - #47 int
INFO  21:18:15,006 - #47 d
INFO  21:18:15,008 - #24 =
INFO  21:18:15,008 - #46 2
INFO  21:18:15,008 - #27 ;
INFO  21:18:15,009 - #35 {
INFO  21:18:15,009 - #8 void
INFO  21:18:15,009 - #47 main
INFO  21:18:15,010 - #31 (
INFO  21:18:15,011 - #32 )
INFO  21:18:15,012 - #47 int
INFO  21:18:15,012 - #47 niz
INFO  21:18:15,012 - #33 [
INFO  21:18:15,012 - #34 ]
INFO  21:18:15,012 - #27 ;
INFO  21:18:15,014 - #47 bool
INFO  21:18:15,014 - #47 nizb
INFO  21:18:15,014 - #33 [
INFO  21:18:15,014 - #34 ]
INFO  21:18:15,014 - #27 ;
INFO  21:18:15,014 - #47 int
INFO  21:18:15,014 - #47 a
INFO  21:18:15,015 - #27 ;
INFO  21:18:15,015 - #35 {
INFO  21:18:15,016 - #47 niz
INFO  21:18:15,017 - #24 =
INFO  21:18:15,018 - #45 range
INFO  21:18:15,019 - #31 (
INFO  21:18:15,019 - #46 7
INFO  21:18:15,019 - #32 )
INFO  21:18:15,019 - #27 ;
INFO  21:18:15,019 - #5 print
INFO  21:18:15,020 - #31 (
INFO  21:18:15,020 - #47 niz
INFO  21:18:15,020 - #32 )
INFO  21:18:15,020 - #27 ;
INFO  21:18:15,020 - #47 a
INFO  21:18:15,022 - #24 =
INFO  21:18:15,022 - #47 niz
INFO  21:18:15,022 - #33 [
INFO  21:18:15,022 - #46 0
INFO  21:18:15,022 - #34 ]
INFO  21:18:15,022 - #27 ;
INFO  21:18:15,022 - #36 }
INFO  21:18:15,022 - #36 }
INFO  21:18:15,024 - ================= PARSIRANO STABLO =================
INFO  21:18:15,030 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  Declarations(
    NoDeclarations(
    ) [NoDeclarations]
    ConstantDeclaration(
      ConDecl(
        Type(
         int
        ) [Type]
        ConstDef(
         d
          NumConst(
           2
          ) [NumConst]
        ) [ConstDef]
        NoConstantDeclaration(
        ) [NoConstantDeclaration]
      ) [ConDecl]
    ) [ConstantDeclaration]
  ) [Declarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      ListOfVarDecl(
        ListOfVarDecl(
          ListOfVarDecl(
            NoVarDeclarations(
            ) [NoVarDeclarations]
            VarDeclaration(
              Type(
               int
              ) [Type]
              OneVarDeclaration(
                AddVarDecl1(
                 niz
                  Brackets(
                  ) [Brackets]
                ) [AddVarDecl1]
              ) [OneVarDeclaration]
            ) [VarDeclaration]
          ) [ListOfVarDecl]
          VarDeclaration(
            Type(
             bool
            ) [Type]
            OneVarDeclaration(
              AddVarDecl1(
               nizb
                Brackets(
                ) [Brackets]
              ) [AddVarDecl1]
            ) [OneVarDeclaration]
          ) [VarDeclaration]
        ) [ListOfVarDecl]
        VarDeclaration(
          Type(
           int
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             a
              NoBrackets(
              ) [NoBrackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [ListOfVarDecl]
      Statements(
        Statements(
          Statements(
            NoStatements(
            ) [NoStatements]
            DesignatorStat(
              DesignatorExpr(
                Designator(
                  WithoutNamespace(
                   niz
                  ) [WithoutNamespace]
                  NoArrayExpression(
                  ) [NoArrayExpression]
                ) [Designator]
                AssignOperation(
                ) [AssignOperation]
                PositiveStartExpr(
                  SingleTerm(
                    RangeExpression(
                      PositiveStartExpr(
                        SingleTerm(
                          NumberConst(
                           7
                          ) [NumberConst]
                        ) [SingleTerm]
                      ) [PositiveStartExpr]
                    ) [RangeExpression]
                  ) [SingleTerm]
                ) [PositiveStartExpr]
              ) [DesignatorExpr]
            ) [DesignatorStat]
          ) [Statements]
          PrintExpr(
            PositiveStartExpr(
              SingleTerm(
                DesignatorFact(
                  Designator(
                    WithoutNamespace(
                     niz
                    ) [WithoutNamespace]
                    NoArrayExpression(
                    ) [NoArrayExpression]
                  ) [Designator]
                ) [DesignatorFact]
              ) [SingleTerm]
            ) [PositiveStartExpr]
            NoNumConstOpt(
            ) [NoNumConstOpt]
          ) [PrintExpr]
        ) [Statements]
        DesignatorStat(
          DesignatorExpr(
            Designator(
              WithoutNamespace(
               a
              ) [WithoutNamespace]
              NoArrayExpression(
              ) [NoArrayExpression]
            ) [Designator]
            AssignOperation(
            ) [AssignOperation]
            PositiveStartExpr(
              SingleTerm(
                DesignatorFact(
                  Designator(
                    WithoutNamespace(
                     niz
                    ) [WithoutNamespace]
                    AddArrayExpression(
                      BraExpr(
                        PositiveStartExpr(
                          SingleTerm(
                            NumberConst(
                             0
                            ) [NumberConst]
                          ) [SingleTerm]
                        ) [PositiveStartExpr]
                      ) [BraExpr]
                    ) [AddArrayExpression]
                  ) [Designator]
                ) [DesignatorFact]
              ) [SingleTerm]
            ) [PositiveStartExpr]
          ) [DesignatorExpr]
        ) [DesignatorStat]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  21:18:15,030 - ================ Semanticka obrada ===================
ERROR 21:18:18,311 - Const a already exist on line 2
INFO  21:18:18,314 - Symbol niz found on line 10
INFO  21:18:18,314 - Symbol niz found on line 11
INFO  21:18:18,314 - Symbol a found on line 12
INFO  21:18:18,314 - Symbol niz found on line 12
INFO  21:18:18,315 - Meth main: notype, 0, 0 on line 1
ERROR 21:18:18,315 - Parser FAIL!
INFO  21:18:51,468 - Compiling source file: C:\Users\elena\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  21:18:51,469 - ================= LEKSICKA ANALIZA =================
INFO  21:18:51,492 - #2 program
INFO  21:18:51,492 - #47 test301
INFO  21:18:51,492 - #3 const
INFO  21:18:51,493 - #47 int
INFO  21:18:51,493 - #47 d
INFO  21:18:51,493 - #24 =
INFO  21:18:51,493 - #46 2
INFO  21:18:51,493 - #27 ;
INFO  21:18:51,494 - #35 {
INFO  21:18:51,494 - #8 void
INFO  21:18:51,494 - #47 main
INFO  21:18:51,494 - #31 (
INFO  21:18:51,495 - #32 )
INFO  21:18:51,495 - #47 int
INFO  21:18:51,495 - #47 niz
INFO  21:18:51,496 - #33 [
INFO  21:18:51,496 - #34 ]
INFO  21:18:51,496 - #27 ;
INFO  21:18:51,496 - #47 bool
INFO  21:18:51,496 - #47 nizb
INFO  21:18:51,496 - #33 [
INFO  21:18:51,496 - #34 ]
INFO  21:18:51,496 - #27 ;
INFO  21:18:51,496 - #47 int
INFO  21:18:51,496 - #47 a
INFO  21:18:51,496 - #27 ;
INFO  21:18:51,498 - #35 {
INFO  21:18:51,498 - #47 niz
INFO  21:18:51,498 - #24 =
INFO  21:18:51,499 - #45 range
INFO  21:18:51,499 - #31 (
INFO  21:18:51,499 - #46 7
INFO  21:18:51,499 - #32 )
INFO  21:18:51,500 - #27 ;
INFO  21:18:51,500 - #5 print
INFO  21:18:51,500 - #31 (
INFO  21:18:51,500 - #47 niz
INFO  21:18:51,500 - #32 )
INFO  21:18:51,501 - #27 ;
INFO  21:18:51,501 - #47 a
INFO  21:18:51,501 - #24 =
INFO  21:18:51,501 - #47 niz
INFO  21:18:51,501 - #33 [
INFO  21:18:51,501 - #46 0
INFO  21:18:51,501 - #34 ]
INFO  21:18:51,501 - #27 ;
INFO  21:18:51,502 - #36 }
INFO  21:18:51,502 - #36 }
INFO  21:18:51,503 - ================= PARSIRANO STABLO =================
INFO  21:18:51,506 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  Declarations(
    NoDeclarations(
    ) [NoDeclarations]
    ConstantDeclaration(
      ConDecl(
        Type(
         int
        ) [Type]
        ConstDef(
         d
          NumConst(
           2
          ) [NumConst]
        ) [ConstDef]
        NoConstantDeclaration(
        ) [NoConstantDeclaration]
      ) [ConDecl]
    ) [ConstantDeclaration]
  ) [Declarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      ListOfVarDecl(
        ListOfVarDecl(
          ListOfVarDecl(
            NoVarDeclarations(
            ) [NoVarDeclarations]
            VarDeclaration(
              Type(
               int
              ) [Type]
              OneVarDeclaration(
                AddVarDecl1(
                 niz
                  Brackets(
                  ) [Brackets]
                ) [AddVarDecl1]
              ) [OneVarDeclaration]
            ) [VarDeclaration]
          ) [ListOfVarDecl]
          VarDeclaration(
            Type(
             bool
            ) [Type]
            OneVarDeclaration(
              AddVarDecl1(
               nizb
                Brackets(
                ) [Brackets]
              ) [AddVarDecl1]
            ) [OneVarDeclaration]
          ) [VarDeclaration]
        ) [ListOfVarDecl]
        VarDeclaration(
          Type(
           int
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             a
              NoBrackets(
              ) [NoBrackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [ListOfVarDecl]
      Statements(
        Statements(
          Statements(
            NoStatements(
            ) [NoStatements]
            DesignatorStat(
              DesignatorExpr(
                Designator(
                  WithoutNamespace(
                   niz
                  ) [WithoutNamespace]
                  NoArrayExpression(
                  ) [NoArrayExpression]
                ) [Designator]
                AssignOperation(
                ) [AssignOperation]
                PositiveStartExpr(
                  SingleTerm(
                    RangeExpression(
                      PositiveStartExpr(
                        SingleTerm(
                          NumberConst(
                           7
                          ) [NumberConst]
                        ) [SingleTerm]
                      ) [PositiveStartExpr]
                    ) [RangeExpression]
                  ) [SingleTerm]
                ) [PositiveStartExpr]
              ) [DesignatorExpr]
            ) [DesignatorStat]
          ) [Statements]
          PrintExpr(
            PositiveStartExpr(
              SingleTerm(
                DesignatorFact(
                  Designator(
                    WithoutNamespace(
                     niz
                    ) [WithoutNamespace]
                    NoArrayExpression(
                    ) [NoArrayExpression]
                  ) [Designator]
                ) [DesignatorFact]
              ) [SingleTerm]
            ) [PositiveStartExpr]
            NoNumConstOpt(
            ) [NoNumConstOpt]
          ) [PrintExpr]
        ) [Statements]
        DesignatorStat(
          DesignatorExpr(
            Designator(
              WithoutNamespace(
               a
              ) [WithoutNamespace]
              NoArrayExpression(
              ) [NoArrayExpression]
            ) [Designator]
            AssignOperation(
            ) [AssignOperation]
            PositiveStartExpr(
              SingleTerm(
                DesignatorFact(
                  Designator(
                    WithoutNamespace(
                     niz
                    ) [WithoutNamespace]
                    AddArrayExpression(
                      BraExpr(
                        PositiveStartExpr(
                          SingleTerm(
                            NumberConst(
                             0
                            ) [NumberConst]
                          ) [SingleTerm]
                        ) [PositiveStartExpr]
                      ) [BraExpr]
                    ) [AddArrayExpression]
                  ) [Designator]
                ) [DesignatorFact]
              ) [SingleTerm]
            ) [PositiveStartExpr]
          ) [DesignatorExpr]
        ) [DesignatorStat]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  21:18:51,506 - ================ Semanticka obrada ===================
INFO  21:18:59,464 - Compiling source file: C:\Users\elena\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  21:18:59,464 - ================= LEKSICKA ANALIZA =================
INFO  21:18:59,509 - #2 program
INFO  21:18:59,509 - #47 test301
INFO  21:18:59,509 - #3 const
INFO  21:18:59,510 - #47 int
INFO  21:18:59,511 - #47 d
INFO  21:18:59,511 - #24 =
INFO  21:18:59,511 - #46 2
INFO  21:18:59,511 - #27 ;
INFO  21:18:59,512 - #35 {
INFO  21:18:59,512 - #8 void
INFO  21:18:59,513 - #47 main
INFO  21:18:59,513 - #31 (
INFO  21:18:59,514 - #32 )
INFO  21:18:59,514 - #47 int
INFO  21:18:59,515 - #47 niz
INFO  21:18:59,515 - #33 [
INFO  21:18:59,515 - #34 ]
INFO  21:18:59,515 - #27 ;
INFO  21:18:59,516 - #47 bool
INFO  21:18:59,516 - #47 nizb
INFO  21:18:59,517 - #33 [
INFO  21:18:59,517 - #34 ]
INFO  21:18:59,517 - #27 ;
INFO  21:18:59,517 - #47 int
INFO  21:18:59,517 - #47 a
INFO  21:18:59,517 - #27 ;
INFO  21:18:59,520 - #35 {
INFO  21:18:59,520 - #47 niz
INFO  21:18:59,523 - #24 =
INFO  21:18:59,526 - #45 range
INFO  21:18:59,527 - #31 (
INFO  21:18:59,528 - #46 7
INFO  21:18:59,528 - #32 )
INFO  21:18:59,528 - #27 ;
INFO  21:18:59,529 - #5 print
INFO  21:18:59,529 - #31 (
INFO  21:18:59,529 - #47 niz
INFO  21:18:59,529 - #32 )
INFO  21:18:59,530 - #27 ;
INFO  21:18:59,530 - #47 a
INFO  21:18:59,530 - #24 =
INFO  21:18:59,530 - #47 niz
INFO  21:18:59,530 - #33 [
INFO  21:18:59,530 - #46 0
INFO  21:18:59,530 - #34 ]
INFO  21:18:59,530 - #27 ;
INFO  21:18:59,532 - #36 }
INFO  21:18:59,532 - #36 }
INFO  21:18:59,533 - ================= PARSIRANO STABLO =================
INFO  21:18:59,540 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  Declarations(
    NoDeclarations(
    ) [NoDeclarations]
    ConstantDeclaration(
      ConDecl(
        Type(
         int
        ) [Type]
        ConstDef(
         d
          NumConst(
           2
          ) [NumConst]
        ) [ConstDef]
        NoConstantDeclaration(
        ) [NoConstantDeclaration]
      ) [ConDecl]
    ) [ConstantDeclaration]
  ) [Declarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      ListOfVarDecl(
        ListOfVarDecl(
          ListOfVarDecl(
            NoVarDeclarations(
            ) [NoVarDeclarations]
            VarDeclaration(
              Type(
               int
              ) [Type]
              OneVarDeclaration(
                AddVarDecl1(
                 niz
                  Brackets(
                  ) [Brackets]
                ) [AddVarDecl1]
              ) [OneVarDeclaration]
            ) [VarDeclaration]
          ) [ListOfVarDecl]
          VarDeclaration(
            Type(
             bool
            ) [Type]
            OneVarDeclaration(
              AddVarDecl1(
               nizb
                Brackets(
                ) [Brackets]
              ) [AddVarDecl1]
            ) [OneVarDeclaration]
          ) [VarDeclaration]
        ) [ListOfVarDecl]
        VarDeclaration(
          Type(
           int
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             a
              NoBrackets(
              ) [NoBrackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [ListOfVarDecl]
      Statements(
        Statements(
          Statements(
            NoStatements(
            ) [NoStatements]
            DesignatorStat(
              DesignatorExpr(
                Designator(
                  WithoutNamespace(
                   niz
                  ) [WithoutNamespace]
                  NoArrayExpression(
                  ) [NoArrayExpression]
                ) [Designator]
                AssignOperation(
                ) [AssignOperation]
                PositiveStartExpr(
                  SingleTerm(
                    RangeExpression(
                      PositiveStartExpr(
                        SingleTerm(
                          NumberConst(
                           7
                          ) [NumberConst]
                        ) [SingleTerm]
                      ) [PositiveStartExpr]
                    ) [RangeExpression]
                  ) [SingleTerm]
                ) [PositiveStartExpr]
              ) [DesignatorExpr]
            ) [DesignatorStat]
          ) [Statements]
          PrintExpr(
            PositiveStartExpr(
              SingleTerm(
                DesignatorFact(
                  Designator(
                    WithoutNamespace(
                     niz
                    ) [WithoutNamespace]
                    NoArrayExpression(
                    ) [NoArrayExpression]
                  ) [Designator]
                ) [DesignatorFact]
              ) [SingleTerm]
            ) [PositiveStartExpr]
            NoNumConstOpt(
            ) [NoNumConstOpt]
          ) [PrintExpr]
        ) [Statements]
        DesignatorStat(
          DesignatorExpr(
            Designator(
              WithoutNamespace(
               a
              ) [WithoutNamespace]
              NoArrayExpression(
              ) [NoArrayExpression]
            ) [Designator]
            AssignOperation(
            ) [AssignOperation]
            PositiveStartExpr(
              SingleTerm(
                DesignatorFact(
                  Designator(
                    WithoutNamespace(
                     niz
                    ) [WithoutNamespace]
                    AddArrayExpression(
                      BraExpr(
                        PositiveStartExpr(
                          SingleTerm(
                            NumberConst(
                             0
                            ) [NumberConst]
                          ) [SingleTerm]
                        ) [PositiveStartExpr]
                      ) [BraExpr]
                    ) [AddArrayExpression]
                  ) [Designator]
                ) [DesignatorFact]
              ) [SingleTerm]
            ) [PositiveStartExpr]
          ) [DesignatorExpr]
        ) [DesignatorStat]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  21:18:59,540 - ================ Semanticka obrada ===================
INFO  21:19:50,151 - Compiling source file: C:\Users\elena\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  21:19:50,152 - ================= LEKSICKA ANALIZA =================
INFO  21:19:50,173 - #2 program
INFO  21:19:50,173 - #47 test301
INFO  21:19:50,173 - #3 const
INFO  21:19:50,174 - #47 int
INFO  21:19:50,174 - #47 d
INFO  21:19:50,174 - #24 =
INFO  21:19:50,174 - #46 2
INFO  21:19:50,174 - #27 ;
INFO  21:19:50,175 - #35 {
INFO  21:19:50,175 - #8 void
INFO  21:19:50,175 - #47 main
INFO  21:19:50,175 - #31 (
INFO  21:19:50,175 - #32 )
INFO  21:19:50,175 - #47 int
INFO  21:19:50,175 - #47 niz
INFO  21:19:50,175 - #33 [
INFO  21:19:50,175 - #34 ]
INFO  21:19:50,175 - #27 ;
INFO  21:19:50,176 - #47 bool
INFO  21:19:50,176 - #47 nizb
INFO  21:19:50,176 - #33 [
INFO  21:19:50,176 - #34 ]
INFO  21:19:50,176 - #27 ;
INFO  21:19:50,176 - #47 int
INFO  21:19:50,178 - #47 a
INFO  21:19:50,178 - #27 ;
INFO  21:19:50,178 - #35 {
INFO  21:19:50,178 - #47 niz
INFO  21:19:50,179 - #24 =
INFO  21:19:50,179 - #45 range
INFO  21:19:50,180 - #31 (
INFO  21:19:50,180 - #46 7
INFO  21:19:50,180 - #32 )
INFO  21:19:50,180 - #27 ;
INFO  21:19:50,180 - #5 print
INFO  21:19:50,180 - #31 (
INFO  21:19:50,180 - #47 niz
INFO  21:19:50,180 - #32 )
INFO  21:19:50,181 - #27 ;
INFO  21:19:50,181 - #47 a
INFO  21:19:50,181 - #24 =
INFO  21:19:50,181 - #47 niz
INFO  21:19:50,181 - #33 [
INFO  21:19:50,181 - #46 0
INFO  21:19:50,181 - #34 ]
INFO  21:19:50,181 - #27 ;
INFO  21:19:50,181 - #36 }
INFO  21:19:50,182 - #36 }
INFO  21:19:50,183 - ================= PARSIRANO STABLO =================
INFO  21:19:50,185 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  Declarations(
    NoDeclarations(
    ) [NoDeclarations]
    ConstantDeclaration(
      ConDecl(
        Type(
         int
        ) [Type]
        ConstDef(
         d
          NumConst(
           2
          ) [NumConst]
        ) [ConstDef]
        NoConstantDeclaration(
        ) [NoConstantDeclaration]
      ) [ConDecl]
    ) [ConstantDeclaration]
  ) [Declarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      ListOfVarDecl(
        ListOfVarDecl(
          ListOfVarDecl(
            NoVarDeclarations(
            ) [NoVarDeclarations]
            VarDeclaration(
              Type(
               int
              ) [Type]
              OneVarDeclaration(
                AddVarDecl1(
                 niz
                  Brackets(
                  ) [Brackets]
                ) [AddVarDecl1]
              ) [OneVarDeclaration]
            ) [VarDeclaration]
          ) [ListOfVarDecl]
          VarDeclaration(
            Type(
             bool
            ) [Type]
            OneVarDeclaration(
              AddVarDecl1(
               nizb
                Brackets(
                ) [Brackets]
              ) [AddVarDecl1]
            ) [OneVarDeclaration]
          ) [VarDeclaration]
        ) [ListOfVarDecl]
        VarDeclaration(
          Type(
           int
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             a
              NoBrackets(
              ) [NoBrackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [ListOfVarDecl]
      Statements(
        Statements(
          Statements(
            NoStatements(
            ) [NoStatements]
            DesignatorStat(
              DesignatorExpr(
                Designator(
                  WithoutNamespace(
                   niz
                  ) [WithoutNamespace]
                  NoArrayExpression(
                  ) [NoArrayExpression]
                ) [Designator]
                AssignOperation(
                ) [AssignOperation]
                PositiveStartExpr(
                  SingleTerm(
                    RangeExpression(
                      PositiveStartExpr(
                        SingleTerm(
                          NumberConst(
                           7
                          ) [NumberConst]
                        ) [SingleTerm]
                      ) [PositiveStartExpr]
                    ) [RangeExpression]
                  ) [SingleTerm]
                ) [PositiveStartExpr]
              ) [DesignatorExpr]
            ) [DesignatorStat]
          ) [Statements]
          PrintExpr(
            PositiveStartExpr(
              SingleTerm(
                DesignatorFact(
                  Designator(
                    WithoutNamespace(
                     niz
                    ) [WithoutNamespace]
                    NoArrayExpression(
                    ) [NoArrayExpression]
                  ) [Designator]
                ) [DesignatorFact]
              ) [SingleTerm]
            ) [PositiveStartExpr]
            NoNumConstOpt(
            ) [NoNumConstOpt]
          ) [PrintExpr]
        ) [Statements]
        DesignatorStat(
          DesignatorExpr(
            Designator(
              WithoutNamespace(
               a
              ) [WithoutNamespace]
              NoArrayExpression(
              ) [NoArrayExpression]
            ) [Designator]
            AssignOperation(
            ) [AssignOperation]
            PositiveStartExpr(
              SingleTerm(
                DesignatorFact(
                  Designator(
                    WithoutNamespace(
                     niz
                    ) [WithoutNamespace]
                    AddArrayExpression(
                      BraExpr(
                        PositiveStartExpr(
                          SingleTerm(
                            NumberConst(
                             0
                            ) [NumberConst]
                          ) [SingleTerm]
                        ) [PositiveStartExpr]
                      ) [BraExpr]
                    ) [AddArrayExpression]
                  ) [Designator]
                ) [DesignatorFact]
              ) [SingleTerm]
            ) [PositiveStartExpr]
          ) [DesignatorExpr]
        ) [DesignatorStat]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  21:19:50,186 - ================ Semanticka obrada ===================
INFO  21:19:53,740 - Compiling source file: C:\Users\elena\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  21:19:53,741 - ================= LEKSICKA ANALIZA =================
INFO  21:19:53,767 - #2 program
INFO  21:19:53,767 - #47 test301
INFO  21:19:53,767 - #3 const
INFO  21:19:53,769 - #47 int
INFO  21:19:53,769 - #47 d
INFO  21:19:53,770 - #24 =
INFO  21:19:53,770 - #46 2
INFO  21:19:53,770 - #27 ;
INFO  21:19:53,771 - #35 {
INFO  21:19:53,771 - #8 void
INFO  21:19:53,771 - #47 main
INFO  21:19:53,771 - #31 (
INFO  21:19:53,772 - #32 )
INFO  21:19:53,772 - #47 int
INFO  21:19:53,772 - #47 niz
INFO  21:19:53,772 - #33 [
INFO  21:19:53,772 - #34 ]
INFO  21:19:53,772 - #27 ;
INFO  21:19:53,773 - #47 bool
INFO  21:19:53,773 - #47 nizb
INFO  21:19:53,773 - #33 [
INFO  21:19:53,773 - #34 ]
INFO  21:19:53,773 - #27 ;
INFO  21:19:53,773 - #47 int
INFO  21:19:53,773 - #47 a
INFO  21:19:53,773 - #27 ;
INFO  21:19:53,774 - #35 {
INFO  21:19:53,774 - #47 niz
INFO  21:19:53,774 - #24 =
INFO  21:19:53,775 - #45 range
INFO  21:19:53,776 - #31 (
INFO  21:19:53,776 - #46 7
INFO  21:19:53,776 - #32 )
INFO  21:19:53,776 - #27 ;
INFO  21:19:53,776 - #5 print
INFO  21:19:53,776 - #31 (
INFO  21:19:53,776 - #47 niz
INFO  21:19:53,776 - #32 )
INFO  21:19:53,777 - #27 ;
INFO  21:19:53,777 - #47 a
INFO  21:19:53,777 - #24 =
INFO  21:19:53,777 - #47 niz
INFO  21:19:53,777 - #33 [
INFO  21:19:53,777 - #46 0
INFO  21:19:53,777 - #34 ]
INFO  21:19:53,777 - #27 ;
INFO  21:19:53,777 - #36 }
INFO  21:19:53,777 - #36 }
INFO  21:19:53,779 - ================= PARSIRANO STABLO =================
INFO  21:19:53,781 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  Declarations(
    NoDeclarations(
    ) [NoDeclarations]
    ConstantDeclaration(
      ConDecl(
        Type(
         int
        ) [Type]
        ConstDef(
         d
          NumConst(
           2
          ) [NumConst]
        ) [ConstDef]
        NoConstantDeclaration(
        ) [NoConstantDeclaration]
      ) [ConDecl]
    ) [ConstantDeclaration]
  ) [Declarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      ListOfVarDecl(
        ListOfVarDecl(
          ListOfVarDecl(
            NoVarDeclarations(
            ) [NoVarDeclarations]
            VarDeclaration(
              Type(
               int
              ) [Type]
              OneVarDeclaration(
                AddVarDecl1(
                 niz
                  Brackets(
                  ) [Brackets]
                ) [AddVarDecl1]
              ) [OneVarDeclaration]
            ) [VarDeclaration]
          ) [ListOfVarDecl]
          VarDeclaration(
            Type(
             bool
            ) [Type]
            OneVarDeclaration(
              AddVarDecl1(
               nizb
                Brackets(
                ) [Brackets]
              ) [AddVarDecl1]
            ) [OneVarDeclaration]
          ) [VarDeclaration]
        ) [ListOfVarDecl]
        VarDeclaration(
          Type(
           int
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             a
              NoBrackets(
              ) [NoBrackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [ListOfVarDecl]
      Statements(
        Statements(
          Statements(
            NoStatements(
            ) [NoStatements]
            DesignatorStat(
              DesignatorExpr(
                Designator(
                  WithoutNamespace(
                   niz
                  ) [WithoutNamespace]
                  NoArrayExpression(
                  ) [NoArrayExpression]
                ) [Designator]
                AssignOperation(
                ) [AssignOperation]
                PositiveStartExpr(
                  SingleTerm(
                    RangeExpression(
                      PositiveStartExpr(
                        SingleTerm(
                          NumberConst(
                           7
                          ) [NumberConst]
                        ) [SingleTerm]
                      ) [PositiveStartExpr]
                    ) [RangeExpression]
                  ) [SingleTerm]
                ) [PositiveStartExpr]
              ) [DesignatorExpr]
            ) [DesignatorStat]
          ) [Statements]
          PrintExpr(
            PositiveStartExpr(
              SingleTerm(
                DesignatorFact(
                  Designator(
                    WithoutNamespace(
                     niz
                    ) [WithoutNamespace]
                    NoArrayExpression(
                    ) [NoArrayExpression]
                  ) [Designator]
                ) [DesignatorFact]
              ) [SingleTerm]
            ) [PositiveStartExpr]
            NoNumConstOpt(
            ) [NoNumConstOpt]
          ) [PrintExpr]
        ) [Statements]
        DesignatorStat(
          DesignatorExpr(
            Designator(
              WithoutNamespace(
               a
              ) [WithoutNamespace]
              NoArrayExpression(
              ) [NoArrayExpression]
            ) [Designator]
            AssignOperation(
            ) [AssignOperation]
            PositiveStartExpr(
              SingleTerm(
                DesignatorFact(
                  Designator(
                    WithoutNamespace(
                     niz
                    ) [WithoutNamespace]
                    AddArrayExpression(
                      BraExpr(
                        PositiveStartExpr(
                          SingleTerm(
                            NumberConst(
                             0
                            ) [NumberConst]
                          ) [SingleTerm]
                        ) [PositiveStartExpr]
                      ) [BraExpr]
                    ) [AddArrayExpression]
                  ) [Designator]
                ) [DesignatorFact]
              ) [SingleTerm]
            ) [PositiveStartExpr]
          ) [DesignatorExpr]
        ) [DesignatorStat]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  21:19:53,782 - ================ Semanticka obrada ===================
ERROR 21:20:01,227 - Const d already exist on line 2
INFO  21:20:01,227 - Symbol niz found on line 10
INFO  21:20:01,227 - Symbol niz found on line 11
INFO  21:20:01,227 - Symbol a found on line 12
INFO  21:20:01,227 - Symbol niz found on line 12
INFO  21:20:01,228 - Meth main: notype, 0, 0 on line 1
ERROR 21:20:01,228 - Parser FAIL!
INFO  21:20:21,434 - Compiling source file: C:\Users\elena\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  21:20:21,435 - ================= LEKSICKA ANALIZA =================
INFO  21:20:21,459 - #2 program
INFO  21:20:21,459 - #47 test301
INFO  21:20:21,459 - #3 const
INFO  21:20:21,460 - #47 int
INFO  21:20:21,460 - #47 d
INFO  21:20:21,460 - #24 =
INFO  21:20:21,460 - #46 2
INFO  21:20:21,460 - #27 ;
INFO  21:20:21,461 - #35 {
INFO  21:20:21,461 - #8 void
INFO  21:20:21,461 - #47 main
INFO  21:20:21,461 - #31 (
INFO  21:20:21,462 - #32 )
INFO  21:20:21,462 - #47 int
INFO  21:20:21,462 - #47 niz
INFO  21:20:21,462 - #33 [
INFO  21:20:21,462 - #34 ]
INFO  21:20:21,462 - #27 ;
INFO  21:20:21,464 - #47 bool
INFO  21:20:21,464 - #47 nizb
INFO  21:20:21,464 - #33 [
INFO  21:20:21,464 - #34 ]
INFO  21:20:21,464 - #27 ;
INFO  21:20:21,465 - #47 int
INFO  21:20:21,465 - #47 a
INFO  21:20:21,465 - #27 ;
INFO  21:20:21,465 - #35 {
INFO  21:20:21,465 - #47 niz
INFO  21:20:21,466 - #24 =
INFO  21:20:21,466 - #45 range
INFO  21:20:21,467 - #31 (
INFO  21:20:21,467 - #46 7
INFO  21:20:21,467 - #32 )
INFO  21:20:21,467 - #27 ;
INFO  21:20:21,467 - #5 print
INFO  21:20:21,467 - #31 (
INFO  21:20:21,467 - #47 niz
INFO  21:20:21,467 - #32 )
INFO  21:20:21,468 - #27 ;
INFO  21:20:21,468 - #47 a
INFO  21:20:21,468 - #24 =
INFO  21:20:21,468 - #47 niz
INFO  21:20:21,468 - #33 [
INFO  21:20:21,468 - #46 0
INFO  21:20:21,468 - #34 ]
INFO  21:20:21,468 - #27 ;
INFO  21:20:21,468 - #36 }
INFO  21:20:21,469 - #36 }
INFO  21:20:21,469 - ================= PARSIRANO STABLO =================
INFO  21:20:21,474 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  Declarations(
    NoDeclarations(
    ) [NoDeclarations]
    ConstantDeclaration(
      ConDecl(
        Type(
         int
        ) [Type]
        ConstDef(
         d
          NumConst(
           2
          ) [NumConst]
        ) [ConstDef]
        NoConstantDeclaration(
        ) [NoConstantDeclaration]
      ) [ConDecl]
    ) [ConstantDeclaration]
  ) [Declarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      ListOfVarDecl(
        ListOfVarDecl(
          ListOfVarDecl(
            NoVarDeclarations(
            ) [NoVarDeclarations]
            VarDeclaration(
              Type(
               int
              ) [Type]
              OneVarDeclaration(
                AddVarDecl1(
                 niz
                  Brackets(
                  ) [Brackets]
                ) [AddVarDecl1]
              ) [OneVarDeclaration]
            ) [VarDeclaration]
          ) [ListOfVarDecl]
          VarDeclaration(
            Type(
             bool
            ) [Type]
            OneVarDeclaration(
              AddVarDecl1(
               nizb
                Brackets(
                ) [Brackets]
              ) [AddVarDecl1]
            ) [OneVarDeclaration]
          ) [VarDeclaration]
        ) [ListOfVarDecl]
        VarDeclaration(
          Type(
           int
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             a
              NoBrackets(
              ) [NoBrackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [ListOfVarDecl]
      Statements(
        Statements(
          Statements(
            NoStatements(
            ) [NoStatements]
            DesignatorStat(
              DesignatorExpr(
                Designator(
                  WithoutNamespace(
                   niz
                  ) [WithoutNamespace]
                  NoArrayExpression(
                  ) [NoArrayExpression]
                ) [Designator]
                AssignOperation(
                ) [AssignOperation]
                PositiveStartExpr(
                  SingleTerm(
                    RangeExpression(
                      PositiveStartExpr(
                        SingleTerm(
                          NumberConst(
                           7
                          ) [NumberConst]
                        ) [SingleTerm]
                      ) [PositiveStartExpr]
                    ) [RangeExpression]
                  ) [SingleTerm]
                ) [PositiveStartExpr]
              ) [DesignatorExpr]
            ) [DesignatorStat]
          ) [Statements]
          PrintExpr(
            PositiveStartExpr(
              SingleTerm(
                DesignatorFact(
                  Designator(
                    WithoutNamespace(
                     niz
                    ) [WithoutNamespace]
                    NoArrayExpression(
                    ) [NoArrayExpression]
                  ) [Designator]
                ) [DesignatorFact]
              ) [SingleTerm]
            ) [PositiveStartExpr]
            NoNumConstOpt(
            ) [NoNumConstOpt]
          ) [PrintExpr]
        ) [Statements]
        DesignatorStat(
          DesignatorExpr(
            Designator(
              WithoutNamespace(
               a
              ) [WithoutNamespace]
              NoArrayExpression(
              ) [NoArrayExpression]
            ) [Designator]
            AssignOperation(
            ) [AssignOperation]
            PositiveStartExpr(
              SingleTerm(
                DesignatorFact(
                  Designator(
                    WithoutNamespace(
                     niz
                    ) [WithoutNamespace]
                    AddArrayExpression(
                      BraExpr(
                        PositiveStartExpr(
                          SingleTerm(
                            NumberConst(
                             0
                            ) [NumberConst]
                          ) [SingleTerm]
                        ) [PositiveStartExpr]
                      ) [BraExpr]
                    ) [AddArrayExpression]
                  ) [Designator]
                ) [DesignatorFact]
              ) [SingleTerm]
            ) [PositiveStartExpr]
          ) [DesignatorExpr]
        ) [DesignatorStat]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  21:20:21,475 - ================ Semanticka obrada ===================
INFO  21:20:29,517 - Compiling source file: C:\Users\elena\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  21:20:29,518 - ================= LEKSICKA ANALIZA =================
INFO  21:20:29,555 - #2 program
INFO  21:20:29,555 - #47 test301
INFO  21:20:29,555 - #3 const
INFO  21:20:29,556 - #47 int
INFO  21:20:29,556 - #47 d
INFO  21:20:29,557 - #24 =
INFO  21:20:29,557 - #46 2
INFO  21:20:29,557 - #27 ;
INFO  21:20:29,557 - #35 {
INFO  21:20:29,557 - #8 void
INFO  21:20:29,559 - #47 main
INFO  21:20:29,559 - #31 (
INFO  21:20:29,560 - #32 )
INFO  21:20:29,561 - #47 int
INFO  21:20:29,561 - #47 niz
INFO  21:20:29,562 - #33 [
INFO  21:20:29,562 - #34 ]
INFO  21:20:29,562 - #27 ;
INFO  21:20:29,565 - #47 bool
INFO  21:20:29,565 - #47 nizb
INFO  21:20:29,565 - #33 [
INFO  21:20:29,565 - #34 ]
INFO  21:20:29,565 - #27 ;
INFO  21:20:29,565 - #47 int
INFO  21:20:29,565 - #47 a
INFO  21:20:29,565 - #27 ;
INFO  21:20:29,566 - #35 {
INFO  21:20:29,566 - #47 niz
INFO  21:20:29,567 - #24 =
INFO  21:20:29,569 - #45 range
INFO  21:20:29,571 - #31 (
INFO  21:20:29,571 - #46 7
INFO  21:20:29,571 - #32 )
INFO  21:20:29,572 - #27 ;
INFO  21:20:29,572 - #5 print
INFO  21:20:29,573 - #31 (
INFO  21:20:29,573 - #47 niz
INFO  21:20:29,573 - #32 )
INFO  21:20:29,573 - #27 ;
INFO  21:20:29,574 - #47 a
INFO  21:20:29,574 - #24 =
INFO  21:20:29,574 - #47 niz
INFO  21:20:29,574 - #33 [
INFO  21:20:29,574 - #46 0
INFO  21:20:29,574 - #34 ]
INFO  21:20:29,574 - #27 ;
INFO  21:20:29,575 - #36 }
INFO  21:20:29,575 - #36 }
INFO  21:20:29,577 - ================= PARSIRANO STABLO =================
INFO  21:20:29,583 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  Declarations(
    NoDeclarations(
    ) [NoDeclarations]
    ConstantDeclaration(
      ConDecl(
        Type(
         int
        ) [Type]
        ConstDef(
         d
          NumConst(
           2
          ) [NumConst]
        ) [ConstDef]
        NoConstantDeclaration(
        ) [NoConstantDeclaration]
      ) [ConDecl]
    ) [ConstantDeclaration]
  ) [Declarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      ListOfVarDecl(
        ListOfVarDecl(
          ListOfVarDecl(
            NoVarDeclarations(
            ) [NoVarDeclarations]
            VarDeclaration(
              Type(
               int
              ) [Type]
              OneVarDeclaration(
                AddVarDecl1(
                 niz
                  Brackets(
                  ) [Brackets]
                ) [AddVarDecl1]
              ) [OneVarDeclaration]
            ) [VarDeclaration]
          ) [ListOfVarDecl]
          VarDeclaration(
            Type(
             bool
            ) [Type]
            OneVarDeclaration(
              AddVarDecl1(
               nizb
                Brackets(
                ) [Brackets]
              ) [AddVarDecl1]
            ) [OneVarDeclaration]
          ) [VarDeclaration]
        ) [ListOfVarDecl]
        VarDeclaration(
          Type(
           int
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             a
              NoBrackets(
              ) [NoBrackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [ListOfVarDecl]
      Statements(
        Statements(
          Statements(
            NoStatements(
            ) [NoStatements]
            DesignatorStat(
              DesignatorExpr(
                Designator(
                  WithoutNamespace(
                   niz
                  ) [WithoutNamespace]
                  NoArrayExpression(
                  ) [NoArrayExpression]
                ) [Designator]
                AssignOperation(
                ) [AssignOperation]
                PositiveStartExpr(
                  SingleTerm(
                    RangeExpression(
                      PositiveStartExpr(
                        SingleTerm(
                          NumberConst(
                           7
                          ) [NumberConst]
                        ) [SingleTerm]
                      ) [PositiveStartExpr]
                    ) [RangeExpression]
                  ) [SingleTerm]
                ) [PositiveStartExpr]
              ) [DesignatorExpr]
            ) [DesignatorStat]
          ) [Statements]
          PrintExpr(
            PositiveStartExpr(
              SingleTerm(
                DesignatorFact(
                  Designator(
                    WithoutNamespace(
                     niz
                    ) [WithoutNamespace]
                    NoArrayExpression(
                    ) [NoArrayExpression]
                  ) [Designator]
                ) [DesignatorFact]
              ) [SingleTerm]
            ) [PositiveStartExpr]
            NoNumConstOpt(
            ) [NoNumConstOpt]
          ) [PrintExpr]
        ) [Statements]
        DesignatorStat(
          DesignatorExpr(
            Designator(
              WithoutNamespace(
               a
              ) [WithoutNamespace]
              NoArrayExpression(
              ) [NoArrayExpression]
            ) [Designator]
            AssignOperation(
            ) [AssignOperation]
            PositiveStartExpr(
              SingleTerm(
                DesignatorFact(
                  Designator(
                    WithoutNamespace(
                     niz
                    ) [WithoutNamespace]
                    AddArrayExpression(
                      BraExpr(
                        PositiveStartExpr(
                          SingleTerm(
                            NumberConst(
                             0
                            ) [NumberConst]
                          ) [SingleTerm]
                        ) [PositiveStartExpr]
                      ) [BraExpr]
                    ) [AddArrayExpression]
                  ) [Designator]
                ) [DesignatorFact]
              ) [SingleTerm]
            ) [PositiveStartExpr]
          ) [DesignatorExpr]
        ) [DesignatorStat]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  21:20:29,583 - ================ Semanticka obrada ===================
INFO  21:21:08,373 - Compiling source file: C:\Users\elena\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  21:21:08,374 - ================= LEKSICKA ANALIZA =================
INFO  21:21:08,396 - #2 program
INFO  21:21:08,396 - #47 test301
INFO  21:21:08,396 - #3 const
INFO  21:21:08,397 - #47 int
INFO  21:21:08,397 - #47 d
INFO  21:21:08,397 - #24 =
INFO  21:21:08,397 - #46 2
INFO  21:21:08,397 - #27 ;
INFO  21:21:08,397 - #35 {
INFO  21:21:08,399 - #8 void
INFO  21:21:08,399 - #47 main
INFO  21:21:08,399 - #31 (
INFO  21:21:08,399 - #32 )
INFO  21:21:08,400 - #47 int
INFO  21:21:08,400 - #47 niz
INFO  21:21:08,400 - #33 [
INFO  21:21:08,400 - #34 ]
INFO  21:21:08,400 - #27 ;
INFO  21:21:08,401 - #47 bool
INFO  21:21:08,401 - #47 nizb
INFO  21:21:08,401 - #33 [
INFO  21:21:08,401 - #34 ]
INFO  21:21:08,401 - #27 ;
INFO  21:21:08,401 - #47 int
INFO  21:21:08,401 - #47 a
INFO  21:21:08,401 - #27 ;
INFO  21:21:08,402 - #35 {
INFO  21:21:08,402 - #47 niz
INFO  21:21:08,402 - #24 =
INFO  21:21:08,403 - #45 range
INFO  21:21:08,403 - #31 (
INFO  21:21:08,403 - #46 7
INFO  21:21:08,403 - #32 )
INFO  21:21:08,404 - #27 ;
INFO  21:21:08,404 - #5 print
INFO  21:21:08,404 - #31 (
INFO  21:21:08,404 - #47 niz
INFO  21:21:08,404 - #32 )
INFO  21:21:08,404 - #27 ;
INFO  21:21:08,404 - #47 a
INFO  21:21:08,404 - #24 =
INFO  21:21:08,404 - #47 niz
INFO  21:21:08,404 - #33 [
INFO  21:21:08,404 - #46 0
INFO  21:21:08,404 - #34 ]
INFO  21:21:08,406 - #27 ;
INFO  21:21:08,406 - #36 }
INFO  21:21:08,406 - #36 }
INFO  21:21:08,407 - ================= PARSIRANO STABLO =================
INFO  21:21:08,409 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  Declarations(
    NoDeclarations(
    ) [NoDeclarations]
    ConstantDeclaration(
      ConDecl(
        Type(
         int
        ) [Type]
        ConstDef(
         d
          NumConst(
           2
          ) [NumConst]
        ) [ConstDef]
        NoConstantDeclaration(
        ) [NoConstantDeclaration]
      ) [ConDecl]
    ) [ConstantDeclaration]
  ) [Declarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      ListOfVarDecl(
        ListOfVarDecl(
          ListOfVarDecl(
            NoVarDeclarations(
            ) [NoVarDeclarations]
            VarDeclaration(
              Type(
               int
              ) [Type]
              OneVarDeclaration(
                AddVarDecl1(
                 niz
                  Brackets(
                  ) [Brackets]
                ) [AddVarDecl1]
              ) [OneVarDeclaration]
            ) [VarDeclaration]
          ) [ListOfVarDecl]
          VarDeclaration(
            Type(
             bool
            ) [Type]
            OneVarDeclaration(
              AddVarDecl1(
               nizb
                Brackets(
                ) [Brackets]
              ) [AddVarDecl1]
            ) [OneVarDeclaration]
          ) [VarDeclaration]
        ) [ListOfVarDecl]
        VarDeclaration(
          Type(
           int
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             a
              NoBrackets(
              ) [NoBrackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [ListOfVarDecl]
      Statements(
        Statements(
          Statements(
            NoStatements(
            ) [NoStatements]
            DesignatorStat(
              DesignatorExpr(
                Designator(
                  WithoutNamespace(
                   niz
                  ) [WithoutNamespace]
                  NoArrayExpression(
                  ) [NoArrayExpression]
                ) [Designator]
                AssignOperation(
                ) [AssignOperation]
                PositiveStartExpr(
                  SingleTerm(
                    RangeExpression(
                      PositiveStartExpr(
                        SingleTerm(
                          NumberConst(
                           7
                          ) [NumberConst]
                        ) [SingleTerm]
                      ) [PositiveStartExpr]
                    ) [RangeExpression]
                  ) [SingleTerm]
                ) [PositiveStartExpr]
              ) [DesignatorExpr]
            ) [DesignatorStat]
          ) [Statements]
          PrintExpr(
            PositiveStartExpr(
              SingleTerm(
                DesignatorFact(
                  Designator(
                    WithoutNamespace(
                     niz
                    ) [WithoutNamespace]
                    NoArrayExpression(
                    ) [NoArrayExpression]
                  ) [Designator]
                ) [DesignatorFact]
              ) [SingleTerm]
            ) [PositiveStartExpr]
            NoNumConstOpt(
            ) [NoNumConstOpt]
          ) [PrintExpr]
        ) [Statements]
        DesignatorStat(
          DesignatorExpr(
            Designator(
              WithoutNamespace(
               a
              ) [WithoutNamespace]
              NoArrayExpression(
              ) [NoArrayExpression]
            ) [Designator]
            AssignOperation(
            ) [AssignOperation]
            PositiveStartExpr(
              SingleTerm(
                DesignatorFact(
                  Designator(
                    WithoutNamespace(
                     niz
                    ) [WithoutNamespace]
                    AddArrayExpression(
                      BraExpr(
                        PositiveStartExpr(
                          SingleTerm(
                            NumberConst(
                             0
                            ) [NumberConst]
                          ) [SingleTerm]
                        ) [PositiveStartExpr]
                      ) [BraExpr]
                    ) [AddArrayExpression]
                  ) [Designator]
                ) [DesignatorFact]
              ) [SingleTerm]
            ) [PositiveStartExpr]
          ) [DesignatorExpr]
        ) [DesignatorStat]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  21:21:08,410 - ================ Semanticka obrada ===================
INFO  21:21:08,412 - Con d: int, 2, 0 on line 2
INFO  21:21:08,412 - Symbol niz found on line 10
INFO  21:21:08,412 - Symbol niz found on line 11
INFO  21:21:08,412 - Symbol a found on line 12
INFO  21:21:08,412 - Symbol niz found on line 12
INFO  21:21:08,412 - Meth main: notype, 0, 0 on line 1
INFO  21:21:08,414 - Parser SUCCESS!
INFO  21:30:01,454 - Compiling source file: C:\Users\elena\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  21:30:01,454 - ================= LEKSICKA ANALIZA =================
INFO  21:30:01,478 - #2 program
INFO  21:30:01,479 - #47 test301
INFO  21:30:01,479 - #3 const
INFO  21:30:01,481 - #47 int
INFO  21:30:01,481 - #47 d
INFO  21:30:01,482 - #24 =
INFO  21:30:01,482 - #46 2
INFO  21:30:01,482 - #27 ;
INFO  21:30:01,482 - #35 {
INFO  21:30:01,483 - #8 void
INFO  21:30:01,483 - #47 main
INFO  21:30:01,483 - #31 (
INFO  21:30:01,484 - #32 )
INFO  21:30:01,484 - #47 int
INFO  21:30:01,484 - #47 niz
INFO  21:30:01,484 - #33 [
INFO  21:30:01,484 - #34 ]
INFO  21:30:01,484 - #27 ;
INFO  21:30:01,485 - #47 bool
INFO  21:30:01,485 - #47 nizb
INFO  21:30:01,485 - #33 [
INFO  21:30:01,485 - #34 ]
INFO  21:30:01,485 - #27 ;
INFO  21:30:01,485 - #47 int
INFO  21:30:01,485 - #47 a
INFO  21:30:01,485 - #27 ;
INFO  21:30:01,486 - #35 {
INFO  21:30:01,486 - #47 niz
INFO  21:30:01,486 - #24 =
INFO  21:30:01,487 - #45 range
INFO  21:30:01,487 - #31 (
INFO  21:30:01,487 - #46 7
INFO  21:30:01,487 - #32 )
INFO  21:30:01,487 - #27 ;
INFO  21:30:01,487 - #5 print
INFO  21:30:01,487 - #31 (
INFO  21:30:01,487 - #47 niz
INFO  21:30:01,487 - #32 )
INFO  21:30:01,489 - #27 ;
INFO  21:30:01,489 - #47 a
INFO  21:30:01,489 - #24 =
INFO  21:30:01,489 - #47 niz
INFO  21:30:01,489 - #33 [
INFO  21:30:01,489 - #46 0
INFO  21:30:01,489 - #34 ]
INFO  21:30:01,489 - #27 ;
INFO  21:30:01,490 - #36 }
INFO  21:30:01,490 - #36 }
INFO  21:30:01,491 - ================= PARSIRANO STABLO =================
INFO  21:30:01,493 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  Declarations(
    NoDeclarations(
    ) [NoDeclarations]
    ConstantDeclaration(
      ConDecl(
        Type(
         int
        ) [Type]
        ConstDef(
         d
          NumConst(
           2
          ) [NumConst]
        ) [ConstDef]
        NoConstantDeclaration(
        ) [NoConstantDeclaration]
      ) [ConDecl]
    ) [ConstantDeclaration]
  ) [Declarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      ListOfVarDecl(
        ListOfVarDecl(
          ListOfVarDecl(
            NoVarDeclarations(
            ) [NoVarDeclarations]
            VarDeclaration(
              Type(
               int
              ) [Type]
              OneVarDeclaration(
                AddVarDecl1(
                 niz
                  Brackets(
                  ) [Brackets]
                ) [AddVarDecl1]
              ) [OneVarDeclaration]
            ) [VarDeclaration]
          ) [ListOfVarDecl]
          VarDeclaration(
            Type(
             bool
            ) [Type]
            OneVarDeclaration(
              AddVarDecl1(
               nizb
                Brackets(
                ) [Brackets]
              ) [AddVarDecl1]
            ) [OneVarDeclaration]
          ) [VarDeclaration]
        ) [ListOfVarDecl]
        VarDeclaration(
          Type(
           int
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             a
              NoBrackets(
              ) [NoBrackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [ListOfVarDecl]
      Statements(
        Statements(
          Statements(
            NoStatements(
            ) [NoStatements]
            DesignatorStat(
              DesignatorExpr(
                Designator(
                  WithoutNamespace(
                   niz
                  ) [WithoutNamespace]
                  NoArrayExpression(
                  ) [NoArrayExpression]
                ) [Designator]
                AssignOperation(
                ) [AssignOperation]
                PositiveStartExpr(
                  SingleTerm(
                    RangeExpression(
                      PositiveStartExpr(
                        SingleTerm(
                          NumberConst(
                           7
                          ) [NumberConst]
                        ) [SingleTerm]
                      ) [PositiveStartExpr]
                    ) [RangeExpression]
                  ) [SingleTerm]
                ) [PositiveStartExpr]
              ) [DesignatorExpr]
            ) [DesignatorStat]
          ) [Statements]
          PrintExpr(
            PositiveStartExpr(
              SingleTerm(
                DesignatorFact(
                  Designator(
                    WithoutNamespace(
                     niz
                    ) [WithoutNamespace]
                    NoArrayExpression(
                    ) [NoArrayExpression]
                  ) [Designator]
                ) [DesignatorFact]
              ) [SingleTerm]
            ) [PositiveStartExpr]
            NoNumConstOpt(
            ) [NoNumConstOpt]
          ) [PrintExpr]
        ) [Statements]
        DesignatorStat(
          DesignatorExpr(
            Designator(
              WithoutNamespace(
               a
              ) [WithoutNamespace]
              NoArrayExpression(
              ) [NoArrayExpression]
            ) [Designator]
            AssignOperation(
            ) [AssignOperation]
            PositiveStartExpr(
              SingleTerm(
                DesignatorFact(
                  Designator(
                    WithoutNamespace(
                     niz
                    ) [WithoutNamespace]
                    AddArrayExpression(
                      BraExpr(
                        PositiveStartExpr(
                          SingleTerm(
                            NumberConst(
                             0
                            ) [NumberConst]
                          ) [SingleTerm]
                        ) [PositiveStartExpr]
                      ) [BraExpr]
                    ) [AddArrayExpression]
                  ) [Designator]
                ) [DesignatorFact]
              ) [SingleTerm]
            ) [PositiveStartExpr]
          ) [DesignatorExpr]
        ) [DesignatorStat]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  21:30:01,494 - ================ Semanticka obrada ===================
INFO  21:30:01,495 - Con d: int, 2, 0 on line 2
INFO  21:30:01,496 - New symbol
INFO  21:30:01,496 - Var niz: Arr of int, 0, 1 on line 6
INFO  21:30:01,496 - New symbol
INFO  21:30:01,496 - Var nizb: Arr of , 1, 1 on line 7
INFO  21:30:01,496 - New symbol
INFO  21:30:01,496 - Var a: int, 2, 1 on line 8
INFO  21:32:56,756 - Compiling source file: C:\Users\elena\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  21:32:56,756 - ================= LEKSICKA ANALIZA =================
INFO  21:32:56,782 - #2 program
INFO  21:32:56,782 - #47 test301
INFO  21:32:56,782 - #3 const
INFO  21:32:56,783 - #47 int
INFO  21:32:56,783 - #47 d
INFO  21:32:56,784 - #24 =
INFO  21:32:56,784 - #46 2
INFO  21:32:56,784 - #27 ;
INFO  21:32:56,785 - #35 {
INFO  21:32:56,785 - #8 void
INFO  21:32:56,785 - #47 main
INFO  21:32:56,785 - #31 (
INFO  21:32:56,785 - #32 )
INFO  21:32:56,786 - #47 int
INFO  21:32:56,786 - #47 niz
INFO  21:32:56,786 - #33 [
INFO  21:32:56,786 - #34 ]
INFO  21:32:56,786 - #27 ;
INFO  21:32:56,787 - #47 bool
INFO  21:32:56,787 - #47 nizb
INFO  21:32:56,787 - #33 [
INFO  21:32:56,787 - #34 ]
INFO  21:32:56,787 - #27 ;
INFO  21:32:56,787 - #47 int
INFO  21:32:56,787 - #47 a
INFO  21:32:56,787 - #27 ;
INFO  21:32:56,787 - #35 {
INFO  21:32:56,788 - #47 niz
INFO  21:32:56,788 - #24 =
INFO  21:32:56,789 - #45 range
INFO  21:32:56,791 - #31 (
INFO  21:32:56,791 - #46 7
INFO  21:32:56,791 - #32 )
INFO  21:32:56,791 - #27 ;
INFO  21:32:56,791 - #5 print
INFO  21:32:56,791 - #31 (
INFO  21:32:56,792 - #47 niz
INFO  21:32:56,792 - #32 )
INFO  21:32:56,792 - #27 ;
INFO  21:32:56,792 - #47 a
INFO  21:32:56,792 - #24 =
INFO  21:32:56,792 - #47 niz
INFO  21:32:56,792 - #33 [
INFO  21:32:56,792 - #46 0
INFO  21:32:56,792 - #34 ]
INFO  21:32:56,792 - #27 ;
INFO  21:32:56,793 - #36 }
INFO  21:32:56,793 - #36 }
INFO  21:32:56,793 - ================= PARSIRANO STABLO =================
INFO  21:32:56,796 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  Declarations(
    NoDeclarations(
    ) [NoDeclarations]
    ConstantDeclaration(
      ConDecl(
        Type(
         int
        ) [Type]
        ConstDef(
         d
          NumConst(
           2
          ) [NumConst]
        ) [ConstDef]
        NoConstantDeclaration(
        ) [NoConstantDeclaration]
      ) [ConDecl]
    ) [ConstantDeclaration]
  ) [Declarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      ListOfVarDecl(
        ListOfVarDecl(
          ListOfVarDecl(
            NoVarDeclarations(
            ) [NoVarDeclarations]
            VarDeclaration(
              Type(
               int
              ) [Type]
              OneVarDeclaration(
                AddVarDecl1(
                 niz
                  Brackets(
                  ) [Brackets]
                ) [AddVarDecl1]
              ) [OneVarDeclaration]
            ) [VarDeclaration]
          ) [ListOfVarDecl]
          VarDeclaration(
            Type(
             bool
            ) [Type]
            OneVarDeclaration(
              AddVarDecl1(
               nizb
                Brackets(
                ) [Brackets]
              ) [AddVarDecl1]
            ) [OneVarDeclaration]
          ) [VarDeclaration]
        ) [ListOfVarDecl]
        VarDeclaration(
          Type(
           int
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             a
              NoBrackets(
              ) [NoBrackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [ListOfVarDecl]
      Statements(
        Statements(
          Statements(
            NoStatements(
            ) [NoStatements]
            DesignatorStat(
              DesignatorExpr(
                Designator(
                  WithoutNamespace(
                   niz
                  ) [WithoutNamespace]
                  NoArrayExpression(
                  ) [NoArrayExpression]
                ) [Designator]
                AssignOperation(
                ) [AssignOperation]
                PositiveStartExpr(
                  SingleTerm(
                    RangeExpression(
                      PositiveStartExpr(
                        SingleTerm(
                          NumberConst(
                           7
                          ) [NumberConst]
                        ) [SingleTerm]
                      ) [PositiveStartExpr]
                    ) [RangeExpression]
                  ) [SingleTerm]
                ) [PositiveStartExpr]
              ) [DesignatorExpr]
            ) [DesignatorStat]
          ) [Statements]
          PrintExpr(
            PositiveStartExpr(
              SingleTerm(
                DesignatorFact(
                  Designator(
                    WithoutNamespace(
                     niz
                    ) [WithoutNamespace]
                    NoArrayExpression(
                    ) [NoArrayExpression]
                  ) [Designator]
                ) [DesignatorFact]
              ) [SingleTerm]
            ) [PositiveStartExpr]
            NoNumConstOpt(
            ) [NoNumConstOpt]
          ) [PrintExpr]
        ) [Statements]
        DesignatorStat(
          DesignatorExpr(
            Designator(
              WithoutNamespace(
               a
              ) [WithoutNamespace]
              NoArrayExpression(
              ) [NoArrayExpression]
            ) [Designator]
            AssignOperation(
            ) [AssignOperation]
            PositiveStartExpr(
              SingleTerm(
                DesignatorFact(
                  Designator(
                    WithoutNamespace(
                     niz
                    ) [WithoutNamespace]
                    AddArrayExpression(
                      BraExpr(
                        PositiveStartExpr(
                          SingleTerm(
                            NumberConst(
                             0
                            ) [NumberConst]
                          ) [SingleTerm]
                        ) [PositiveStartExpr]
                      ) [BraExpr]
                    ) [AddArrayExpression]
                  ) [Designator]
                ) [DesignatorFact]
              ) [SingleTerm]
            ) [PositiveStartExpr]
          ) [DesignatorExpr]
        ) [DesignatorStat]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  21:32:56,796 - ================ Semanticka obrada ===================
INFO  21:32:56,799 - Con d: int, 2, 0 on line 2
INFO  21:32:56,799 - New symbol
INFO  21:32:56,799 - Var niz: Arr of int, 0, 1 on line 6
INFO  21:32:56,799 - New symbol
INFO  21:32:56,799 - Var nizb: Arr of , 1, 1 on line 7
INFO  21:32:56,799 - New symbol
INFO  21:32:56,799 - Var a: int, 2, 1 on line 8
INFO  21:32:56,799 - Var niz: Arr of int, 0, 1 on line 10
INFO  21:32:56,799 - Var niz: Arr of int, 0, 1 on line 11
INFO  21:32:56,799 - Var a: int, 2, 1 on line 12
INFO  21:32:56,799 - Var niz: Arr of int, 0, 1 on line 12
INFO  21:32:56,799 - Meth main: notype, 0, 0 on line 1
INFO  21:32:56,801 - Parser SUCCESS!
INFO  21:34:22,185 - Compiling source file: C:\Users\elena\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  21:34:22,185 - ================= LEKSICKA ANALIZA =================
INFO  21:34:22,205 - #2 program
INFO  21:34:22,205 - #47 test301
INFO  21:34:22,205 - #3 const
INFO  21:34:22,206 - #47 int
INFO  21:34:22,206 - #47 d
INFO  21:34:22,206 - #24 =
INFO  21:34:22,206 - #46 2
INFO  21:34:22,206 - #27 ;
INFO  21:34:22,206 - #35 {
INFO  21:34:22,206 - #8 void
INFO  21:34:22,207 - #47 main
INFO  21:34:22,207 - #31 (
INFO  21:34:22,207 - #32 )
INFO  21:34:22,207 - #47 int
INFO  21:34:22,208 - #47 niz
INFO  21:34:22,208 - #33 [
INFO  21:34:22,208 - #34 ]
INFO  21:34:22,208 - #27 ;
INFO  21:34:22,209 - #47 bool
INFO  21:34:22,209 - #47 nizb
INFO  21:34:22,209 - #33 [
INFO  21:34:22,209 - #34 ]
INFO  21:34:22,209 - #27 ;
INFO  21:34:22,209 - #47 int
INFO  21:34:22,209 - #47 a
INFO  21:34:22,209 - #27 ;
INFO  21:34:22,210 - #35 {
INFO  21:34:22,210 - #47 niz
INFO  21:34:22,210 - #24 =
INFO  21:34:22,212 - #45 range
INFO  21:34:22,212 - #31 (
INFO  21:34:22,212 - #46 7
INFO  21:34:22,212 - #32 )
INFO  21:34:22,212 - #27 ;
INFO  21:34:22,212 - #5 print
INFO  21:34:22,212 - #31 (
INFO  21:34:22,212 - #47 niz
INFO  21:34:22,212 - #32 )
INFO  21:34:22,213 - #27 ;
INFO  21:34:22,213 - #47 a
INFO  21:34:22,213 - #24 =
INFO  21:34:22,213 - #47 niz
INFO  21:34:22,213 - #33 [
INFO  21:34:22,213 - #46 0
INFO  21:34:22,213 - #34 ]
INFO  21:34:22,213 - #27 ;
INFO  21:34:22,213 - #36 }
INFO  21:34:22,214 - #36 }
INFO  21:34:22,215 - ================= PARSIRANO STABLO =================
INFO  21:34:22,219 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  Declarations(
    NoDeclarations(
    ) [NoDeclarations]
    ConstantDeclaration(
      ConDecl(
        Type(
         int
        ) [Type]
        ConstDef(
         d
          NumConst(
           2
          ) [NumConst]
        ) [ConstDef]
        NoConstantDeclaration(
        ) [NoConstantDeclaration]
      ) [ConDecl]
    ) [ConstantDeclaration]
  ) [Declarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      ListOfVarDecl(
        ListOfVarDecl(
          ListOfVarDecl(
            NoVarDeclarations(
            ) [NoVarDeclarations]
            VarDeclaration(
              Type(
               int
              ) [Type]
              OneVarDeclaration(
                AddVarDecl1(
                 niz
                  Brackets(
                  ) [Brackets]
                ) [AddVarDecl1]
              ) [OneVarDeclaration]
            ) [VarDeclaration]
          ) [ListOfVarDecl]
          VarDeclaration(
            Type(
             bool
            ) [Type]
            OneVarDeclaration(
              AddVarDecl1(
               nizb
                Brackets(
                ) [Brackets]
              ) [AddVarDecl1]
            ) [OneVarDeclaration]
          ) [VarDeclaration]
        ) [ListOfVarDecl]
        VarDeclaration(
          Type(
           int
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             a
              NoBrackets(
              ) [NoBrackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [ListOfVarDecl]
      Statements(
        Statements(
          Statements(
            NoStatements(
            ) [NoStatements]
            DesignatorStat(
              DesignatorExpr(
                Designator(
                  WithoutNamespace(
                   niz
                  ) [WithoutNamespace]
                  NoArrayExpression(
                  ) [NoArrayExpression]
                ) [Designator]
                AssignOperation(
                ) [AssignOperation]
                PositiveStartExpr(
                  SingleTerm(
                    RangeExpression(
                      PositiveStartExpr(
                        SingleTerm(
                          NumberConst(
                           7
                          ) [NumberConst]
                        ) [SingleTerm]
                      ) [PositiveStartExpr]
                    ) [RangeExpression]
                  ) [SingleTerm]
                ) [PositiveStartExpr]
              ) [DesignatorExpr]
            ) [DesignatorStat]
          ) [Statements]
          PrintExpr(
            PositiveStartExpr(
              SingleTerm(
                DesignatorFact(
                  Designator(
                    WithoutNamespace(
                     niz
                    ) [WithoutNamespace]
                    NoArrayExpression(
                    ) [NoArrayExpression]
                  ) [Designator]
                ) [DesignatorFact]
              ) [SingleTerm]
            ) [PositiveStartExpr]
            NoNumConstOpt(
            ) [NoNumConstOpt]
          ) [PrintExpr]
        ) [Statements]
        DesignatorStat(
          DesignatorExpr(
            Designator(
              WithoutNamespace(
               a
              ) [WithoutNamespace]
              NoArrayExpression(
              ) [NoArrayExpression]
            ) [Designator]
            AssignOperation(
            ) [AssignOperation]
            PositiveStartExpr(
              SingleTerm(
                DesignatorFact(
                  Designator(
                    WithoutNamespace(
                     niz
                    ) [WithoutNamespace]
                    AddArrayExpression(
                      BraExpr(
                        PositiveStartExpr(
                          SingleTerm(
                            NumberConst(
                             0
                            ) [NumberConst]
                          ) [SingleTerm]
                        ) [PositiveStartExpr]
                      ) [BraExpr]
                    ) [AddArrayExpression]
                  ) [Designator]
                ) [DesignatorFact]
              ) [SingleTerm]
            ) [PositiveStartExpr]
          ) [DesignatorExpr]
        ) [DesignatorStat]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  21:34:22,219 - ================ Semanticka obrada ===================
INFO  21:34:22,221 - NEW CONST
INFO  21:34:22,222 - Con d: int, 2, 0 on line 2
INFO  21:34:22,222 - NEW SYMBOL
INFO  21:34:22,222 - Var niz: Arr of int, 0, 1 on line 6
INFO  21:34:22,222 - NEW SYMBOL
INFO  21:34:22,222 - Var nizb: Arr of , 1, 1 on line 7
INFO  21:34:22,222 - NEW SYMBOL
INFO  21:34:22,222 - Var a: int, 2, 1 on line 8
INFO  21:34:22,222 - Var niz: Arr of int, 0, 1 on line 10
INFO  21:34:22,222 - Var niz: Arr of int, 0, 1 on line 11
INFO  21:34:22,222 - Var a: int, 2, 1 on line 12
INFO  21:34:22,222 - Var niz: Arr of int, 0, 1 on line 12
INFO  21:34:22,222 - Meth main: notype, 0, 0 on line 1
INFO  21:34:22,225 - Parser SUCCESS!
INFO  21:43:50,789 - Compiling source file: C:\Users\elena\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  21:43:50,789 - ================= LEKSICKA ANALIZA =================
INFO  21:43:50,834 - #2 program
INFO  21:43:50,834 - #47 test301
INFO  21:43:50,834 - #3 const
INFO  21:43:50,836 - #47 int
INFO  21:43:50,836 - #47 d
INFO  21:43:50,836 - #24 =
INFO  21:43:50,836 - #46 2
INFO  21:43:50,836 - #27 ;
INFO  21:43:50,838 - #35 {
INFO  21:43:50,838 - #8 void
INFO  21:43:50,838 - #47 main
INFO  21:43:50,839 - #31 (
INFO  21:43:50,840 - #32 )
INFO  21:43:50,840 - #47 int
INFO  21:43:50,842 - #47 niz
INFO  21:43:50,842 - #33 [
INFO  21:43:50,842 - #34 ]
INFO  21:43:50,842 - #27 ;
INFO  21:43:50,843 - #47 bool
INFO  21:43:50,843 - #47 nizb
INFO  21:43:50,843 - #33 [
INFO  21:43:50,843 - #34 ]
INFO  21:43:50,843 - #27 ;
INFO  21:43:50,843 - #47 int
INFO  21:43:50,843 - #47 a
INFO  21:43:50,843 - #27 ;
INFO  21:43:50,844 - #35 {
INFO  21:43:50,844 - #47 a
INFO  21:43:50,845 - #24 =
INFO  21:43:50,846 - #46 4
INFO  21:43:50,846 - #27 ;
INFO  21:43:50,847 - #47 niz
INFO  21:43:50,847 - #24 =
INFO  21:43:50,847 - #4 new
INFO  21:43:50,847 - #47 int
INFO  21:43:50,847 - #33 [
INFO  21:43:50,847 - #47 a
INFO  21:43:50,847 - #34 ]
INFO  21:43:50,847 - #27 ;
INFO  21:43:50,847 - #36 }
INFO  21:43:50,847 - #36 }
INFO  21:43:50,849 - ================= PARSIRANO STABLO =================
INFO  21:43:50,853 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  Declarations(
    NoDeclarations(
    ) [NoDeclarations]
    ConstantDeclaration(
      ConDecl(
        Type(
         int
        ) [Type]
        ConstDef(
         d
          NumConst(
           2
          ) [NumConst]
        ) [ConstDef]
        NoConstantDeclaration(
        ) [NoConstantDeclaration]
      ) [ConDecl]
    ) [ConstantDeclaration]
  ) [Declarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      ListOfVarDecl(
        ListOfVarDecl(
          ListOfVarDecl(
            NoVarDeclarations(
            ) [NoVarDeclarations]
            VarDeclaration(
              Type(
               int
              ) [Type]
              OneVarDeclaration(
                AddVarDecl1(
                 niz
                  Brackets(
                  ) [Brackets]
                ) [AddVarDecl1]
              ) [OneVarDeclaration]
            ) [VarDeclaration]
          ) [ListOfVarDecl]
          VarDeclaration(
            Type(
             bool
            ) [Type]
            OneVarDeclaration(
              AddVarDecl1(
               nizb
                Brackets(
                ) [Brackets]
              ) [AddVarDecl1]
            ) [OneVarDeclaration]
          ) [VarDeclaration]
        ) [ListOfVarDecl]
        VarDeclaration(
          Type(
           int
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             a
              NoBrackets(
              ) [NoBrackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [ListOfVarDecl]
      Statements(
        Statements(
          NoStatements(
          ) [NoStatements]
          DesignatorStat(
            DesignatorExpr(
              Designator(
                WithoutNamespace(
                 a
                ) [WithoutNamespace]
                NoArrayExpression(
                ) [NoArrayExpression]
              ) [Designator]
              AssignOperation(
              ) [AssignOperation]
              PositiveStartExpr(
                SingleTerm(
                  NumberConst(
                   4
                  ) [NumberConst]
                ) [SingleTerm]
              ) [PositiveStartExpr]
            ) [DesignatorExpr]
          ) [DesignatorStat]
        ) [Statements]
        DesignatorStat(
          DesignatorExpr(
            Designator(
              WithoutNamespace(
               niz
              ) [WithoutNamespace]
              NoArrayExpression(
              ) [NoArrayExpression]
            ) [Designator]
            AssignOperation(
            ) [AssignOperation]
            PositiveStartExpr(
              SingleTerm(
                NewType(
                  Type(
                   int
                  ) [Type]
                  PositiveStartExpr(
                    SingleTerm(
                      DesignatorFact(
                        Designator(
                          WithoutNamespace(
                           a
                          ) [WithoutNamespace]
                          NoArrayExpression(
                          ) [NoArrayExpression]
                        ) [Designator]
                      ) [DesignatorFact]
                    ) [SingleTerm]
                  ) [PositiveStartExpr]
                ) [NewType]
              ) [SingleTerm]
            ) [PositiveStartExpr]
          ) [DesignatorExpr]
        ) [DesignatorStat]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  21:43:50,854 - ================ Semanticka obrada ===================
INFO  21:43:59,280 - NEW CONST
INFO  21:44:14,984 - Con d: int, 2, 0 on line 2
INFO  21:44:14,985 - NEW SYMBOL
INFO  21:44:14,985 - Var niz: Arr of int, 0, 1 on line 6
INFO  21:44:14,985 - NEW SYMBOL
INFO  21:44:14,985 - Var nizb: Arr of , 1, 1 on line 7
INFO  21:44:14,985 - NEW SYMBOL
INFO  21:44:14,985 - Var a: int, 2, 1 on line 8
INFO  21:44:14,986 - Var niz: Arr of int, 0, 1 on line 10
INFO  21:44:14,986 - Var niz: Arr of int, 0, 1 on line 11
INFO  21:44:14,986 - Var a: int, 2, 1 on line 12
INFO  21:44:14,986 - Var niz: Arr of int, 0, 1 on line 12
INFO  21:48:33,186 - Compiling source file: C:\Users\elena\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  21:48:33,187 - ================= LEKSICKA ANALIZA =================
INFO  21:48:33,218 - #2 program
INFO  21:48:33,219 - #47 test301
INFO  21:48:33,219 - #3 const
INFO  21:48:33,220 - #47 int
INFO  21:48:33,220 - #47 d
INFO  21:48:33,220 - #24 =
INFO  21:48:33,220 - #46 2
INFO  21:48:33,220 - #27 ;
INFO  21:48:33,221 - #35 {
INFO  21:48:33,221 - #8 void
INFO  21:48:33,221 - #47 main
INFO  21:48:33,222 - #31 (
INFO  21:48:33,222 - #32 )
INFO  21:48:33,222 - #47 int
INFO  21:48:33,222 - #47 niz
INFO  21:48:33,223 - #33 [
INFO  21:48:33,223 - #34 ]
INFO  21:48:33,223 - #27 ;
INFO  21:48:33,223 - #47 bool
INFO  21:48:33,223 - #47 nizb
INFO  21:48:33,223 - #33 [
INFO  21:48:33,223 - #34 ]
INFO  21:48:33,223 - #27 ;
INFO  21:48:33,224 - #47 int
INFO  21:48:33,224 - #47 a
INFO  21:48:33,224 - #27 ;
INFO  21:48:33,224 - #35 {
INFO  21:48:33,224 - #47 a
INFO  21:48:33,224 - #24 =
INFO  21:48:33,225 - #46 4
INFO  21:48:33,226 - #27 ;
INFO  21:48:33,226 - #47 niz
INFO  21:48:33,227 - #24 =
INFO  21:48:33,227 - #4 new
INFO  21:48:33,227 - #47 int
INFO  21:48:33,227 - #33 [
INFO  21:48:33,227 - #47 a
INFO  21:48:33,227 - #34 ]
INFO  21:48:33,227 - #27 ;
INFO  21:48:33,227 - #36 }
INFO  21:48:33,227 - #36 }
INFO  21:48:33,230 - ================= PARSIRANO STABLO =================
INFO  21:48:33,233 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  Declarations(
    NoDeclarations(
    ) [NoDeclarations]
    ConstantDeclaration(
      ConDecl(
        Type(
         int
        ) [Type]
        ConstDef(
         d
          NumConst(
           2
          ) [NumConst]
        ) [ConstDef]
        NoConstantDeclaration(
        ) [NoConstantDeclaration]
      ) [ConDecl]
    ) [ConstantDeclaration]
  ) [Declarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      ListOfVarDecl(
        ListOfVarDecl(
          ListOfVarDecl(
            NoVarDeclarations(
            ) [NoVarDeclarations]
            VarDeclaration(
              Type(
               int
              ) [Type]
              OneVarDeclaration(
                AddVarDecl1(
                 niz
                  Brackets(
                  ) [Brackets]
                ) [AddVarDecl1]
              ) [OneVarDeclaration]
            ) [VarDeclaration]
          ) [ListOfVarDecl]
          VarDeclaration(
            Type(
             bool
            ) [Type]
            OneVarDeclaration(
              AddVarDecl1(
               nizb
                Brackets(
                ) [Brackets]
              ) [AddVarDecl1]
            ) [OneVarDeclaration]
          ) [VarDeclaration]
        ) [ListOfVarDecl]
        VarDeclaration(
          Type(
           int
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             a
              NoBrackets(
              ) [NoBrackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [ListOfVarDecl]
      Statements(
        Statements(
          NoStatements(
          ) [NoStatements]
          DesignatorStat(
            DesignatorExpr(
              Designator(
                WithoutNamespace(
                 a
                ) [WithoutNamespace]
                NoArrayExpression(
                ) [NoArrayExpression]
              ) [Designator]
              AssignOperation(
              ) [AssignOperation]
              PositiveStartExpr(
                SingleTerm(
                  NumberConst(
                   4
                  ) [NumberConst]
                ) [SingleTerm]
              ) [PositiveStartExpr]
            ) [DesignatorExpr]
          ) [DesignatorStat]
        ) [Statements]
        DesignatorStat(
          DesignatorExpr(
            Designator(
              WithoutNamespace(
               niz
              ) [WithoutNamespace]
              NoArrayExpression(
              ) [NoArrayExpression]
            ) [Designator]
            AssignOperation(
            ) [AssignOperation]
            PositiveStartExpr(
              SingleTerm(
                NewType(
                  Type(
                   int
                  ) [Type]
                  PositiveStartExpr(
                    SingleTerm(
                      DesignatorFact(
                        Designator(
                          WithoutNamespace(
                           a
                          ) [WithoutNamespace]
                          NoArrayExpression(
                          ) [NoArrayExpression]
                        ) [Designator]
                      ) [DesignatorFact]
                    ) [SingleTerm]
                  ) [PositiveStartExpr]
                ) [NewType]
              ) [SingleTerm]
            ) [PositiveStartExpr]
          ) [DesignatorExpr]
        ) [DesignatorStat]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  21:48:33,233 - ================ Semanticka obrada ===================
INFO  21:48:33,235 - NEW CONST
INFO  21:48:33,235 - Con d: int, 2, 0 on line 2
INFO  21:48:33,235 - NEW SYMBOL
INFO  21:48:33,235 - Var niz: Arr of int, 0, 1 on line 6
INFO  21:48:33,235 - NEW SYMBOL
INFO  21:48:33,235 - Var nizb: Arr of , 1, 1 on line 7
INFO  21:48:33,235 - NEW SYMBOL
INFO  21:48:33,235 - Var a: int, 2, 1 on line 8
INFO  21:48:33,236 - Var a: int, 2, 1 on line 10
INFO  21:48:33,236 - Var niz: Arr of int, 0, 1 on line 11
INFO  21:48:33,236 - Var a: int, 2, 1 on line 11
INFO  21:48:33,236 - Meth main: notype, 0, 0 on line 1
INFO  21:48:33,238 - Parser SUCCESS!
INFO  21:50:02,542 - Compiling source file: C:\Users\elena\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  21:50:02,543 - ================= LEKSICKA ANALIZA =================
INFO  21:50:02,566 - #2 program
INFO  21:50:02,566 - #47 test301
INFO  21:50:02,566 - #3 const
INFO  21:50:02,567 - #47 int
INFO  21:50:02,567 - #47 d
INFO  21:50:02,567 - #24 =
INFO  21:50:02,567 - #46 2
INFO  21:50:02,567 - #27 ;
INFO  21:50:02,568 - #35 {
INFO  21:50:02,568 - #8 void
INFO  21:50:02,568 - #47 main
INFO  21:50:02,568 - #31 (
INFO  21:50:02,569 - #32 )
INFO  21:50:02,569 - #47 int
INFO  21:50:02,569 - #47 niz
INFO  21:50:02,569 - #33 [
INFO  21:50:02,569 - #34 ]
INFO  21:50:02,570 - #27 ;
INFO  21:50:02,570 - #47 bool
INFO  21:50:02,570 - #47 nizb
INFO  21:50:02,570 - #33 [
INFO  21:50:02,570 - #34 ]
INFO  21:50:02,570 - #27 ;
INFO  21:50:02,570 - #47 int
INFO  21:50:02,570 - #47 a
INFO  21:50:02,570 - #27 ;
INFO  21:50:02,570 - #35 {
INFO  21:50:02,570 - #47 a
INFO  21:50:02,572 - #24 =
INFO  21:50:02,572 - #46 4
INFO  21:50:02,573 - #27 ;
INFO  21:50:02,573 - #47 niz
INFO  21:50:02,573 - #24 =
INFO  21:50:02,573 - #4 new
INFO  21:50:02,573 - #47 int
INFO  21:50:02,573 - #33 [
INFO  21:50:02,573 - #47 a
INFO  21:50:02,573 - #34 ]
INFO  21:50:02,573 - #27 ;
INFO  21:50:02,573 - #47 nizb
INFO  21:50:02,573 - #24 =
INFO  21:50:02,573 - #4 new
INFO  21:50:02,573 - #47 bool
INFO  21:50:02,573 - #33 [
INFO  21:50:02,574 - #46 4
INFO  21:50:02,574 - #34 ]
INFO  21:50:02,574 - #27 ;
INFO  21:50:02,574 - #36 }
INFO  21:50:02,574 - #36 }
INFO  21:50:02,576 - ================= PARSIRANO STABLO =================
INFO  21:50:02,580 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  Declarations(
    NoDeclarations(
    ) [NoDeclarations]
    ConstantDeclaration(
      ConDecl(
        Type(
         int
        ) [Type]
        ConstDef(
         d
          NumConst(
           2
          ) [NumConst]
        ) [ConstDef]
        NoConstantDeclaration(
        ) [NoConstantDeclaration]
      ) [ConDecl]
    ) [ConstantDeclaration]
  ) [Declarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      ListOfVarDecl(
        ListOfVarDecl(
          ListOfVarDecl(
            NoVarDeclarations(
            ) [NoVarDeclarations]
            VarDeclaration(
              Type(
               int
              ) [Type]
              OneVarDeclaration(
                AddVarDecl1(
                 niz
                  Brackets(
                  ) [Brackets]
                ) [AddVarDecl1]
              ) [OneVarDeclaration]
            ) [VarDeclaration]
          ) [ListOfVarDecl]
          VarDeclaration(
            Type(
             bool
            ) [Type]
            OneVarDeclaration(
              AddVarDecl1(
               nizb
                Brackets(
                ) [Brackets]
              ) [AddVarDecl1]
            ) [OneVarDeclaration]
          ) [VarDeclaration]
        ) [ListOfVarDecl]
        VarDeclaration(
          Type(
           int
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             a
              NoBrackets(
              ) [NoBrackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [ListOfVarDecl]
      Statements(
        Statements(
          Statements(
            NoStatements(
            ) [NoStatements]
            DesignatorStat(
              DesignatorExpr(
                Designator(
                  WithoutNamespace(
                   a
                  ) [WithoutNamespace]
                  NoArrayExpression(
                  ) [NoArrayExpression]
                ) [Designator]
                AssignOperation(
                ) [AssignOperation]
                PositiveStartExpr(
                  SingleTerm(
                    NumberConst(
                     4
                    ) [NumberConst]
                  ) [SingleTerm]
                ) [PositiveStartExpr]
              ) [DesignatorExpr]
            ) [DesignatorStat]
          ) [Statements]
          DesignatorStat(
            DesignatorExpr(
              Designator(
                WithoutNamespace(
                 niz
                ) [WithoutNamespace]
                NoArrayExpression(
                ) [NoArrayExpression]
              ) [Designator]
              AssignOperation(
              ) [AssignOperation]
              PositiveStartExpr(
                SingleTerm(
                  NewType(
                    Type(
                     int
                    ) [Type]
                    PositiveStartExpr(
                      SingleTerm(
                        DesignatorFact(
                          Designator(
                            WithoutNamespace(
                             a
                            ) [WithoutNamespace]
                            NoArrayExpression(
                            ) [NoArrayExpression]
                          ) [Designator]
                        ) [DesignatorFact]
                      ) [SingleTerm]
                    ) [PositiveStartExpr]
                  ) [NewType]
                ) [SingleTerm]
              ) [PositiveStartExpr]
            ) [DesignatorExpr]
          ) [DesignatorStat]
        ) [Statements]
        DesignatorStat(
          DesignatorExpr(
            Designator(
              WithoutNamespace(
               nizb
              ) [WithoutNamespace]
              NoArrayExpression(
              ) [NoArrayExpression]
            ) [Designator]
            AssignOperation(
            ) [AssignOperation]
            PositiveStartExpr(
              SingleTerm(
                NewType(
                  Type(
                   bool
                  ) [Type]
                  PositiveStartExpr(
                    SingleTerm(
                      NumberConst(
                       4
                      ) [NumberConst]
                    ) [SingleTerm]
                  ) [PositiveStartExpr]
                ) [NewType]
              ) [SingleTerm]
            ) [PositiveStartExpr]
          ) [DesignatorExpr]
        ) [DesignatorStat]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  21:50:02,581 - ================ Semanticka obrada ===================
INFO  21:50:02,584 - NEW CONST
INFO  21:50:02,584 - Con d: int, 2, 0 on line 2
INFO  21:50:02,584 - NEW SYMBOL
INFO  21:50:02,584 - Var niz: Arr of int, 0, 1 on line 6
INFO  21:50:02,584 - NEW SYMBOL
INFO  21:50:02,584 - Var nizb: Arr of , 1, 1 on line 7
INFO  21:50:02,584 - NEW SYMBOL
INFO  21:50:02,584 - Var a: int, 2, 1 on line 8
INFO  21:50:02,584 - Var a: int, 2, 1 on line 10
INFO  21:50:02,584 - Var niz: Arr of int, 0, 1 on line 11
INFO  21:50:02,584 - Var a: int, 2, 1 on line 11
INFO  21:50:02,584 - Var nizb: Arr of , 1, 1 on line 12
INFO  21:50:02,584 - Meth main: notype, 0, 0 on line 1
INFO  21:50:02,587 - Parser SUCCESS!
INFO  21:51:37,464 - Compiling source file: C:\Users\elena\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  21:51:37,464 - ================= LEKSICKA ANALIZA =================
INFO  21:51:37,494 - #2 program
INFO  21:51:37,495 - #47 test301
INFO  21:51:37,495 - #3 const
INFO  21:51:37,496 - #47 int
INFO  21:51:37,496 - #47 d
INFO  21:51:37,496 - #24 =
INFO  21:51:37,496 - #46 2
INFO  21:51:37,496 - #27 ;
INFO  21:51:37,496 - #35 {
INFO  21:51:37,496 - #8 void
INFO  21:51:37,497 - #47 main
INFO  21:51:37,497 - #31 (
INFO  21:51:37,497 - #32 )
INFO  21:51:37,497 - #47 int
INFO  21:51:37,498 - #47 niz
INFO  21:51:37,498 - #33 [
INFO  21:51:37,498 - #34 ]
INFO  21:51:37,498 - #27 ;
INFO  21:51:37,498 - #47 bool
INFO  21:51:37,498 - #47 nizb
INFO  21:51:37,499 - #33 [
INFO  21:51:37,499 - #34 ]
INFO  21:51:37,499 - #27 ;
INFO  21:51:37,499 - #47 int
INFO  21:51:37,499 - #47 a
INFO  21:51:37,499 - #27 ;
INFO  21:51:37,499 - #35 {
INFO  21:51:37,499 - #47 a
INFO  21:51:37,499 - #24 =
INFO  21:51:37,500 - #46 4
INFO  21:51:37,500 - #27 ;
INFO  21:51:37,500 - #47 niz
INFO  21:51:37,502 - #24 =
INFO  21:51:37,502 - #4 new
INFO  21:51:37,502 - #47 int
INFO  21:51:37,502 - #33 [
INFO  21:51:37,502 - #47 a
INFO  21:51:37,502 - #34 ]
INFO  21:51:37,502 - #27 ;
INFO  21:51:37,502 - #47 nizb
INFO  21:51:37,502 - #24 =
INFO  21:51:37,502 - #4 new
INFO  21:51:37,502 - #47 bool
INFO  21:51:37,502 - #33 [
INFO  21:51:37,502 - #46 4
INFO  21:51:37,502 - #34 ]
INFO  21:51:37,502 - #27 ;
INFO  21:51:37,502 - #36 }
INFO  21:51:37,502 - #36 }
INFO  21:51:37,503 - ================= PARSIRANO STABLO =================
INFO  21:51:37,507 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  Declarations(
    NoDeclarations(
    ) [NoDeclarations]
    ConstantDeclaration(
      ConDecl(
        Type(
         int
        ) [Type]
        ConstDef(
         d
          NumConst(
           2
          ) [NumConst]
        ) [ConstDef]
        NoConstantDeclaration(
        ) [NoConstantDeclaration]
      ) [ConDecl]
    ) [ConstantDeclaration]
  ) [Declarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      ListOfVarDecl(
        ListOfVarDecl(
          ListOfVarDecl(
            NoVarDeclarations(
            ) [NoVarDeclarations]
            VarDeclaration(
              Type(
               int
              ) [Type]
              OneVarDeclaration(
                AddVarDecl1(
                 niz
                  Brackets(
                  ) [Brackets]
                ) [AddVarDecl1]
              ) [OneVarDeclaration]
            ) [VarDeclaration]
          ) [ListOfVarDecl]
          VarDeclaration(
            Type(
             bool
            ) [Type]
            OneVarDeclaration(
              AddVarDecl1(
               nizb
                Brackets(
                ) [Brackets]
              ) [AddVarDecl1]
            ) [OneVarDeclaration]
          ) [VarDeclaration]
        ) [ListOfVarDecl]
        VarDeclaration(
          Type(
           int
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             a
              NoBrackets(
              ) [NoBrackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [ListOfVarDecl]
      Statements(
        Statements(
          Statements(
            NoStatements(
            ) [NoStatements]
            DesignatorStat(
              DesignatorExpr(
                Designator(
                  WithoutNamespace(
                   a
                  ) [WithoutNamespace]
                  NoArrayExpression(
                  ) [NoArrayExpression]
                ) [Designator]
                AssignOperation(
                ) [AssignOperation]
                PositiveStartExpr(
                  SingleTerm(
                    NumberConst(
                     4
                    ) [NumberConst]
                  ) [SingleTerm]
                ) [PositiveStartExpr]
              ) [DesignatorExpr]
            ) [DesignatorStat]
          ) [Statements]
          DesignatorStat(
            DesignatorExpr(
              Designator(
                WithoutNamespace(
                 niz
                ) [WithoutNamespace]
                NoArrayExpression(
                ) [NoArrayExpression]
              ) [Designator]
              AssignOperation(
              ) [AssignOperation]
              PositiveStartExpr(
                SingleTerm(
                  NewType(
                    Type(
                     int
                    ) [Type]
                    PositiveStartExpr(
                      SingleTerm(
                        DesignatorFact(
                          Designator(
                            WithoutNamespace(
                             a
                            ) [WithoutNamespace]
                            NoArrayExpression(
                            ) [NoArrayExpression]
                          ) [Designator]
                        ) [DesignatorFact]
                      ) [SingleTerm]
                    ) [PositiveStartExpr]
                  ) [NewType]
                ) [SingleTerm]
              ) [PositiveStartExpr]
            ) [DesignatorExpr]
          ) [DesignatorStat]
        ) [Statements]
        DesignatorStat(
          DesignatorExpr(
            Designator(
              WithoutNamespace(
               nizb
              ) [WithoutNamespace]
              NoArrayExpression(
              ) [NoArrayExpression]
            ) [Designator]
            AssignOperation(
            ) [AssignOperation]
            PositiveStartExpr(
              SingleTerm(
                NewType(
                  Type(
                   bool
                  ) [Type]
                  PositiveStartExpr(
                    SingleTerm(
                      NumberConst(
                       4
                      ) [NumberConst]
                    ) [SingleTerm]
                  ) [PositiveStartExpr]
                ) [NewType]
              ) [SingleTerm]
            ) [PositiveStartExpr]
          ) [DesignatorExpr]
        ) [DesignatorStat]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  21:51:37,507 - ================ Semanticka obrada ===================
INFO  21:51:37,509 - NEW CONST
INFO  21:51:37,509 - Con d: int, 2, 0 on line 2
INFO  21:51:37,509 - NEW SYMBOL
INFO  21:51:37,509 - Var niz: Arr of int, 0, 1 on line 6
INFO  21:51:37,509 - NEW SYMBOL
INFO  21:51:37,509 - Var nizb: Arr of boolean, 1, 1 on line 7
INFO  21:51:37,509 - NEW SYMBOL
INFO  21:51:37,509 - Var a: int, 2, 1 on line 8
INFO  21:51:37,509 - Var a: int, 2, 1 on line 10
INFO  21:51:37,509 - Var niz: Arr of int, 0, 1 on line 11
INFO  21:51:37,509 - Var a: int, 2, 1 on line 11
INFO  21:51:37,510 - Var nizb: Arr of boolean, 1, 1 on line 12
INFO  21:51:37,510 - Meth main: notype, 0, 0 on line 1
INFO  21:51:37,512 - Parser SUCCESS!
INFO  21:52:14,542 - Compiling source file: C:\Users\elena\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  21:52:14,543 - ================= LEKSICKA ANALIZA =================
INFO  21:52:14,583 - #2 program
INFO  21:52:14,583 - #47 test301
INFO  21:52:14,583 - #3 const
INFO  21:52:14,584 - #47 int
INFO  21:52:14,584 - #47 d
INFO  21:52:14,585 - #24 =
INFO  21:52:14,585 - #46 2
INFO  21:52:14,585 - #27 ;
INFO  21:52:14,586 - #35 {
INFO  21:52:14,586 - #8 void
INFO  21:52:14,586 - #47 main
INFO  21:52:14,587 - #31 (
INFO  21:52:14,587 - #32 )
INFO  21:52:14,588 - #47 int
INFO  21:52:14,589 - #47 niz
INFO  21:52:14,589 - #33 [
INFO  21:52:14,589 - #34 ]
INFO  21:52:14,589 - #27 ;
INFO  21:52:14,591 - #47 bool
INFO  21:52:14,591 - #47 nizb
INFO  21:52:14,591 - #33 [
INFO  21:52:14,591 - #34 ]
INFO  21:52:14,591 - #27 ;
INFO  21:52:14,592 - #47 int
INFO  21:52:14,592 - #47 a
INFO  21:52:14,592 - #27 ;
INFO  21:52:14,593 - #35 {
INFO  21:52:14,593 - #47 a
INFO  21:52:14,594 - #24 =
INFO  21:52:14,598 - #46 4
INFO  21:52:14,598 - #27 ;
INFO  21:52:14,600 - #47 niz
INFO  21:52:14,600 - #24 =
INFO  21:52:14,600 - #4 new
INFO  21:52:14,600 - #47 int
INFO  21:52:14,600 - #33 [
INFO  21:52:14,600 - #47 a
INFO  21:52:14,600 - #34 ]
INFO  21:52:14,600 - #27 ;
INFO  21:52:14,600 - #47 nizb
INFO  21:52:14,600 - #24 =
INFO  21:52:14,600 - #4 new
INFO  21:52:14,601 - #47 bool
INFO  21:52:14,601 - #33 [
INFO  21:52:14,601 - #46 4
INFO  21:52:14,601 - #34 ]
INFO  21:52:14,601 - #27 ;
INFO  21:52:14,601 - #36 }
INFO  21:52:14,601 - #36 }
INFO  21:52:14,603 - ================= PARSIRANO STABLO =================
INFO  21:52:14,610 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  Declarations(
    NoDeclarations(
    ) [NoDeclarations]
    ConstantDeclaration(
      ConDecl(
        Type(
         int
        ) [Type]
        ConstDef(
         d
          NumConst(
           2
          ) [NumConst]
        ) [ConstDef]
        NoConstantDeclaration(
        ) [NoConstantDeclaration]
      ) [ConDecl]
    ) [ConstantDeclaration]
  ) [Declarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      ListOfVarDecl(
        ListOfVarDecl(
          ListOfVarDecl(
            NoVarDeclarations(
            ) [NoVarDeclarations]
            VarDeclaration(
              Type(
               int
              ) [Type]
              OneVarDeclaration(
                AddVarDecl1(
                 niz
                  Brackets(
                  ) [Brackets]
                ) [AddVarDecl1]
              ) [OneVarDeclaration]
            ) [VarDeclaration]
          ) [ListOfVarDecl]
          VarDeclaration(
            Type(
             bool
            ) [Type]
            OneVarDeclaration(
              AddVarDecl1(
               nizb
                Brackets(
                ) [Brackets]
              ) [AddVarDecl1]
            ) [OneVarDeclaration]
          ) [VarDeclaration]
        ) [ListOfVarDecl]
        VarDeclaration(
          Type(
           int
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             a
              NoBrackets(
              ) [NoBrackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [ListOfVarDecl]
      Statements(
        Statements(
          Statements(
            NoStatements(
            ) [NoStatements]
            DesignatorStat(
              DesignatorExpr(
                Designator(
                  WithoutNamespace(
                   a
                  ) [WithoutNamespace]
                  NoArrayExpression(
                  ) [NoArrayExpression]
                ) [Designator]
                AssignOperation(
                ) [AssignOperation]
                PositiveStartExpr(
                  SingleTerm(
                    NumberConst(
                     4
                    ) [NumberConst]
                  ) [SingleTerm]
                ) [PositiveStartExpr]
              ) [DesignatorExpr]
            ) [DesignatorStat]
          ) [Statements]
          DesignatorStat(
            DesignatorExpr(
              Designator(
                WithoutNamespace(
                 niz
                ) [WithoutNamespace]
                NoArrayExpression(
                ) [NoArrayExpression]
              ) [Designator]
              AssignOperation(
              ) [AssignOperation]
              PositiveStartExpr(
                SingleTerm(
                  NewType(
                    Type(
                     int
                    ) [Type]
                    PositiveStartExpr(
                      SingleTerm(
                        DesignatorFact(
                          Designator(
                            WithoutNamespace(
                             a
                            ) [WithoutNamespace]
                            NoArrayExpression(
                            ) [NoArrayExpression]
                          ) [Designator]
                        ) [DesignatorFact]
                      ) [SingleTerm]
                    ) [PositiveStartExpr]
                  ) [NewType]
                ) [SingleTerm]
              ) [PositiveStartExpr]
            ) [DesignatorExpr]
          ) [DesignatorStat]
        ) [Statements]
        DesignatorStat(
          DesignatorExpr(
            Designator(
              WithoutNamespace(
               nizb
              ) [WithoutNamespace]
              NoArrayExpression(
              ) [NoArrayExpression]
            ) [Designator]
            AssignOperation(
            ) [AssignOperation]
            PositiveStartExpr(
              SingleTerm(
                NewType(
                  Type(
                   bool
                  ) [Type]
                  PositiveStartExpr(
                    SingleTerm(
                      NumberConst(
                       4
                      ) [NumberConst]
                    ) [SingleTerm]
                  ) [PositiveStartExpr]
                ) [NewType]
              ) [SingleTerm]
            ) [PositiveStartExpr]
          ) [DesignatorExpr]
        ) [DesignatorStat]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  21:52:14,611 - ================ Semanticka obrada ===================
INFO  21:52:14,628 - NEW CONST
INFO  21:52:14,628 - Con d: int, 2, 0 on line 2
INFO  21:52:14,628 - NEW SYMBOL
INFO  21:52:14,628 - Var niz: Arr of int, 0, 1 on line 6
INFO  21:52:14,628 - NEW SYMBOL
INFO  21:52:14,628 - Var nizb: Arr of boolean, 1, 1 on line 7
INFO  21:52:14,628 - NEW SYMBOL
INFO  21:52:14,628 - Var a: int, 2, 1 on line 8
INFO  21:52:14,628 - Var a: int, 2, 1 on line 10
INFO  21:52:14,628 - Var niz: Arr of int, 0, 1 on line 11
INFO  21:52:14,628 - Var a: int, 2, 1 on line 11
INFO  21:52:14,628 - Var nizb: Arr of boolean, 1, 1 on line 12
INFO  21:52:14,628 - Meth main: notype, 0, 0 on line 1
INFO  21:52:14,648 - Parser SUCCESS!
INFO  21:52:16,310 - Meth main: notype, 0, 0 on line 1
INFO  21:52:16,330 - Parser SUCCESS!
INFO  21:57:28,000 - Compiling source file: C:\Users\elena\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  21:57:28,000 - ================= LEKSICKA ANALIZA =================
INFO  21:57:28,042 - #2 program
INFO  21:57:28,042 - #47 test301
INFO  21:57:28,042 - #3 const
INFO  21:57:28,043 - #47 int
INFO  21:57:28,043 - #47 d
INFO  21:57:28,044 - #24 =
INFO  21:57:28,044 - #46 2
INFO  21:57:28,044 - #27 ;
INFO  21:57:28,044 - #35 {
INFO  21:57:28,044 - #8 void
INFO  21:57:28,045 - #47 main
INFO  21:57:28,046 - #31 (
INFO  21:57:28,046 - #32 )
INFO  21:57:28,048 - #47 int
INFO  21:57:28,050 - #47 niz
INFO  21:57:28,051 - #33 [
INFO  21:57:28,051 - #34 ]
INFO  21:57:28,051 - #27 ;
INFO  21:57:28,053 - #47 bool
INFO  21:57:28,054 - #47 nizb
INFO  21:57:28,054 - #33 [
INFO  21:57:28,054 - #34 ]
INFO  21:57:28,054 - #27 ;
INFO  21:57:28,054 - #47 int
INFO  21:57:28,054 - #47 a
INFO  21:57:28,054 - #27 ;
INFO  21:57:28,057 - #35 {
INFO  21:57:28,057 - #47 a
INFO  21:57:28,058 - #24 =
INFO  21:57:28,059 - #46 4
INFO  21:57:28,060 - #27 ;
INFO  21:57:28,060 - #47 niz
INFO  21:57:28,061 - #24 =
INFO  21:57:28,061 - #4 new
INFO  21:57:28,061 - #47 int
INFO  21:57:28,061 - #33 [
INFO  21:57:28,061 - #47 a
INFO  21:57:28,061 - #34 ]
INFO  21:57:28,061 - #27 ;
INFO  21:57:28,062 - #47 nizb
INFO  21:57:28,062 - #24 =
INFO  21:57:28,062 - #4 new
INFO  21:57:28,062 - #47 bool
INFO  21:57:28,062 - #33 [
INFO  21:57:28,062 - #46 4
INFO  21:57:28,062 - #34 ]
INFO  21:57:28,063 - #27 ;
INFO  21:57:28,063 - #36 }
INFO  21:57:28,063 - #36 }
INFO  21:57:28,068 - ================= PARSIRANO STABLO =================
INFO  21:57:28,074 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  Declarations(
    NoDeclarations(
    ) [NoDeclarations]
    ConstantDeclaration(
      ConDecl(
        Type(
         int
        ) [Type]
        ConstDef(
         d
          NumConst(
           2
          ) [NumConst]
        ) [ConstDef]
        NoConstantDeclaration(
        ) [NoConstantDeclaration]
      ) [ConDecl]
    ) [ConstantDeclaration]
  ) [Declarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      ListOfVarDecl(
        ListOfVarDecl(
          ListOfVarDecl(
            NoVarDeclarations(
            ) [NoVarDeclarations]
            VarDeclaration(
              Type(
               int
              ) [Type]
              OneVarDeclaration(
                AddVarDecl1(
                 niz
                  Brackets(
                  ) [Brackets]
                ) [AddVarDecl1]
              ) [OneVarDeclaration]
            ) [VarDeclaration]
          ) [ListOfVarDecl]
          VarDeclaration(
            Type(
             bool
            ) [Type]
            OneVarDeclaration(
              AddVarDecl1(
               nizb
                Brackets(
                ) [Brackets]
              ) [AddVarDecl1]
            ) [OneVarDeclaration]
          ) [VarDeclaration]
        ) [ListOfVarDecl]
        VarDeclaration(
          Type(
           int
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             a
              NoBrackets(
              ) [NoBrackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [ListOfVarDecl]
      Statements(
        Statements(
          Statements(
            NoStatements(
            ) [NoStatements]
            DesignatorStat(
              DesignatorExpr(
                Designator(
                  WithoutNamespace(
                   a
                  ) [WithoutNamespace]
                  NoArrayExpression(
                  ) [NoArrayExpression]
                ) [Designator]
                AssignOperation(
                ) [AssignOperation]
                PositiveStartExpr(
                  SingleTerm(
                    NumberConst(
                     4
                    ) [NumberConst]
                  ) [SingleTerm]
                ) [PositiveStartExpr]
              ) [DesignatorExpr]
            ) [DesignatorStat]
          ) [Statements]
          DesignatorStat(
            DesignatorExpr(
              Designator(
                WithoutNamespace(
                 niz
                ) [WithoutNamespace]
                NoArrayExpression(
                ) [NoArrayExpression]
              ) [Designator]
              AssignOperation(
              ) [AssignOperation]
              PositiveStartExpr(
                SingleTerm(
                  NewType(
                    Type(
                     int
                    ) [Type]
                    PositiveStartExpr(
                      SingleTerm(
                        DesignatorFact(
                          Designator(
                            WithoutNamespace(
                             a
                            ) [WithoutNamespace]
                            NoArrayExpression(
                            ) [NoArrayExpression]
                          ) [Designator]
                        ) [DesignatorFact]
                      ) [SingleTerm]
                    ) [PositiveStartExpr]
                  ) [NewType]
                ) [SingleTerm]
              ) [PositiveStartExpr]
            ) [DesignatorExpr]
          ) [DesignatorStat]
        ) [Statements]
        DesignatorStat(
          DesignatorExpr(
            Designator(
              WithoutNamespace(
               nizb
              ) [WithoutNamespace]
              NoArrayExpression(
              ) [NoArrayExpression]
            ) [Designator]
            AssignOperation(
            ) [AssignOperation]
            PositiveStartExpr(
              SingleTerm(
                NewType(
                  Type(
                   bool
                  ) [Type]
                  PositiveStartExpr(
                    SingleTerm(
                      NumberConst(
                       4
                      ) [NumberConst]
                    ) [SingleTerm]
                  ) [PositiveStartExpr]
                ) [NewType]
              ) [SingleTerm]
            ) [PositiveStartExpr]
          ) [DesignatorExpr]
        ) [DesignatorStat]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  21:57:28,074 - ================ Semanticka obrada ===================
INFO  21:57:28,090 - NEW CONST
INFO  21:57:28,090 - Con d: int, 2, 0 on line 2
INFO  22:02:33,672 - Compiling source file: C:\Users\elena\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  22:02:33,672 - ================= LEKSICKA ANALIZA =================
INFO  22:02:33,698 - #2 program
INFO  22:02:33,698 - #47 test301
INFO  22:02:33,698 - #3 const
INFO  22:02:33,699 - #47 int
INFO  22:02:33,699 - #47 d
INFO  22:02:33,699 - #24 =
INFO  22:02:33,699 - #46 2
INFO  22:02:33,699 - #27 ;
INFO  22:02:33,700 - #35 {
INFO  22:02:33,701 - #8 void
INFO  22:02:33,701 - #47 main
INFO  22:02:33,702 - #31 (
INFO  22:02:33,702 - #32 )
INFO  22:02:33,702 - #47 int
INFO  22:02:33,703 - #47 niz
INFO  22:02:33,703 - #33 [
INFO  22:02:33,703 - #34 ]
INFO  22:02:33,703 - #27 ;
INFO  22:02:33,704 - #47 bool
INFO  22:02:33,704 - #47 nizb
INFO  22:02:33,704 - #33 [
INFO  22:02:33,705 - #34 ]
INFO  22:02:33,705 - #27 ;
INFO  22:02:33,705 - #47 int
INFO  22:02:33,705 - #47 a
INFO  22:02:33,705 - #27 ;
INFO  22:02:33,706 - #35 {
INFO  22:02:33,706 - #47 a
INFO  22:02:33,706 - #24 =
INFO  22:02:33,707 - #46 4
INFO  22:02:33,708 - #27 ;
INFO  22:02:33,708 - #47 niz
INFO  22:02:33,708 - #24 =
INFO  22:02:33,708 - #4 new
INFO  22:02:33,708 - #47 int
INFO  22:02:33,708 - #33 [
INFO  22:02:33,708 - #47 a
INFO  22:02:33,708 - #34 ]
INFO  22:02:33,709 - #27 ;
INFO  22:02:33,709 - #47 nizb
INFO  22:02:33,709 - #24 =
INFO  22:02:33,709 - #4 new
INFO  22:02:33,709 - #47 bool
INFO  22:02:33,709 - #33 [
INFO  22:02:33,709 - #46 4
INFO  22:02:33,709 - #34 ]
INFO  22:02:33,709 - #27 ;
INFO  22:02:33,709 - #36 }
INFO  22:02:33,709 - #36 }
INFO  22:02:33,710 - ================= PARSIRANO STABLO =================
INFO  22:02:33,713 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  Declarations(
    NoDeclarations(
    ) [NoDeclarations]
    ConstantDeclaration(
      ConDecl(
        Type(
         int
        ) [Type]
        ConstDef(
         d
          NumConst(
           2
          ) [NumConst]
        ) [ConstDef]
        NoConstantDeclaration(
        ) [NoConstantDeclaration]
      ) [ConDecl]
    ) [ConstantDeclaration]
  ) [Declarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      ListOfVarDecl(
        ListOfVarDecl(
          ListOfVarDecl(
            NoVarDeclarations(
            ) [NoVarDeclarations]
            VarDeclaration(
              Type(
               int
              ) [Type]
              OneVarDeclaration(
                AddVarDecl1(
                 niz
                  Brackets(
                  ) [Brackets]
                ) [AddVarDecl1]
              ) [OneVarDeclaration]
            ) [VarDeclaration]
          ) [ListOfVarDecl]
          VarDeclaration(
            Type(
             bool
            ) [Type]
            OneVarDeclaration(
              AddVarDecl1(
               nizb
                Brackets(
                ) [Brackets]
              ) [AddVarDecl1]
            ) [OneVarDeclaration]
          ) [VarDeclaration]
        ) [ListOfVarDecl]
        VarDeclaration(
          Type(
           int
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             a
              NoBrackets(
              ) [NoBrackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [ListOfVarDecl]
      Statements(
        Statements(
          Statements(
            NoStatements(
            ) [NoStatements]
            DesignatorStat(
              DesignatorExpr(
                Designator(
                  WithoutNamespace(
                   a
                  ) [WithoutNamespace]
                  NoArrayExpression(
                  ) [NoArrayExpression]
                ) [Designator]
                AssignOperation(
                ) [AssignOperation]
                PositiveStartExpr(
                  SingleTerm(
                    NumberConst(
                     4
                    ) [NumberConst]
                  ) [SingleTerm]
                ) [PositiveStartExpr]
              ) [DesignatorExpr]
            ) [DesignatorStat]
          ) [Statements]
          DesignatorStat(
            DesignatorExpr(
              Designator(
                WithoutNamespace(
                 niz
                ) [WithoutNamespace]
                NoArrayExpression(
                ) [NoArrayExpression]
              ) [Designator]
              AssignOperation(
              ) [AssignOperation]
              PositiveStartExpr(
                SingleTerm(
                  NewType(
                    Type(
                     int
                    ) [Type]
                    PositiveStartExpr(
                      SingleTerm(
                        DesignatorFact(
                          Designator(
                            WithoutNamespace(
                             a
                            ) [WithoutNamespace]
                            NoArrayExpression(
                            ) [NoArrayExpression]
                          ) [Designator]
                        ) [DesignatorFact]
                      ) [SingleTerm]
                    ) [PositiveStartExpr]
                  ) [NewType]
                ) [SingleTerm]
              ) [PositiveStartExpr]
            ) [DesignatorExpr]
          ) [DesignatorStat]
        ) [Statements]
        DesignatorStat(
          DesignatorExpr(
            Designator(
              WithoutNamespace(
               nizb
              ) [WithoutNamespace]
              NoArrayExpression(
              ) [NoArrayExpression]
            ) [Designator]
            AssignOperation(
            ) [AssignOperation]
            PositiveStartExpr(
              SingleTerm(
                NewType(
                  Type(
                   bool
                  ) [Type]
                  PositiveStartExpr(
                    SingleTerm(
                      NumberConst(
                       4
                      ) [NumberConst]
                    ) [SingleTerm]
                  ) [PositiveStartExpr]
                ) [NewType]
              ) [SingleTerm]
            ) [PositiveStartExpr]
          ) [DesignatorExpr]
        ) [DesignatorStat]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  22:02:33,713 - ================ Semanticka obrada ===================
INFO  22:02:33,715 - NEW CONST
INFO  22:02:33,715 - Con d: int, 2, 0 on line 2
INFO  22:02:33,716 - NEW SYMBOL
INFO  22:02:33,716 - Var niz: Arr of int, 0, 1 on line 6
INFO  22:02:33,716 - NEW SYMBOL
INFO  22:02:33,716 - Var nizb: Arr of boolean, 1, 1 on line 7
INFO  22:02:33,716 - NEW SYMBOL
INFO  22:02:33,716 - Var a: int, 2, 1 on line 8
INFO  22:02:33,716 - Var a: int, 2, 1 on line 10
INFO  22:02:33,716 - Var niz: Arr of int, 0, 1 on line 11
INFO  22:02:33,716 - Var a: int, 2, 1 on line 11
INFO  22:02:33,716 - Var nizb: Arr of boolean, 1, 1 on line 12
INFO  22:02:33,716 - Meth main: notype, 0, 0 on line 1
INFO  22:02:33,719 - Parser SUCCESS!
INFO  22:12:43,349 - Compiling source file: C:\Users\elena\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  22:12:43,350 - ================= LEKSICKA ANALIZA =================
INFO  22:12:43,392 - #2 program
INFO  22:12:43,392 - #47 test301
INFO  22:12:43,392 - #3 const
INFO  22:12:43,393 - #47 int
INFO  22:12:43,393 - #47 nula
INFO  22:12:43,393 - #24 =
INFO  22:12:43,394 - #46 0
INFO  22:12:43,394 - #27 ;
INFO  22:12:43,394 - #3 const
INFO  22:12:43,395 - #47 int
INFO  22:12:43,395 - #47 jedan
INFO  22:12:43,395 - #24 =
INFO  22:12:43,395 - #46 1
INFO  22:12:43,395 - #27 ;
INFO  22:12:43,395 - #3 const
INFO  22:12:43,395 - #47 int
INFO  22:12:43,395 - #47 pet
INFO  22:12:43,395 - #24 =
INFO  22:12:43,395 - #46 5
INFO  22:12:43,395 - #27 ;
INFO  22:12:43,395 - #47 int
INFO  22:12:43,395 - #47 niz
INFO  22:12:43,395 - #33 [
INFO  22:12:43,395 - #34 ]
INFO  22:12:43,395 - #29 ,
INFO  22:12:43,397 - #47 niz2
INFO  22:12:43,397 - #33 [
INFO  22:12:43,397 - #34 ]
INFO  22:12:43,397 - #27 ;
INFO  22:12:43,397 - #47 char
INFO  22:12:43,397 - #47 nizch
INFO  22:12:43,397 - #33 [
INFO  22:12:43,397 - #34 ]
INFO  22:12:43,397 - #27 ;
INFO  22:12:43,397 - #35 {
INFO  22:12:43,397 - #8 void
INFO  22:12:43,398 - #47 main
INFO  22:12:43,398 - #31 (
INFO  22:12:43,399 - #32 )
INFO  22:12:43,399 - #47 int
INFO  22:12:43,400 - #47 bodovi
INFO  22:12:43,400 - #27 ;
INFO  22:12:43,401 - #47 bool
INFO  22:12:43,401 - #47 bt
INFO  22:12:43,401 - #27 ;
INFO  22:12:43,401 - #35 {
INFO  22:12:43,401 - #47 bodovi
INFO  22:12:43,401 - #24 =
INFO  22:12:43,402 - #46 0
INFO  22:12:43,403 - #27 ;
INFO  22:12:43,403 - #47 bodovi
INFO  22:12:43,403 - #25 ++
INFO  22:12:43,403 - #27 ;
INFO  22:12:43,403 - #47 bodovi
INFO  22:12:43,404 - #24 =
INFO  22:12:43,404 - #47 bodovi
INFO  22:12:43,404 - #11 +
INFO  22:12:43,404 - #47 jedan
INFO  22:12:43,405 - #27 ;
INFO  22:12:43,405 - #47 bodovi
INFO  22:12:43,405 - #24 =
INFO  22:12:43,405 - #47 bodovi
INFO  22:12:43,405 - #13 *
INFO  22:12:43,405 - #47 pet
INFO  22:12:43,407 - #27 ;
INFO  22:12:43,407 - #47 bodovi
INFO  22:12:43,407 - #26 --
INFO  22:12:43,408 - #27 ;
INFO  22:12:43,408 - #5 print
INFO  22:12:43,408 - #31 (
INFO  22:12:43,408 - #47 bodovi
INFO  22:12:43,408 - #32 )
INFO  22:12:43,408 - #27 ;
INFO  22:12:43,408 - #47 niz
INFO  22:12:43,408 - #24 =
INFO  22:12:43,408 - #4 new
INFO  22:12:43,409 - #47 int
INFO  22:12:43,409 - #33 [
INFO  22:12:43,409 - #46 3
INFO  22:12:43,409 - #34 ]
INFO  22:12:43,409 - #27 ;
INFO  22:12:43,409 - #47 niz
INFO  22:12:43,409 - #33 [
INFO  22:12:43,409 - #47 nula
INFO  22:12:43,409 - #34 ]
INFO  22:12:43,409 - #24 =
INFO  22:12:43,409 - #47 jedan
INFO  22:12:43,409 - #27 ;
INFO  22:12:43,409 - #47 niz
INFO  22:12:43,410 - #33 [
INFO  22:12:43,410 - #46 1
INFO  22:12:43,410 - #34 ]
INFO  22:12:43,410 - #24 =
INFO  22:12:43,410 - #46 2
INFO  22:12:43,410 - #27 ;
INFO  22:12:43,410 - #47 niz
INFO  22:12:43,410 - #33 [
INFO  22:12:43,410 - #47 niz
INFO  22:12:43,410 - #33 [
INFO  22:12:43,410 - #47 jedan
INFO  22:12:43,410 - #34 ]
INFO  22:12:43,410 - #34 ]
INFO  22:12:43,410 - #24 =
INFO  22:12:43,410 - #47 niz
INFO  22:12:43,410 - #33 [
INFO  22:12:43,410 - #47 niz
INFO  22:12:43,410 - #33 [
INFO  22:12:43,411 - #46 0
INFO  22:12:43,411 - #34 ]
INFO  22:12:43,411 - #34 ]
INFO  22:12:43,411 - #13 *
INFO  22:12:43,411 - #46 3
INFO  22:12:43,411 - #27 ;
INFO  22:12:43,411 - #47 bodovi
INFO  22:12:43,411 - #24 =
INFO  22:12:43,411 - #47 niz
INFO  22:12:43,411 - #33 [
INFO  22:12:43,411 - #46 2
INFO  22:12:43,411 - #34 ]
INFO  22:12:43,411 - #14 /
INFO  22:12:43,411 - #47 niz
INFO  22:12:43,412 - #33 [
INFO  22:12:43,412 - #46 0
INFO  22:12:43,412 - #34 ]
INFO  22:12:43,412 - #27 ;
INFO  22:12:43,412 - #5 print
INFO  22:12:43,412 - #31 (
INFO  22:12:43,412 - #47 bodovi
INFO  22:12:43,412 - #32 )
INFO  22:12:43,412 - #27 ;
INFO  22:12:43,413 - #5 print
INFO  22:12:43,413 - #31 (
INFO  22:12:43,413 - #47 niz
INFO  22:12:43,413 - #33 [
INFO  22:12:43,413 - #46 2
INFO  22:12:43,413 - #34 ]
INFO  22:12:43,413 - #32 )
INFO  22:12:43,413 - #27 ;
INFO  22:12:43,413 - #47 nizch
INFO  22:12:43,413 - #24 =
INFO  22:12:43,413 - #4 new
INFO  22:12:43,413 - #47 char
INFO  22:12:43,413 - #33 [
INFO  22:12:43,413 - #46 3
INFO  22:12:43,413 - #34 ]
INFO  22:12:43,413 - #27 ;
INFO  22:12:43,413 - #47 nizch
INFO  22:12:43,413 - #33 [
INFO  22:12:43,413 - #46 0
INFO  22:12:43,413 - #34 ]
INFO  22:12:43,414 - #24 =
INFO  22:12:43,414 - #48 a
INFO  22:12:43,414 - #27 ;
INFO  22:12:43,414 - #47 nizch
INFO  22:12:43,414 - #33 [
INFO  22:12:43,414 - #47 jedan
INFO  22:12:43,414 - #34 ]
INFO  22:12:43,414 - #24 =
INFO  22:12:43,414 - #48 b
INFO  22:12:43,414 - #27 ;
INFO  22:12:43,414 - #47 nizch
INFO  22:12:43,415 - #33 [
INFO  22:12:43,415 - #47 pet
INFO  22:12:43,415 - #12 -
INFO  22:12:43,415 - #46 3
INFO  22:12:43,416 - #34 ]
INFO  22:12:43,416 - #24 =
INFO  22:12:43,416 - #48 c
INFO  22:12:43,416 - #27 ;
INFO  22:12:43,416 - #5 print
INFO  22:12:43,416 - #31 (
INFO  22:12:43,417 - #47 nizch
INFO  22:12:43,417 - #33 [
INFO  22:12:43,417 - #46 1
INFO  22:12:43,417 - #34 ]
INFO  22:12:43,417 - #32 )
INFO  22:12:43,417 - #27 ;
INFO  22:12:43,417 - #5 print
INFO  22:12:43,417 - #31 (
INFO  22:12:43,417 - #47 nizch
INFO  22:12:43,417 - #33 [
INFO  22:12:43,418 - #47 jedan
INFO  22:12:43,418 - #13 *
INFO  22:12:43,418 - #46 2
INFO  22:12:43,418 - #34 ]
INFO  22:12:43,418 - #32 )
INFO  22:12:43,418 - #27 ;
INFO  22:12:43,418 - #47 bodovi
INFO  22:12:43,418 - #24 =
INFO  22:12:43,418 - #47 bodovi
INFO  22:12:43,418 - #11 +
INFO  22:12:43,418 - #31 (
INFO  22:12:43,418 - #47 pet
INFO  22:12:43,419 - #13 *
INFO  22:12:43,419 - #47 jedan
INFO  22:12:43,419 - #12 -
INFO  22:12:43,419 - #46 1
INFO  22:12:43,419 - #32 )
INFO  22:12:43,419 - #13 *
INFO  22:12:43,419 - #47 bodovi
INFO  22:12:43,419 - #12 -
INFO  22:12:43,419 - #31 (
INFO  22:12:43,419 - #46 3
INFO  22:12:43,419 - #15 %
INFO  22:12:43,419 - #46 2
INFO  22:12:43,420 - #11 +
INFO  22:12:43,420 - #46 3
INFO  22:12:43,420 - #13 *
INFO  22:12:43,420 - #46 2
INFO  22:12:43,420 - #12 -
INFO  22:12:43,420 - #46 3
INFO  22:12:43,420 - #32 )
INFO  22:12:43,420 - #27 ;
INFO  22:12:43,422 - #5 print
INFO  22:12:43,422 - #31 (
INFO  22:12:43,422 - #47 bodovi
INFO  22:12:43,422 - #32 )
INFO  22:12:43,422 - #27 ;
INFO  22:12:43,422 - #6 read
INFO  22:12:43,422 - #31 (
INFO  22:12:43,422 - #47 bodovi
INFO  22:12:43,422 - #32 )
INFO  22:12:43,422 - #27 ;
INFO  22:12:43,422 - #5 print
INFO  22:12:43,422 - #31 (
INFO  22:12:43,422 - #47 bodovi
INFO  22:12:43,422 - #32 )
INFO  22:12:43,422 - #27 ;
INFO  22:12:43,422 - #47 niz2
INFO  22:12:43,422 - #24 =
INFO  22:12:43,422 - #45 range
INFO  22:12:43,422 - #31 (
INFO  22:12:43,422 - #47 bodovi
INFO  22:12:43,422 - #11 +
INFO  22:12:43,423 - #46 1
INFO  22:12:43,423 - #32 )
INFO  22:12:43,423 - #27 ;
INFO  22:12:43,423 - #5 print
INFO  22:12:43,423 - #31 (
INFO  22:12:43,423 - #47 niz2
INFO  22:12:43,423 - #32 )
INFO  22:12:43,423 - #27 ;
INFO  22:12:43,423 - #36 }
INFO  22:12:43,423 - #36 }
INFO  22:12:43,424 - ================= PARSIRANO STABLO =================
INFO  22:12:43,432 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  Declarations(
    Declarations(
      Declarations(
        Declarations(
          Declarations(
            NoDeclarations(
            ) [NoDeclarations]
            ConstantDeclaration(
              ConDecl(
                Type(
                 int
                ) [Type]
                ConstDef(
                 nula
                  NumConst(
                   0
                  ) [NumConst]
                ) [ConstDef]
                NoConstantDeclaration(
                ) [NoConstantDeclaration]
              ) [ConDecl]
            ) [ConstantDeclaration]
          ) [Declarations]
          ConstantDeclaration(
            ConDecl(
              Type(
               int
              ) [Type]
              ConstDef(
               jedan
                NumConst(
                 1
                ) [NumConst]
              ) [ConstDef]
              NoConstantDeclaration(
              ) [NoConstantDeclaration]
            ) [ConDecl]
          ) [ConstantDeclaration]
        ) [Declarations]
        ConstantDeclaration(
          ConDecl(
            Type(
             int
            ) [Type]
            ConstDef(
             pet
              NumConst(
               5
              ) [NumConst]
            ) [ConstDef]
            NoConstantDeclaration(
            ) [NoConstantDeclaration]
          ) [ConDecl]
        ) [ConstantDeclaration]
      ) [Declarations]
      VariableDeclaration(
        VarDeclaration(
          Type(
           int
          ) [Type]
          MultipleVarDeclarations(
            OneVarDeclaration(
              AddVarDecl1(
               niz
                Brackets(
                ) [Brackets]
              ) [AddVarDecl1]
            ) [OneVarDeclaration]
            AddVarDecl1(
             niz2
              Brackets(
              ) [Brackets]
            ) [AddVarDecl1]
          ) [MultipleVarDeclarations]
        ) [VarDeclaration]
      ) [VariableDeclaration]
    ) [Declarations]
    VariableDeclaration(
      VarDeclaration(
        Type(
         char
        ) [Type]
        OneVarDeclaration(
          AddVarDecl1(
           nizch
            Brackets(
            ) [Brackets]
          ) [AddVarDecl1]
        ) [OneVarDeclaration]
      ) [VarDeclaration]
    ) [VariableDeclaration]
  ) [Declarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      ListOfVarDecl(
        ListOfVarDecl(
          NoVarDeclarations(
          ) [NoVarDeclarations]
          VarDeclaration(
            Type(
             int
            ) [Type]
            OneVarDeclaration(
              AddVarDecl1(
               bodovi
                NoBrackets(
                ) [NoBrackets]
              ) [AddVarDecl1]
            ) [OneVarDeclaration]
          ) [VarDeclaration]
        ) [ListOfVarDecl]
        VarDeclaration(
          Type(
           bool
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             bt
              NoBrackets(
              ) [NoBrackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [ListOfVarDecl]
      Statements(
        Statements(
          Statements(
            Statements(
              Statements(
                Statements(
                  Statements(
                    Statements(
                      Statements(
                        Statements(
                          Statements(
                            Statements(
                              Statements(
                                Statements(
                                  Statements(
                                    Statements(
                                      Statements(
                                        Statements(
                                          Statements(
                                            Statements(
                                              Statements(
                                                Statements(
                                                  Statements(
                                                    Statements(
                                                      Statements(
                                                        NoStatements(
                                                        ) [NoStatements]
                                                        DesignatorStat(
                                                          DesignatorExpr(
                                                            Designator(
                                                              WithoutNamespace(
                                                               bodovi
                                                              ) [WithoutNamespace]
                                                              NoArrayExpression(
                                                              ) [NoArrayExpression]
                                                            ) [Designator]
                                                            AssignOperation(
                                                            ) [AssignOperation]
                                                            PositiveStartExpr(
                                                              SingleTerm(
                                                                NumberConst(
                                                                 0
                                                                ) [NumberConst]
                                                              ) [SingleTerm]
                                                            ) [PositiveStartExpr]
                                                          ) [DesignatorExpr]
                                                        ) [DesignatorStat]
                                                      ) [Statements]
                                                      DesignatorStat(
                                                        DesignatorPP(
                                                          Designator(
                                                            WithoutNamespace(
                                                             bodovi
                                                            ) [WithoutNamespace]
                                                            NoArrayExpression(
                                                            ) [NoArrayExpression]
                                                          ) [Designator]
                                                        ) [DesignatorPP]
                                                      ) [DesignatorStat]
                                                    ) [Statements]
                                                    DesignatorStat(
                                                      DesignatorExpr(
                                                        Designator(
                                                          WithoutNamespace(
                                                           bodovi
                                                          ) [WithoutNamespace]
                                                          NoArrayExpression(
                                                          ) [NoArrayExpression]
                                                        ) [Designator]
                                                        AssignOperation(
                                                        ) [AssignOperation]
                                                        AddExpression(
                                                          PositiveStartExpr(
                                                            SingleTerm(
                                                              DesignatorFact(
                                                                Designator(
                                                                  WithoutNamespace(
                                                                   bodovi
                                                                  ) [WithoutNamespace]
                                                                  NoArrayExpression(
                                                                  ) [NoArrayExpression]
                                                                ) [Designator]
                                                              ) [DesignatorFact]
                                                            ) [SingleTerm]
                                                          ) [PositiveStartExpr]
                                                          Plus(
                                                          ) [Plus]
                                                          SingleTerm(
                                                            DesignatorFact(
                                                              Designator(
                                                                WithoutNamespace(
                                                                 jedan
                                                                ) [WithoutNamespace]
                                                                NoArrayExpression(
                                                                ) [NoArrayExpression]
                                                              ) [Designator]
                                                            ) [DesignatorFact]
                                                          ) [SingleTerm]
                                                        ) [AddExpression]
                                                      ) [DesignatorExpr]
                                                    ) [DesignatorStat]
                                                  ) [Statements]
                                                  DesignatorStat(
                                                    DesignatorExpr(
                                                      Designator(
                                                        WithoutNamespace(
                                                         bodovi
                                                        ) [WithoutNamespace]
                                                        NoArrayExpression(
                                                        ) [NoArrayExpression]
                                                      ) [Designator]
                                                      AssignOperation(
                                                      ) [AssignOperation]
                                                      PositiveStartExpr(
                                                        MultipleTerms(
                                                          SingleTerm(
                                                            DesignatorFact(
                                                              Designator(
                                                                WithoutNamespace(
                                                                 bodovi
                                                                ) [WithoutNamespace]
                                                                NoArrayExpression(
                                                                ) [NoArrayExpression]
                                                              ) [Designator]
                                                            ) [DesignatorFact]
                                                          ) [SingleTerm]
                                                          Multiply(
                                                          ) [Multiply]
                                                          DesignatorFact(
                                                            Designator(
                                                              WithoutNamespace(
                                                               pet
                                                              ) [WithoutNamespace]
                                                              NoArrayExpression(
                                                              ) [NoArrayExpression]
                                                            ) [Designator]
                                                          ) [DesignatorFact]
                                                        ) [MultipleTerms]
                                                      ) [PositiveStartExpr]
                                                    ) [DesignatorExpr]
                                                  ) [DesignatorStat]
                                                ) [Statements]
                                                DesignatorStat(
                                                  DesignatorMM(
                                                    Designator(
                                                      WithoutNamespace(
                                                       bodovi
                                                      ) [WithoutNamespace]
                                                      NoArrayExpression(
                                                      ) [NoArrayExpression]
                                                    ) [Designator]
                                                  ) [DesignatorMM]
                                                ) [DesignatorStat]
                                              ) [Statements]
                                              PrintExpr(
                                                PositiveStartExpr(
                                                  SingleTerm(
                                                    DesignatorFact(
                                                      Designator(
                                                        WithoutNamespace(
                                                         bodovi
                                                        ) [WithoutNamespace]
                                                        NoArrayExpression(
                                                        ) [NoArrayExpression]
                                                      ) [Designator]
                                                    ) [DesignatorFact]
                                                  ) [SingleTerm]
                                                ) [PositiveStartExpr]
                                                NoNumConstOpt(
                                                ) [NoNumConstOpt]
                                              ) [PrintExpr]
                                            ) [Statements]
                                            DesignatorStat(
                                              DesignatorExpr(
                                                Designator(
                                                  WithoutNamespace(
                                                   niz
                                                  ) [WithoutNamespace]
                                                  NoArrayExpression(
                                                  ) [NoArrayExpression]
                                                ) [Designator]
                                                AssignOperation(
                                                ) [AssignOperation]
                                                PositiveStartExpr(
                                                  SingleTerm(
                                                    NewType(
                                                      Type(
                                                       int
                                                      ) [Type]
                                                      PositiveStartExpr(
                                                        SingleTerm(
                                                          NumberConst(
                                                           3
                                                          ) [NumberConst]
                                                        ) [SingleTerm]
                                                      ) [PositiveStartExpr]
                                                    ) [NewType]
                                                  ) [SingleTerm]
                                                ) [PositiveStartExpr]
                                              ) [DesignatorExpr]
                                            ) [DesignatorStat]
                                          ) [Statements]
                                          DesignatorStat(
                                            DesignatorExpr(
                                              Designator(
                                                WithoutNamespace(
                                                 niz
                                                ) [WithoutNamespace]
                                                AddArrayExpression(
                                                  BraExpr(
                                                    PositiveStartExpr(
                                                      SingleTerm(
                                                        DesignatorFact(
                                                          Designator(
                                                            WithoutNamespace(
                                                             nula
                                                            ) [WithoutNamespace]
                                                            NoArrayExpression(
                                                            ) [NoArrayExpression]
                                                          ) [Designator]
                                                        ) [DesignatorFact]
                                                      ) [SingleTerm]
                                                    ) [PositiveStartExpr]
                                                  ) [BraExpr]
                                                ) [AddArrayExpression]
                                              ) [Designator]
                                              AssignOperation(
                                              ) [AssignOperation]
                                              PositiveStartExpr(
                                                SingleTerm(
                                                  DesignatorFact(
                                                    Designator(
                                                      WithoutNamespace(
                                                       jedan
                                                      ) [WithoutNamespace]
                                                      NoArrayExpression(
                                                      ) [NoArrayExpression]
                                                    ) [Designator]
                                                  ) [DesignatorFact]
                                                ) [SingleTerm]
                                              ) [PositiveStartExpr]
                                            ) [DesignatorExpr]
                                          ) [DesignatorStat]
                                        ) [Statements]
                                        DesignatorStat(
                                          DesignatorExpr(
                                            Designator(
                                              WithoutNamespace(
                                               niz
                                              ) [WithoutNamespace]
                                              AddArrayExpression(
                                                BraExpr(
                                                  PositiveStartExpr(
                                                    SingleTerm(
                                                      NumberConst(
                                                       1
                                                      ) [NumberConst]
                                                    ) [SingleTerm]
                                                  ) [PositiveStartExpr]
                                                ) [BraExpr]
                                              ) [AddArrayExpression]
                                            ) [Designator]
                                            AssignOperation(
                                            ) [AssignOperation]
                                            PositiveStartExpr(
                                              SingleTerm(
                                                NumberConst(
                                                 2
                                                ) [NumberConst]
                                              ) [SingleTerm]
                                            ) [PositiveStartExpr]
                                          ) [DesignatorExpr]
                                        ) [DesignatorStat]
                                      ) [Statements]
                                      DesignatorStat(
                                        DesignatorExpr(
                                          Designator(
                                            WithoutNamespace(
                                             niz
                                            ) [WithoutNamespace]
                                            AddArrayExpression(
                                              BraExpr(
                                                PositiveStartExpr(
                                                  SingleTerm(
                                                    DesignatorFact(
                                                      Designator(
                                                        WithoutNamespace(
                                                         niz
                                                        ) [WithoutNamespace]
                                                        AddArrayExpression(
                                                          BraExpr(
                                                            PositiveStartExpr(
                                                              SingleTerm(
                                                                DesignatorFact(
                                                                  Designator(
                                                                    WithoutNamespace(
                                                                     jedan
                                                                    ) [WithoutNamespace]
                                                                    NoArrayExpression(
                                                                    ) [NoArrayExpression]
                                                                  ) [Designator]
                                                                ) [DesignatorFact]
                                                              ) [SingleTerm]
                                                            ) [PositiveStartExpr]
                                                          ) [BraExpr]
                                                        ) [AddArrayExpression]
                                                      ) [Designator]
                                                    ) [DesignatorFact]
                                                  ) [SingleTerm]
                                                ) [PositiveStartExpr]
                                              ) [BraExpr]
                                            ) [AddArrayExpression]
                                          ) [Designator]
                                          AssignOperation(
                                          ) [AssignOperation]
                                          PositiveStartExpr(
                                            MultipleTerms(
                                              SingleTerm(
                                                DesignatorFact(
                                                  Designator(
                                                    WithoutNamespace(
                                                     niz
                                                    ) [WithoutNamespace]
                                                    AddArrayExpression(
                                                      BraExpr(
                                                        PositiveStartExpr(
                                                          SingleTerm(
                                                            DesignatorFact(
                                                              Designator(
                                                                WithoutNamespace(
                                                                 niz
                                                                ) [WithoutNamespace]
                                                                AddArrayExpression(
                                                                  BraExpr(
                                                                    PositiveStartExpr(
                                                                      SingleTerm(
                                                                        NumberConst(
                                                                         0
                                                                        ) [NumberConst]
                                                                      ) [SingleTerm]
                                                                    ) [PositiveStartExpr]
                                                                  ) [BraExpr]
                                                                ) [AddArrayExpression]
                                                              ) [Designator]
                                                            ) [DesignatorFact]
                                                          ) [SingleTerm]
                                                        ) [PositiveStartExpr]
                                                      ) [BraExpr]
                                                    ) [AddArrayExpression]
                                                  ) [Designator]
                                                ) [DesignatorFact]
                                              ) [SingleTerm]
                                              Multiply(
                                              ) [Multiply]
                                              NumberConst(
                                               3
                                              ) [NumberConst]
                                            ) [MultipleTerms]
                                          ) [PositiveStartExpr]
                                        ) [DesignatorExpr]
                                      ) [DesignatorStat]
                                    ) [Statements]
                                    DesignatorStat(
                                      DesignatorExpr(
                                        Designator(
                                          WithoutNamespace(
                                           bodovi
                                          ) [WithoutNamespace]
                                          NoArrayExpression(
                                          ) [NoArrayExpression]
                                        ) [Designator]
                                        AssignOperation(
                                        ) [AssignOperation]
                                        PositiveStartExpr(
                                          MultipleTerms(
                                            SingleTerm(
                                              DesignatorFact(
                                                Designator(
                                                  WithoutNamespace(
                                                   niz
                                                  ) [WithoutNamespace]
                                                  AddArrayExpression(
                                                    BraExpr(
                                                      PositiveStartExpr(
                                                        SingleTerm(
                                                          NumberConst(
                                                           2
                                                          ) [NumberConst]
                                                        ) [SingleTerm]
                                                      ) [PositiveStartExpr]
                                                    ) [BraExpr]
                                                  ) [AddArrayExpression]
                                                ) [Designator]
                                              ) [DesignatorFact]
                                            ) [SingleTerm]
                                            Divide(
                                            ) [Divide]
                                            DesignatorFact(
                                              Designator(
                                                WithoutNamespace(
                                                 niz
                                                ) [WithoutNamespace]
                                                AddArrayExpression(
                                                  BraExpr(
                                                    PositiveStartExpr(
                                                      SingleTerm(
                                                        NumberConst(
                                                         0
                                                        ) [NumberConst]
                                                      ) [SingleTerm]
                                                    ) [PositiveStartExpr]
                                                  ) [BraExpr]
                                                ) [AddArrayExpression]
                                              ) [Designator]
                                            ) [DesignatorFact]
                                          ) [MultipleTerms]
                                        ) [PositiveStartExpr]
                                      ) [DesignatorExpr]
                                    ) [DesignatorStat]
                                  ) [Statements]
                                  PrintExpr(
                                    PositiveStartExpr(
                                      SingleTerm(
                                        DesignatorFact(
                                          Designator(
                                            WithoutNamespace(
                                             bodovi
                                            ) [WithoutNamespace]
                                            NoArrayExpression(
                                            ) [NoArrayExpression]
                                          ) [Designator]
                                        ) [DesignatorFact]
                                      ) [SingleTerm]
                                    ) [PositiveStartExpr]
                                    NoNumConstOpt(
                                    ) [NoNumConstOpt]
                                  ) [PrintExpr]
                                ) [Statements]
                                PrintExpr(
                                  PositiveStartExpr(
                                    SingleTerm(
                                      DesignatorFact(
                                        Designator(
                                          WithoutNamespace(
                                           niz
                                          ) [WithoutNamespace]
                                          AddArrayExpression(
                                            BraExpr(
                                              PositiveStartExpr(
                                                SingleTerm(
                                                  NumberConst(
                                                   2
                                                  ) [NumberConst]
                                                ) [SingleTerm]
                                              ) [PositiveStartExpr]
                                            ) [BraExpr]
                                          ) [AddArrayExpression]
                                        ) [Designator]
                                      ) [DesignatorFact]
                                    ) [SingleTerm]
                                  ) [PositiveStartExpr]
                                  NoNumConstOpt(
                                  ) [NoNumConstOpt]
                                ) [PrintExpr]
                              ) [Statements]
                              DesignatorStat(
                                DesignatorExpr(
                                  Designator(
                                    WithoutNamespace(
                                     nizch
                                    ) [WithoutNamespace]
                                    NoArrayExpression(
                                    ) [NoArrayExpression]
                                  ) [Designator]
                                  AssignOperation(
                                  ) [AssignOperation]
                                  PositiveStartExpr(
                                    SingleTerm(
                                      NewType(
                                        Type(
                                         char
                                        ) [Type]
                                        PositiveStartExpr(
                                          SingleTerm(
                                            NumberConst(
                                             3
                                            ) [NumberConst]
                                          ) [SingleTerm]
                                        ) [PositiveStartExpr]
                                      ) [NewType]
                                    ) [SingleTerm]
                                  ) [PositiveStartExpr]
                                ) [DesignatorExpr]
                              ) [DesignatorStat]
                            ) [Statements]
                            DesignatorStat(
                              DesignatorExpr(
                                Designator(
                                  WithoutNamespace(
                                   nizch
                                  ) [WithoutNamespace]
                                  AddArrayExpression(
                                    BraExpr(
                                      PositiveStartExpr(
                                        SingleTerm(
                                          NumberConst(
                                           0
                                          ) [NumberConst]
                                        ) [SingleTerm]
                                      ) [PositiveStartExpr]
                                    ) [BraExpr]
                                  ) [AddArrayExpression]
                                ) [Designator]
                                AssignOperation(
                                ) [AssignOperation]
                                PositiveStartExpr(
                                  SingleTerm(
                                    CharacterConst(
                                     a
                                    ) [CharacterConst]
                                  ) [SingleTerm]
                                ) [PositiveStartExpr]
                              ) [DesignatorExpr]
                            ) [DesignatorStat]
                          ) [Statements]
                          DesignatorStat(
                            DesignatorExpr(
                              Designator(
                                WithoutNamespace(
                                 nizch
                                ) [WithoutNamespace]
                                AddArrayExpression(
                                  BraExpr(
                                    PositiveStartExpr(
                                      SingleTerm(
                                        DesignatorFact(
                                          Designator(
                                            WithoutNamespace(
                                             jedan
                                            ) [WithoutNamespace]
                                            NoArrayExpression(
                                            ) [NoArrayExpression]
                                          ) [Designator]
                                        ) [DesignatorFact]
                                      ) [SingleTerm]
                                    ) [PositiveStartExpr]
                                  ) [BraExpr]
                                ) [AddArrayExpression]
                              ) [Designator]
                              AssignOperation(
                              ) [AssignOperation]
                              PositiveStartExpr(
                                SingleTerm(
                                  CharacterConst(
                                   b
                                  ) [CharacterConst]
                                ) [SingleTerm]
                              ) [PositiveStartExpr]
                            ) [DesignatorExpr]
                          ) [DesignatorStat]
                        ) [Statements]
                        DesignatorStat(
                          DesignatorExpr(
                            Designator(
                              WithoutNamespace(
                               nizch
                              ) [WithoutNamespace]
                              AddArrayExpression(
                                BraExpr(
                                  AddExpression(
                                    PositiveStartExpr(
                                      SingleTerm(
                                        DesignatorFact(
                                          Designator(
                                            WithoutNamespace(
                                             pet
                                            ) [WithoutNamespace]
                                            NoArrayExpression(
                                            ) [NoArrayExpression]
                                          ) [Designator]
                                        ) [DesignatorFact]
                                      ) [SingleTerm]
                                    ) [PositiveStartExpr]
                                    Minus(
                                    ) [Minus]
                                    SingleTerm(
                                      NumberConst(
                                       3
                                      ) [NumberConst]
                                    ) [SingleTerm]
                                  ) [AddExpression]
                                ) [BraExpr]
                              ) [AddArrayExpression]
                            ) [Designator]
                            AssignOperation(
                            ) [AssignOperation]
                            PositiveStartExpr(
                              SingleTerm(
                                CharacterConst(
                                 c
                                ) [CharacterConst]
                              ) [SingleTerm]
                            ) [PositiveStartExpr]
                          ) [DesignatorExpr]
                        ) [DesignatorStat]
                      ) [Statements]
                      PrintExpr(
                        PositiveStartExpr(
                          SingleTerm(
                            DesignatorFact(
                              Designator(
                                WithoutNamespace(
                                 nizch
                                ) [WithoutNamespace]
                                AddArrayExpression(
                                  BraExpr(
                                    PositiveStartExpr(
                                      SingleTerm(
                                        NumberConst(
                                         1
                                        ) [NumberConst]
                                      ) [SingleTerm]
                                    ) [PositiveStartExpr]
                                  ) [BraExpr]
                                ) [AddArrayExpression]
                              ) [Designator]
                            ) [DesignatorFact]
                          ) [SingleTerm]
                        ) [PositiveStartExpr]
                        NoNumConstOpt(
                        ) [NoNumConstOpt]
                      ) [PrintExpr]
                    ) [Statements]
                    PrintExpr(
                      PositiveStartExpr(
                        SingleTerm(
                          DesignatorFact(
                            Designator(
                              WithoutNamespace(
                               nizch
                              ) [WithoutNamespace]
                              AddArrayExpression(
                                BraExpr(
                                  PositiveStartExpr(
                                    MultipleTerms(
                                      SingleTerm(
                                        DesignatorFact(
                                          Designator(
                                            WithoutNamespace(
                                             jedan
                                            ) [WithoutNamespace]
                                            NoArrayExpression(
                                            ) [NoArrayExpression]
                                          ) [Designator]
                                        ) [DesignatorFact]
                                      ) [SingleTerm]
                                      Multiply(
                                      ) [Multiply]
                                      NumberConst(
                                       2
                                      ) [NumberConst]
                                    ) [MultipleTerms]
                                  ) [PositiveStartExpr]
                                ) [BraExpr]
                              ) [AddArrayExpression]
                            ) [Designator]
                          ) [DesignatorFact]
                        ) [SingleTerm]
                      ) [PositiveStartExpr]
                      NoNumConstOpt(
                      ) [NoNumConstOpt]
                    ) [PrintExpr]
                  ) [Statements]
                  DesignatorStat(
                    DesignatorExpr(
                      Designator(
                        WithoutNamespace(
                         bodovi
                        ) [WithoutNamespace]
                        NoArrayExpression(
                        ) [NoArrayExpression]
                      ) [Designator]
                      AssignOperation(
                      ) [AssignOperation]
                      AddExpression(
                        AddExpression(
                          PositiveStartExpr(
                            SingleTerm(
                              DesignatorFact(
                                Designator(
                                  WithoutNamespace(
                                   bodovi
                                  ) [WithoutNamespace]
                                  NoArrayExpression(
                                  ) [NoArrayExpression]
                                ) [Designator]
                              ) [DesignatorFact]
                            ) [SingleTerm]
                          ) [PositiveStartExpr]
                          Plus(
                          ) [Plus]
                          MultipleTerms(
                            SingleTerm(
                              ExpressionFact(
                                AddExpression(
                                  PositiveStartExpr(
                                    MultipleTerms(
                                      SingleTerm(
                                        DesignatorFact(
                                          Designator(
                                            WithoutNamespace(
                                             pet
                                            ) [WithoutNamespace]
                                            NoArrayExpression(
                                            ) [NoArrayExpression]
                                          ) [Designator]
                                        ) [DesignatorFact]
                                      ) [SingleTerm]
                                      Multiply(
                                      ) [Multiply]
                                      DesignatorFact(
                                        Designator(
                                          WithoutNamespace(
                                           jedan
                                          ) [WithoutNamespace]
                                          NoArrayExpression(
                                          ) [NoArrayExpression]
                                        ) [Designator]
                                      ) [DesignatorFact]
                                    ) [MultipleTerms]
                                  ) [PositiveStartExpr]
                                  Minus(
                                  ) [Minus]
                                  SingleTerm(
                                    NumberConst(
                                     1
                                    ) [NumberConst]
                                  ) [SingleTerm]
                                ) [AddExpression]
                              ) [ExpressionFact]
                            ) [SingleTerm]
                            Multiply(
                            ) [Multiply]
                            DesignatorFact(
                              Designator(
                                WithoutNamespace(
                                 bodovi
                                ) [WithoutNamespace]
                                NoArrayExpression(
                                ) [NoArrayExpression]
                              ) [Designator]
                            ) [DesignatorFact]
                          ) [MultipleTerms]
                        ) [AddExpression]
                        Minus(
                        ) [Minus]
                        SingleTerm(
                          ExpressionFact(
                            AddExpression(
                              AddExpression(
                                PositiveStartExpr(
                                  MultipleTerms(
                                    SingleTerm(
                                      NumberConst(
                                       3
                                      ) [NumberConst]
                                    ) [SingleTerm]
                                    Modulo(
                                    ) [Modulo]
                                    NumberConst(
                                     2
                                    ) [NumberConst]
                                  ) [MultipleTerms]
                                ) [PositiveStartExpr]
                                Plus(
                                ) [Plus]
                                MultipleTerms(
                                  SingleTerm(
                                    NumberConst(
                                     3
                                    ) [NumberConst]
                                  ) [SingleTerm]
                                  Multiply(
                                  ) [Multiply]
                                  NumberConst(
                                   2
                                  ) [NumberConst]
                                ) [MultipleTerms]
                              ) [AddExpression]
                              Minus(
                              ) [Minus]
                              SingleTerm(
                                NumberConst(
                                 3
                                ) [NumberConst]
                              ) [SingleTerm]
                            ) [AddExpression]
                          ) [ExpressionFact]
                        ) [SingleTerm]
                      ) [AddExpression]
                    ) [DesignatorExpr]
                  ) [DesignatorStat]
                ) [Statements]
                PrintExpr(
                  PositiveStartExpr(
                    SingleTerm(
                      DesignatorFact(
                        Designator(
                          WithoutNamespace(
                           bodovi
                          ) [WithoutNamespace]
                          NoArrayExpression(
                          ) [NoArrayExpression]
                        ) [Designator]
                      ) [DesignatorFact]
                    ) [SingleTerm]
                  ) [PositiveStartExpr]
                  NoNumConstOpt(
                  ) [NoNumConstOpt]
                ) [PrintExpr]
              ) [Statements]
              ReadDesignator(
                Designator(
                  WithoutNamespace(
                   bodovi
                  ) [WithoutNamespace]
                  NoArrayExpression(
                  ) [NoArrayExpression]
                ) [Designator]
              ) [ReadDesignator]
            ) [Statements]
            PrintExpr(
              PositiveStartExpr(
                SingleTerm(
                  DesignatorFact(
                    Designator(
                      WithoutNamespace(
                       bodovi
                      ) [WithoutNamespace]
                      NoArrayExpression(
                      ) [NoArrayExpression]
                    ) [Designator]
                  ) [DesignatorFact]
                ) [SingleTerm]
              ) [PositiveStartExpr]
              NoNumConstOpt(
              ) [NoNumConstOpt]
            ) [PrintExpr]
          ) [Statements]
          DesignatorStat(
            DesignatorExpr(
              Designator(
                WithoutNamespace(
                 niz2
                ) [WithoutNamespace]
                NoArrayExpression(
                ) [NoArrayExpression]
              ) [Designator]
              AssignOperation(
              ) [AssignOperation]
              PositiveStartExpr(
                SingleTerm(
                  RangeExpression(
                    AddExpression(
                      PositiveStartExpr(
                        SingleTerm(
                          DesignatorFact(
                            Designator(
                              WithoutNamespace(
                               bodovi
                              ) [WithoutNamespace]
                              NoArrayExpression(
                              ) [NoArrayExpression]
                            ) [Designator]
                          ) [DesignatorFact]
                        ) [SingleTerm]
                      ) [PositiveStartExpr]
                      Plus(
                      ) [Plus]
                      SingleTerm(
                        NumberConst(
                         1
                        ) [NumberConst]
                      ) [SingleTerm]
                    ) [AddExpression]
                  ) [RangeExpression]
                ) [SingleTerm]
              ) [PositiveStartExpr]
            ) [DesignatorExpr]
          ) [DesignatorStat]
        ) [Statements]
        PrintExpr(
          PositiveStartExpr(
            SingleTerm(
              DesignatorFact(
                Designator(
                  WithoutNamespace(
                   niz2
                  ) [WithoutNamespace]
                  NoArrayExpression(
                  ) [NoArrayExpression]
                ) [Designator]
              ) [DesignatorFact]
            ) [SingleTerm]
          ) [PositiveStartExpr]
          NoNumConstOpt(
          ) [NoNumConstOpt]
        ) [PrintExpr]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  22:12:43,435 - ================ Semanticka obrada ===================
INFO  22:12:43,438 - NEW CONST
INFO  22:12:43,438 - Con nula: int, 0, 0 on line 5
INFO  22:12:43,438 - NEW CONST
INFO  22:12:43,438 - Con jedan: int, 1, 0 on line 6
INFO  22:12:43,438 - NEW CONST
INFO  22:12:43,438 - Con pet: int, 5, 0 on line 7
INFO  22:12:43,438 - NEW SYMBOL
INFO  22:12:43,439 - Var niz: Arr of int, 0, 0 on line 9
INFO  22:12:43,439 - NEW SYMBOL
INFO  22:12:43,439 - Var niz2: Arr of int, 1, 0 on line 9
INFO  22:12:43,439 - NEW SYMBOL
INFO  22:12:43,439 - Var nizch: Arr of char, 2, 0 on line 10
INFO  22:12:43,439 - NEW SYMBOL
INFO  22:12:43,439 - Var bodovi: int, 0, 1 on line 14
INFO  22:12:43,439 - NEW SYMBOL
INFO  22:12:43,439 - Var bt: boolean, 1, 1 on line 15
INFO  22:12:43,439 - Var bodovi: int, 0, 1 on line 17
INFO  22:12:43,439 - Var bodovi: int, 0, 1 on line 18
INFO  22:12:43,439 - Var bodovi: int, 0, 1 on line 19
INFO  22:12:43,439 - Var bodovi: int, 0, 1 on line 19
INFO  22:12:43,439 - Con jedan: int, 1, 0 on line 19
INFO  22:12:43,439 - Var bodovi: int, 0, 1 on line 20
INFO  22:12:43,439 - Var bodovi: int, 0, 1 on line 20
INFO  22:12:43,440 - Con pet: int, 5, 0 on line 20
INFO  22:12:43,440 - Var bodovi: int, 0, 1 on line 21
INFO  22:12:43,440 - Var bodovi: int, 0, 1 on line 22
INFO  22:12:43,440 - Var niz: Arr of int, 0, 0 on line 25
INFO  22:12:43,440 - Var niz: Arr of int, 0, 0 on line 26
INFO  22:12:43,440 - Con nula: int, 0, 0 on line 26
INFO  22:12:43,440 - Con jedan: int, 1, 0 on line 26
INFO  22:12:43,440 - Var niz: Arr of int, 0, 0 on line 27
INFO  22:12:43,440 - Var niz: Arr of int, 0, 0 on line 28
INFO  22:12:43,440 - Var niz: Arr of int, 0, 0 on line 28
INFO  22:12:43,440 - Con jedan: int, 1, 0 on line 28
INFO  22:12:43,440 - Var niz: Arr of int, 0, 0 on line 28
INFO  22:12:43,440 - Var niz: Arr of int, 0, 0 on line 28
INFO  22:12:43,440 - Var bodovi: int, 0, 1 on line 29
INFO  22:12:43,440 - Var niz: Arr of int, 0, 0 on line 29
INFO  22:12:43,440 - Var niz: Arr of int, 0, 0 on line 29
INFO  22:12:43,440 - Var bodovi: int, 0, 1 on line 30
INFO  22:12:43,440 - Var niz: Arr of int, 0, 0 on line 31
INFO  22:12:43,440 - Var nizch: Arr of char, 2, 0 on line 34
INFO  22:12:43,441 - Var nizch: Arr of char, 2, 0 on line 35
INFO  22:12:43,441 - Var nizch: Arr of char, 2, 0 on line 36
INFO  22:12:43,441 - Con jedan: int, 1, 0 on line 36
INFO  22:12:43,441 - Var nizch: Arr of char, 2, 0 on line 37
INFO  22:12:43,441 - Con pet: int, 5, 0 on line 37
INFO  22:12:43,442 - Var nizch: Arr of char, 2, 0 on line 38
INFO  22:12:43,442 - Var nizch: Arr of char, 2, 0 on line 39
INFO  22:12:43,442 - Con jedan: int, 1, 0 on line 39
INFO  22:12:43,442 - Var bodovi: int, 0, 1 on line 42
INFO  22:12:43,442 - Var bodovi: int, 0, 1 on line 42
INFO  22:12:43,443 - Con pet: int, 5, 0 on line 42
INFO  22:12:43,443 - Con jedan: int, 1, 0 on line 42
INFO  22:12:43,443 - Var bodovi: int, 0, 1 on line 42
INFO  22:12:43,443 - Var bodovi: int, 0, 1 on line 43
INFO  22:12:43,443 - Var bodovi: int, 0, 1 on line 45
INFO  22:12:43,443 - read() function call on line 45
INFO  22:12:43,443 - Var bodovi: int, 0, 1 on line 46
INFO  22:12:43,443 - Var niz2: Arr of int, 1, 0 on line 48
INFO  22:12:43,443 - Var bodovi: int, 0, 1 on line 48
INFO  22:12:43,443 - Var niz2: Arr of int, 1, 0 on line 49
INFO  22:12:43,443 - Meth main: notype, 0, 0 on line 3
INFO  22:12:43,447 - Parser SUCCESS!
