INFO  13:03:07,191 - Compiling source file: C:\Users\elena\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  13:03:07,191 - ================= LEKSICKA ANALIZA =================
INFO  13:03:07,217 - #2 program
INFO  13:03:07,217 - #47 test301
INFO  13:03:07,217 - #3 const
INFO  13:03:07,218 - #47 int
INFO  13:03:07,218 - #47 nula
INFO  13:03:07,218 - #24 =
INFO  13:03:07,218 - #46 0
INFO  13:03:07,218 - #27 ;
INFO  13:03:07,219 - #3 const
INFO  13:03:07,219 - #47 int
INFO  13:03:07,219 - #47 jedan
INFO  13:03:07,219 - #24 =
INFO  13:03:07,219 - #46 1
INFO  13:03:07,219 - #27 ;
INFO  13:03:07,219 - #3 const
INFO  13:03:07,219 - #47 int
INFO  13:03:07,219 - #47 pet
INFO  13:03:07,230 - #24 =
INFO  13:03:07,230 - #46 5
INFO  13:03:07,230 - #27 ;
INFO  13:03:07,230 - #47 int
INFO  13:03:07,230 - #47 niz
INFO  13:03:07,230 - #33 [
INFO  13:03:07,230 - #34 ]
INFO  13:03:07,230 - #27 ;
INFO  13:03:07,232 - #47 char
INFO  13:03:07,232 - #47 nizch
INFO  13:03:07,232 - #33 [
INFO  13:03:07,232 - #34 ]
INFO  13:03:07,232 - #27 ;
INFO  13:03:07,232 - #47 int
INFO  13:03:07,232 - #47 mat
INFO  13:03:07,232 - #33 [
INFO  13:03:07,232 - #34 ]
INFO  13:03:07,232 - #33 [
INFO  13:03:07,232 - #34 ]
INFO  13:03:07,232 - #27 ;
INFO  13:03:07,233 - #47 int
INFO  13:03:07,233 - #47 a
INFO  13:03:07,233 - #27 ;
INFO  13:03:07,233 - #35 {
INFO  13:03:07,233 - #8 void
INFO  13:03:07,234 - #47 main
INFO  13:03:07,234 - #31 (
INFO  13:03:07,234 - #32 )
INFO  13:03:07,235 - #47 int
INFO  13:03:07,235 - #47 bodovi
INFO  13:03:07,235 - #27 ;
INFO  13:03:07,235 - #47 bool
INFO  13:03:07,235 - #47 bt
INFO  13:03:07,236 - #27 ;
INFO  13:03:07,236 - #35 {
INFO  13:03:07,236 - #47 niz
INFO  13:03:07,236 - #24 =
INFO  13:03:07,237 - #4 new
INFO  13:03:07,237 - #47 int
INFO  13:03:07,238 - #33 [
INFO  13:03:07,238 - #46 12
INFO  13:03:07,238 - #34 ]
INFO  13:03:07,238 - #27 ;
INFO  13:03:07,238 - #47 niz
INFO  13:03:07,238 - #33 [
INFO  13:03:07,238 - #46 1
INFO  13:03:07,238 - #34 ]
INFO  13:03:07,238 - #24 =
INFO  13:03:07,240 - #46 5
INFO  13:03:07,240 - #27 ;
INFO  13:03:07,240 - #6 read
INFO  13:03:07,240 - #31 (
INFO  13:03:07,240 - #47 niz
INFO  13:03:07,240 - #33 [
INFO  13:03:07,240 - #46 3
INFO  13:03:07,240 - #34 ]
INFO  13:03:07,240 - #32 )
INFO  13:03:07,240 - #27 ;
INFO  13:03:07,240 - #5 print
INFO  13:03:07,240 - #31 (
INFO  13:03:07,240 - #47 niz
INFO  13:03:07,240 - #33 [
INFO  13:03:07,240 - #46 3
INFO  13:03:07,240 - #34 ]
INFO  13:03:07,240 - #32 )
INFO  13:03:07,241 - #27 ;
INFO  13:03:07,241 - #47 a
INFO  13:03:07,241 - #24 =
INFO  13:03:07,241 - #46 5
INFO  13:03:07,241 - #27 ;
INFO  13:03:07,241 - #36 }
INFO  13:03:07,241 - #36 }
INFO  13:03:07,242 - ================= PARSIRANO STABLO =================
INFO  13:03:07,244 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  Declarations(
    Declarations(
      Declarations(
        Declarations(
          Declarations(
            Declarations(
              Declarations(
                NoDeclarations(
                ) [NoDeclarations]
                ConstantDeclaration(
                  ConDecl(
                    Type(
                     int
                    ) [Type]
                    ConstDef(
                     nula
                      NumConst(
                       0
                      ) [NumConst]
                    ) [ConstDef]
                    NoConstantDeclaration(
                    ) [NoConstantDeclaration]
                  ) [ConDecl]
                ) [ConstantDeclaration]
              ) [Declarations]
              ConstantDeclaration(
                ConDecl(
                  Type(
                   int
                  ) [Type]
                  ConstDef(
                   jedan
                    NumConst(
                     1
                    ) [NumConst]
                  ) [ConstDef]
                  NoConstantDeclaration(
                  ) [NoConstantDeclaration]
                ) [ConDecl]
              ) [ConstantDeclaration]
            ) [Declarations]
            ConstantDeclaration(
              ConDecl(
                Type(
                 int
                ) [Type]
                ConstDef(
                 pet
                  NumConst(
                   5
                  ) [NumConst]
                ) [ConstDef]
                NoConstantDeclaration(
                ) [NoConstantDeclaration]
              ) [ConDecl]
            ) [ConstantDeclaration]
          ) [Declarations]
          VariableDeclaration(
            VarDeclaration(
              Type(
               int
              ) [Type]
              OneVarDeclaration(
                AddVarDecl1(
                 niz
                  Brackets(
                  ) [Brackets]
                ) [AddVarDecl1]
              ) [OneVarDeclaration]
            ) [VarDeclaration]
          ) [VariableDeclaration]
        ) [Declarations]
        VariableDeclaration(
          VarDeclaration(
            Type(
             char
            ) [Type]
            OneVarDeclaration(
              AddVarDecl1(
               nizch
                Brackets(
                ) [Brackets]
              ) [AddVarDecl1]
            ) [OneVarDeclaration]
          ) [VarDeclaration]
        ) [VariableDeclaration]
      ) [Declarations]
      VariableDeclaration(
        VarDeclaration(
          Type(
           int
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             mat
              TwoBrackets(
              ) [TwoBrackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [VariableDeclaration]
    ) [Declarations]
    VariableDeclaration(
      VarDeclaration(
        Type(
         int
        ) [Type]
        OneVarDeclaration(
          AddVarDecl1(
           a
            NoBrackets(
            ) [NoBrackets]
          ) [AddVarDecl1]
        ) [OneVarDeclaration]
      ) [VarDeclaration]
    ) [VariableDeclaration]
  ) [Declarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      ListOfVarDecl(
        ListOfVarDecl(
          NoVarDeclarations(
          ) [NoVarDeclarations]
          VarDeclaration(
            Type(
             int
            ) [Type]
            OneVarDeclaration(
              AddVarDecl1(
               bodovi
                NoBrackets(
                ) [NoBrackets]
              ) [AddVarDecl1]
            ) [OneVarDeclaration]
          ) [VarDeclaration]
        ) [ListOfVarDecl]
        VarDeclaration(
          Type(
           bool
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             bt
              NoBrackets(
              ) [NoBrackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [ListOfVarDecl]
      Statements(
        Statements(
          Statements(
            Statements(
              Statements(
                NoStatements(
                ) [NoStatements]
                DesignatorStat(
                  DesignatorExpr(
                    Designator(
                      WithoutNamespace(
                       niz
                      ) [WithoutNamespace]
                      NoArrayExpression(
                      ) [NoArrayExpression]
                    ) [Designator]
                    AssignOperation(
                    ) [AssignOperation]
                    PositiveStartExpr(
                      SingleTerm(
                        NewType(
                          Type(
                           int
                          ) [Type]
                          PositiveStartExpr(
                            SingleTerm(
                              NumberConst(
                               12
                              ) [NumberConst]
                            ) [SingleTerm]
                          ) [PositiveStartExpr]
                        ) [NewType]
                      ) [SingleTerm]
                    ) [PositiveStartExpr]
                  ) [DesignatorExpr]
                ) [DesignatorStat]
              ) [Statements]
              DesignatorStat(
                DesignatorExpr(
                  Designator(
                    WithoutNamespace(
                     niz
                    ) [WithoutNamespace]
                    AddArrayExpression(
                      BraExpr(
                        PositiveStartExpr(
                          SingleTerm(
                            NumberConst(
                             1
                            ) [NumberConst]
                          ) [SingleTerm]
                        ) [PositiveStartExpr]
                      ) [BraExpr]
                    ) [AddArrayExpression]
                  ) [Designator]
                  AssignOperation(
                  ) [AssignOperation]
                  PositiveStartExpr(
                    SingleTerm(
                      NumberConst(
                       5
                      ) [NumberConst]
                    ) [SingleTerm]
                  ) [PositiveStartExpr]
                ) [DesignatorExpr]
              ) [DesignatorStat]
            ) [Statements]
            ReadDesignator(
              Designator(
                WithoutNamespace(
                 niz
                ) [WithoutNamespace]
                AddArrayExpression(
                  BraExpr(
                    PositiveStartExpr(
                      SingleTerm(
                        NumberConst(
                         3
                        ) [NumberConst]
                      ) [SingleTerm]
                    ) [PositiveStartExpr]
                  ) [BraExpr]
                ) [AddArrayExpression]
              ) [Designator]
            ) [ReadDesignator]
          ) [Statements]
          PrintExpr(
            PositiveStartExpr(
              SingleTerm(
                DesignatorFact(
                  Designator(
                    WithoutNamespace(
                     niz
                    ) [WithoutNamespace]
                    AddArrayExpression(
                      BraExpr(
                        PositiveStartExpr(
                          SingleTerm(
                            NumberConst(
                             3
                            ) [NumberConst]
                          ) [SingleTerm]
                        ) [PositiveStartExpr]
                      ) [BraExpr]
                    ) [AddArrayExpression]
                  ) [Designator]
                ) [DesignatorFact]
              ) [SingleTerm]
            ) [PositiveStartExpr]
            NoNumConstOpt(
            ) [NoNumConstOpt]
          ) [PrintExpr]
        ) [Statements]
        DesignatorStat(
          DesignatorExpr(
            Designator(
              WithoutNamespace(
               a
              ) [WithoutNamespace]
              NoArrayExpression(
              ) [NoArrayExpression]
            ) [Designator]
            AssignOperation(
            ) [AssignOperation]
            PositiveStartExpr(
              SingleTerm(
                NumberConst(
                 5
                ) [NumberConst]
              ) [SingleTerm]
            ) [PositiveStartExpr]
          ) [DesignatorExpr]
        ) [DesignatorStat]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  13:03:07,244 - ================ Semanticka obrada ===================
INFO  13:03:07,247 - NEW CONST
INFO  13:03:07,247 - Con nula: int, 0, 0 on line 2
INFO  13:03:07,247 - NEW CONST
INFO  13:03:07,247 - Con jedan: int, 1, 0 on line 3
INFO  13:03:07,247 - NEW CONST
INFO  13:03:07,247 - Con pet: int, 5, 0 on line 4
INFO  13:03:07,248 - NEW SYMBOL
INFO  13:03:07,248 - Var niz: Arr of int, 0, 0 on line 6
INFO  13:03:07,248 - NEW SYMBOL
INFO  13:03:07,248 - Var nizch: Arr of char, 1, 0 on line 7
INFO  13:03:07,248 - NEW SYMBOL
INFO  13:03:07,248 - Var mat: Matrix of int, 2, 0 on line 8
INFO  13:03:07,248 - NEW SYMBOL
INFO  13:03:07,248 - Var a: int, 3, 0 on line 10
INFO  13:03:07,248 - NEW SYMBOL
INFO  13:03:07,248 - Var bodovi: int, 0, 1 on line 15
INFO  13:03:07,248 - NEW SYMBOL
INFO  13:03:07,248 - Var bt: boolean, 1, 1 on line 16
INFO  13:03:07,248 - Var niz: Arr of int, 0, 0 on line 18
INFO  13:03:07,248 - Var niz: Arr of int, 0, 0 on line 19
INFO  13:03:07,248 - Var niz: Arr of int, 0, 0 on line 20
INFO  13:03:07,250 - read() function call on line 20
INFO  13:03:07,250 - Var niz: Arr of int, 0, 0 on line 21
INFO  13:03:07,250 - Var a: int, 3, 0 on line 22
INFO  13:03:07,250 - Meth main: notype, 0, 0 on line 1
INFO  13:03:07,253 - Parser SUCCESS!
