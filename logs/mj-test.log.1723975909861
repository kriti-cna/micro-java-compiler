INFO  12:03:59,848 - Compiling source file: C:\Users\elena\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  12:03:59,856 - ================= LEKSICKA ANALIZA =================
INFO  12:03:59,926 - #2 program
INFO  12:03:59,926 - #47 test301
INFO  12:03:59,927 - #47 int
INFO  12:03:59,927 - #47 niz
INFO  12:03:59,928 - #33 [
INFO  12:03:59,928 - #34 ]
INFO  12:03:59,928 - #27 ;
INFO  12:03:59,929 - #47 int
INFO  12:03:59,929 - #47 mat
INFO  12:03:59,929 - #33 [
INFO  12:03:59,929 - #34 ]
INFO  12:03:59,929 - #33 [
INFO  12:03:59,929 - #34 ]
INFO  12:03:59,929 - #27 ;
INFO  12:03:59,930 - #47 char
INFO  12:03:59,930 - #47 c
INFO  12:03:59,930 - #27 ;
INFO  12:03:59,930 - #47 bool
INFO  12:03:59,930 - #47 a
INFO  12:03:59,930 - #27 ;
INFO  12:03:59,930 - #47 int
INFO  12:03:59,930 - #47 in
INFO  12:03:59,930 - #27 ;
INFO  12:03:59,930 - #35 {
INFO  12:03:59,930 - #8 void
INFO  12:03:59,931 - #47 main
INFO  12:03:59,931 - #31 (
INFO  12:03:59,931 - #32 )
INFO  12:03:59,932 - #35 {
INFO  12:03:59,932 - #47 mat
INFO  12:03:59,932 - #24 =
INFO  12:03:59,933 - #4 new
INFO  12:03:59,933 - #47 int
INFO  12:03:59,933 - #33 [
INFO  12:03:59,933 - #46 7
INFO  12:03:59,935 - #34 ]
INFO  12:03:59,935 - #33 [
INFO  12:03:59,935 - #46 8
INFO  12:03:59,935 - #34 ]
INFO  12:03:59,935 - #27 ;
INFO  12:03:59,935 - #47 mat
INFO  12:03:59,935 - #33 [
INFO  12:03:59,935 - #46 1
INFO  12:03:59,935 - #34 ]
INFO  12:03:59,936 - #33 [
INFO  12:03:59,936 - #46 0
INFO  12:03:59,936 - #34 ]
INFO  12:03:59,936 - #24 =
INFO  12:03:59,936 - #46 3
INFO  12:03:59,936 - #27 ;
INFO  12:03:59,937 - #36 }
INFO  12:03:59,937 - #36 }
INFO  12:03:59,938 - ================= PARSIRANO STABLO =================
INFO  12:03:59,940 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  Declarations(
    Declarations(
      Declarations(
        Declarations(
          Declarations(
            NoDeclarations(
            ) [NoDeclarations]
            VariableDeclaration(
              VarDeclaration(
                Type(
                 int
                ) [Type]
                OneVarDeclaration(
                  AddVarDecl1(
                   niz
                    Brackets(
                    ) [Brackets]
                  ) [AddVarDecl1]
                ) [OneVarDeclaration]
              ) [VarDeclaration]
            ) [VariableDeclaration]
          ) [Declarations]
          VariableDeclaration(
            VarDeclaration(
              Type(
               int
              ) [Type]
              OneVarDeclaration(
                AddVarDecl1(
                 mat
                  TwoBrackets(
                  ) [TwoBrackets]
                ) [AddVarDecl1]
              ) [OneVarDeclaration]
            ) [VarDeclaration]
          ) [VariableDeclaration]
        ) [Declarations]
        VariableDeclaration(
          VarDeclaration(
            Type(
             char
            ) [Type]
            OneVarDeclaration(
              AddVarDecl1(
               c
                NoBrackets(
                ) [NoBrackets]
              ) [AddVarDecl1]
            ) [OneVarDeclaration]
          ) [VarDeclaration]
        ) [VariableDeclaration]
      ) [Declarations]
      VariableDeclaration(
        VarDeclaration(
          Type(
           bool
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             a
              NoBrackets(
              ) [NoBrackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [VariableDeclaration]
    ) [Declarations]
    VariableDeclaration(
      VarDeclaration(
        Type(
         int
        ) [Type]
        OneVarDeclaration(
          AddVarDecl1(
           in
            NoBrackets(
            ) [NoBrackets]
          ) [AddVarDecl1]
        ) [OneVarDeclaration]
      ) [VarDeclaration]
    ) [VariableDeclaration]
  ) [Declarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      NoVarDeclarations(
      ) [NoVarDeclarations]
      Statements(
        Statements(
          NoStatements(
          ) [NoStatements]
          DesignatorStat(
            DesignatorExpr(
              Designator(
                WithoutNamespace(
                 mat
                ) [WithoutNamespace]
                NoArrayExpression(
                ) [NoArrayExpression]
              ) [Designator]
              AssignOperation(
              ) [AssignOperation]
              PositiveStartExpr(
                SingleTerm(
                  NewTypeMat(
                    Type(
                     int
                    ) [Type]
                    PositiveStartExpr(
                      SingleTerm(
                        NumberConst(
                         7
                        ) [NumberConst]
                      ) [SingleTerm]
                    ) [PositiveStartExpr]
                    PositiveStartExpr(
                      SingleTerm(
                        NumberConst(
                         8
                        ) [NumberConst]
                      ) [SingleTerm]
                    ) [PositiveStartExpr]
                  ) [NewTypeMat]
                ) [SingleTerm]
              ) [PositiveStartExpr]
            ) [DesignatorExpr]
          ) [DesignatorStat]
        ) [Statements]
        DesignatorStat(
          DesignatorExpr(
            Designator(
              WithoutNamespace(
               mat
              ) [WithoutNamespace]
              AddMatrixExpression(
                BraExpr(
                  PositiveStartExpr(
                    SingleTerm(
                      NumberConst(
                       1
                      ) [NumberConst]
                    ) [SingleTerm]
                  ) [PositiveStartExpr]
                ) [BraExpr]
                BraExpr(
                  PositiveStartExpr(
                    SingleTerm(
                      NumberConst(
                       0
                      ) [NumberConst]
                    ) [SingleTerm]
                  ) [PositiveStartExpr]
                ) [BraExpr]
              ) [AddMatrixExpression]
            ) [Designator]
            AssignOperation(
            ) [AssignOperation]
            PositiveStartExpr(
              SingleTerm(
                NumberConst(
                 3
                ) [NumberConst]
              ) [SingleTerm]
            ) [PositiveStartExpr]
          ) [DesignatorExpr]
        ) [DesignatorStat]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  12:03:59,941 - ================ Semanticka obrada ===================
INFO  12:03:59,965 - NEW SYMBOL
INFO  12:03:59,965 - Var niz: Arr of int, 0, 0 on line 2
INFO  12:03:59,965 - NEW SYMBOL
INFO  12:03:59,965 - Var mat: Matrix of int, 1, 0 on line 3
INFO  12:03:59,965 - NEW SYMBOL
INFO  12:03:59,965 - Var c: char, 2, 0 on line 4
INFO  12:03:59,965 - NEW SYMBOL
INFO  12:03:59,965 - Var a: boolean, 3, 0 on line 5
INFO  12:03:59,965 - NEW SYMBOL
INFO  12:03:59,965 - Var in: int, 4, 0 on line 6
INFO  12:03:59,965 - Var mat: Matrix of int, 1, 0 on line 15
INFO  12:03:59,965 - Var mat: Matrix of int, 1, 0 on line 16
INFO  12:03:59,967 - Meth main: notype, 0, 0 on line 1
INFO  12:03:59,973 - Parser SUCCESS!
