INFO  15:35:36,160 - Compiling source file: C:\Users\se200106\Desktop\wsp\MJCompilerAVGUST3.zip_expanded\MJCompiler\test\program.mj
INFO  15:35:36,161 - ================= LEKSICKA ANALIZA =================
INFO  15:35:36,183 - #2 program
INFO  15:35:36,183 - #47 test301
INFO  15:35:36,183 - #3 const
INFO  15:35:36,184 - #47 int
INFO  15:35:36,184 - #47 nula
INFO  15:35:36,185 - #24 =
INFO  15:35:36,185 - #46 0
INFO  15:35:36,185 - #27 ;
INFO  15:35:36,185 - #3 const
INFO  15:35:36,186 - #47 int
INFO  15:35:36,186 - #47 jedan
INFO  15:35:36,186 - #24 =
INFO  15:35:36,186 - #46 1
INFO  15:35:36,186 - #27 ;
INFO  15:35:36,186 - #3 const
INFO  15:35:36,186 - #47 int
INFO  15:35:36,186 - #47 pet
INFO  15:35:36,186 - #24 =
INFO  15:35:36,186 - #46 5
INFO  15:35:36,186 - #27 ;
INFO  15:35:36,186 - #47 int
INFO  15:35:36,187 - #47 niz
INFO  15:35:36,187 - #33 [
INFO  15:35:36,187 - #34 ]
INFO  15:35:36,187 - #27 ;
INFO  15:35:36,187 - #47 char
INFO  15:35:36,188 - #47 mat
INFO  15:35:36,188 - #33 [
INFO  15:35:36,188 - #34 ]
INFO  15:35:36,188 - #33 [
INFO  15:35:36,188 - #34 ]
INFO  15:35:36,188 - #27 ;
INFO  15:35:36,188 - #47 int
INFO  15:35:36,188 - #47 mat2
INFO  15:35:36,188 - #33 [
INFO  15:35:36,188 - #34 ]
INFO  15:35:36,188 - #33 [
INFO  15:35:36,188 - #34 ]
INFO  15:35:36,189 - #27 ;
INFO  15:35:36,189 - #47 int
INFO  15:35:36,189 - #47 a
INFO  15:35:36,189 - #27 ;
INFO  15:35:36,189 - #35 {
INFO  15:35:36,189 - #8 void
INFO  15:35:36,190 - #47 main
INFO  15:35:36,190 - #31 (
INFO  15:35:36,191 - #32 )
INFO  15:35:36,191 - #35 {
INFO  15:35:36,191 - #47 mat
INFO  15:35:36,191 - #24 =
INFO  15:35:36,192 - #4 new
INFO  15:35:36,193 - #47 char
INFO  15:35:36,193 - #33 [
INFO  15:35:36,193 - #46 2
INFO  15:35:36,193 - #34 ]
INFO  15:35:36,193 - #33 [
INFO  15:35:36,193 - #46 3
INFO  15:35:36,193 - #34 ]
INFO  15:35:36,193 - #27 ;
INFO  15:35:36,193 - #47 mat2
INFO  15:35:36,193 - #24 =
INFO  15:35:36,193 - #4 new
INFO  15:35:36,193 - #47 int
INFO  15:35:36,194 - #33 [
INFO  15:35:36,194 - #46 2
INFO  15:35:36,194 - #34 ]
INFO  15:35:36,194 - #33 [
INFO  15:35:36,194 - #46 3
INFO  15:35:36,194 - #34 ]
INFO  15:35:36,194 - #27 ;
INFO  15:35:36,194 - #47 mat2
INFO  15:35:36,194 - #33 [
INFO  15:35:36,194 - #46 0
INFO  15:35:36,194 - #34 ]
INFO  15:35:36,194 - #33 [
INFO  15:35:36,194 - #46 0
INFO  15:35:36,194 - #34 ]
INFO  15:35:36,194 - #24 =
INFO  15:35:36,194 - #46 1
INFO  15:35:36,195 - #27 ;
INFO  15:35:36,195 - #47 mat
INFO  15:35:36,195 - #33 [
INFO  15:35:36,195 - #46 0
INFO  15:35:36,195 - #34 ]
INFO  15:35:36,195 - #33 [
INFO  15:35:36,195 - #46 0
INFO  15:35:36,195 - #34 ]
INFO  15:35:36,195 - #24 =
INFO  15:35:36,195 - #48 a
INFO  15:35:36,195 - #27 ;
INFO  15:35:36,195 - #36 }
INFO  15:35:36,195 - #36 }
INFO  15:35:36,196 - ================= PARSIRANO STABLO =================
INFO  15:35:36,199 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  Declarations(
    Declarations(
      Declarations(
        Declarations(
          Declarations(
            Declarations(
              Declarations(
                NoDeclarations(
                ) [NoDeclarations]
                ConstantDeclaration(
                  ConDecl(
                    Type(
                     int
                    ) [Type]
                    ConstDef(
                     nula
                      NumConst(
                       0
                      ) [NumConst]
                    ) [ConstDef]
                    NoConstantDeclaration(
                    ) [NoConstantDeclaration]
                  ) [ConDecl]
                ) [ConstantDeclaration]
              ) [Declarations]
              ConstantDeclaration(
                ConDecl(
                  Type(
                   int
                  ) [Type]
                  ConstDef(
                   jedan
                    NumConst(
                     1
                    ) [NumConst]
                  ) [ConstDef]
                  NoConstantDeclaration(
                  ) [NoConstantDeclaration]
                ) [ConDecl]
              ) [ConstantDeclaration]
            ) [Declarations]
            ConstantDeclaration(
              ConDecl(
                Type(
                 int
                ) [Type]
                ConstDef(
                 pet
                  NumConst(
                   5
                  ) [NumConst]
                ) [ConstDef]
                NoConstantDeclaration(
                ) [NoConstantDeclaration]
              ) [ConDecl]
            ) [ConstantDeclaration]
          ) [Declarations]
          VariableDeclaration(
            VarDeclaration(
              Type(
               int
              ) [Type]
              OneVarDeclaration(
                AddVarDecl1(
                 niz
                  Brackets(
                  ) [Brackets]
                ) [AddVarDecl1]
              ) [OneVarDeclaration]
            ) [VarDeclaration]
          ) [VariableDeclaration]
        ) [Declarations]
        VariableDeclaration(
          VarDeclaration(
            Type(
             char
            ) [Type]
            OneVarDeclaration(
              AddVarDecl1(
               mat
                TwoBrackets(
                ) [TwoBrackets]
              ) [AddVarDecl1]
            ) [OneVarDeclaration]
          ) [VarDeclaration]
        ) [VariableDeclaration]
      ) [Declarations]
      VariableDeclaration(
        VarDeclaration(
          Type(
           int
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             mat2
              TwoBrackets(
              ) [TwoBrackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [VariableDeclaration]
    ) [Declarations]
    VariableDeclaration(
      VarDeclaration(
        Type(
         int
        ) [Type]
        OneVarDeclaration(
          AddVarDecl1(
           a
            NoBrackets(
            ) [NoBrackets]
          ) [AddVarDecl1]
        ) [OneVarDeclaration]
      ) [VarDeclaration]
    ) [VariableDeclaration]
  ) [Declarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      NoVarDeclarations(
      ) [NoVarDeclarations]
      Statements(
        Statements(
          Statements(
            Statements(
              NoStatements(
              ) [NoStatements]
              DesignatorStat(
                DesignatorExpr(
                  Designator(
                    WithoutNamespace(
                     mat
                    ) [WithoutNamespace]
                    NoArrayExpression(
                    ) [NoArrayExpression]
                  ) [Designator]
                  AssignOperation(
                  ) [AssignOperation]
                  PositiveStartExpr(
                    SingleTerm(
                      NewTypeMat(
                        Type(
                         char
                        ) [Type]
                        PositiveStartExpr(
                          SingleTerm(
                            NumberConst(
                             2
                            ) [NumberConst]
                          ) [SingleTerm]
                        ) [PositiveStartExpr]
                        PositiveStartExpr(
                          SingleTerm(
                            NumberConst(
                             3
                            ) [NumberConst]
                          ) [SingleTerm]
                        ) [PositiveStartExpr]
                      ) [NewTypeMat]
                    ) [SingleTerm]
                  ) [PositiveStartExpr]
                ) [DesignatorExpr]
              ) [DesignatorStat]
            ) [Statements]
            DesignatorStat(
              DesignatorExpr(
                Designator(
                  WithoutNamespace(
                   mat2
                  ) [WithoutNamespace]
                  NoArrayExpression(
                  ) [NoArrayExpression]
                ) [Designator]
                AssignOperation(
                ) [AssignOperation]
                PositiveStartExpr(
                  SingleTerm(
                    NewTypeMat(
                      Type(
                       int
                      ) [Type]
                      PositiveStartExpr(
                        SingleTerm(
                          NumberConst(
                           2
                          ) [NumberConst]
                        ) [SingleTerm]
                      ) [PositiveStartExpr]
                      PositiveStartExpr(
                        SingleTerm(
                          NumberConst(
                           3
                          ) [NumberConst]
                        ) [SingleTerm]
                      ) [PositiveStartExpr]
                    ) [NewTypeMat]
                  ) [SingleTerm]
                ) [PositiveStartExpr]
              ) [DesignatorExpr]
            ) [DesignatorStat]
          ) [Statements]
          DesignatorStat(
            DesignatorExpr(
              Designator(
                WithoutNamespace(
                 mat2
                ) [WithoutNamespace]
                AddMatrixExpression(
                  BraExpr(
                    PositiveStartExpr(
                      SingleTerm(
                        NumberConst(
                         0
                        ) [NumberConst]
                      ) [SingleTerm]
                    ) [PositiveStartExpr]
                  ) [BraExpr]
                  BraExpr(
                    PositiveStartExpr(
                      SingleTerm(
                        NumberConst(
                         0
                        ) [NumberConst]
                      ) [SingleTerm]
                    ) [PositiveStartExpr]
                  ) [BraExpr]
                ) [AddMatrixExpression]
              ) [Designator]
              AssignOperation(
              ) [AssignOperation]
              PositiveStartExpr(
                SingleTerm(
                  NumberConst(
                   1
                  ) [NumberConst]
                ) [SingleTerm]
              ) [PositiveStartExpr]
            ) [DesignatorExpr]
          ) [DesignatorStat]
        ) [Statements]
        DesignatorStat(
          DesignatorExpr(
            Designator(
              WithoutNamespace(
               mat
              ) [WithoutNamespace]
              AddMatrixExpression(
                BraExpr(
                  PositiveStartExpr(
                    SingleTerm(
                      NumberConst(
                       0
                      ) [NumberConst]
                    ) [SingleTerm]
                  ) [PositiveStartExpr]
                ) [BraExpr]
                BraExpr(
                  PositiveStartExpr(
                    SingleTerm(
                      NumberConst(
                       0
                      ) [NumberConst]
                    ) [SingleTerm]
                  ) [PositiveStartExpr]
                ) [BraExpr]
              ) [AddMatrixExpression]
            ) [Designator]
            AssignOperation(
            ) [AssignOperation]
            PositiveStartExpr(
              SingleTerm(
                CharacterConst(
                 a
                ) [CharacterConst]
              ) [SingleTerm]
            ) [PositiveStartExpr]
          ) [DesignatorExpr]
        ) [DesignatorStat]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  15:35:36,199 - ================ Semanticka obrada ===================
INFO  15:35:36,202 - NEW CONST
INFO  15:35:36,202 - Con nula: int, 0, 0 on line 5
INFO  15:35:36,202 - NEW CONST
INFO  15:35:36,202 - Con jedan: int, 1, 0 on line 6
INFO  15:35:36,202 - NEW CONST
INFO  15:35:36,202 - Con pet: int, 5, 0 on line 7
INFO  15:35:36,202 - NEW SYMBOL
INFO  15:35:36,202 - Var niz: Arr of int, 0, 0 on line 9
INFO  15:35:36,202 - NEW SYMBOL
INFO  15:35:36,202 - Var mat: Matrix of char, 1, 0 on line 10
INFO  15:35:36,202 - NEW SYMBOL
INFO  15:35:36,202 - Var mat2: Matrix of int, 2, 0 on line 11
INFO  15:35:36,202 - NEW SYMBOL
INFO  15:35:36,202 - Var a: int, 3, 0 on line 13
INFO  15:35:36,202 - Var mat: Matrix of char, 1, 0 on line 18
INFO  15:35:36,202 - Var mat2: Matrix of int, 2, 0 on line 19
INFO  15:35:36,202 - Var mat2: Matrix of int, 2, 0 on line 20
INFO  15:35:36,202 - Var mat: Matrix of char, 1, 0 on line 21
INFO  15:35:36,203 - Meth main: notype, 0, 0 on line 3
INFO  15:43:55,167 - Compiling source file: C:\Users\se200106\Desktop\wsp\MJCompilerAVGUST3.zip_expanded\MJCompiler\test\program.mj
INFO  15:43:55,167 - ================= LEKSICKA ANALIZA =================
INFO  15:43:55,190 - #2 program
INFO  15:43:55,190 - #47 test301
INFO  15:43:55,190 - #3 const
INFO  15:43:55,191 - #47 int
INFO  15:43:55,191 - #47 nula
INFO  15:43:55,192 - #24 =
INFO  15:43:55,192 - #46 0
INFO  15:43:55,192 - #27 ;
INFO  15:43:55,192 - #3 const
INFO  15:43:55,193 - #47 int
INFO  15:43:55,193 - #47 jedan
INFO  15:43:55,193 - #24 =
INFO  15:43:55,193 - #46 1
INFO  15:43:55,193 - #27 ;
INFO  15:43:55,193 - #3 const
INFO  15:43:55,193 - #47 int
INFO  15:43:55,193 - #47 pet
INFO  15:43:55,193 - #24 =
INFO  15:43:55,193 - #46 5
INFO  15:43:55,193 - #27 ;
INFO  15:43:55,193 - #47 int
INFO  15:43:55,193 - #47 niz
INFO  15:43:55,193 - #33 [
INFO  15:43:55,193 - #34 ]
INFO  15:43:55,193 - #27 ;
INFO  15:43:55,194 - #47 char
INFO  15:43:55,194 - #47 mat
INFO  15:43:55,194 - #33 [
INFO  15:43:55,194 - #34 ]
INFO  15:43:55,194 - #33 [
INFO  15:43:55,194 - #34 ]
INFO  15:43:55,194 - #27 ;
INFO  15:43:55,195 - #47 int
INFO  15:43:55,195 - #47 mat2
INFO  15:43:55,195 - #33 [
INFO  15:43:55,195 - #34 ]
INFO  15:43:55,195 - #33 [
INFO  15:43:55,195 - #34 ]
INFO  15:43:55,195 - #27 ;
INFO  15:43:55,195 - #47 int
INFO  15:43:55,195 - #47 a
INFO  15:43:55,195 - #27 ;
INFO  15:43:55,195 - #35 {
INFO  15:43:55,195 - #8 void
INFO  15:43:55,196 - #47 main
INFO  15:43:55,196 - #31 (
INFO  15:43:55,196 - #32 )
INFO  15:43:55,197 - #35 {
INFO  15:43:55,197 - #47 mat
INFO  15:43:55,197 - #24 =
INFO  15:43:55,198 - #4 new
INFO  15:43:55,198 - #47 char
INFO  15:43:55,199 - #33 [
INFO  15:43:55,199 - #46 2
INFO  15:43:55,199 - #34 ]
INFO  15:43:55,199 - #33 [
INFO  15:43:55,199 - #46 3
INFO  15:43:55,199 - #34 ]
INFO  15:43:55,199 - #27 ;
INFO  15:43:55,199 - #47 mat2
INFO  15:43:55,199 - #24 =
INFO  15:43:55,199 - #4 new
INFO  15:43:55,200 - #47 int
INFO  15:43:55,200 - #33 [
INFO  15:43:55,200 - #46 2
INFO  15:43:55,200 - #34 ]
INFO  15:43:55,200 - #33 [
INFO  15:43:55,200 - #46 3
INFO  15:43:55,200 - #34 ]
INFO  15:43:55,200 - #27 ;
INFO  15:43:55,200 - #47 mat2
INFO  15:43:55,200 - #33 [
INFO  15:43:55,200 - #46 0
INFO  15:43:55,200 - #34 ]
INFO  15:43:55,200 - #33 [
INFO  15:43:55,200 - #46 0
INFO  15:43:55,201 - #34 ]
INFO  15:43:55,201 - #24 =
INFO  15:43:55,201 - #46 1
INFO  15:43:55,201 - #27 ;
INFO  15:43:55,201 - #47 mat
INFO  15:43:55,201 - #33 [
INFO  15:43:55,201 - #46 0
INFO  15:43:55,201 - #34 ]
INFO  15:43:55,201 - #33 [
INFO  15:43:55,201 - #46 0
INFO  15:43:55,201 - #34 ]
INFO  15:43:55,201 - #24 =
INFO  15:43:55,201 - #48 a
INFO  15:43:55,201 - #27 ;
INFO  15:43:55,201 - #36 }
INFO  15:43:55,201 - #36 }
INFO  15:43:55,202 - ================= PARSIRANO STABLO =================
INFO  15:43:55,205 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  Declarations(
    Declarations(
      Declarations(
        Declarations(
          Declarations(
            Declarations(
              Declarations(
                NoDeclarations(
                ) [NoDeclarations]
                ConstantDeclaration(
                  ConDecl(
                    Type(
                     int
                    ) [Type]
                    ConstDef(
                     nula
                      NumConst(
                       0
                      ) [NumConst]
                    ) [ConstDef]
                    NoConstantDeclaration(
                    ) [NoConstantDeclaration]
                  ) [ConDecl]
                ) [ConstantDeclaration]
              ) [Declarations]
              ConstantDeclaration(
                ConDecl(
                  Type(
                   int
                  ) [Type]
                  ConstDef(
                   jedan
                    NumConst(
                     1
                    ) [NumConst]
                  ) [ConstDef]
                  NoConstantDeclaration(
                  ) [NoConstantDeclaration]
                ) [ConDecl]
              ) [ConstantDeclaration]
            ) [Declarations]
            ConstantDeclaration(
              ConDecl(
                Type(
                 int
                ) [Type]
                ConstDef(
                 pet
                  NumConst(
                   5
                  ) [NumConst]
                ) [ConstDef]
                NoConstantDeclaration(
                ) [NoConstantDeclaration]
              ) [ConDecl]
            ) [ConstantDeclaration]
          ) [Declarations]
          VariableDeclaration(
            VarDeclaration(
              Type(
               int
              ) [Type]
              OneVarDeclaration(
                AddVarDecl1(
                 niz
                  Brackets(
                  ) [Brackets]
                ) [AddVarDecl1]
              ) [OneVarDeclaration]
            ) [VarDeclaration]
          ) [VariableDeclaration]
        ) [Declarations]
        VariableDeclaration(
          VarDeclaration(
            Type(
             char
            ) [Type]
            OneVarDeclaration(
              AddVarDecl1(
               mat
                TwoBrackets(
                ) [TwoBrackets]
              ) [AddVarDecl1]
            ) [OneVarDeclaration]
          ) [VarDeclaration]
        ) [VariableDeclaration]
      ) [Declarations]
      VariableDeclaration(
        VarDeclaration(
          Type(
           int
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             mat2
              TwoBrackets(
              ) [TwoBrackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [VariableDeclaration]
    ) [Declarations]
    VariableDeclaration(
      VarDeclaration(
        Type(
         int
        ) [Type]
        OneVarDeclaration(
          AddVarDecl1(
           a
            NoBrackets(
            ) [NoBrackets]
          ) [AddVarDecl1]
        ) [OneVarDeclaration]
      ) [VarDeclaration]
    ) [VariableDeclaration]
  ) [Declarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      NoVarDeclarations(
      ) [NoVarDeclarations]
      Statements(
        Statements(
          Statements(
            Statements(
              NoStatements(
              ) [NoStatements]
              DesignatorStat(
                DesignatorExpr(
                  Designator(
                    WithoutNamespace(
                     mat
                    ) [WithoutNamespace]
                    NoArrayExpression(
                    ) [NoArrayExpression]
                  ) [Designator]
                  AssignOperation(
                  ) [AssignOperation]
                  PositiveStartExpr(
                    SingleTerm(
                      NewTypeMat(
                        Type(
                         char
                        ) [Type]
                        PositiveStartExpr(
                          SingleTerm(
                            NumberConst(
                             2
                            ) [NumberConst]
                          ) [SingleTerm]
                        ) [PositiveStartExpr]
                        PositiveStartExpr(
                          SingleTerm(
                            NumberConst(
                             3
                            ) [NumberConst]
                          ) [SingleTerm]
                        ) [PositiveStartExpr]
                      ) [NewTypeMat]
                    ) [SingleTerm]
                  ) [PositiveStartExpr]
                ) [DesignatorExpr]
              ) [DesignatorStat]
            ) [Statements]
            DesignatorStat(
              DesignatorExpr(
                Designator(
                  WithoutNamespace(
                   mat2
                  ) [WithoutNamespace]
                  NoArrayExpression(
                  ) [NoArrayExpression]
                ) [Designator]
                AssignOperation(
                ) [AssignOperation]
                PositiveStartExpr(
                  SingleTerm(
                    NewTypeMat(
                      Type(
                       int
                      ) [Type]
                      PositiveStartExpr(
                        SingleTerm(
                          NumberConst(
                           2
                          ) [NumberConst]
                        ) [SingleTerm]
                      ) [PositiveStartExpr]
                      PositiveStartExpr(
                        SingleTerm(
                          NumberConst(
                           3
                          ) [NumberConst]
                        ) [SingleTerm]
                      ) [PositiveStartExpr]
                    ) [NewTypeMat]
                  ) [SingleTerm]
                ) [PositiveStartExpr]
              ) [DesignatorExpr]
            ) [DesignatorStat]
          ) [Statements]
          DesignatorStat(
            DesignatorExpr(
              Designator(
                WithoutNamespace(
                 mat2
                ) [WithoutNamespace]
                AddMatrixExpression(
                  BraExpr(
                    PositiveStartExpr(
                      SingleTerm(
                        NumberConst(
                         0
                        ) [NumberConst]
                      ) [SingleTerm]
                    ) [PositiveStartExpr]
                  ) [BraExpr]
                  BraExpr(
                    PositiveStartExpr(
                      SingleTerm(
                        NumberConst(
                         0
                        ) [NumberConst]
                      ) [SingleTerm]
                    ) [PositiveStartExpr]
                  ) [BraExpr]
                ) [AddMatrixExpression]
              ) [Designator]
              AssignOperation(
              ) [AssignOperation]
              PositiveStartExpr(
                SingleTerm(
                  NumberConst(
                   1
                  ) [NumberConst]
                ) [SingleTerm]
              ) [PositiveStartExpr]
            ) [DesignatorExpr]
          ) [DesignatorStat]
        ) [Statements]
        DesignatorStat(
          DesignatorExpr(
            Designator(
              WithoutNamespace(
               mat
              ) [WithoutNamespace]
              AddMatrixExpression(
                BraExpr(
                  PositiveStartExpr(
                    SingleTerm(
                      NumberConst(
                       0
                      ) [NumberConst]
                    ) [SingleTerm]
                  ) [PositiveStartExpr]
                ) [BraExpr]
                BraExpr(
                  PositiveStartExpr(
                    SingleTerm(
                      NumberConst(
                       0
                      ) [NumberConst]
                    ) [SingleTerm]
                  ) [PositiveStartExpr]
                ) [BraExpr]
              ) [AddMatrixExpression]
            ) [Designator]
            AssignOperation(
            ) [AssignOperation]
            PositiveStartExpr(
              SingleTerm(
                CharacterConst(
                 a
                ) [CharacterConst]
              ) [SingleTerm]
            ) [PositiveStartExpr]
          ) [DesignatorExpr]
        ) [DesignatorStat]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  15:43:55,205 - ================ Semanticka obrada ===================
INFO  15:43:55,207 - NEW CONST
INFO  15:43:55,207 - Con nula: int, 0, 0 on line 5
INFO  15:43:55,208 - NEW CONST
INFO  15:43:55,208 - Con jedan: int, 1, 0 on line 6
INFO  15:43:55,208 - NEW CONST
INFO  15:43:55,208 - Con pet: int, 5, 0 on line 7
INFO  15:43:55,208 - NEW SYMBOL
INFO  15:43:55,208 - Var niz: Arr of int, 0, 0 on line 9
INFO  15:43:55,208 - NEW SYMBOL
INFO  15:43:55,208 - Var mat: Matrix of char, 1, 0 on line 10
INFO  15:43:55,208 - NEW SYMBOL
INFO  15:43:55,208 - Var mat2: Matrix of int, 2, 0 on line 11
INFO  15:43:55,208 - NEW SYMBOL
INFO  15:43:55,208 - Var a: int, 3, 0 on line 13
INFO  15:43:55,208 - Var mat: Matrix of char, 1, 0 on line 18
INFO  15:43:55,208 - Var mat2: Matrix of int, 2, 0 on line 19
INFO  15:43:55,208 - Var mat2: Matrix of int, 2, 0 on line 20
INFO  15:43:55,208 - Var mat: Matrix of char, 1, 0 on line 21
INFO  15:43:55,208 - Meth main: notype, 0, 0 on line 3
INFO  15:43:58,790 - Parser SUCCESS!
INFO  15:44:03,611 - Compiling source file: C:\Users\se200106\Desktop\wsp\MJCompilerAVGUST3.zip_expanded\MJCompiler\test\program.mj
INFO  15:44:03,612 - ================= LEKSICKA ANALIZA =================
INFO  15:44:03,634 - #2 program
INFO  15:44:03,634 - #47 test301
INFO  15:44:03,634 - #3 const
INFO  15:44:03,635 - #47 int
INFO  15:44:03,635 - #47 nula
INFO  15:44:03,635 - #24 =
INFO  15:44:03,635 - #46 0
INFO  15:44:03,635 - #27 ;
INFO  15:44:03,636 - #3 const
INFO  15:44:03,636 - #47 int
INFO  15:44:03,636 - #47 jedan
INFO  15:44:03,636 - #24 =
INFO  15:44:03,636 - #46 1
INFO  15:44:03,636 - #27 ;
INFO  15:44:03,636 - #3 const
INFO  15:44:03,637 - #47 int
INFO  15:44:03,637 - #47 pet
INFO  15:44:03,637 - #24 =
INFO  15:44:03,637 - #46 5
INFO  15:44:03,637 - #27 ;
INFO  15:44:03,637 - #47 int
INFO  15:44:03,637 - #47 niz
INFO  15:44:03,637 - #33 [
INFO  15:44:03,637 - #34 ]
INFO  15:44:03,637 - #27 ;
INFO  15:44:03,637 - #47 char
INFO  15:44:03,638 - #47 mat
INFO  15:44:03,638 - #33 [
INFO  15:44:03,638 - #34 ]
INFO  15:44:03,638 - #33 [
INFO  15:44:03,638 - #34 ]
INFO  15:44:03,638 - #27 ;
INFO  15:44:03,638 - #47 int
INFO  15:44:03,638 - #47 mat2
INFO  15:44:03,638 - #33 [
INFO  15:44:03,638 - #34 ]
INFO  15:44:03,638 - #33 [
INFO  15:44:03,638 - #34 ]
INFO  15:44:03,638 - #27 ;
INFO  15:44:03,638 - #47 int
INFO  15:44:03,638 - #47 a
INFO  15:44:03,638 - #27 ;
INFO  15:44:03,639 - #35 {
INFO  15:44:03,639 - #8 void
INFO  15:44:03,639 - #47 main
INFO  15:44:03,640 - #31 (
INFO  15:44:03,640 - #32 )
INFO  15:44:03,641 - #35 {
INFO  15:44:03,641 - #47 mat
INFO  15:44:03,641 - #24 =
INFO  15:44:03,642 - #4 new
INFO  15:44:03,642 - #47 char
INFO  15:44:03,642 - #33 [
INFO  15:44:03,642 - #46 2
INFO  15:44:03,642 - #34 ]
INFO  15:44:03,642 - #33 [
INFO  15:44:03,643 - #46 3
INFO  15:44:03,643 - #34 ]
INFO  15:44:03,643 - #27 ;
INFO  15:44:03,643 - #47 mat2
INFO  15:44:03,643 - #24 =
INFO  15:44:03,643 - #4 new
INFO  15:44:03,643 - #47 int
INFO  15:44:03,643 - #33 [
INFO  15:44:03,643 - #46 2
INFO  15:44:03,643 - #34 ]
INFO  15:44:03,643 - #33 [
INFO  15:44:03,643 - #46 3
INFO  15:44:03,643 - #34 ]
INFO  15:44:03,643 - #27 ;
INFO  15:44:03,643 - #47 mat2
INFO  15:44:03,643 - #33 [
INFO  15:44:03,643 - #46 0
INFO  15:44:03,643 - #34 ]
INFO  15:44:03,643 - #33 [
INFO  15:44:03,644 - #46 0
INFO  15:44:03,644 - #34 ]
INFO  15:44:03,644 - #24 =
INFO  15:44:03,644 - #46 1
INFO  15:44:03,644 - #27 ;
INFO  15:44:03,644 - #47 mat
INFO  15:44:03,644 - #33 [
INFO  15:44:03,644 - #46 0
INFO  15:44:03,644 - #34 ]
INFO  15:44:03,644 - #33 [
INFO  15:44:03,644 - #46 0
INFO  15:44:03,644 - #34 ]
INFO  15:44:03,644 - #24 =
INFO  15:44:03,644 - #48 a
INFO  15:44:03,645 - #27 ;
INFO  15:44:03,645 - #36 }
INFO  15:44:03,645 - #36 }
INFO  15:44:03,646 - ================= PARSIRANO STABLO =================
INFO  15:44:03,649 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  Declarations(
    Declarations(
      Declarations(
        Declarations(
          Declarations(
            Declarations(
              Declarations(
                NoDeclarations(
                ) [NoDeclarations]
                ConstantDeclaration(
                  ConDecl(
                    Type(
                     int
                    ) [Type]
                    ConstDef(
                     nula
                      NumConst(
                       0
                      ) [NumConst]
                    ) [ConstDef]
                    NoConstantDeclaration(
                    ) [NoConstantDeclaration]
                  ) [ConDecl]
                ) [ConstantDeclaration]
              ) [Declarations]
              ConstantDeclaration(
                ConDecl(
                  Type(
                   int
                  ) [Type]
                  ConstDef(
                   jedan
                    NumConst(
                     1
                    ) [NumConst]
                  ) [ConstDef]
                  NoConstantDeclaration(
                  ) [NoConstantDeclaration]
                ) [ConDecl]
              ) [ConstantDeclaration]
            ) [Declarations]
            ConstantDeclaration(
              ConDecl(
                Type(
                 int
                ) [Type]
                ConstDef(
                 pet
                  NumConst(
                   5
                  ) [NumConst]
                ) [ConstDef]
                NoConstantDeclaration(
                ) [NoConstantDeclaration]
              ) [ConDecl]
            ) [ConstantDeclaration]
          ) [Declarations]
          VariableDeclaration(
            VarDeclaration(
              Type(
               int
              ) [Type]
              OneVarDeclaration(
                AddVarDecl1(
                 niz
                  Brackets(
                  ) [Brackets]
                ) [AddVarDecl1]
              ) [OneVarDeclaration]
            ) [VarDeclaration]
          ) [VariableDeclaration]
        ) [Declarations]
        VariableDeclaration(
          VarDeclaration(
            Type(
             char
            ) [Type]
            OneVarDeclaration(
              AddVarDecl1(
               mat
                TwoBrackets(
                ) [TwoBrackets]
              ) [AddVarDecl1]
            ) [OneVarDeclaration]
          ) [VarDeclaration]
        ) [VariableDeclaration]
      ) [Declarations]
      VariableDeclaration(
        VarDeclaration(
          Type(
           int
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             mat2
              TwoBrackets(
              ) [TwoBrackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [VariableDeclaration]
    ) [Declarations]
    VariableDeclaration(
      VarDeclaration(
        Type(
         int
        ) [Type]
        OneVarDeclaration(
          AddVarDecl1(
           a
            NoBrackets(
            ) [NoBrackets]
          ) [AddVarDecl1]
        ) [OneVarDeclaration]
      ) [VarDeclaration]
    ) [VariableDeclaration]
  ) [Declarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      NoVarDeclarations(
      ) [NoVarDeclarations]
      Statements(
        Statements(
          Statements(
            Statements(
              NoStatements(
              ) [NoStatements]
              DesignatorStat(
                DesignatorExpr(
                  Designator(
                    WithoutNamespace(
                     mat
                    ) [WithoutNamespace]
                    NoArrayExpression(
                    ) [NoArrayExpression]
                  ) [Designator]
                  AssignOperation(
                  ) [AssignOperation]
                  PositiveStartExpr(
                    SingleTerm(
                      NewTypeMat(
                        Type(
                         char
                        ) [Type]
                        PositiveStartExpr(
                          SingleTerm(
                            NumberConst(
                             2
                            ) [NumberConst]
                          ) [SingleTerm]
                        ) [PositiveStartExpr]
                        PositiveStartExpr(
                          SingleTerm(
                            NumberConst(
                             3
                            ) [NumberConst]
                          ) [SingleTerm]
                        ) [PositiveStartExpr]
                      ) [NewTypeMat]
                    ) [SingleTerm]
                  ) [PositiveStartExpr]
                ) [DesignatorExpr]
              ) [DesignatorStat]
            ) [Statements]
            DesignatorStat(
              DesignatorExpr(
                Designator(
                  WithoutNamespace(
                   mat2
                  ) [WithoutNamespace]
                  NoArrayExpression(
                  ) [NoArrayExpression]
                ) [Designator]
                AssignOperation(
                ) [AssignOperation]
                PositiveStartExpr(
                  SingleTerm(
                    NewTypeMat(
                      Type(
                       int
                      ) [Type]
                      PositiveStartExpr(
                        SingleTerm(
                          NumberConst(
                           2
                          ) [NumberConst]
                        ) [SingleTerm]
                      ) [PositiveStartExpr]
                      PositiveStartExpr(
                        SingleTerm(
                          NumberConst(
                           3
                          ) [NumberConst]
                        ) [SingleTerm]
                      ) [PositiveStartExpr]
                    ) [NewTypeMat]
                  ) [SingleTerm]
                ) [PositiveStartExpr]
              ) [DesignatorExpr]
            ) [DesignatorStat]
          ) [Statements]
          DesignatorStat(
            DesignatorExpr(
              Designator(
                WithoutNamespace(
                 mat2
                ) [WithoutNamespace]
                AddMatrixExpression(
                  BraExpr(
                    PositiveStartExpr(
                      SingleTerm(
                        NumberConst(
                         0
                        ) [NumberConst]
                      ) [SingleTerm]
                    ) [PositiveStartExpr]
                  ) [BraExpr]
                  BraExpr(
                    PositiveStartExpr(
                      SingleTerm(
                        NumberConst(
                         0
                        ) [NumberConst]
                      ) [SingleTerm]
                    ) [PositiveStartExpr]
                  ) [BraExpr]
                ) [AddMatrixExpression]
              ) [Designator]
              AssignOperation(
              ) [AssignOperation]
              PositiveStartExpr(
                SingleTerm(
                  NumberConst(
                   1
                  ) [NumberConst]
                ) [SingleTerm]
              ) [PositiveStartExpr]
            ) [DesignatorExpr]
          ) [DesignatorStat]
        ) [Statements]
        DesignatorStat(
          DesignatorExpr(
            Designator(
              WithoutNamespace(
               mat
              ) [WithoutNamespace]
              AddMatrixExpression(
                BraExpr(
                  PositiveStartExpr(
                    SingleTerm(
                      NumberConst(
                       0
                      ) [NumberConst]
                    ) [SingleTerm]
                  ) [PositiveStartExpr]
                ) [BraExpr]
                BraExpr(
                  PositiveStartExpr(
                    SingleTerm(
                      NumberConst(
                       0
                      ) [NumberConst]
                    ) [SingleTerm]
                  ) [PositiveStartExpr]
                ) [BraExpr]
              ) [AddMatrixExpression]
            ) [Designator]
            AssignOperation(
            ) [AssignOperation]
            PositiveStartExpr(
              SingleTerm(
                CharacterConst(
                 a
                ) [CharacterConst]
              ) [SingleTerm]
            ) [PositiveStartExpr]
          ) [DesignatorExpr]
        ) [DesignatorStat]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  15:44:03,649 - ================ Semanticka obrada ===================
INFO  15:44:03,651 - NEW CONST
INFO  15:44:03,651 - Con nula: int, 0, 0 on line 5
INFO  15:44:03,651 - NEW CONST
INFO  15:44:03,651 - Con jedan: int, 1, 0 on line 6
INFO  15:44:03,651 - NEW CONST
INFO  15:44:03,651 - Con pet: int, 5, 0 on line 7
INFO  15:44:03,652 - NEW SYMBOL
INFO  15:44:03,652 - Var niz: Arr of int, 0, 0 on line 9
INFO  15:44:03,652 - NEW SYMBOL
INFO  15:44:03,652 - Var mat: Matrix of char, 1, 0 on line 10
INFO  15:44:03,652 - NEW SYMBOL
INFO  15:44:03,652 - Var mat2: Matrix of int, 2, 0 on line 11
INFO  15:44:03,652 - NEW SYMBOL
INFO  15:44:03,652 - Var a: int, 3, 0 on line 13
INFO  15:44:03,652 - Var mat: Matrix of char, 1, 0 on line 18
INFO  15:44:03,652 - Var mat2: Matrix of int, 2, 0 on line 19
INFO  15:44:03,652 - Var mat2: Matrix of int, 2, 0 on line 20
INFO  15:44:03,652 - Var mat: Matrix of char, 1, 0 on line 21
INFO  15:44:03,652 - Meth main: notype, 0, 0 on line 3
INFO  15:59:07,676 - Compiling source file: C:\Users\se200106\Desktop\wsp\MJCompilerAVGUST3.zip_expanded\MJCompiler\test\program.mj
INFO  15:59:07,677 - ================= LEKSICKA ANALIZA =================
INFO  15:59:07,693 - #2 program
INFO  15:59:07,693 - #47 test301
INFO  15:59:07,693 - #3 const
INFO  15:59:07,694 - #47 int
INFO  15:59:07,694 - #47 nula
INFO  15:59:07,694 - #24 =
INFO  15:59:07,694 - #46 0
INFO  15:59:07,694 - #27 ;
INFO  15:59:07,695 - #3 const
INFO  15:59:07,695 - #47 int
INFO  15:59:07,695 - #47 jedan
INFO  15:59:07,695 - #24 =
INFO  15:59:07,695 - #46 1
INFO  15:59:07,695 - #27 ;
INFO  15:59:07,695 - #3 const
INFO  15:59:07,695 - #47 int
INFO  15:59:07,695 - #47 pet
INFO  15:59:07,695 - #24 =
INFO  15:59:07,695 - #46 5
INFO  15:59:07,695 - #27 ;
INFO  15:59:07,695 - #47 int
INFO  15:59:07,695 - #47 niz
INFO  15:59:07,695 - #33 [
INFO  15:59:07,695 - #34 ]
INFO  15:59:07,695 - #27 ;
INFO  15:59:07,696 - #47 char
INFO  15:59:07,696 - #47 mat
INFO  15:59:07,696 - #33 [
INFO  15:59:07,696 - #34 ]
INFO  15:59:07,696 - #33 [
INFO  15:59:07,696 - #34 ]
INFO  15:59:07,696 - #27 ;
INFO  15:59:07,697 - #47 int
INFO  15:59:07,697 - #47 mat2
INFO  15:59:07,697 - #33 [
INFO  15:59:07,697 - #34 ]
INFO  15:59:07,697 - #33 [
INFO  15:59:07,697 - #34 ]
INFO  15:59:07,697 - #27 ;
INFO  15:59:07,697 - #47 int
INFO  15:59:07,697 - #47 a
INFO  15:59:07,697 - #27 ;
INFO  15:59:07,698 - #35 {
INFO  15:59:07,698 - #8 void
INFO  15:59:07,698 - #47 main
INFO  15:59:07,698 - #31 (
INFO  15:59:07,699 - #32 )
INFO  15:59:07,699 - #35 {
INFO  15:59:07,699 - #47 mat
INFO  15:59:07,699 - #24 =
INFO  15:59:07,700 - #4 new
INFO  15:59:07,700 - #47 char
INFO  15:59:07,700 - #33 [
INFO  15:59:07,700 - #46 2
INFO  15:59:07,700 - #34 ]
INFO  15:59:07,700 - #33 [
INFO  15:59:07,701 - #46 3
INFO  15:59:07,701 - #34 ]
INFO  15:59:07,701 - #27 ;
INFO  15:59:07,701 - #47 mat2
INFO  15:59:07,701 - #24 =
INFO  15:59:07,701 - #4 new
INFO  15:59:07,701 - #47 int
INFO  15:59:07,701 - #33 [
INFO  15:59:07,701 - #46 2
INFO  15:59:07,701 - #34 ]
INFO  15:59:07,701 - #33 [
INFO  15:59:07,701 - #46 3
INFO  15:59:07,701 - #34 ]
INFO  15:59:07,701 - #27 ;
INFO  15:59:07,701 - #47 mat2
INFO  15:59:07,701 - #33 [
INFO  15:59:07,701 - #46 0
INFO  15:59:07,701 - #34 ]
INFO  15:59:07,701 - #33 [
INFO  15:59:07,702 - #46 0
INFO  15:59:07,702 - #34 ]
INFO  15:59:07,702 - #24 =
INFO  15:59:07,702 - #46 1
INFO  15:59:07,702 - #27 ;
INFO  15:59:07,702 - #47 mat
INFO  15:59:07,702 - #33 [
INFO  15:59:07,702 - #46 0
INFO  15:59:07,702 - #34 ]
INFO  15:59:07,702 - #33 [
INFO  15:59:07,702 - #46 0
INFO  15:59:07,702 - #34 ]
INFO  15:59:07,702 - #24 =
INFO  15:59:07,702 - #48 a
INFO  15:59:07,702 - #27 ;
INFO  15:59:07,703 - #36 }
INFO  15:59:07,703 - #36 }
INFO  15:59:07,703 - ================= PARSIRANO STABLO =================
INFO  15:59:07,706 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  Declarations(
    Declarations(
      Declarations(
        Declarations(
          Declarations(
            Declarations(
              Declarations(
                NoDeclarations(
                ) [NoDeclarations]
                ConstantDeclaration(
                  ConDecl(
                    Type(
                     int
                    ) [Type]
                    ConstDef(
                     nula
                      NumConst(
                       0
                      ) [NumConst]
                    ) [ConstDef]
                    NoConstantDeclaration(
                    ) [NoConstantDeclaration]
                  ) [ConDecl]
                ) [ConstantDeclaration]
              ) [Declarations]
              ConstantDeclaration(
                ConDecl(
                  Type(
                   int
                  ) [Type]
                  ConstDef(
                   jedan
                    NumConst(
                     1
                    ) [NumConst]
                  ) [ConstDef]
                  NoConstantDeclaration(
                  ) [NoConstantDeclaration]
                ) [ConDecl]
              ) [ConstantDeclaration]
            ) [Declarations]
            ConstantDeclaration(
              ConDecl(
                Type(
                 int
                ) [Type]
                ConstDef(
                 pet
                  NumConst(
                   5
                  ) [NumConst]
                ) [ConstDef]
                NoConstantDeclaration(
                ) [NoConstantDeclaration]
              ) [ConDecl]
            ) [ConstantDeclaration]
          ) [Declarations]
          VariableDeclaration(
            VarDeclaration(
              Type(
               int
              ) [Type]
              OneVarDeclaration(
                AddVarDecl1(
                 niz
                  Brackets(
                  ) [Brackets]
                ) [AddVarDecl1]
              ) [OneVarDeclaration]
            ) [VarDeclaration]
          ) [VariableDeclaration]
        ) [Declarations]
        VariableDeclaration(
          VarDeclaration(
            Type(
             char
            ) [Type]
            OneVarDeclaration(
              AddVarDecl1(
               mat
                TwoBrackets(
                ) [TwoBrackets]
              ) [AddVarDecl1]
            ) [OneVarDeclaration]
          ) [VarDeclaration]
        ) [VariableDeclaration]
      ) [Declarations]
      VariableDeclaration(
        VarDeclaration(
          Type(
           int
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             mat2
              TwoBrackets(
              ) [TwoBrackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [VariableDeclaration]
    ) [Declarations]
    VariableDeclaration(
      VarDeclaration(
        Type(
         int
        ) [Type]
        OneVarDeclaration(
          AddVarDecl1(
           a
            NoBrackets(
            ) [NoBrackets]
          ) [AddVarDecl1]
        ) [OneVarDeclaration]
      ) [VarDeclaration]
    ) [VariableDeclaration]
  ) [Declarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      NoVarDeclarations(
      ) [NoVarDeclarations]
      Statements(
        Statements(
          Statements(
            Statements(
              NoStatements(
              ) [NoStatements]
              DesignatorStat(
                DesignatorExpr(
                  Designator(
                    WithoutNamespace(
                     mat
                    ) [WithoutNamespace]
                    NoArrayExpression(
                    ) [NoArrayExpression]
                  ) [Designator]
                  AssignOperation(
                  ) [AssignOperation]
                  PositiveStartExpr(
                    SingleTerm(
                      NewTypeMat(
                        Type(
                         char
                        ) [Type]
                        PositiveStartExpr(
                          SingleTerm(
                            NumberConst(
                             2
                            ) [NumberConst]
                          ) [SingleTerm]
                        ) [PositiveStartExpr]
                        PositiveStartExpr(
                          SingleTerm(
                            NumberConst(
                             3
                            ) [NumberConst]
                          ) [SingleTerm]
                        ) [PositiveStartExpr]
                      ) [NewTypeMat]
                    ) [SingleTerm]
                  ) [PositiveStartExpr]
                ) [DesignatorExpr]
              ) [DesignatorStat]
            ) [Statements]
            DesignatorStat(
              DesignatorExpr(
                Designator(
                  WithoutNamespace(
                   mat2
                  ) [WithoutNamespace]
                  NoArrayExpression(
                  ) [NoArrayExpression]
                ) [Designator]
                AssignOperation(
                ) [AssignOperation]
                PositiveStartExpr(
                  SingleTerm(
                    NewTypeMat(
                      Type(
                       int
                      ) [Type]
                      PositiveStartExpr(
                        SingleTerm(
                          NumberConst(
                           2
                          ) [NumberConst]
                        ) [SingleTerm]
                      ) [PositiveStartExpr]
                      PositiveStartExpr(
                        SingleTerm(
                          NumberConst(
                           3
                          ) [NumberConst]
                        ) [SingleTerm]
                      ) [PositiveStartExpr]
                    ) [NewTypeMat]
                  ) [SingleTerm]
                ) [PositiveStartExpr]
              ) [DesignatorExpr]
            ) [DesignatorStat]
          ) [Statements]
          DesignatorStat(
            DesignatorExpr(
              Designator(
                WithoutNamespace(
                 mat2
                ) [WithoutNamespace]
                AddMatrixExpression(
                  BraExpr(
                    PositiveStartExpr(
                      SingleTerm(
                        NumberConst(
                         0
                        ) [NumberConst]
                      ) [SingleTerm]
                    ) [PositiveStartExpr]
                  ) [BraExpr]
                  BraExpr(
                    PositiveStartExpr(
                      SingleTerm(
                        NumberConst(
                         0
                        ) [NumberConst]
                      ) [SingleTerm]
                    ) [PositiveStartExpr]
                  ) [BraExpr]
                ) [AddMatrixExpression]
              ) [Designator]
              AssignOperation(
              ) [AssignOperation]
              PositiveStartExpr(
                SingleTerm(
                  NumberConst(
                   1
                  ) [NumberConst]
                ) [SingleTerm]
              ) [PositiveStartExpr]
            ) [DesignatorExpr]
          ) [DesignatorStat]
        ) [Statements]
        DesignatorStat(
          DesignatorExpr(
            Designator(
              WithoutNamespace(
               mat
              ) [WithoutNamespace]
              AddMatrixExpression(
                BraExpr(
                  PositiveStartExpr(
                    SingleTerm(
                      NumberConst(
                       0
                      ) [NumberConst]
                    ) [SingleTerm]
                  ) [PositiveStartExpr]
                ) [BraExpr]
                BraExpr(
                  PositiveStartExpr(
                    SingleTerm(
                      NumberConst(
                       0
                      ) [NumberConst]
                    ) [SingleTerm]
                  ) [PositiveStartExpr]
                ) [BraExpr]
              ) [AddMatrixExpression]
            ) [Designator]
            AssignOperation(
            ) [AssignOperation]
            PositiveStartExpr(
              SingleTerm(
                CharacterConst(
                 a
                ) [CharacterConst]
              ) [SingleTerm]
            ) [PositiveStartExpr]
          ) [DesignatorExpr]
        ) [DesignatorStat]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  15:59:07,706 - ================ Semanticka obrada ===================
INFO  15:59:07,708 - NEW CONST
INFO  15:59:07,708 - Con nula: int, 0, 0 on line 5
INFO  15:59:07,708 - NEW CONST
INFO  15:59:07,708 - Con jedan: int, 1, 0 on line 6
INFO  15:59:07,708 - NEW CONST
INFO  15:59:07,708 - Con pet: int, 5, 0 on line 7
INFO  15:59:07,708 - NEW SYMBOL
INFO  15:59:07,708 - Var niz: Arr of int, 0, 0 on line 9
INFO  15:59:07,708 - NEW SYMBOL
INFO  15:59:07,708 - Var mat: Matrix of char, 1, 0 on line 10
INFO  15:59:07,708 - NEW SYMBOL
INFO  15:59:07,708 - Var mat2: Matrix of int, 2, 0 on line 11
INFO  15:59:07,708 - NEW SYMBOL
INFO  15:59:07,708 - Var a: int, 3, 0 on line 13
INFO  15:59:07,708 - Var mat: Matrix of char, 1, 0 on line 18
INFO  15:59:07,709 - Var mat2: Matrix of int, 2, 0 on line 19
INFO  15:59:07,709 - Var mat2: Matrix of int, 2, 0 on line 20
INFO  15:59:07,709 - Var mat: Matrix of char, 1, 0 on line 21
INFO  15:59:07,709 - Meth main: notype, 0, 0 on line 3
INFO  15:59:07,710 - Parser SUCCESS!
INFO  15:59:53,487 - Compiling source file: C:\Users\se200106\Desktop\wsp\MJCompilerAVGUST3.zip_expanded\MJCompiler\test\program.mj
INFO  15:59:53,488 - ================= LEKSICKA ANALIZA =================
INFO  15:59:53,503 - #2 program
INFO  15:59:53,503 - #47 test301
INFO  15:59:53,503 - #3 const
INFO  15:59:53,504 - #47 int
INFO  15:59:53,504 - #47 nula
INFO  15:59:53,504 - #24 =
INFO  15:59:53,504 - #46 0
INFO  15:59:53,504 - #27 ;
INFO  15:59:53,505 - #3 const
INFO  15:59:53,505 - #47 int
INFO  15:59:53,505 - #47 jedan
INFO  15:59:53,505 - #24 =
INFO  15:59:53,505 - #46 1
INFO  15:59:53,505 - #27 ;
INFO  15:59:53,505 - #3 const
INFO  15:59:53,505 - #47 int
INFO  15:59:53,505 - #47 pet
INFO  15:59:53,505 - #24 =
INFO  15:59:53,505 - #46 5
INFO  15:59:53,505 - #27 ;
INFO  15:59:53,505 - #47 int
INFO  15:59:53,505 - #47 niz
INFO  15:59:53,505 - #33 [
INFO  15:59:53,505 - #34 ]
INFO  15:59:53,505 - #27 ;
INFO  15:59:53,506 - #47 char
INFO  15:59:53,506 - #47 mat
INFO  15:59:53,506 - #33 [
INFO  15:59:53,506 - #34 ]
INFO  15:59:53,506 - #33 [
INFO  15:59:53,506 - #34 ]
INFO  15:59:53,506 - #27 ;
INFO  15:59:53,507 - #47 int
INFO  15:59:53,507 - #47 mat2
INFO  15:59:53,507 - #33 [
INFO  15:59:53,507 - #34 ]
INFO  15:59:53,507 - #33 [
INFO  15:59:53,507 - #34 ]
INFO  15:59:53,507 - #27 ;
INFO  15:59:53,507 - #47 int
INFO  15:59:53,507 - #47 a
INFO  15:59:53,507 - #27 ;
INFO  15:59:53,507 - #35 {
INFO  15:59:53,507 - #8 void
INFO  15:59:53,508 - #47 main
INFO  15:59:53,508 - #31 (
INFO  15:59:53,508 - #32 )
INFO  15:59:53,508 - #35 {
INFO  15:59:53,509 - #47 mat
INFO  15:59:53,509 - #24 =
INFO  15:59:53,509 - #4 new
INFO  15:59:53,510 - #47 char
INFO  15:59:53,510 - #33 [
INFO  15:59:53,510 - #46 2
INFO  15:59:53,510 - #34 ]
INFO  15:59:53,510 - #33 [
INFO  15:59:53,510 - #46 3
INFO  15:59:53,510 - #34 ]
INFO  15:59:53,510 - #27 ;
INFO  15:59:53,510 - #47 mat2
INFO  15:59:53,510 - #24 =
INFO  15:59:53,510 - #4 new
INFO  15:59:53,510 - #47 int
INFO  15:59:53,510 - #33 [
INFO  15:59:53,510 - #46 2
INFO  15:59:53,510 - #34 ]
INFO  15:59:53,510 - #33 [
INFO  15:59:53,511 - #46 3
INFO  15:59:53,511 - #34 ]
INFO  15:59:53,511 - #27 ;
INFO  15:59:53,511 - #47 mat2
INFO  15:59:53,511 - #33 [
INFO  15:59:53,511 - #46 0
INFO  15:59:53,511 - #34 ]
INFO  15:59:53,511 - #33 [
INFO  15:59:53,511 - #46 0
INFO  15:59:53,511 - #34 ]
INFO  15:59:53,511 - #24 =
INFO  15:59:53,511 - #46 1
INFO  15:59:53,511 - #27 ;
INFO  15:59:53,511 - #47 mat
INFO  15:59:53,511 - #33 [
INFO  15:59:53,512 - #46 0
INFO  15:59:53,512 - #34 ]
INFO  15:59:53,512 - #33 [
INFO  15:59:53,512 - #46 0
INFO  15:59:53,512 - #34 ]
INFO  15:59:53,512 - #24 =
INFO  15:59:53,512 - #48 a
INFO  15:59:53,512 - #27 ;
INFO  15:59:53,512 - #5 print
INFO  15:59:53,512 - #31 (
INFO  15:59:53,512 - #47 mat
INFO  15:59:53,512 - #33 [
INFO  15:59:53,512 - #46 0
INFO  15:59:53,512 - #34 ]
INFO  15:59:53,512 - #33 [
INFO  15:59:53,512 - #46 0
INFO  15:59:53,513 - #34 ]
INFO  15:59:53,513 - #32 )
INFO  15:59:53,513 - #27 ;
INFO  15:59:53,513 - #36 }
INFO  15:59:53,513 - #36 }
INFO  15:59:53,514 - ================= PARSIRANO STABLO =================
INFO  15:59:53,517 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  Declarations(
    Declarations(
      Declarations(
        Declarations(
          Declarations(
            Declarations(
              Declarations(
                NoDeclarations(
                ) [NoDeclarations]
                ConstantDeclaration(
                  ConDecl(
                    Type(
                     int
                    ) [Type]
                    ConstDef(
                     nula
                      NumConst(
                       0
                      ) [NumConst]
                    ) [ConstDef]
                    NoConstantDeclaration(
                    ) [NoConstantDeclaration]
                  ) [ConDecl]
                ) [ConstantDeclaration]
              ) [Declarations]
              ConstantDeclaration(
                ConDecl(
                  Type(
                   int
                  ) [Type]
                  ConstDef(
                   jedan
                    NumConst(
                     1
                    ) [NumConst]
                  ) [ConstDef]
                  NoConstantDeclaration(
                  ) [NoConstantDeclaration]
                ) [ConDecl]
              ) [ConstantDeclaration]
            ) [Declarations]
            ConstantDeclaration(
              ConDecl(
                Type(
                 int
                ) [Type]
                ConstDef(
                 pet
                  NumConst(
                   5
                  ) [NumConst]
                ) [ConstDef]
                NoConstantDeclaration(
                ) [NoConstantDeclaration]
              ) [ConDecl]
            ) [ConstantDeclaration]
          ) [Declarations]
          VariableDeclaration(
            VarDeclaration(
              Type(
               int
              ) [Type]
              OneVarDeclaration(
                AddVarDecl1(
                 niz
                  Brackets(
                  ) [Brackets]
                ) [AddVarDecl1]
              ) [OneVarDeclaration]
            ) [VarDeclaration]
          ) [VariableDeclaration]
        ) [Declarations]
        VariableDeclaration(
          VarDeclaration(
            Type(
             char
            ) [Type]
            OneVarDeclaration(
              AddVarDecl1(
               mat
                TwoBrackets(
                ) [TwoBrackets]
              ) [AddVarDecl1]
            ) [OneVarDeclaration]
          ) [VarDeclaration]
        ) [VariableDeclaration]
      ) [Declarations]
      VariableDeclaration(
        VarDeclaration(
          Type(
           int
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             mat2
              TwoBrackets(
              ) [TwoBrackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [VariableDeclaration]
    ) [Declarations]
    VariableDeclaration(
      VarDeclaration(
        Type(
         int
        ) [Type]
        OneVarDeclaration(
          AddVarDecl1(
           a
            NoBrackets(
            ) [NoBrackets]
          ) [AddVarDecl1]
        ) [OneVarDeclaration]
      ) [VarDeclaration]
    ) [VariableDeclaration]
  ) [Declarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      NoVarDeclarations(
      ) [NoVarDeclarations]
      Statements(
        Statements(
          Statements(
            Statements(
              Statements(
                NoStatements(
                ) [NoStatements]
                DesignatorStat(
                  DesignatorExpr(
                    Designator(
                      WithoutNamespace(
                       mat
                      ) [WithoutNamespace]
                      NoArrayExpression(
                      ) [NoArrayExpression]
                    ) [Designator]
                    AssignOperation(
                    ) [AssignOperation]
                    PositiveStartExpr(
                      SingleTerm(
                        NewTypeMat(
                          Type(
                           char
                          ) [Type]
                          PositiveStartExpr(
                            SingleTerm(
                              NumberConst(
                               2
                              ) [NumberConst]
                            ) [SingleTerm]
                          ) [PositiveStartExpr]
                          PositiveStartExpr(
                            SingleTerm(
                              NumberConst(
                               3
                              ) [NumberConst]
                            ) [SingleTerm]
                          ) [PositiveStartExpr]
                        ) [NewTypeMat]
                      ) [SingleTerm]
                    ) [PositiveStartExpr]
                  ) [DesignatorExpr]
                ) [DesignatorStat]
              ) [Statements]
              DesignatorStat(
                DesignatorExpr(
                  Designator(
                    WithoutNamespace(
                     mat2
                    ) [WithoutNamespace]
                    NoArrayExpression(
                    ) [NoArrayExpression]
                  ) [Designator]
                  AssignOperation(
                  ) [AssignOperation]
                  PositiveStartExpr(
                    SingleTerm(
                      NewTypeMat(
                        Type(
                         int
                        ) [Type]
                        PositiveStartExpr(
                          SingleTerm(
                            NumberConst(
                             2
                            ) [NumberConst]
                          ) [SingleTerm]
                        ) [PositiveStartExpr]
                        PositiveStartExpr(
                          SingleTerm(
                            NumberConst(
                             3
                            ) [NumberConst]
                          ) [SingleTerm]
                        ) [PositiveStartExpr]
                      ) [NewTypeMat]
                    ) [SingleTerm]
                  ) [PositiveStartExpr]
                ) [DesignatorExpr]
              ) [DesignatorStat]
            ) [Statements]
            DesignatorStat(
              DesignatorExpr(
                Designator(
                  WithoutNamespace(
                   mat2
                  ) [WithoutNamespace]
                  AddMatrixExpression(
                    BraExpr(
                      PositiveStartExpr(
                        SingleTerm(
                          NumberConst(
                           0
                          ) [NumberConst]
                        ) [SingleTerm]
                      ) [PositiveStartExpr]
                    ) [BraExpr]
                    BraExpr(
                      PositiveStartExpr(
                        SingleTerm(
                          NumberConst(
                           0
                          ) [NumberConst]
                        ) [SingleTerm]
                      ) [PositiveStartExpr]
                    ) [BraExpr]
                  ) [AddMatrixExpression]
                ) [Designator]
                AssignOperation(
                ) [AssignOperation]
                PositiveStartExpr(
                  SingleTerm(
                    NumberConst(
                     1
                    ) [NumberConst]
                  ) [SingleTerm]
                ) [PositiveStartExpr]
              ) [DesignatorExpr]
            ) [DesignatorStat]
          ) [Statements]
          DesignatorStat(
            DesignatorExpr(
              Designator(
                WithoutNamespace(
                 mat
                ) [WithoutNamespace]
                AddMatrixExpression(
                  BraExpr(
                    PositiveStartExpr(
                      SingleTerm(
                        NumberConst(
                         0
                        ) [NumberConst]
                      ) [SingleTerm]
                    ) [PositiveStartExpr]
                  ) [BraExpr]
                  BraExpr(
                    PositiveStartExpr(
                      SingleTerm(
                        NumberConst(
                         0
                        ) [NumberConst]
                      ) [SingleTerm]
                    ) [PositiveStartExpr]
                  ) [BraExpr]
                ) [AddMatrixExpression]
              ) [Designator]
              AssignOperation(
              ) [AssignOperation]
              PositiveStartExpr(
                SingleTerm(
                  CharacterConst(
                   a
                  ) [CharacterConst]
                ) [SingleTerm]
              ) [PositiveStartExpr]
            ) [DesignatorExpr]
          ) [DesignatorStat]
        ) [Statements]
        PrintExpr(
          PositiveStartExpr(
            SingleTerm(
              DesignatorFact(
                Designator(
                  WithoutNamespace(
                   mat
                  ) [WithoutNamespace]
                  AddMatrixExpression(
                    BraExpr(
                      PositiveStartExpr(
                        SingleTerm(
                          NumberConst(
                           0
                          ) [NumberConst]
                        ) [SingleTerm]
                      ) [PositiveStartExpr]
                    ) [BraExpr]
                    BraExpr(
                      PositiveStartExpr(
                        SingleTerm(
                          NumberConst(
                           0
                          ) [NumberConst]
                        ) [SingleTerm]
                      ) [PositiveStartExpr]
                    ) [BraExpr]
                  ) [AddMatrixExpression]
                ) [Designator]
              ) [DesignatorFact]
            ) [SingleTerm]
          ) [PositiveStartExpr]
          NoNumConstOpt(
          ) [NoNumConstOpt]
        ) [PrintExpr]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  15:59:53,517 - ================ Semanticka obrada ===================
INFO  15:59:53,518 - NEW CONST
INFO  15:59:53,519 - Con nula: int, 0, 0 on line 5
INFO  15:59:53,519 - NEW CONST
INFO  15:59:53,519 - Con jedan: int, 1, 0 on line 6
INFO  15:59:53,519 - NEW CONST
INFO  15:59:53,519 - Con pet: int, 5, 0 on line 7
INFO  15:59:53,519 - NEW SYMBOL
INFO  15:59:53,519 - Var niz: Arr of int, 0, 0 on line 9
INFO  15:59:53,519 - NEW SYMBOL
INFO  15:59:53,519 - Var mat: Matrix of char, 1, 0 on line 10
INFO  15:59:53,519 - NEW SYMBOL
INFO  15:59:53,519 - Var mat2: Matrix of int, 2, 0 on line 11
INFO  15:59:53,519 - NEW SYMBOL
INFO  15:59:53,519 - Var a: int, 3, 0 on line 13
INFO  15:59:53,519 - Var mat: Matrix of char, 1, 0 on line 18
INFO  15:59:53,519 - Var mat2: Matrix of int, 2, 0 on line 19
INFO  15:59:53,519 - Var mat2: Matrix of int, 2, 0 on line 20
INFO  15:59:53,519 - Var mat: Matrix of char, 1, 0 on line 21
INFO  15:59:53,519 - Var mat: Matrix of char, 1, 0 on line 22
INFO  15:59:53,519 - Meth main: notype, 0, 0 on line 3
INFO  15:59:53,521 - Parser SUCCESS!
INFO  16:01:20,733 - Compiling source file: C:\Users\se200106\Desktop\wsp\MJCompilerAVGUST3.zip_expanded\MJCompiler\test\program.mj
INFO  16:01:20,733 - ================= LEKSICKA ANALIZA =================
INFO  16:01:20,749 - #2 program
INFO  16:01:20,749 - #47 test301
INFO  16:01:20,749 - #3 const
INFO  16:01:20,750 - #47 int
INFO  16:01:20,750 - #47 nula
INFO  16:01:20,750 - #24 =
INFO  16:01:20,751 - #46 0
INFO  16:01:20,751 - #27 ;
INFO  16:01:20,751 - #3 const
INFO  16:01:20,752 - #47 int
INFO  16:01:20,752 - #47 jedan
INFO  16:01:20,752 - #24 =
INFO  16:01:20,752 - #46 1
INFO  16:01:20,752 - #27 ;
INFO  16:01:20,752 - #3 const
INFO  16:01:20,752 - #47 int
INFO  16:01:20,752 - #47 pet
INFO  16:01:20,752 - #24 =
INFO  16:01:20,752 - #46 5
INFO  16:01:20,752 - #27 ;
INFO  16:01:20,752 - #47 int
INFO  16:01:20,752 - #47 niz
INFO  16:01:20,752 - #33 [
INFO  16:01:20,752 - #34 ]
INFO  16:01:20,752 - #27 ;
INFO  16:01:20,753 - #47 char
INFO  16:01:20,753 - #47 mat
INFO  16:01:20,753 - #33 [
INFO  16:01:20,753 - #34 ]
INFO  16:01:20,753 - #33 [
INFO  16:01:20,753 - #34 ]
INFO  16:01:20,753 - #27 ;
INFO  16:01:20,754 - #47 int
INFO  16:01:20,754 - #47 mat2
INFO  16:01:20,754 - #33 [
INFO  16:01:20,754 - #34 ]
INFO  16:01:20,754 - #33 [
INFO  16:01:20,754 - #34 ]
INFO  16:01:20,754 - #27 ;
INFO  16:01:20,754 - #47 int
INFO  16:01:20,754 - #47 a
INFO  16:01:20,754 - #27 ;
INFO  16:01:20,754 - #35 {
INFO  16:01:20,754 - #8 void
INFO  16:01:20,754 - #47 main
INFO  16:01:20,755 - #31 (
INFO  16:01:20,755 - #32 )
INFO  16:01:20,755 - #35 {
INFO  16:01:20,756 - #47 mat
INFO  16:01:20,756 - #24 =
INFO  16:01:20,756 - #4 new
INFO  16:01:20,757 - #47 char
INFO  16:01:20,757 - #33 [
INFO  16:01:20,757 - #46 2
INFO  16:01:20,757 - #34 ]
INFO  16:01:20,757 - #33 [
INFO  16:01:20,757 - #46 3
INFO  16:01:20,757 - #34 ]
INFO  16:01:20,757 - #27 ;
INFO  16:01:20,757 - #47 mat
INFO  16:01:20,757 - #33 [
INFO  16:01:20,758 - #46 0
INFO  16:01:20,758 - #34 ]
INFO  16:01:20,758 - #33 [
INFO  16:01:20,758 - #46 0
INFO  16:01:20,758 - #34 ]
INFO  16:01:20,758 - #24 =
INFO  16:01:20,758 - #48 a
INFO  16:01:20,758 - #27 ;
INFO  16:01:20,758 - #5 print
INFO  16:01:20,758 - #31 (
INFO  16:01:20,758 - #47 mat
INFO  16:01:20,758 - #33 [
INFO  16:01:20,758 - #46 0
INFO  16:01:20,758 - #34 ]
INFO  16:01:20,758 - #33 [
INFO  16:01:20,758 - #46 0
INFO  16:01:20,759 - #34 ]
INFO  16:01:20,759 - #32 )
INFO  16:01:20,759 - #27 ;
INFO  16:01:20,759 - #36 }
INFO  16:01:20,759 - #36 }
INFO  16:01:20,760 - ================= PARSIRANO STABLO =================
INFO  16:01:20,762 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  Declarations(
    Declarations(
      Declarations(
        Declarations(
          Declarations(
            Declarations(
              Declarations(
                NoDeclarations(
                ) [NoDeclarations]
                ConstantDeclaration(
                  ConDecl(
                    Type(
                     int
                    ) [Type]
                    ConstDef(
                     nula
                      NumConst(
                       0
                      ) [NumConst]
                    ) [ConstDef]
                    NoConstantDeclaration(
                    ) [NoConstantDeclaration]
                  ) [ConDecl]
                ) [ConstantDeclaration]
              ) [Declarations]
              ConstantDeclaration(
                ConDecl(
                  Type(
                   int
                  ) [Type]
                  ConstDef(
                   jedan
                    NumConst(
                     1
                    ) [NumConst]
                  ) [ConstDef]
                  NoConstantDeclaration(
                  ) [NoConstantDeclaration]
                ) [ConDecl]
              ) [ConstantDeclaration]
            ) [Declarations]
            ConstantDeclaration(
              ConDecl(
                Type(
                 int
                ) [Type]
                ConstDef(
                 pet
                  NumConst(
                   5
                  ) [NumConst]
                ) [ConstDef]
                NoConstantDeclaration(
                ) [NoConstantDeclaration]
              ) [ConDecl]
            ) [ConstantDeclaration]
          ) [Declarations]
          VariableDeclaration(
            VarDeclaration(
              Type(
               int
              ) [Type]
              OneVarDeclaration(
                AddVarDecl1(
                 niz
                  Brackets(
                  ) [Brackets]
                ) [AddVarDecl1]
              ) [OneVarDeclaration]
            ) [VarDeclaration]
          ) [VariableDeclaration]
        ) [Declarations]
        VariableDeclaration(
          VarDeclaration(
            Type(
             char
            ) [Type]
            OneVarDeclaration(
              AddVarDecl1(
               mat
                TwoBrackets(
                ) [TwoBrackets]
              ) [AddVarDecl1]
            ) [OneVarDeclaration]
          ) [VarDeclaration]
        ) [VariableDeclaration]
      ) [Declarations]
      VariableDeclaration(
        VarDeclaration(
          Type(
           int
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             mat2
              TwoBrackets(
              ) [TwoBrackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [VariableDeclaration]
    ) [Declarations]
    VariableDeclaration(
      VarDeclaration(
        Type(
         int
        ) [Type]
        OneVarDeclaration(
          AddVarDecl1(
           a
            NoBrackets(
            ) [NoBrackets]
          ) [AddVarDecl1]
        ) [OneVarDeclaration]
      ) [VarDeclaration]
    ) [VariableDeclaration]
  ) [Declarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      NoVarDeclarations(
      ) [NoVarDeclarations]
      Statements(
        Statements(
          Statements(
            NoStatements(
            ) [NoStatements]
            DesignatorStat(
              DesignatorExpr(
                Designator(
                  WithoutNamespace(
                   mat
                  ) [WithoutNamespace]
                  NoArrayExpression(
                  ) [NoArrayExpression]
                ) [Designator]
                AssignOperation(
                ) [AssignOperation]
                PositiveStartExpr(
                  SingleTerm(
                    NewTypeMat(
                      Type(
                       char
                      ) [Type]
                      PositiveStartExpr(
                        SingleTerm(
                          NumberConst(
                           2
                          ) [NumberConst]
                        ) [SingleTerm]
                      ) [PositiveStartExpr]
                      PositiveStartExpr(
                        SingleTerm(
                          NumberConst(
                           3
                          ) [NumberConst]
                        ) [SingleTerm]
                      ) [PositiveStartExpr]
                    ) [NewTypeMat]
                  ) [SingleTerm]
                ) [PositiveStartExpr]
              ) [DesignatorExpr]
            ) [DesignatorStat]
          ) [Statements]
          DesignatorStat(
            DesignatorExpr(
              Designator(
                WithoutNamespace(
                 mat
                ) [WithoutNamespace]
                AddMatrixExpression(
                  BraExpr(
                    PositiveStartExpr(
                      SingleTerm(
                        NumberConst(
                         0
                        ) [NumberConst]
                      ) [SingleTerm]
                    ) [PositiveStartExpr]
                  ) [BraExpr]
                  BraExpr(
                    PositiveStartExpr(
                      SingleTerm(
                        NumberConst(
                         0
                        ) [NumberConst]
                      ) [SingleTerm]
                    ) [PositiveStartExpr]
                  ) [BraExpr]
                ) [AddMatrixExpression]
              ) [Designator]
              AssignOperation(
              ) [AssignOperation]
              PositiveStartExpr(
                SingleTerm(
                  CharacterConst(
                   a
                  ) [CharacterConst]
                ) [SingleTerm]
              ) [PositiveStartExpr]
            ) [DesignatorExpr]
          ) [DesignatorStat]
        ) [Statements]
        PrintExpr(
          PositiveStartExpr(
            SingleTerm(
              DesignatorFact(
                Designator(
                  WithoutNamespace(
                   mat
                  ) [WithoutNamespace]
                  AddMatrixExpression(
                    BraExpr(
                      PositiveStartExpr(
                        SingleTerm(
                          NumberConst(
                           0
                          ) [NumberConst]
                        ) [SingleTerm]
                      ) [PositiveStartExpr]
                    ) [BraExpr]
                    BraExpr(
                      PositiveStartExpr(
                        SingleTerm(
                          NumberConst(
                           0
                          ) [NumberConst]
                        ) [SingleTerm]
                      ) [PositiveStartExpr]
                    ) [BraExpr]
                  ) [AddMatrixExpression]
                ) [Designator]
              ) [DesignatorFact]
            ) [SingleTerm]
          ) [PositiveStartExpr]
          NoNumConstOpt(
          ) [NoNumConstOpt]
        ) [PrintExpr]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  16:01:20,762 - ================ Semanticka obrada ===================
INFO  16:01:20,764 - NEW CONST
INFO  16:01:20,764 - Con nula: int, 0, 0 on line 5
INFO  16:01:20,764 - NEW CONST
INFO  16:01:20,764 - Con jedan: int, 1, 0 on line 6
INFO  16:01:20,764 - NEW CONST
INFO  16:01:20,764 - Con pet: int, 5, 0 on line 7
INFO  16:01:20,764 - NEW SYMBOL
INFO  16:01:20,764 - Var niz: Arr of int, 0, 0 on line 9
INFO  16:01:20,765 - NEW SYMBOL
INFO  16:01:20,765 - Var mat: Matrix of char, 1, 0 on line 10
INFO  16:01:20,765 - NEW SYMBOL
INFO  16:01:20,765 - Var mat2: Matrix of int, 2, 0 on line 11
INFO  16:01:20,765 - NEW SYMBOL
INFO  16:01:20,765 - Var a: int, 3, 0 on line 13
INFO  16:01:20,765 - Var mat: Matrix of char, 1, 0 on line 18
INFO  16:01:20,765 - Var mat: Matrix of char, 1, 0 on line 19
INFO  16:01:20,765 - Var mat: Matrix of char, 1, 0 on line 20
INFO  16:01:20,765 - Meth main: notype, 0, 0 on line 3
INFO  16:01:20,767 - Parser SUCCESS!
INFO  16:01:54,401 - Compiling source file: C:\Users\se200106\Desktop\wsp\MJCompilerAVGUST3.zip_expanded\MJCompiler\test\program.mj
INFO  16:01:54,402 - ================= LEKSICKA ANALIZA =================
INFO  16:01:54,418 - #2 program
INFO  16:01:54,418 - #47 test301
INFO  16:01:54,418 - #3 const
INFO  16:01:54,418 - #47 int
INFO  16:01:54,418 - #47 nula
INFO  16:01:54,419 - #24 =
INFO  16:01:54,419 - #46 0
INFO  16:01:54,419 - #27 ;
INFO  16:01:54,419 - #3 const
INFO  16:01:54,419 - #47 int
INFO  16:01:54,419 - #47 jedan
INFO  16:01:54,420 - #24 =
INFO  16:01:54,420 - #46 1
INFO  16:01:54,420 - #27 ;
INFO  16:01:54,420 - #3 const
INFO  16:01:54,420 - #47 int
INFO  16:01:54,420 - #47 pet
INFO  16:01:54,420 - #24 =
INFO  16:01:54,420 - #46 5
INFO  16:01:54,420 - #27 ;
INFO  16:01:54,420 - #47 int
INFO  16:01:54,420 - #47 niz
INFO  16:01:54,420 - #33 [
INFO  16:01:54,420 - #34 ]
INFO  16:01:54,420 - #27 ;
INFO  16:01:54,421 - #47 char
INFO  16:01:54,421 - #47 mat
INFO  16:01:54,421 - #33 [
INFO  16:01:54,421 - #34 ]
INFO  16:01:54,421 - #33 [
INFO  16:01:54,421 - #34 ]
INFO  16:01:54,421 - #27 ;
INFO  16:01:54,421 - #47 int
INFO  16:01:54,421 - #47 mat2
INFO  16:01:54,421 - #33 [
INFO  16:01:54,421 - #34 ]
INFO  16:01:54,421 - #33 [
INFO  16:01:54,421 - #34 ]
INFO  16:01:54,421 - #27 ;
INFO  16:01:54,421 - #47 int
INFO  16:01:54,422 - #47 a
INFO  16:01:54,422 - #27 ;
INFO  16:01:54,422 - #35 {
INFO  16:01:54,422 - #8 void
INFO  16:01:54,422 - #47 main
INFO  16:01:54,422 - #31 (
INFO  16:01:54,422 - #32 )
INFO  16:01:54,423 - #35 {
INFO  16:01:54,423 - #47 mat
INFO  16:01:54,423 - #24 =
INFO  16:01:54,424 - #4 new
INFO  16:01:54,424 - #47 char
INFO  16:01:54,424 - #33 [
INFO  16:01:54,424 - #46 2
INFO  16:01:54,424 - #34 ]
INFO  16:01:54,424 - #33 [
INFO  16:01:54,424 - #46 3
INFO  16:01:54,424 - #34 ]
INFO  16:01:54,424 - #27 ;
INFO  16:01:54,424 - #47 mat
INFO  16:01:54,425 - #33 [
INFO  16:01:54,425 - #46 0
INFO  16:01:54,425 - #34 ]
INFO  16:01:54,425 - #33 [
INFO  16:01:54,425 - #46 0
INFO  16:01:54,425 - #34 ]
INFO  16:01:54,425 - #24 =
INFO  16:01:54,425 - #48 a
INFO  16:01:54,425 - #27 ;
INFO  16:01:54,425 - #5 print
INFO  16:01:54,425 - #31 (
INFO  16:01:54,425 - #47 mat
INFO  16:01:54,425 - #33 [
INFO  16:01:54,425 - #46 0
INFO  16:01:54,425 - #34 ]
INFO  16:01:54,426 - #33 [
INFO  16:01:54,426 - #46 0
INFO  16:01:54,426 - #34 ]
INFO  16:01:54,426 - #32 )
INFO  16:01:54,426 - #27 ;
INFO  16:01:54,426 - #47 mat
INFO  16:01:54,426 - #33 [
INFO  16:01:54,426 - #46 0
INFO  16:01:54,426 - #34 ]
INFO  16:01:54,426 - #33 [
INFO  16:01:54,426 - #46 1
INFO  16:01:54,426 - #34 ]
INFO  16:01:54,426 - #24 =
INFO  16:01:54,426 - #48 b
INFO  16:01:54,426 - #27 ;
INFO  16:01:54,426 - #47 mat
INFO  16:01:54,426 - #33 [
INFO  16:01:54,426 - #46 0
INFO  16:01:54,426 - #34 ]
INFO  16:01:54,426 - #33 [
INFO  16:01:54,427 - #46 2
INFO  16:01:54,427 - #34 ]
INFO  16:01:54,427 - #24 =
INFO  16:01:54,427 - #48 c
INFO  16:01:54,427 - #27 ;
INFO  16:01:54,427 - #47 mat
INFO  16:01:54,427 - #33 [
INFO  16:01:54,427 - #46 1
INFO  16:01:54,427 - #34 ]
INFO  16:01:54,427 - #33 [
INFO  16:01:54,427 - #46 2
INFO  16:01:54,427 - #34 ]
INFO  16:01:54,427 - #24 =
INFO  16:01:54,427 - #48 d
INFO  16:01:54,427 - #27 ;
INFO  16:01:54,427 - #47 mat
INFO  16:01:54,427 - #33 [
INFO  16:01:54,427 - #46 1
INFO  16:01:54,427 - #34 ]
INFO  16:01:54,427 - #33 [
INFO  16:01:54,427 - #46 1
INFO  16:01:54,427 - #34 ]
INFO  16:01:54,427 - #24 =
INFO  16:01:54,427 - #48 3
INFO  16:01:54,427 - #27 ;
INFO  16:01:54,427 - #47 mat
INFO  16:01:54,427 - #33 [
INFO  16:01:54,427 - #46 1
INFO  16:01:54,427 - #34 ]
INFO  16:01:54,427 - #33 [
INFO  16:01:54,427 - #46 0
INFO  16:01:54,428 - #34 ]
INFO  16:01:54,428 - #24 =
INFO  16:01:54,428 - #48 2
INFO  16:01:54,428 - #27 ;
INFO  16:01:54,428 - #5 print
INFO  16:01:54,428 - #31 (
INFO  16:01:54,428 - #47 mat
INFO  16:01:54,428 - #33 [
INFO  16:01:54,428 - #46 0
INFO  16:01:54,428 - #34 ]
INFO  16:01:54,428 - #33 [
INFO  16:01:54,428 - #46 1
INFO  16:01:54,428 - #12 -
INFO  16:01:54,428 - #31 (
INFO  16:01:54,428 - #46 0
INFO  16:01:54,428 - #11 +
INFO  16:01:54,428 - #46 1
INFO  16:01:54,429 - #32 )
INFO  16:01:54,429 - #34 ]
INFO  16:01:54,429 - #32 )
INFO  16:01:54,429 - #27 ;
INFO  16:01:54,429 - #36 }
INFO  16:01:54,429 - #36 }
INFO  16:01:54,430 - ================= PARSIRANO STABLO =================
INFO  16:01:54,432 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  Declarations(
    Declarations(
      Declarations(
        Declarations(
          Declarations(
            Declarations(
              Declarations(
                NoDeclarations(
                ) [NoDeclarations]
                ConstantDeclaration(
                  ConDecl(
                    Type(
                     int
                    ) [Type]
                    ConstDef(
                     nula
                      NumConst(
                       0
                      ) [NumConst]
                    ) [ConstDef]
                    NoConstantDeclaration(
                    ) [NoConstantDeclaration]
                  ) [ConDecl]
                ) [ConstantDeclaration]
              ) [Declarations]
              ConstantDeclaration(
                ConDecl(
                  Type(
                   int
                  ) [Type]
                  ConstDef(
                   jedan
                    NumConst(
                     1
                    ) [NumConst]
                  ) [ConstDef]
                  NoConstantDeclaration(
                  ) [NoConstantDeclaration]
                ) [ConDecl]
              ) [ConstantDeclaration]
            ) [Declarations]
            ConstantDeclaration(
              ConDecl(
                Type(
                 int
                ) [Type]
                ConstDef(
                 pet
                  NumConst(
                   5
                  ) [NumConst]
                ) [ConstDef]
                NoConstantDeclaration(
                ) [NoConstantDeclaration]
              ) [ConDecl]
            ) [ConstantDeclaration]
          ) [Declarations]
          VariableDeclaration(
            VarDeclaration(
              Type(
               int
              ) [Type]
              OneVarDeclaration(
                AddVarDecl1(
                 niz
                  Brackets(
                  ) [Brackets]
                ) [AddVarDecl1]
              ) [OneVarDeclaration]
            ) [VarDeclaration]
          ) [VariableDeclaration]
        ) [Declarations]
        VariableDeclaration(
          VarDeclaration(
            Type(
             char
            ) [Type]
            OneVarDeclaration(
              AddVarDecl1(
               mat
                TwoBrackets(
                ) [TwoBrackets]
              ) [AddVarDecl1]
            ) [OneVarDeclaration]
          ) [VarDeclaration]
        ) [VariableDeclaration]
      ) [Declarations]
      VariableDeclaration(
        VarDeclaration(
          Type(
           int
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             mat2
              TwoBrackets(
              ) [TwoBrackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [VariableDeclaration]
    ) [Declarations]
    VariableDeclaration(
      VarDeclaration(
        Type(
         int
        ) [Type]
        OneVarDeclaration(
          AddVarDecl1(
           a
            NoBrackets(
            ) [NoBrackets]
          ) [AddVarDecl1]
        ) [OneVarDeclaration]
      ) [VarDeclaration]
    ) [VariableDeclaration]
  ) [Declarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      NoVarDeclarations(
      ) [NoVarDeclarations]
      Statements(
        Statements(
          Statements(
            Statements(
              Statements(
                Statements(
                  Statements(
                    Statements(
                      Statements(
                        NoStatements(
                        ) [NoStatements]
                        DesignatorStat(
                          DesignatorExpr(
                            Designator(
                              WithoutNamespace(
                               mat
                              ) [WithoutNamespace]
                              NoArrayExpression(
                              ) [NoArrayExpression]
                            ) [Designator]
                            AssignOperation(
                            ) [AssignOperation]
                            PositiveStartExpr(
                              SingleTerm(
                                NewTypeMat(
                                  Type(
                                   char
                                  ) [Type]
                                  PositiveStartExpr(
                                    SingleTerm(
                                      NumberConst(
                                       2
                                      ) [NumberConst]
                                    ) [SingleTerm]
                                  ) [PositiveStartExpr]
                                  PositiveStartExpr(
                                    SingleTerm(
                                      NumberConst(
                                       3
                                      ) [NumberConst]
                                    ) [SingleTerm]
                                  ) [PositiveStartExpr]
                                ) [NewTypeMat]
                              ) [SingleTerm]
                            ) [PositiveStartExpr]
                          ) [DesignatorExpr]
                        ) [DesignatorStat]
                      ) [Statements]
                      DesignatorStat(
                        DesignatorExpr(
                          Designator(
                            WithoutNamespace(
                             mat
                            ) [WithoutNamespace]
                            AddMatrixExpression(
                              BraExpr(
                                PositiveStartExpr(
                                  SingleTerm(
                                    NumberConst(
                                     0
                                    ) [NumberConst]
                                  ) [SingleTerm]
                                ) [PositiveStartExpr]
                              ) [BraExpr]
                              BraExpr(
                                PositiveStartExpr(
                                  SingleTerm(
                                    NumberConst(
                                     0
                                    ) [NumberConst]
                                  ) [SingleTerm]
                                ) [PositiveStartExpr]
                              ) [BraExpr]
                            ) [AddMatrixExpression]
                          ) [Designator]
                          AssignOperation(
                          ) [AssignOperation]
                          PositiveStartExpr(
                            SingleTerm(
                              CharacterConst(
                               a
                              ) [CharacterConst]
                            ) [SingleTerm]
                          ) [PositiveStartExpr]
                        ) [DesignatorExpr]
                      ) [DesignatorStat]
                    ) [Statements]
                    PrintExpr(
                      PositiveStartExpr(
                        SingleTerm(
                          DesignatorFact(
                            Designator(
                              WithoutNamespace(
                               mat
                              ) [WithoutNamespace]
                              AddMatrixExpression(
                                BraExpr(
                                  PositiveStartExpr(
                                    SingleTerm(
                                      NumberConst(
                                       0
                                      ) [NumberConst]
                                    ) [SingleTerm]
                                  ) [PositiveStartExpr]
                                ) [BraExpr]
                                BraExpr(
                                  PositiveStartExpr(
                                    SingleTerm(
                                      NumberConst(
                                       0
                                      ) [NumberConst]
                                    ) [SingleTerm]
                                  ) [PositiveStartExpr]
                                ) [BraExpr]
                              ) [AddMatrixExpression]
                            ) [Designator]
                          ) [DesignatorFact]
                        ) [SingleTerm]
                      ) [PositiveStartExpr]
                      NoNumConstOpt(
                      ) [NoNumConstOpt]
                    ) [PrintExpr]
                  ) [Statements]
                  DesignatorStat(
                    DesignatorExpr(
                      Designator(
                        WithoutNamespace(
                         mat
                        ) [WithoutNamespace]
                        AddMatrixExpression(
                          BraExpr(
                            PositiveStartExpr(
                              SingleTerm(
                                NumberConst(
                                 0
                                ) [NumberConst]
                              ) [SingleTerm]
                            ) [PositiveStartExpr]
                          ) [BraExpr]
                          BraExpr(
                            PositiveStartExpr(
                              SingleTerm(
                                NumberConst(
                                 1
                                ) [NumberConst]
                              ) [SingleTerm]
                            ) [PositiveStartExpr]
                          ) [BraExpr]
                        ) [AddMatrixExpression]
                      ) [Designator]
                      AssignOperation(
                      ) [AssignOperation]
                      PositiveStartExpr(
                        SingleTerm(
                          CharacterConst(
                           b
                          ) [CharacterConst]
                        ) [SingleTerm]
                      ) [PositiveStartExpr]
                    ) [DesignatorExpr]
                  ) [DesignatorStat]
                ) [Statements]
                DesignatorStat(
                  DesignatorExpr(
                    Designator(
                      WithoutNamespace(
                       mat
                      ) [WithoutNamespace]
                      AddMatrixExpression(
                        BraExpr(
                          PositiveStartExpr(
                            SingleTerm(
                              NumberConst(
                               0
                              ) [NumberConst]
                            ) [SingleTerm]
                          ) [PositiveStartExpr]
                        ) [BraExpr]
                        BraExpr(
                          PositiveStartExpr(
                            SingleTerm(
                              NumberConst(
                               2
                              ) [NumberConst]
                            ) [SingleTerm]
                          ) [PositiveStartExpr]
                        ) [BraExpr]
                      ) [AddMatrixExpression]
                    ) [Designator]
                    AssignOperation(
                    ) [AssignOperation]
                    PositiveStartExpr(
                      SingleTerm(
                        CharacterConst(
                         c
                        ) [CharacterConst]
                      ) [SingleTerm]
                    ) [PositiveStartExpr]
                  ) [DesignatorExpr]
                ) [DesignatorStat]
              ) [Statements]
              DesignatorStat(
                DesignatorExpr(
                  Designator(
                    WithoutNamespace(
                     mat
                    ) [WithoutNamespace]
                    AddMatrixExpression(
                      BraExpr(
                        PositiveStartExpr(
                          SingleTerm(
                            NumberConst(
                             1
                            ) [NumberConst]
                          ) [SingleTerm]
                        ) [PositiveStartExpr]
                      ) [BraExpr]
                      BraExpr(
                        PositiveStartExpr(
                          SingleTerm(
                            NumberConst(
                             2
                            ) [NumberConst]
                          ) [SingleTerm]
                        ) [PositiveStartExpr]
                      ) [BraExpr]
                    ) [AddMatrixExpression]
                  ) [Designator]
                  AssignOperation(
                  ) [AssignOperation]
                  PositiveStartExpr(
                    SingleTerm(
                      CharacterConst(
                       d
                      ) [CharacterConst]
                    ) [SingleTerm]
                  ) [PositiveStartExpr]
                ) [DesignatorExpr]
              ) [DesignatorStat]
            ) [Statements]
            DesignatorStat(
              DesignatorExpr(
                Designator(
                  WithoutNamespace(
                   mat
                  ) [WithoutNamespace]
                  AddMatrixExpression(
                    BraExpr(
                      PositiveStartExpr(
                        SingleTerm(
                          NumberConst(
                           1
                          ) [NumberConst]
                        ) [SingleTerm]
                      ) [PositiveStartExpr]
                    ) [BraExpr]
                    BraExpr(
                      PositiveStartExpr(
                        SingleTerm(
                          NumberConst(
                           1
                          ) [NumberConst]
                        ) [SingleTerm]
                      ) [PositiveStartExpr]
                    ) [BraExpr]
                  ) [AddMatrixExpression]
                ) [Designator]
                AssignOperation(
                ) [AssignOperation]
                PositiveStartExpr(
                  SingleTerm(
                    CharacterConst(
                     3
                    ) [CharacterConst]
                  ) [SingleTerm]
                ) [PositiveStartExpr]
              ) [DesignatorExpr]
            ) [DesignatorStat]
          ) [Statements]
          DesignatorStat(
            DesignatorExpr(
              Designator(
                WithoutNamespace(
                 mat
                ) [WithoutNamespace]
                AddMatrixExpression(
                  BraExpr(
                    PositiveStartExpr(
                      SingleTerm(
                        NumberConst(
                         1
                        ) [NumberConst]
                      ) [SingleTerm]
                    ) [PositiveStartExpr]
                  ) [BraExpr]
                  BraExpr(
                    PositiveStartExpr(
                      SingleTerm(
                        NumberConst(
                         0
                        ) [NumberConst]
                      ) [SingleTerm]
                    ) [PositiveStartExpr]
                  ) [BraExpr]
                ) [AddMatrixExpression]
              ) [Designator]
              AssignOperation(
              ) [AssignOperation]
              PositiveStartExpr(
                SingleTerm(
                  CharacterConst(
                   2
                  ) [CharacterConst]
                ) [SingleTerm]
              ) [PositiveStartExpr]
            ) [DesignatorExpr]
          ) [DesignatorStat]
        ) [Statements]
        PrintExpr(
          PositiveStartExpr(
            SingleTerm(
              DesignatorFact(
                Designator(
                  WithoutNamespace(
                   mat
                  ) [WithoutNamespace]
                  AddMatrixExpression(
                    BraExpr(
                      PositiveStartExpr(
                        SingleTerm(
                          NumberConst(
                           0
                          ) [NumberConst]
                        ) [SingleTerm]
                      ) [PositiveStartExpr]
                    ) [BraExpr]
                    BraExpr(
                      AddExpression(
                        PositiveStartExpr(
                          SingleTerm(
                            NumberConst(
                             1
                            ) [NumberConst]
                          ) [SingleTerm]
                        ) [PositiveStartExpr]
                        Minus(
                        ) [Minus]
                        SingleTerm(
                          ExpressionFact(
                            AddExpression(
                              PositiveStartExpr(
                                SingleTerm(
                                  NumberConst(
                                   0
                                  ) [NumberConst]
                                ) [SingleTerm]
                              ) [PositiveStartExpr]
                              Plus(
                              ) [Plus]
                              SingleTerm(
                                NumberConst(
                                 1
                                ) [NumberConst]
                              ) [SingleTerm]
                            ) [AddExpression]
                          ) [ExpressionFact]
                        ) [SingleTerm]
                      ) [AddExpression]
                    ) [BraExpr]
                  ) [AddMatrixExpression]
                ) [Designator]
              ) [DesignatorFact]
            ) [SingleTerm]
          ) [PositiveStartExpr]
          NoNumConstOpt(
          ) [NoNumConstOpt]
        ) [PrintExpr]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  16:01:54,433 - ================ Semanticka obrada ===================
INFO  16:01:54,434 - NEW CONST
INFO  16:01:54,434 - Con nula: int, 0, 0 on line 5
INFO  16:01:54,434 - NEW CONST
INFO  16:01:54,434 - Con jedan: int, 1, 0 on line 6
INFO  16:01:54,434 - NEW CONST
INFO  16:01:54,435 - Con pet: int, 5, 0 on line 7
INFO  16:01:54,435 - NEW SYMBOL
INFO  16:01:54,435 - Var niz: Arr of int, 0, 0 on line 9
INFO  16:01:54,435 - NEW SYMBOL
INFO  16:01:54,435 - Var mat: Matrix of char, 1, 0 on line 10
INFO  16:01:54,435 - NEW SYMBOL
INFO  16:01:54,435 - Var mat2: Matrix of int, 2, 0 on line 11
INFO  16:01:54,435 - NEW SYMBOL
INFO  16:01:54,435 - Var a: int, 3, 0 on line 13
INFO  16:01:54,435 - Var mat: Matrix of char, 1, 0 on line 18
INFO  16:01:54,435 - Var mat: Matrix of char, 1, 0 on line 19
INFO  16:01:54,435 - Var mat: Matrix of char, 1, 0 on line 20
INFO  16:01:54,435 - Var mat: Matrix of char, 1, 0 on line 21
INFO  16:01:54,435 - Var mat: Matrix of char, 1, 0 on line 22
INFO  16:01:54,435 - Var mat: Matrix of char, 1, 0 on line 23
INFO  16:01:54,435 - Var mat: Matrix of char, 1, 0 on line 24
INFO  16:01:54,435 - Var mat: Matrix of char, 1, 0 on line 25
INFO  16:01:54,435 - Var mat: Matrix of char, 1, 0 on line 26
INFO  16:01:54,435 - Meth main: notype, 0, 0 on line 3
INFO  16:01:54,437 - Parser SUCCESS!
INFO  16:02:12,566 - Compiling source file: C:\Users\se200106\Desktop\wsp\MJCompilerAVGUST3.zip_expanded\MJCompiler\test\program.mj
INFO  16:02:12,566 - ================= LEKSICKA ANALIZA =================
INFO  16:02:12,582 - #2 program
INFO  16:02:12,582 - #47 test301
INFO  16:02:12,582 - #3 const
INFO  16:02:12,583 - #47 int
INFO  16:02:12,583 - #47 nula
INFO  16:02:12,583 - #24 =
INFO  16:02:12,583 - #46 0
INFO  16:02:12,583 - #27 ;
INFO  16:02:12,584 - #3 const
INFO  16:02:12,584 - #47 int
INFO  16:02:12,584 - #47 jedan
INFO  16:02:12,584 - #24 =
INFO  16:02:12,584 - #46 1
INFO  16:02:12,584 - #27 ;
INFO  16:02:12,584 - #3 const
INFO  16:02:12,584 - #47 int
INFO  16:02:12,585 - #47 pet
INFO  16:02:12,585 - #24 =
INFO  16:02:12,585 - #46 5
INFO  16:02:12,585 - #27 ;
INFO  16:02:12,585 - #47 int
INFO  16:02:12,585 - #47 niz
INFO  16:02:12,585 - #33 [
INFO  16:02:12,585 - #34 ]
INFO  16:02:12,585 - #27 ;
INFO  16:02:12,586 - #47 char
INFO  16:02:12,586 - #47 mat
INFO  16:02:12,586 - #33 [
INFO  16:02:12,586 - #34 ]
INFO  16:02:12,586 - #33 [
INFO  16:02:12,586 - #34 ]
INFO  16:02:12,586 - #27 ;
INFO  16:02:12,586 - #47 int
INFO  16:02:12,586 - #47 mat2
INFO  16:02:12,586 - #33 [
INFO  16:02:12,586 - #34 ]
INFO  16:02:12,586 - #33 [
INFO  16:02:12,586 - #34 ]
INFO  16:02:12,586 - #27 ;
INFO  16:02:12,586 - #47 int
INFO  16:02:12,586 - #47 a
INFO  16:02:12,587 - #27 ;
INFO  16:02:12,587 - #35 {
INFO  16:02:12,587 - #8 void
INFO  16:02:12,587 - #47 main
INFO  16:02:12,588 - #31 (
INFO  16:02:12,588 - #32 )
INFO  16:02:12,588 - #35 {
INFO  16:02:12,588 - #47 mat
INFO  16:02:12,589 - #24 =
INFO  16:02:12,589 - #4 new
INFO  16:02:12,589 - #47 char
INFO  16:02:12,589 - #33 [
INFO  16:02:12,590 - #46 2
INFO  16:02:12,590 - #34 ]
INFO  16:02:12,590 - #33 [
INFO  16:02:12,590 - #46 3
INFO  16:02:12,590 - #34 ]
INFO  16:02:12,590 - #27 ;
INFO  16:02:12,590 - #47 mat
INFO  16:02:12,590 - #33 [
INFO  16:02:12,590 - #46 0
INFO  16:02:12,590 - #34 ]
INFO  16:02:12,590 - #33 [
INFO  16:02:12,591 - #46 0
INFO  16:02:12,591 - #34 ]
INFO  16:02:12,591 - #24 =
INFO  16:02:12,591 - #48 a
INFO  16:02:12,591 - #27 ;
INFO  16:02:12,591 - #5 print
INFO  16:02:12,591 - #31 (
INFO  16:02:12,591 - #47 mat
INFO  16:02:12,591 - #33 [
INFO  16:02:12,591 - #46 0
INFO  16:02:12,591 - #34 ]
INFO  16:02:12,591 - #33 [
INFO  16:02:12,591 - #46 0
INFO  16:02:12,591 - #34 ]
INFO  16:02:12,591 - #32 )
INFO  16:02:12,592 - #27 ;
INFO  16:02:12,592 - #47 mat
INFO  16:02:12,592 - #33 [
INFO  16:02:12,592 - #46 0
INFO  16:02:12,592 - #34 ]
INFO  16:02:12,592 - #33 [
INFO  16:02:12,592 - #46 1
INFO  16:02:12,592 - #34 ]
INFO  16:02:12,592 - #24 =
INFO  16:02:12,592 - #48 b
INFO  16:02:12,592 - #27 ;
INFO  16:02:12,592 - #47 mat
INFO  16:02:12,592 - #33 [
INFO  16:02:12,592 - #46 0
INFO  16:02:12,592 - #34 ]
INFO  16:02:12,592 - #33 [
INFO  16:02:12,592 - #46 2
INFO  16:02:12,592 - #34 ]
INFO  16:02:12,592 - #24 =
INFO  16:02:12,592 - #48 c
INFO  16:02:12,592 - #27 ;
INFO  16:02:12,592 - #47 mat
INFO  16:02:12,592 - #33 [
INFO  16:02:12,592 - #46 1
INFO  16:02:12,592 - #34 ]
INFO  16:02:12,592 - #33 [
INFO  16:02:12,593 - #46 2
INFO  16:02:12,593 - #34 ]
INFO  16:02:12,593 - #24 =
INFO  16:02:12,593 - #48 d
INFO  16:02:12,593 - #27 ;
INFO  16:02:12,593 - #47 mat
INFO  16:02:12,593 - #33 [
INFO  16:02:12,593 - #46 1
INFO  16:02:12,593 - #34 ]
INFO  16:02:12,593 - #33 [
INFO  16:02:12,593 - #46 1
INFO  16:02:12,593 - #34 ]
INFO  16:02:12,593 - #24 =
INFO  16:02:12,593 - #48 3
INFO  16:02:12,593 - #27 ;
INFO  16:02:12,593 - #47 mat
INFO  16:02:12,593 - #33 [
INFO  16:02:12,593 - #46 1
INFO  16:02:12,593 - #34 ]
INFO  16:02:12,593 - #33 [
INFO  16:02:12,593 - #46 0
INFO  16:02:12,593 - #34 ]
INFO  16:02:12,593 - #24 =
INFO  16:02:12,593 - #48 2
INFO  16:02:12,594 - #27 ;
INFO  16:02:12,594 - #5 print
INFO  16:02:12,594 - #31 (
INFO  16:02:12,594 - #47 mat
INFO  16:02:12,594 - #32 )
INFO  16:02:12,594 - #27 ;
INFO  16:02:12,594 - #36 }
INFO  16:02:12,594 - #36 }
INFO  16:02:12,595 - ================= PARSIRANO STABLO =================
INFO  16:02:12,598 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  Declarations(
    Declarations(
      Declarations(
        Declarations(
          Declarations(
            Declarations(
              Declarations(
                NoDeclarations(
                ) [NoDeclarations]
                ConstantDeclaration(
                  ConDecl(
                    Type(
                     int
                    ) [Type]
                    ConstDef(
                     nula
                      NumConst(
                       0
                      ) [NumConst]
                    ) [ConstDef]
                    NoConstantDeclaration(
                    ) [NoConstantDeclaration]
                  ) [ConDecl]
                ) [ConstantDeclaration]
              ) [Declarations]
              ConstantDeclaration(
                ConDecl(
                  Type(
                   int
                  ) [Type]
                  ConstDef(
                   jedan
                    NumConst(
                     1
                    ) [NumConst]
                  ) [ConstDef]
                  NoConstantDeclaration(
                  ) [NoConstantDeclaration]
                ) [ConDecl]
              ) [ConstantDeclaration]
            ) [Declarations]
            ConstantDeclaration(
              ConDecl(
                Type(
                 int
                ) [Type]
                ConstDef(
                 pet
                  NumConst(
                   5
                  ) [NumConst]
                ) [ConstDef]
                NoConstantDeclaration(
                ) [NoConstantDeclaration]
              ) [ConDecl]
            ) [ConstantDeclaration]
          ) [Declarations]
          VariableDeclaration(
            VarDeclaration(
              Type(
               int
              ) [Type]
              OneVarDeclaration(
                AddVarDecl1(
                 niz
                  Brackets(
                  ) [Brackets]
                ) [AddVarDecl1]
              ) [OneVarDeclaration]
            ) [VarDeclaration]
          ) [VariableDeclaration]
        ) [Declarations]
        VariableDeclaration(
          VarDeclaration(
            Type(
             char
            ) [Type]
            OneVarDeclaration(
              AddVarDecl1(
               mat
                TwoBrackets(
                ) [TwoBrackets]
              ) [AddVarDecl1]
            ) [OneVarDeclaration]
          ) [VarDeclaration]
        ) [VariableDeclaration]
      ) [Declarations]
      VariableDeclaration(
        VarDeclaration(
          Type(
           int
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             mat2
              TwoBrackets(
              ) [TwoBrackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [VariableDeclaration]
    ) [Declarations]
    VariableDeclaration(
      VarDeclaration(
        Type(
         int
        ) [Type]
        OneVarDeclaration(
          AddVarDecl1(
           a
            NoBrackets(
            ) [NoBrackets]
          ) [AddVarDecl1]
        ) [OneVarDeclaration]
      ) [VarDeclaration]
    ) [VariableDeclaration]
  ) [Declarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      NoVarDeclarations(
      ) [NoVarDeclarations]
      Statements(
        Statements(
          Statements(
            Statements(
              Statements(
                Statements(
                  Statements(
                    Statements(
                      Statements(
                        NoStatements(
                        ) [NoStatements]
                        DesignatorStat(
                          DesignatorExpr(
                            Designator(
                              WithoutNamespace(
                               mat
                              ) [WithoutNamespace]
                              NoArrayExpression(
                              ) [NoArrayExpression]
                            ) [Designator]
                            AssignOperation(
                            ) [AssignOperation]
                            PositiveStartExpr(
                              SingleTerm(
                                NewTypeMat(
                                  Type(
                                   char
                                  ) [Type]
                                  PositiveStartExpr(
                                    SingleTerm(
                                      NumberConst(
                                       2
                                      ) [NumberConst]
                                    ) [SingleTerm]
                                  ) [PositiveStartExpr]
                                  PositiveStartExpr(
                                    SingleTerm(
                                      NumberConst(
                                       3
                                      ) [NumberConst]
                                    ) [SingleTerm]
                                  ) [PositiveStartExpr]
                                ) [NewTypeMat]
                              ) [SingleTerm]
                            ) [PositiveStartExpr]
                          ) [DesignatorExpr]
                        ) [DesignatorStat]
                      ) [Statements]
                      DesignatorStat(
                        DesignatorExpr(
                          Designator(
                            WithoutNamespace(
                             mat
                            ) [WithoutNamespace]
                            AddMatrixExpression(
                              BraExpr(
                                PositiveStartExpr(
                                  SingleTerm(
                                    NumberConst(
                                     0
                                    ) [NumberConst]
                                  ) [SingleTerm]
                                ) [PositiveStartExpr]
                              ) [BraExpr]
                              BraExpr(
                                PositiveStartExpr(
                                  SingleTerm(
                                    NumberConst(
                                     0
                                    ) [NumberConst]
                                  ) [SingleTerm]
                                ) [PositiveStartExpr]
                              ) [BraExpr]
                            ) [AddMatrixExpression]
                          ) [Designator]
                          AssignOperation(
                          ) [AssignOperation]
                          PositiveStartExpr(
                            SingleTerm(
                              CharacterConst(
                               a
                              ) [CharacterConst]
                            ) [SingleTerm]
                          ) [PositiveStartExpr]
                        ) [DesignatorExpr]
                      ) [DesignatorStat]
                    ) [Statements]
                    PrintExpr(
                      PositiveStartExpr(
                        SingleTerm(
                          DesignatorFact(
                            Designator(
                              WithoutNamespace(
                               mat
                              ) [WithoutNamespace]
                              AddMatrixExpression(
                                BraExpr(
                                  PositiveStartExpr(
                                    SingleTerm(
                                      NumberConst(
                                       0
                                      ) [NumberConst]
                                    ) [SingleTerm]
                                  ) [PositiveStartExpr]
                                ) [BraExpr]
                                BraExpr(
                                  PositiveStartExpr(
                                    SingleTerm(
                                      NumberConst(
                                       0
                                      ) [NumberConst]
                                    ) [SingleTerm]
                                  ) [PositiveStartExpr]
                                ) [BraExpr]
                              ) [AddMatrixExpression]
                            ) [Designator]
                          ) [DesignatorFact]
                        ) [SingleTerm]
                      ) [PositiveStartExpr]
                      NoNumConstOpt(
                      ) [NoNumConstOpt]
                    ) [PrintExpr]
                  ) [Statements]
                  DesignatorStat(
                    DesignatorExpr(
                      Designator(
                        WithoutNamespace(
                         mat
                        ) [WithoutNamespace]
                        AddMatrixExpression(
                          BraExpr(
                            PositiveStartExpr(
                              SingleTerm(
                                NumberConst(
                                 0
                                ) [NumberConst]
                              ) [SingleTerm]
                            ) [PositiveStartExpr]
                          ) [BraExpr]
                          BraExpr(
                            PositiveStartExpr(
                              SingleTerm(
                                NumberConst(
                                 1
                                ) [NumberConst]
                              ) [SingleTerm]
                            ) [PositiveStartExpr]
                          ) [BraExpr]
                        ) [AddMatrixExpression]
                      ) [Designator]
                      AssignOperation(
                      ) [AssignOperation]
                      PositiveStartExpr(
                        SingleTerm(
                          CharacterConst(
                           b
                          ) [CharacterConst]
                        ) [SingleTerm]
                      ) [PositiveStartExpr]
                    ) [DesignatorExpr]
                  ) [DesignatorStat]
                ) [Statements]
                DesignatorStat(
                  DesignatorExpr(
                    Designator(
                      WithoutNamespace(
                       mat
                      ) [WithoutNamespace]
                      AddMatrixExpression(
                        BraExpr(
                          PositiveStartExpr(
                            SingleTerm(
                              NumberConst(
                               0
                              ) [NumberConst]
                            ) [SingleTerm]
                          ) [PositiveStartExpr]
                        ) [BraExpr]
                        BraExpr(
                          PositiveStartExpr(
                            SingleTerm(
                              NumberConst(
                               2
                              ) [NumberConst]
                            ) [SingleTerm]
                          ) [PositiveStartExpr]
                        ) [BraExpr]
                      ) [AddMatrixExpression]
                    ) [Designator]
                    AssignOperation(
                    ) [AssignOperation]
                    PositiveStartExpr(
                      SingleTerm(
                        CharacterConst(
                         c
                        ) [CharacterConst]
                      ) [SingleTerm]
                    ) [PositiveStartExpr]
                  ) [DesignatorExpr]
                ) [DesignatorStat]
              ) [Statements]
              DesignatorStat(
                DesignatorExpr(
                  Designator(
                    WithoutNamespace(
                     mat
                    ) [WithoutNamespace]
                    AddMatrixExpression(
                      BraExpr(
                        PositiveStartExpr(
                          SingleTerm(
                            NumberConst(
                             1
                            ) [NumberConst]
                          ) [SingleTerm]
                        ) [PositiveStartExpr]
                      ) [BraExpr]
                      BraExpr(
                        PositiveStartExpr(
                          SingleTerm(
                            NumberConst(
                             2
                            ) [NumberConst]
                          ) [SingleTerm]
                        ) [PositiveStartExpr]
                      ) [BraExpr]
                    ) [AddMatrixExpression]
                  ) [Designator]
                  AssignOperation(
                  ) [AssignOperation]
                  PositiveStartExpr(
                    SingleTerm(
                      CharacterConst(
                       d
                      ) [CharacterConst]
                    ) [SingleTerm]
                  ) [PositiveStartExpr]
                ) [DesignatorExpr]
              ) [DesignatorStat]
            ) [Statements]
            DesignatorStat(
              DesignatorExpr(
                Designator(
                  WithoutNamespace(
                   mat
                  ) [WithoutNamespace]
                  AddMatrixExpression(
                    BraExpr(
                      PositiveStartExpr(
                        SingleTerm(
                          NumberConst(
                           1
                          ) [NumberConst]
                        ) [SingleTerm]
                      ) [PositiveStartExpr]
                    ) [BraExpr]
                    BraExpr(
                      PositiveStartExpr(
                        SingleTerm(
                          NumberConst(
                           1
                          ) [NumberConst]
                        ) [SingleTerm]
                      ) [PositiveStartExpr]
                    ) [BraExpr]
                  ) [AddMatrixExpression]
                ) [Designator]
                AssignOperation(
                ) [AssignOperation]
                PositiveStartExpr(
                  SingleTerm(
                    CharacterConst(
                     3
                    ) [CharacterConst]
                  ) [SingleTerm]
                ) [PositiveStartExpr]
              ) [DesignatorExpr]
            ) [DesignatorStat]
          ) [Statements]
          DesignatorStat(
            DesignatorExpr(
              Designator(
                WithoutNamespace(
                 mat
                ) [WithoutNamespace]
                AddMatrixExpression(
                  BraExpr(
                    PositiveStartExpr(
                      SingleTerm(
                        NumberConst(
                         1
                        ) [NumberConst]
                      ) [SingleTerm]
                    ) [PositiveStartExpr]
                  ) [BraExpr]
                  BraExpr(
                    PositiveStartExpr(
                      SingleTerm(
                        NumberConst(
                         0
                        ) [NumberConst]
                      ) [SingleTerm]
                    ) [PositiveStartExpr]
                  ) [BraExpr]
                ) [AddMatrixExpression]
              ) [Designator]
              AssignOperation(
              ) [AssignOperation]
              PositiveStartExpr(
                SingleTerm(
                  CharacterConst(
                   2
                  ) [CharacterConst]
                ) [SingleTerm]
              ) [PositiveStartExpr]
            ) [DesignatorExpr]
          ) [DesignatorStat]
        ) [Statements]
        PrintExpr(
          PositiveStartExpr(
            SingleTerm(
              DesignatorFact(
                Designator(
                  WithoutNamespace(
                   mat
                  ) [WithoutNamespace]
                  NoArrayExpression(
                  ) [NoArrayExpression]
                ) [Designator]
              ) [DesignatorFact]
            ) [SingleTerm]
          ) [PositiveStartExpr]
          NoNumConstOpt(
          ) [NoNumConstOpt]
        ) [PrintExpr]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  16:02:12,598 - ================ Semanticka obrada ===================
INFO  16:02:12,600 - NEW CONST
INFO  16:02:12,600 - Con nula: int, 0, 0 on line 5
INFO  16:02:12,600 - NEW CONST
INFO  16:02:12,600 - Con jedan: int, 1, 0 on line 6
INFO  16:02:12,600 - NEW CONST
INFO  16:02:12,600 - Con pet: int, 5, 0 on line 7
INFO  16:02:12,600 - NEW SYMBOL
INFO  16:02:12,600 - Var niz: Arr of int, 0, 0 on line 9
INFO  16:02:12,600 - NEW SYMBOL
INFO  16:02:12,600 - Var mat: Matrix of char, 1, 0 on line 10
INFO  16:02:12,600 - NEW SYMBOL
INFO  16:02:12,600 - Var mat2: Matrix of int, 2, 0 on line 11
INFO  16:02:12,600 - NEW SYMBOL
INFO  16:02:12,600 - Var a: int, 3, 0 on line 13
INFO  16:02:12,600 - Var mat: Matrix of char, 1, 0 on line 18
INFO  16:02:12,601 - Var mat: Matrix of char, 1, 0 on line 19
INFO  16:02:12,601 - Var mat: Matrix of char, 1, 0 on line 20
INFO  16:02:12,601 - Var mat: Matrix of char, 1, 0 on line 21
INFO  16:02:12,601 - Var mat: Matrix of char, 1, 0 on line 22
INFO  16:02:12,601 - Var mat: Matrix of char, 1, 0 on line 23
INFO  16:02:12,601 - Var mat: Matrix of char, 1, 0 on line 24
INFO  16:02:12,601 - Var mat: Matrix of char, 1, 0 on line 25
INFO  16:02:12,601 - Var mat: Matrix of char, 1, 0 on line 26
INFO  16:02:12,601 - Meth main: notype, 0, 0 on line 3
INFO  16:02:12,603 - Parser SUCCESS!
INFO  16:02:29,983 - Compiling source file: C:\Users\se200106\Desktop\wsp\MJCompilerAVGUST3.zip_expanded\MJCompiler\test\program.mj
INFO  16:02:29,983 - ================= LEKSICKA ANALIZA =================
INFO  16:02:29,999 - #2 program
INFO  16:02:29,999 - #47 test301
INFO  16:02:29,999 - #3 const
INFO  16:02:30,000 - #47 int
INFO  16:02:30,000 - #47 nula
INFO  16:02:30,000 - #24 =
INFO  16:02:30,000 - #46 0
INFO  16:02:30,000 - #27 ;
INFO  16:02:30,001 - #3 const
INFO  16:02:30,001 - #47 int
INFO  16:02:30,001 - #47 jedan
INFO  16:02:30,001 - #24 =
INFO  16:02:30,001 - #46 1
INFO  16:02:30,001 - #27 ;
INFO  16:02:30,001 - #3 const
INFO  16:02:30,001 - #47 int
INFO  16:02:30,001 - #47 pet
INFO  16:02:30,001 - #24 =
INFO  16:02:30,001 - #46 5
INFO  16:02:30,001 - #27 ;
INFO  16:02:30,001 - #47 int
INFO  16:02:30,001 - #47 niz
INFO  16:02:30,001 - #33 [
INFO  16:02:30,002 - #34 ]
INFO  16:02:30,002 - #27 ;
INFO  16:02:30,002 - #47 char
INFO  16:02:30,002 - #47 mat
INFO  16:02:30,002 - #33 [
INFO  16:02:30,002 - #34 ]
INFO  16:02:30,002 - #33 [
INFO  16:02:30,002 - #34 ]
INFO  16:02:30,002 - #27 ;
INFO  16:02:30,003 - #47 int
INFO  16:02:30,003 - #47 mat2
INFO  16:02:30,003 - #33 [
INFO  16:02:30,003 - #34 ]
INFO  16:02:30,003 - #33 [
INFO  16:02:30,003 - #34 ]
INFO  16:02:30,003 - #27 ;
INFO  16:02:30,003 - #47 int
INFO  16:02:30,003 - #47 a
INFO  16:02:30,003 - #27 ;
INFO  16:02:30,003 - #35 {
INFO  16:02:30,003 - #8 void
INFO  16:02:30,003 - #47 main
INFO  16:02:30,004 - #31 (
INFO  16:02:30,004 - #32 )
INFO  16:02:30,004 - #35 {
INFO  16:02:30,004 - #47 mat
INFO  16:02:30,005 - #24 =
INFO  16:02:30,005 - #4 new
INFO  16:02:30,005 - #47 char
INFO  16:02:30,006 - #33 [
INFO  16:02:30,006 - #46 2
INFO  16:02:30,006 - #34 ]
INFO  16:02:30,006 - #33 [
INFO  16:02:30,006 - #46 3
INFO  16:02:30,006 - #34 ]
INFO  16:02:30,006 - #27 ;
INFO  16:02:30,006 - #47 mat
INFO  16:02:30,006 - #33 [
INFO  16:02:30,006 - #46 0
INFO  16:02:30,006 - #34 ]
INFO  16:02:30,006 - #33 [
INFO  16:02:30,007 - #46 0
INFO  16:02:30,007 - #34 ]
INFO  16:02:30,007 - #24 =
INFO  16:02:30,007 - #48 a
INFO  16:02:30,007 - #27 ;
INFO  16:02:30,007 - #5 print
INFO  16:02:30,007 - #31 (
INFO  16:02:30,007 - #47 mat
INFO  16:02:30,007 - #33 [
INFO  16:02:30,007 - #46 0
INFO  16:02:30,007 - #34 ]
INFO  16:02:30,007 - #33 [
INFO  16:02:30,007 - #46 0
INFO  16:02:30,007 - #34 ]
INFO  16:02:30,007 - #32 )
INFO  16:02:30,008 - #27 ;
INFO  16:02:30,008 - #47 mat
INFO  16:02:30,008 - #33 [
INFO  16:02:30,008 - #46 0
INFO  16:02:30,008 - #34 ]
INFO  16:02:30,008 - #33 [
INFO  16:02:30,008 - #46 1
INFO  16:02:30,008 - #34 ]
INFO  16:02:30,008 - #24 =
INFO  16:02:30,008 - #48 b
INFO  16:02:30,008 - #27 ;
INFO  16:02:30,008 - #47 mat
INFO  16:02:30,008 - #33 [
INFO  16:02:30,008 - #46 0
INFO  16:02:30,008 - #34 ]
INFO  16:02:30,009 - #33 [
INFO  16:02:30,009 - #46 2
INFO  16:02:30,009 - #34 ]
INFO  16:02:30,009 - #24 =
INFO  16:02:30,009 - #48 c
INFO  16:02:30,009 - #27 ;
INFO  16:02:30,009 - #47 mat
INFO  16:02:30,009 - #33 [
INFO  16:02:30,009 - #46 1
INFO  16:02:30,009 - #34 ]
INFO  16:02:30,009 - #33 [
INFO  16:02:30,009 - #46 2
INFO  16:02:30,009 - #34 ]
INFO  16:02:30,009 - #24 =
INFO  16:02:30,009 - #48 d
INFO  16:02:30,009 - #27 ;
INFO  16:02:30,009 - #47 mat
INFO  16:02:30,009 - #33 [
INFO  16:02:30,009 - #46 1
INFO  16:02:30,009 - #34 ]
INFO  16:02:30,009 - #33 [
INFO  16:02:30,009 - #46 1
INFO  16:02:30,009 - #34 ]
INFO  16:02:30,009 - #24 =
INFO  16:02:30,009 - #48 3
INFO  16:02:30,009 - #27 ;
INFO  16:02:30,009 - #47 mat
INFO  16:02:30,009 - #33 [
INFO  16:02:30,009 - #46 1
INFO  16:02:30,010 - #34 ]
INFO  16:02:30,010 - #33 [
INFO  16:02:30,010 - #46 0
INFO  16:02:30,010 - #34 ]
INFO  16:02:30,010 - #24 =
INFO  16:02:30,010 - #48 2
INFO  16:02:30,010 - #27 ;
INFO  16:02:30,010 - #5 print
INFO  16:02:30,010 - #31 (
INFO  16:02:30,010 - #47 mat
INFO  16:02:30,010 - #32 )
INFO  16:02:30,010 - #27 ;
INFO  16:02:30,010 - #36 }
INFO  16:02:30,010 - #36 }
INFO  16:02:30,011 - ================= PARSIRANO STABLO =================
INFO  16:02:30,013 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  Declarations(
    Declarations(
      Declarations(
        Declarations(
          Declarations(
            Declarations(
              Declarations(
                NoDeclarations(
                ) [NoDeclarations]
                ConstantDeclaration(
                  ConDecl(
                    Type(
                     int
                    ) [Type]
                    ConstDef(
                     nula
                      NumConst(
                       0
                      ) [NumConst]
                    ) [ConstDef]
                    NoConstantDeclaration(
                    ) [NoConstantDeclaration]
                  ) [ConDecl]
                ) [ConstantDeclaration]
              ) [Declarations]
              ConstantDeclaration(
                ConDecl(
                  Type(
                   int
                  ) [Type]
                  ConstDef(
                   jedan
                    NumConst(
                     1
                    ) [NumConst]
                  ) [ConstDef]
                  NoConstantDeclaration(
                  ) [NoConstantDeclaration]
                ) [ConDecl]
              ) [ConstantDeclaration]
            ) [Declarations]
            ConstantDeclaration(
              ConDecl(
                Type(
                 int
                ) [Type]
                ConstDef(
                 pet
                  NumConst(
                   5
                  ) [NumConst]
                ) [ConstDef]
                NoConstantDeclaration(
                ) [NoConstantDeclaration]
              ) [ConDecl]
            ) [ConstantDeclaration]
          ) [Declarations]
          VariableDeclaration(
            VarDeclaration(
              Type(
               int
              ) [Type]
              OneVarDeclaration(
                AddVarDecl1(
                 niz
                  Brackets(
                  ) [Brackets]
                ) [AddVarDecl1]
              ) [OneVarDeclaration]
            ) [VarDeclaration]
          ) [VariableDeclaration]
        ) [Declarations]
        VariableDeclaration(
          VarDeclaration(
            Type(
             char
            ) [Type]
            OneVarDeclaration(
              AddVarDecl1(
               mat
                TwoBrackets(
                ) [TwoBrackets]
              ) [AddVarDecl1]
            ) [OneVarDeclaration]
          ) [VarDeclaration]
        ) [VariableDeclaration]
      ) [Declarations]
      VariableDeclaration(
        VarDeclaration(
          Type(
           int
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             mat2
              TwoBrackets(
              ) [TwoBrackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [VariableDeclaration]
    ) [Declarations]
    VariableDeclaration(
      VarDeclaration(
        Type(
         int
        ) [Type]
        OneVarDeclaration(
          AddVarDecl1(
           a
            NoBrackets(
            ) [NoBrackets]
          ) [AddVarDecl1]
        ) [OneVarDeclaration]
      ) [VarDeclaration]
    ) [VariableDeclaration]
  ) [Declarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      NoVarDeclarations(
      ) [NoVarDeclarations]
      Statements(
        Statements(
          Statements(
            Statements(
              Statements(
                Statements(
                  Statements(
                    Statements(
                      Statements(
                        NoStatements(
                        ) [NoStatements]
                        DesignatorStat(
                          DesignatorExpr(
                            Designator(
                              WithoutNamespace(
                               mat
                              ) [WithoutNamespace]
                              NoArrayExpression(
                              ) [NoArrayExpression]
                            ) [Designator]
                            AssignOperation(
                            ) [AssignOperation]
                            PositiveStartExpr(
                              SingleTerm(
                                NewTypeMat(
                                  Type(
                                   char
                                  ) [Type]
                                  PositiveStartExpr(
                                    SingleTerm(
                                      NumberConst(
                                       2
                                      ) [NumberConst]
                                    ) [SingleTerm]
                                  ) [PositiveStartExpr]
                                  PositiveStartExpr(
                                    SingleTerm(
                                      NumberConst(
                                       3
                                      ) [NumberConst]
                                    ) [SingleTerm]
                                  ) [PositiveStartExpr]
                                ) [NewTypeMat]
                              ) [SingleTerm]
                            ) [PositiveStartExpr]
                          ) [DesignatorExpr]
                        ) [DesignatorStat]
                      ) [Statements]
                      DesignatorStat(
                        DesignatorExpr(
                          Designator(
                            WithoutNamespace(
                             mat
                            ) [WithoutNamespace]
                            AddMatrixExpression(
                              BraExpr(
                                PositiveStartExpr(
                                  SingleTerm(
                                    NumberConst(
                                     0
                                    ) [NumberConst]
                                  ) [SingleTerm]
                                ) [PositiveStartExpr]
                              ) [BraExpr]
                              BraExpr(
                                PositiveStartExpr(
                                  SingleTerm(
                                    NumberConst(
                                     0
                                    ) [NumberConst]
                                  ) [SingleTerm]
                                ) [PositiveStartExpr]
                              ) [BraExpr]
                            ) [AddMatrixExpression]
                          ) [Designator]
                          AssignOperation(
                          ) [AssignOperation]
                          PositiveStartExpr(
                            SingleTerm(
                              CharacterConst(
                               a
                              ) [CharacterConst]
                            ) [SingleTerm]
                          ) [PositiveStartExpr]
                        ) [DesignatorExpr]
                      ) [DesignatorStat]
                    ) [Statements]
                    PrintExpr(
                      PositiveStartExpr(
                        SingleTerm(
                          DesignatorFact(
                            Designator(
                              WithoutNamespace(
                               mat
                              ) [WithoutNamespace]
                              AddMatrixExpression(
                                BraExpr(
                                  PositiveStartExpr(
                                    SingleTerm(
                                      NumberConst(
                                       0
                                      ) [NumberConst]
                                    ) [SingleTerm]
                                  ) [PositiveStartExpr]
                                ) [BraExpr]
                                BraExpr(
                                  PositiveStartExpr(
                                    SingleTerm(
                                      NumberConst(
                                       0
                                      ) [NumberConst]
                                    ) [SingleTerm]
                                  ) [PositiveStartExpr]
                                ) [BraExpr]
                              ) [AddMatrixExpression]
                            ) [Designator]
                          ) [DesignatorFact]
                        ) [SingleTerm]
                      ) [PositiveStartExpr]
                      NoNumConstOpt(
                      ) [NoNumConstOpt]
                    ) [PrintExpr]
                  ) [Statements]
                  DesignatorStat(
                    DesignatorExpr(
                      Designator(
                        WithoutNamespace(
                         mat
                        ) [WithoutNamespace]
                        AddMatrixExpression(
                          BraExpr(
                            PositiveStartExpr(
                              SingleTerm(
                                NumberConst(
                                 0
                                ) [NumberConst]
                              ) [SingleTerm]
                            ) [PositiveStartExpr]
                          ) [BraExpr]
                          BraExpr(
                            PositiveStartExpr(
                              SingleTerm(
                                NumberConst(
                                 1
                                ) [NumberConst]
                              ) [SingleTerm]
                            ) [PositiveStartExpr]
                          ) [BraExpr]
                        ) [AddMatrixExpression]
                      ) [Designator]
                      AssignOperation(
                      ) [AssignOperation]
                      PositiveStartExpr(
                        SingleTerm(
                          CharacterConst(
                           b
                          ) [CharacterConst]
                        ) [SingleTerm]
                      ) [PositiveStartExpr]
                    ) [DesignatorExpr]
                  ) [DesignatorStat]
                ) [Statements]
                DesignatorStat(
                  DesignatorExpr(
                    Designator(
                      WithoutNamespace(
                       mat
                      ) [WithoutNamespace]
                      AddMatrixExpression(
                        BraExpr(
                          PositiveStartExpr(
                            SingleTerm(
                              NumberConst(
                               0
                              ) [NumberConst]
                            ) [SingleTerm]
                          ) [PositiveStartExpr]
                        ) [BraExpr]
                        BraExpr(
                          PositiveStartExpr(
                            SingleTerm(
                              NumberConst(
                               2
                              ) [NumberConst]
                            ) [SingleTerm]
                          ) [PositiveStartExpr]
                        ) [BraExpr]
                      ) [AddMatrixExpression]
                    ) [Designator]
                    AssignOperation(
                    ) [AssignOperation]
                    PositiveStartExpr(
                      SingleTerm(
                        CharacterConst(
                         c
                        ) [CharacterConst]
                      ) [SingleTerm]
                    ) [PositiveStartExpr]
                  ) [DesignatorExpr]
                ) [DesignatorStat]
              ) [Statements]
              DesignatorStat(
                DesignatorExpr(
                  Designator(
                    WithoutNamespace(
                     mat
                    ) [WithoutNamespace]
                    AddMatrixExpression(
                      BraExpr(
                        PositiveStartExpr(
                          SingleTerm(
                            NumberConst(
                             1
                            ) [NumberConst]
                          ) [SingleTerm]
                        ) [PositiveStartExpr]
                      ) [BraExpr]
                      BraExpr(
                        PositiveStartExpr(
                          SingleTerm(
                            NumberConst(
                             2
                            ) [NumberConst]
                          ) [SingleTerm]
                        ) [PositiveStartExpr]
                      ) [BraExpr]
                    ) [AddMatrixExpression]
                  ) [Designator]
                  AssignOperation(
                  ) [AssignOperation]
                  PositiveStartExpr(
                    SingleTerm(
                      CharacterConst(
                       d
                      ) [CharacterConst]
                    ) [SingleTerm]
                  ) [PositiveStartExpr]
                ) [DesignatorExpr]
              ) [DesignatorStat]
            ) [Statements]
            DesignatorStat(
              DesignatorExpr(
                Designator(
                  WithoutNamespace(
                   mat
                  ) [WithoutNamespace]
                  AddMatrixExpression(
                    BraExpr(
                      PositiveStartExpr(
                        SingleTerm(
                          NumberConst(
                           1
                          ) [NumberConst]
                        ) [SingleTerm]
                      ) [PositiveStartExpr]
                    ) [BraExpr]
                    BraExpr(
                      PositiveStartExpr(
                        SingleTerm(
                          NumberConst(
                           1
                          ) [NumberConst]
                        ) [SingleTerm]
                      ) [PositiveStartExpr]
                    ) [BraExpr]
                  ) [AddMatrixExpression]
                ) [Designator]
                AssignOperation(
                ) [AssignOperation]
                PositiveStartExpr(
                  SingleTerm(
                    CharacterConst(
                     3
                    ) [CharacterConst]
                  ) [SingleTerm]
                ) [PositiveStartExpr]
              ) [DesignatorExpr]
            ) [DesignatorStat]
          ) [Statements]
          DesignatorStat(
            DesignatorExpr(
              Designator(
                WithoutNamespace(
                 mat
                ) [WithoutNamespace]
                AddMatrixExpression(
                  BraExpr(
                    PositiveStartExpr(
                      SingleTerm(
                        NumberConst(
                         1
                        ) [NumberConst]
                      ) [SingleTerm]
                    ) [PositiveStartExpr]
                  ) [BraExpr]
                  BraExpr(
                    PositiveStartExpr(
                      SingleTerm(
                        NumberConst(
                         0
                        ) [NumberConst]
                      ) [SingleTerm]
                    ) [PositiveStartExpr]
                  ) [BraExpr]
                ) [AddMatrixExpression]
              ) [Designator]
              AssignOperation(
              ) [AssignOperation]
              PositiveStartExpr(
                SingleTerm(
                  CharacterConst(
                   2
                  ) [CharacterConst]
                ) [SingleTerm]
              ) [PositiveStartExpr]
            ) [DesignatorExpr]
          ) [DesignatorStat]
        ) [Statements]
        PrintExpr(
          PositiveStartExpr(
            SingleTerm(
              DesignatorFact(
                Designator(
                  WithoutNamespace(
                   mat
                  ) [WithoutNamespace]
                  NoArrayExpression(
                  ) [NoArrayExpression]
                ) [Designator]
              ) [DesignatorFact]
            ) [SingleTerm]
          ) [PositiveStartExpr]
          NoNumConstOpt(
          ) [NoNumConstOpt]
        ) [PrintExpr]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  16:02:30,014 - ================ Semanticka obrada ===================
INFO  16:02:30,015 - NEW CONST
INFO  16:02:30,016 - Con nula: int, 0, 0 on line 5
INFO  16:02:30,016 - NEW CONST
INFO  16:02:30,016 - Con jedan: int, 1, 0 on line 6
INFO  16:02:30,016 - NEW CONST
INFO  16:02:30,016 - Con pet: int, 5, 0 on line 7
INFO  16:02:30,016 - NEW SYMBOL
INFO  16:02:30,016 - Var niz: Arr of int, 0, 0 on line 9
INFO  16:02:30,016 - NEW SYMBOL
INFO  16:02:30,016 - Var mat: Matrix of char, 1, 0 on line 10
INFO  16:02:30,016 - NEW SYMBOL
INFO  16:02:30,016 - Var mat2: Matrix of int, 2, 0 on line 11
INFO  16:02:30,016 - NEW SYMBOL
INFO  16:02:30,016 - Var a: int, 3, 0 on line 13
INFO  16:02:30,016 - Var mat: Matrix of char, 1, 0 on line 18
INFO  16:02:30,016 - Var mat: Matrix of char, 1, 0 on line 19
INFO  16:02:30,016 - Var mat: Matrix of char, 1, 0 on line 20
INFO  16:02:30,016 - Var mat: Matrix of char, 1, 0 on line 21
INFO  16:02:30,016 - Var mat: Matrix of char, 1, 0 on line 22
INFO  16:02:30,016 - Var mat: Matrix of char, 1, 0 on line 23
INFO  16:02:30,016 - Var mat: Matrix of char, 1, 0 on line 24
INFO  16:02:30,016 - Var mat: Matrix of char, 1, 0 on line 25
INFO  16:02:30,016 - Var mat: Matrix of char, 1, 0 on line 26
INFO  16:02:30,016 - Meth main: notype, 0, 0 on line 3
INFO  16:02:30,018 - Parser SUCCESS!
INFO  16:06:19,216 - Compiling source file: C:\Users\se200106\Desktop\wsp\MJCompilerAVGUST3.zip_expanded\MJCompiler\test\program.mj
INFO  16:06:19,216 - ================= LEKSICKA ANALIZA =================
INFO  16:06:19,234 - #2 program
INFO  16:06:19,234 - #47 test301
INFO  16:06:19,234 - #3 const
INFO  16:06:19,234 - #47 int
INFO  16:06:19,234 - #47 nula
INFO  16:06:19,234 - #24 =
INFO  16:06:19,234 - #46 0
INFO  16:06:19,234 - #27 ;
INFO  16:06:19,235 - #3 const
INFO  16:06:19,235 - #47 int
INFO  16:06:19,235 - #47 jedan
INFO  16:06:19,235 - #24 =
INFO  16:06:19,235 - #46 1
INFO  16:06:19,235 - #27 ;
INFO  16:06:19,235 - #3 const
INFO  16:06:19,235 - #47 int
INFO  16:06:19,235 - #47 pet
INFO  16:06:19,235 - #24 =
INFO  16:06:19,235 - #46 5
INFO  16:06:19,235 - #27 ;
INFO  16:06:19,235 - #47 int
INFO  16:06:19,235 - #47 niz
INFO  16:06:19,235 - #33 [
INFO  16:06:19,235 - #34 ]
INFO  16:06:19,235 - #27 ;
INFO  16:06:19,236 - #47 char
INFO  16:06:19,236 - #47 nizch
INFO  16:06:19,236 - #33 [
INFO  16:06:19,236 - #34 ]
INFO  16:06:19,236 - #27 ;
INFO  16:06:19,236 - #47 int
INFO  16:06:19,236 - #47 mat
INFO  16:06:19,236 - #33 [
INFO  16:06:19,236 - #34 ]
INFO  16:06:19,236 - #33 [
INFO  16:06:19,236 - #34 ]
INFO  16:06:19,236 - #27 ;
INFO  16:06:19,237 - #47 int
INFO  16:06:19,237 - #47 a
INFO  16:06:19,237 - #27 ;
INFO  16:06:19,237 - #35 {
INFO  16:06:19,237 - #8 void
INFO  16:06:19,237 - #47 main
INFO  16:06:19,238 - #31 (
INFO  16:06:19,238 - #32 )
INFO  16:06:19,238 - #47 int
INFO  16:06:19,238 - #47 bodovi
INFO  16:06:19,238 - #27 ;
INFO  16:06:19,238 - #47 bool
INFO  16:06:19,239 - #47 bt
INFO  16:06:19,239 - #27 ;
INFO  16:06:19,239 - #35 {
INFO  16:06:19,239 - #47 bodovi
INFO  16:06:19,239 - #24 =
INFO  16:06:19,239 - #46 0
INFO  16:06:19,240 - #27 ;
INFO  16:06:19,240 - #47 bodovi
INFO  16:06:19,240 - #25 ++
INFO  16:06:19,240 - #27 ;
INFO  16:06:19,240 - #47 bodovi
INFO  16:06:19,240 - #24 =
INFO  16:06:19,240 - #47 bodovi
INFO  16:06:19,240 - #11 +
INFO  16:06:19,240 - #47 jedan
INFO  16:06:19,241 - #27 ;
INFO  16:06:19,241 - #47 bodovi
INFO  16:06:19,241 - #24 =
INFO  16:06:19,241 - #47 bodovi
INFO  16:06:19,241 - #13 *
INFO  16:06:19,241 - #47 pet
INFO  16:06:19,241 - #27 ;
INFO  16:06:19,241 - #47 bodovi
INFO  16:06:19,242 - #26 --
INFO  16:06:19,242 - #27 ;
INFO  16:06:19,242 - #5 print
INFO  16:06:19,242 - #31 (
INFO  16:06:19,242 - #47 bodovi
INFO  16:06:19,242 - #32 )
INFO  16:06:19,242 - #27 ;
INFO  16:06:19,242 - #47 niz
INFO  16:06:19,242 - #24 =
INFO  16:06:19,242 - #4 new
INFO  16:06:19,242 - #47 int
INFO  16:06:19,242 - #33 [
INFO  16:06:19,242 - #46 3
INFO  16:06:19,242 - #34 ]
INFO  16:06:19,242 - #27 ;
INFO  16:06:19,242 - #47 niz
INFO  16:06:19,242 - #33 [
INFO  16:06:19,242 - #47 nula
INFO  16:06:19,242 - #34 ]
INFO  16:06:19,243 - #24 =
INFO  16:06:19,243 - #47 jedan
INFO  16:06:19,243 - #27 ;
INFO  16:06:19,243 - #47 niz
INFO  16:06:19,243 - #33 [
INFO  16:06:19,243 - #46 1
INFO  16:06:19,243 - #34 ]
INFO  16:06:19,243 - #24 =
INFO  16:06:19,243 - #46 2
INFO  16:06:19,243 - #27 ;
INFO  16:06:19,243 - #47 niz
INFO  16:06:19,243 - #33 [
INFO  16:06:19,243 - #47 niz
INFO  16:06:19,243 - #33 [
INFO  16:06:19,243 - #47 jedan
INFO  16:06:19,243 - #34 ]
INFO  16:06:19,243 - #34 ]
INFO  16:06:19,243 - #24 =
INFO  16:06:19,243 - #47 niz
INFO  16:06:19,243 - #33 [
INFO  16:06:19,243 - #47 niz
INFO  16:06:19,243 - #33 [
INFO  16:06:19,243 - #46 0
INFO  16:06:19,243 - #34 ]
INFO  16:06:19,244 - #34 ]
INFO  16:06:19,244 - #13 *
INFO  16:06:19,244 - #46 3
INFO  16:06:19,244 - #27 ;
INFO  16:06:19,244 - #47 bodovi
INFO  16:06:19,244 - #24 =
INFO  16:06:19,244 - #47 niz
INFO  16:06:19,244 - #33 [
INFO  16:06:19,244 - #46 2
INFO  16:06:19,244 - #34 ]
INFO  16:06:19,244 - #14 /
INFO  16:06:19,244 - #47 niz
INFO  16:06:19,244 - #33 [
INFO  16:06:19,244 - #46 0
INFO  16:06:19,244 - #34 ]
INFO  16:06:19,244 - #27 ;
INFO  16:06:19,244 - #5 print
INFO  16:06:19,244 - #31 (
INFO  16:06:19,244 - #47 bodovi
INFO  16:06:19,244 - #32 )
INFO  16:06:19,244 - #27 ;
INFO  16:06:19,244 - #5 print
INFO  16:06:19,245 - #31 (
INFO  16:06:19,245 - #47 niz
INFO  16:06:19,245 - #33 [
INFO  16:06:19,245 - #46 2
INFO  16:06:19,245 - #34 ]
INFO  16:06:19,245 - #32 )
INFO  16:06:19,245 - #27 ;
INFO  16:06:19,245 - #47 nizch
INFO  16:06:19,245 - #24 =
INFO  16:06:19,245 - #4 new
INFO  16:06:19,245 - #47 char
INFO  16:06:19,245 - #33 [
INFO  16:06:19,245 - #46 3
INFO  16:06:19,245 - #34 ]
INFO  16:06:19,245 - #27 ;
INFO  16:06:19,245 - #47 nizch
INFO  16:06:19,245 - #33 [
INFO  16:06:19,245 - #46 0
INFO  16:06:19,245 - #34 ]
INFO  16:06:19,245 - #24 =
INFO  16:06:19,245 - #48 a
INFO  16:06:19,245 - #27 ;
INFO  16:06:19,245 - #47 nizch
INFO  16:06:19,245 - #33 [
INFO  16:06:19,245 - #47 jedan
INFO  16:06:19,245 - #34 ]
INFO  16:06:19,245 - #24 =
INFO  16:06:19,245 - #48 b
INFO  16:06:19,245 - #27 ;
INFO  16:06:19,245 - #47 nizch
INFO  16:06:19,246 - #33 [
INFO  16:06:19,246 - #47 pet
INFO  16:06:19,246 - #12 -
INFO  16:06:19,246 - #46 3
INFO  16:06:19,246 - #34 ]
INFO  16:06:19,246 - #24 =
INFO  16:06:19,246 - #48 c
INFO  16:06:19,246 - #27 ;
INFO  16:06:19,246 - #5 print
INFO  16:06:19,246 - #31 (
INFO  16:06:19,246 - #47 nizch
INFO  16:06:19,246 - #33 [
INFO  16:06:19,246 - #46 1
INFO  16:06:19,246 - #34 ]
INFO  16:06:19,246 - #32 )
INFO  16:06:19,246 - #27 ;
INFO  16:06:19,246 - #5 print
INFO  16:06:19,246 - #31 (
INFO  16:06:19,246 - #47 nizch
INFO  16:06:19,246 - #33 [
INFO  16:06:19,246 - #47 jedan
INFO  16:06:19,246 - #13 *
INFO  16:06:19,246 - #46 2
INFO  16:06:19,247 - #34 ]
INFO  16:06:19,247 - #32 )
INFO  16:06:19,247 - #27 ;
INFO  16:06:19,247 - #47 a
INFO  16:06:19,247 - #24 =
INFO  16:06:19,247 - #46 1
INFO  16:06:19,247 - #27 ;
INFO  16:06:19,247 - #6 read
INFO  16:06:19,247 - #31 (
INFO  16:06:19,247 - #47 bodovi
INFO  16:06:19,247 - #32 )
INFO  16:06:19,247 - #27 ;
INFO  16:06:19,247 - #47 bodovi
INFO  16:06:19,247 - #24 =
INFO  16:06:19,247 - #12 -
INFO  16:06:19,247 - #47 bodovi
INFO  16:06:19,247 - #11 +
INFO  16:06:19,247 - #31 (
INFO  16:06:19,247 - #47 pet
INFO  16:06:19,247 - #13 *
INFO  16:06:19,247 - #47 a
INFO  16:06:19,247 - #14 /
INFO  16:06:19,247 - #46 2
INFO  16:06:19,247 - #12 -
INFO  16:06:19,247 - #47 jedan
INFO  16:06:19,247 - #32 )
INFO  16:06:19,247 - #13 *
INFO  16:06:19,247 - #47 bodovi
INFO  16:06:19,247 - #12 -
INFO  16:06:19,248 - #31 (
INFO  16:06:19,248 - #46 3
INFO  16:06:19,248 - #15 %
INFO  16:06:19,248 - #46 2
INFO  16:06:19,248 - #11 +
INFO  16:06:19,248 - #46 3
INFO  16:06:19,248 - #13 *
INFO  16:06:19,248 - #46 2
INFO  16:06:19,248 - #12 -
INFO  16:06:19,248 - #46 3
INFO  16:06:19,248 - #32 )
INFO  16:06:19,248 - #27 ;
INFO  16:06:19,248 - #5 print
INFO  16:06:19,248 - #31 (
INFO  16:06:19,248 - #47 bodovi
INFO  16:06:19,248 - #32 )
INFO  16:06:19,249 - #27 ;
INFO  16:06:19,249 - #47 mat
INFO  16:06:19,249 - #24 =
INFO  16:06:19,249 - #4 new
INFO  16:06:19,249 - #47 int
INFO  16:06:19,249 - #33 [
INFO  16:06:19,249 - #46 2
INFO  16:06:19,249 - #34 ]
INFO  16:06:19,249 - #33 [
INFO  16:06:19,249 - #46 3
INFO  16:06:19,249 - #34 ]
INFO  16:06:19,249 - #27 ;
INFO  16:06:19,249 - #47 mat
INFO  16:06:19,249 - #33 [
INFO  16:06:19,249 - #47 nula
INFO  16:06:19,249 - #34 ]
INFO  16:06:19,249 - #33 [
INFO  16:06:19,249 - #47 jedan
INFO  16:06:19,249 - #12 -
INFO  16:06:19,249 - #46 1
INFO  16:06:19,249 - #34 ]
INFO  16:06:19,249 - #24 =
INFO  16:06:19,249 - #47 jedan
INFO  16:06:19,249 - #27 ;
INFO  16:06:19,249 - #47 mat
INFO  16:06:19,249 - #33 [
INFO  16:06:19,249 - #46 0
INFO  16:06:19,249 - #34 ]
INFO  16:06:19,249 - #33 [
INFO  16:06:19,249 - #47 mat
INFO  16:06:19,249 - #33 [
INFO  16:06:19,249 - #46 0
INFO  16:06:19,249 - #34 ]
INFO  16:06:19,250 - #33 [
INFO  16:06:19,250 - #46 0
INFO  16:06:19,250 - #34 ]
INFO  16:06:19,250 - #34 ]
INFO  16:06:19,250 - #24 =
INFO  16:06:19,250 - #46 2
INFO  16:06:19,250 - #27 ;
INFO  16:06:19,250 - #47 mat
INFO  16:06:19,250 - #33 [
INFO  16:06:19,250 - #46 0
INFO  16:06:19,250 - #34 ]
INFO  16:06:19,250 - #33 [
INFO  16:06:19,250 - #47 mat
INFO  16:06:19,250 - #33 [
INFO  16:06:19,250 - #46 0
INFO  16:06:19,250 - #34 ]
INFO  16:06:19,250 - #33 [
INFO  16:06:19,250 - #46 1
INFO  16:06:19,250 - #34 ]
INFO  16:06:19,250 - #34 ]
INFO  16:06:19,250 - #24 =
INFO  16:06:19,250 - #46 5
INFO  16:06:19,250 - #27 ;
INFO  16:06:19,250 - #47 mat
INFO  16:06:19,250 - #33 [
INFO  16:06:19,250 - #46 1
INFO  16:06:19,250 - #34 ]
INFO  16:06:19,250 - #33 [
INFO  16:06:19,250 - #47 mat
INFO  16:06:19,250 - #33 [
INFO  16:06:19,250 - #46 0
INFO  16:06:19,250 - #34 ]
INFO  16:06:19,250 - #33 [
INFO  16:06:19,250 - #46 0
INFO  16:06:19,250 - #34 ]
INFO  16:06:19,250 - #13 *
INFO  16:06:19,250 - #46 2
INFO  16:06:19,250 - #34 ]
INFO  16:06:19,250 - #24 =
INFO  16:06:19,250 - #46 4
INFO  16:06:19,250 - #27 ;
INFO  16:06:19,250 - #47 mat
INFO  16:06:19,250 - #33 [
INFO  16:06:19,251 - #47 mat
INFO  16:06:19,251 - #33 [
INFO  16:06:19,251 - #46 0
INFO  16:06:19,251 - #34 ]
INFO  16:06:19,251 - #33 [
INFO  16:06:19,251 - #46 0
INFO  16:06:19,251 - #34 ]
INFO  16:06:19,251 - #34 ]
INFO  16:06:19,251 - #33 [
INFO  16:06:19,251 - #46 1
INFO  16:06:19,251 - #34 ]
INFO  16:06:19,251 - #24 =
INFO  16:06:19,251 - #46 3
INFO  16:06:19,251 - #27 ;
INFO  16:06:19,251 - #47 mat
INFO  16:06:19,251 - #33 [
INFO  16:06:19,251 - #46 1
INFO  16:06:19,251 - #34 ]
INFO  16:06:19,251 - #33 [
INFO  16:06:19,251 - #46 0
INFO  16:06:19,251 - #34 ]
INFO  16:06:19,251 - #24 =
INFO  16:06:19,251 - #46 2
INFO  16:06:19,251 - #27 ;
INFO  16:06:19,251 - #5 print
INFO  16:06:19,251 - #31 (
INFO  16:06:19,251 - #47 mat
INFO  16:06:19,251 - #33 [
INFO  16:06:19,251 - #46 1
INFO  16:06:19,251 - #34 ]
INFO  16:06:19,251 - #33 [
INFO  16:06:19,251 - #46 2
INFO  16:06:19,251 - #34 ]
INFO  16:06:19,251 - #32 )
INFO  16:06:19,251 - #27 ;
INFO  16:06:19,251 - #5 print
INFO  16:06:19,251 - #31 (
INFO  16:06:19,251 - #47 mat
INFO  16:06:19,251 - #33 [
INFO  16:06:19,251 - #46 0
INFO  16:06:19,251 - #34 ]
INFO  16:06:19,251 - #33 [
INFO  16:06:19,251 - #46 2
INFO  16:06:19,251 - #34 ]
INFO  16:06:19,251 - #32 )
INFO  16:06:19,251 - #27 ;
INFO  16:06:19,251 - #36 }
INFO  16:06:19,251 - #36 }
INFO  16:06:19,252 - ================= PARSIRANO STABLO =================
INFO  16:06:19,257 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  Declarations(
    Declarations(
      Declarations(
        Declarations(
          Declarations(
            Declarations(
              Declarations(
                NoDeclarations(
                ) [NoDeclarations]
                ConstantDeclaration(
                  ConDecl(
                    Type(
                     int
                    ) [Type]
                    ConstDef(
                     nula
                      NumConst(
                       0
                      ) [NumConst]
                    ) [ConstDef]
                    NoConstantDeclaration(
                    ) [NoConstantDeclaration]
                  ) [ConDecl]
                ) [ConstantDeclaration]
              ) [Declarations]
              ConstantDeclaration(
                ConDecl(
                  Type(
                   int
                  ) [Type]
                  ConstDef(
                   jedan
                    NumConst(
                     1
                    ) [NumConst]
                  ) [ConstDef]
                  NoConstantDeclaration(
                  ) [NoConstantDeclaration]
                ) [ConDecl]
              ) [ConstantDeclaration]
            ) [Declarations]
            ConstantDeclaration(
              ConDecl(
                Type(
                 int
                ) [Type]
                ConstDef(
                 pet
                  NumConst(
                   5
                  ) [NumConst]
                ) [ConstDef]
                NoConstantDeclaration(
                ) [NoConstantDeclaration]
              ) [ConDecl]
            ) [ConstantDeclaration]
          ) [Declarations]
          VariableDeclaration(
            VarDeclaration(
              Type(
               int
              ) [Type]
              OneVarDeclaration(
                AddVarDecl1(
                 niz
                  Brackets(
                  ) [Brackets]
                ) [AddVarDecl1]
              ) [OneVarDeclaration]
            ) [VarDeclaration]
          ) [VariableDeclaration]
        ) [Declarations]
        VariableDeclaration(
          VarDeclaration(
            Type(
             char
            ) [Type]
            OneVarDeclaration(
              AddVarDecl1(
               nizch
                Brackets(
                ) [Brackets]
              ) [AddVarDecl1]
            ) [OneVarDeclaration]
          ) [VarDeclaration]
        ) [VariableDeclaration]
      ) [Declarations]
      VariableDeclaration(
        VarDeclaration(
          Type(
           int
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             mat
              TwoBrackets(
              ) [TwoBrackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [VariableDeclaration]
    ) [Declarations]
    VariableDeclaration(
      VarDeclaration(
        Type(
         int
        ) [Type]
        OneVarDeclaration(
          AddVarDecl1(
           a
            NoBrackets(
            ) [NoBrackets]
          ) [AddVarDecl1]
        ) [OneVarDeclaration]
      ) [VarDeclaration]
    ) [VariableDeclaration]
  ) [Declarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      ListOfVarDecl(
        ListOfVarDecl(
          NoVarDeclarations(
          ) [NoVarDeclarations]
          VarDeclaration(
            Type(
             int
            ) [Type]
            OneVarDeclaration(
              AddVarDecl1(
               bodovi
                NoBrackets(
                ) [NoBrackets]
              ) [AddVarDecl1]
            ) [OneVarDeclaration]
          ) [VarDeclaration]
        ) [ListOfVarDecl]
        VarDeclaration(
          Type(
           bool
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             bt
              NoBrackets(
              ) [NoBrackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [ListOfVarDecl]
      Statements(
        Statements(
          Statements(
            Statements(
              Statements(
                Statements(
                  Statements(
                    Statements(
                      Statements(
                        Statements(
                          Statements(
                            Statements(
                              Statements(
                                Statements(
                                  Statements(
                                    Statements(
                                      Statements(
                                        Statements(
                                          Statements(
                                            Statements(
                                              Statements(
                                                Statements(
                                                  Statements(
                                                    Statements(
                                                      Statements(
                                                        Statements(
                                                          Statements(
                                                            Statements(
                                                              Statements(
                                                                Statements(
                                                                  Statements(
                                                                    Statements(
                                                                      NoStatements(
                                                                      ) [NoStatements]
                                                                      DesignatorStat(
                                                                        DesignatorExpr(
                                                                          Designator(
                                                                            WithoutNamespace(
                                                                             bodovi
                                                                            ) [WithoutNamespace]
                                                                            NoArrayExpression(
                                                                            ) [NoArrayExpression]
                                                                          ) [Designator]
                                                                          AssignOperation(
                                                                          ) [AssignOperation]
                                                                          PositiveStartExpr(
                                                                            SingleTerm(
                                                                              NumberConst(
                                                                               0
                                                                              ) [NumberConst]
                                                                            ) [SingleTerm]
                                                                          ) [PositiveStartExpr]
                                                                        ) [DesignatorExpr]
                                                                      ) [DesignatorStat]
                                                                    ) [Statements]
                                                                    DesignatorStat(
                                                                      DesignatorPP(
                                                                        Designator(
                                                                          WithoutNamespace(
                                                                           bodovi
                                                                          ) [WithoutNamespace]
                                                                          NoArrayExpression(
                                                                          ) [NoArrayExpression]
                                                                        ) [Designator]
                                                                      ) [DesignatorPP]
                                                                    ) [DesignatorStat]
                                                                  ) [Statements]
                                                                  DesignatorStat(
                                                                    DesignatorExpr(
                                                                      Designator(
                                                                        WithoutNamespace(
                                                                         bodovi
                                                                        ) [WithoutNamespace]
                                                                        NoArrayExpression(
                                                                        ) [NoArrayExpression]
                                                                      ) [Designator]
                                                                      AssignOperation(
                                                                      ) [AssignOperation]
                                                                      AddExpression(
                                                                        PositiveStartExpr(
                                                                          SingleTerm(
                                                                            DesignatorFact(
                                                                              Designator(
                                                                                WithoutNamespace(
                                                                                 bodovi
                                                                                ) [WithoutNamespace]
                                                                                NoArrayExpression(
                                                                                ) [NoArrayExpression]
                                                                              ) [Designator]
                                                                            ) [DesignatorFact]
                                                                          ) [SingleTerm]
                                                                        ) [PositiveStartExpr]
                                                                        Plus(
                                                                        ) [Plus]
                                                                        SingleTerm(
                                                                          DesignatorFact(
                                                                            Designator(
                                                                              WithoutNamespace(
                                                                               jedan
                                                                              ) [WithoutNamespace]
                                                                              NoArrayExpression(
                                                                              ) [NoArrayExpression]
                                                                            ) [Designator]
                                                                          ) [DesignatorFact]
                                                                        ) [SingleTerm]
                                                                      ) [AddExpression]
                                                                    ) [DesignatorExpr]
                                                                  ) [DesignatorStat]
                                                                ) [Statements]
                                                                DesignatorStat(
                                                                  DesignatorExpr(
                                                                    Designator(
                                                                      WithoutNamespace(
                                                                       bodovi
                                                                      ) [WithoutNamespace]
                                                                      NoArrayExpression(
                                                                      ) [NoArrayExpression]
                                                                    ) [Designator]
                                                                    AssignOperation(
                                                                    ) [AssignOperation]
                                                                    PositiveStartExpr(
                                                                      MultipleTerms(
                                                                        SingleTerm(
                                                                          DesignatorFact(
                                                                            Designator(
                                                                              WithoutNamespace(
                                                                               bodovi
                                                                              ) [WithoutNamespace]
                                                                              NoArrayExpression(
                                                                              ) [NoArrayExpression]
                                                                            ) [Designator]
                                                                          ) [DesignatorFact]
                                                                        ) [SingleTerm]
                                                                        Multiply(
                                                                        ) [Multiply]
                                                                        DesignatorFact(
                                                                          Designator(
                                                                            WithoutNamespace(
                                                                             pet
                                                                            ) [WithoutNamespace]
                                                                            NoArrayExpression(
                                                                            ) [NoArrayExpression]
                                                                          ) [Designator]
                                                                        ) [DesignatorFact]
                                                                      ) [MultipleTerms]
                                                                    ) [PositiveStartExpr]
                                                                  ) [DesignatorExpr]
                                                                ) [DesignatorStat]
                                                              ) [Statements]
                                                              DesignatorStat(
                                                                DesignatorMM(
                                                                  Designator(
                                                                    WithoutNamespace(
                                                                     bodovi
                                                                    ) [WithoutNamespace]
                                                                    NoArrayExpression(
                                                                    ) [NoArrayExpression]
                                                                  ) [Designator]
                                                                ) [DesignatorMM]
                                                              ) [DesignatorStat]
                                                            ) [Statements]
                                                            PrintExpr(
                                                              PositiveStartExpr(
                                                                SingleTerm(
                                                                  DesignatorFact(
                                                                    Designator(
                                                                      WithoutNamespace(
                                                                       bodovi
                                                                      ) [WithoutNamespace]
                                                                      NoArrayExpression(
                                                                      ) [NoArrayExpression]
                                                                    ) [Designator]
                                                                  ) [DesignatorFact]
                                                                ) [SingleTerm]
                                                              ) [PositiveStartExpr]
                                                              NoNumConstOpt(
                                                              ) [NoNumConstOpt]
                                                            ) [PrintExpr]
                                                          ) [Statements]
                                                          DesignatorStat(
                                                            DesignatorExpr(
                                                              Designator(
                                                                WithoutNamespace(
                                                                 niz
                                                                ) [WithoutNamespace]
                                                                NoArrayExpression(
                                                                ) [NoArrayExpression]
                                                              ) [Designator]
                                                              AssignOperation(
                                                              ) [AssignOperation]
                                                              PositiveStartExpr(
                                                                SingleTerm(
                                                                  NewType(
                                                                    Type(
                                                                     int
                                                                    ) [Type]
                                                                    PositiveStartExpr(
                                                                      SingleTerm(
                                                                        NumberConst(
                                                                         3
                                                                        ) [NumberConst]
                                                                      ) [SingleTerm]
                                                                    ) [PositiveStartExpr]
                                                                  ) [NewType]
                                                                ) [SingleTerm]
                                                              ) [PositiveStartExpr]
                                                            ) [DesignatorExpr]
                                                          ) [DesignatorStat]
                                                        ) [Statements]
                                                        DesignatorStat(
                                                          DesignatorExpr(
                                                            Designator(
                                                              WithoutNamespace(
                                                               niz
                                                              ) [WithoutNamespace]
                                                              AddArrayExpression(
                                                                BraExpr(
                                                                  PositiveStartExpr(
                                                                    SingleTerm(
                                                                      DesignatorFact(
                                                                        Designator(
                                                                          WithoutNamespace(
                                                                           nula
                                                                          ) [WithoutNamespace]
                                                                          NoArrayExpression(
                                                                          ) [NoArrayExpression]
                                                                        ) [Designator]
                                                                      ) [DesignatorFact]
                                                                    ) [SingleTerm]
                                                                  ) [PositiveStartExpr]
                                                                ) [BraExpr]
                                                              ) [AddArrayExpression]
                                                            ) [Designator]
                                                            AssignOperation(
                                                            ) [AssignOperation]
                                                            PositiveStartExpr(
                                                              SingleTerm(
                                                                DesignatorFact(
                                                                  Designator(
                                                                    WithoutNamespace(
                                                                     jedan
                                                                    ) [WithoutNamespace]
                                                                    NoArrayExpression(
                                                                    ) [NoArrayExpression]
                                                                  ) [Designator]
                                                                ) [DesignatorFact]
                                                              ) [SingleTerm]
                                                            ) [PositiveStartExpr]
                                                          ) [DesignatorExpr]
                                                        ) [DesignatorStat]
                                                      ) [Statements]
                                                      DesignatorStat(
                                                        DesignatorExpr(
                                                          Designator(
                                                            WithoutNamespace(
                                                             niz
                                                            ) [WithoutNamespace]
                                                            AddArrayExpression(
                                                              BraExpr(
                                                                PositiveStartExpr(
                                                                  SingleTerm(
                                                                    NumberConst(
                                                                     1
                                                                    ) [NumberConst]
                                                                  ) [SingleTerm]
                                                                ) [PositiveStartExpr]
                                                              ) [BraExpr]
                                                            ) [AddArrayExpression]
                                                          ) [Designator]
                                                          AssignOperation(
                                                          ) [AssignOperation]
                                                          PositiveStartExpr(
                                                            SingleTerm(
                                                              NumberConst(
                                                               2
                                                              ) [NumberConst]
                                                            ) [SingleTerm]
                                                          ) [PositiveStartExpr]
                                                        ) [DesignatorExpr]
                                                      ) [DesignatorStat]
                                                    ) [Statements]
                                                    DesignatorStat(
                                                      DesignatorExpr(
                                                        Designator(
                                                          WithoutNamespace(
                                                           niz
                                                          ) [WithoutNamespace]
                                                          AddArrayExpression(
                                                            BraExpr(
                                                              PositiveStartExpr(
                                                                SingleTerm(
                                                                  DesignatorFact(
                                                                    Designator(
                                                                      WithoutNamespace(
                                                                       niz
                                                                      ) [WithoutNamespace]
                                                                      AddArrayExpression(
                                                                        BraExpr(
                                                                          PositiveStartExpr(
                                                                            SingleTerm(
                                                                              DesignatorFact(
                                                                                Designator(
                                                                                  WithoutNamespace(
                                                                                   jedan
                                                                                  ) [WithoutNamespace]
                                                                                  NoArrayExpression(
                                                                                  ) [NoArrayExpression]
                                                                                ) [Designator]
                                                                              ) [DesignatorFact]
                                                                            ) [SingleTerm]
                                                                          ) [PositiveStartExpr]
                                                                        ) [BraExpr]
                                                                      ) [AddArrayExpression]
                                                                    ) [Designator]
                                                                  ) [DesignatorFact]
                                                                ) [SingleTerm]
                                                              ) [PositiveStartExpr]
                                                            ) [BraExpr]
                                                          ) [AddArrayExpression]
                                                        ) [Designator]
                                                        AssignOperation(
                                                        ) [AssignOperation]
                                                        PositiveStartExpr(
                                                          MultipleTerms(
                                                            SingleTerm(
                                                              DesignatorFact(
                                                                Designator(
                                                                  WithoutNamespace(
                                                                   niz
                                                                  ) [WithoutNamespace]
                                                                  AddArrayExpression(
                                                                    BraExpr(
                                                                      PositiveStartExpr(
                                                                        SingleTerm(
                                                                          DesignatorFact(
                                                                            Designator(
                                                                              WithoutNamespace(
                                                                               niz
                                                                              ) [WithoutNamespace]
                                                                              AddArrayExpression(
                                                                                BraExpr(
                                                                                  PositiveStartExpr(
                                                                                    SingleTerm(
                                                                                      NumberConst(
                                                                                       0
                                                                                      ) [NumberConst]
                                                                                    ) [SingleTerm]
                                                                                  ) [PositiveStartExpr]
                                                                                ) [BraExpr]
                                                                              ) [AddArrayExpression]
                                                                            ) [Designator]
                                                                          ) [DesignatorFact]
                                                                        ) [SingleTerm]
                                                                      ) [PositiveStartExpr]
                                                                    ) [BraExpr]
                                                                  ) [AddArrayExpression]
                                                                ) [Designator]
                                                              ) [DesignatorFact]
                                                            ) [SingleTerm]
                                                            Multiply(
                                                            ) [Multiply]
                                                            NumberConst(
                                                             3
                                                            ) [NumberConst]
                                                          ) [MultipleTerms]
                                                        ) [PositiveStartExpr]
                                                      ) [DesignatorExpr]
                                                    ) [DesignatorStat]
                                                  ) [Statements]
                                                  DesignatorStat(
                                                    DesignatorExpr(
                                                      Designator(
                                                        WithoutNamespace(
                                                         bodovi
                                                        ) [WithoutNamespace]
                                                        NoArrayExpression(
                                                        ) [NoArrayExpression]
                                                      ) [Designator]
                                                      AssignOperation(
                                                      ) [AssignOperation]
                                                      PositiveStartExpr(
                                                        MultipleTerms(
                                                          SingleTerm(
                                                            DesignatorFact(
                                                              Designator(
                                                                WithoutNamespace(
                                                                 niz
                                                                ) [WithoutNamespace]
                                                                AddArrayExpression(
                                                                  BraExpr(
                                                                    PositiveStartExpr(
                                                                      SingleTerm(
                                                                        NumberConst(
                                                                         2
                                                                        ) [NumberConst]
                                                                      ) [SingleTerm]
                                                                    ) [PositiveStartExpr]
                                                                  ) [BraExpr]
                                                                ) [AddArrayExpression]
                                                              ) [Designator]
                                                            ) [DesignatorFact]
                                                          ) [SingleTerm]
                                                          Divide(
                                                          ) [Divide]
                                                          DesignatorFact(
                                                            Designator(
                                                              WithoutNamespace(
                                                               niz
                                                              ) [WithoutNamespace]
                                                              AddArrayExpression(
                                                                BraExpr(
                                                                  PositiveStartExpr(
                                                                    SingleTerm(
                                                                      NumberConst(
                                                                       0
                                                                      ) [NumberConst]
                                                                    ) [SingleTerm]
                                                                  ) [PositiveStartExpr]
                                                                ) [BraExpr]
                                                              ) [AddArrayExpression]
                                                            ) [Designator]
                                                          ) [DesignatorFact]
                                                        ) [MultipleTerms]
                                                      ) [PositiveStartExpr]
                                                    ) [DesignatorExpr]
                                                  ) [DesignatorStat]
                                                ) [Statements]
                                                PrintExpr(
                                                  PositiveStartExpr(
                                                    SingleTerm(
                                                      DesignatorFact(
                                                        Designator(
                                                          WithoutNamespace(
                                                           bodovi
                                                          ) [WithoutNamespace]
                                                          NoArrayExpression(
                                                          ) [NoArrayExpression]
                                                        ) [Designator]
                                                      ) [DesignatorFact]
                                                    ) [SingleTerm]
                                                  ) [PositiveStartExpr]
                                                  NoNumConstOpt(
                                                  ) [NoNumConstOpt]
                                                ) [PrintExpr]
                                              ) [Statements]
                                              PrintExpr(
                                                PositiveStartExpr(
                                                  SingleTerm(
                                                    DesignatorFact(
                                                      Designator(
                                                        WithoutNamespace(
                                                         niz
                                                        ) [WithoutNamespace]
                                                        AddArrayExpression(
                                                          BraExpr(
                                                            PositiveStartExpr(
                                                              SingleTerm(
                                                                NumberConst(
                                                                 2
                                                                ) [NumberConst]
                                                              ) [SingleTerm]
                                                            ) [PositiveStartExpr]
                                                          ) [BraExpr]
                                                        ) [AddArrayExpression]
                                                      ) [Designator]
                                                    ) [DesignatorFact]
                                                  ) [SingleTerm]
                                                ) [PositiveStartExpr]
                                                NoNumConstOpt(
                                                ) [NoNumConstOpt]
                                              ) [PrintExpr]
                                            ) [Statements]
                                            DesignatorStat(
                                              DesignatorExpr(
                                                Designator(
                                                  WithoutNamespace(
                                                   nizch
                                                  ) [WithoutNamespace]
                                                  NoArrayExpression(
                                                  ) [NoArrayExpression]
                                                ) [Designator]
                                                AssignOperation(
                                                ) [AssignOperation]
                                                PositiveStartExpr(
                                                  SingleTerm(
                                                    NewType(
                                                      Type(
                                                       char
                                                      ) [Type]
                                                      PositiveStartExpr(
                                                        SingleTerm(
                                                          NumberConst(
                                                           3
                                                          ) [NumberConst]
                                                        ) [SingleTerm]
                                                      ) [PositiveStartExpr]
                                                    ) [NewType]
                                                  ) [SingleTerm]
                                                ) [PositiveStartExpr]
                                              ) [DesignatorExpr]
                                            ) [DesignatorStat]
                                          ) [Statements]
                                          DesignatorStat(
                                            DesignatorExpr(
                                              Designator(
                                                WithoutNamespace(
                                                 nizch
                                                ) [WithoutNamespace]
                                                AddArrayExpression(
                                                  BraExpr(
                                                    PositiveStartExpr(
                                                      SingleTerm(
                                                        NumberConst(
                                                         0
                                                        ) [NumberConst]
                                                      ) [SingleTerm]
                                                    ) [PositiveStartExpr]
                                                  ) [BraExpr]
                                                ) [AddArrayExpression]
                                              ) [Designator]
                                              AssignOperation(
                                              ) [AssignOperation]
                                              PositiveStartExpr(
                                                SingleTerm(
                                                  CharacterConst(
                                                   a
                                                  ) [CharacterConst]
                                                ) [SingleTerm]
                                              ) [PositiveStartExpr]
                                            ) [DesignatorExpr]
                                          ) [DesignatorStat]
                                        ) [Statements]
                                        DesignatorStat(
                                          DesignatorExpr(
                                            Designator(
                                              WithoutNamespace(
                                               nizch
                                              ) [WithoutNamespace]
                                              AddArrayExpression(
                                                BraExpr(
                                                  PositiveStartExpr(
                                                    SingleTerm(
                                                      DesignatorFact(
                                                        Designator(
                                                          WithoutNamespace(
                                                           jedan
                                                          ) [WithoutNamespace]
                                                          NoArrayExpression(
                                                          ) [NoArrayExpression]
                                                        ) [Designator]
                                                      ) [DesignatorFact]
                                                    ) [SingleTerm]
                                                  ) [PositiveStartExpr]
                                                ) [BraExpr]
                                              ) [AddArrayExpression]
                                            ) [Designator]
                                            AssignOperation(
                                            ) [AssignOperation]
                                            PositiveStartExpr(
                                              SingleTerm(
                                                CharacterConst(
                                                 b
                                                ) [CharacterConst]
                                              ) [SingleTerm]
                                            ) [PositiveStartExpr]
                                          ) [DesignatorExpr]
                                        ) [DesignatorStat]
                                      ) [Statements]
                                      DesignatorStat(
                                        DesignatorExpr(
                                          Designator(
                                            WithoutNamespace(
                                             nizch
                                            ) [WithoutNamespace]
                                            AddArrayExpression(
                                              BraExpr(
                                                AddExpression(
                                                  PositiveStartExpr(
                                                    SingleTerm(
                                                      DesignatorFact(
                                                        Designator(
                                                          WithoutNamespace(
                                                           pet
                                                          ) [WithoutNamespace]
                                                          NoArrayExpression(
                                                          ) [NoArrayExpression]
                                                        ) [Designator]
                                                      ) [DesignatorFact]
                                                    ) [SingleTerm]
                                                  ) [PositiveStartExpr]
                                                  Minus(
                                                  ) [Minus]
                                                  SingleTerm(
                                                    NumberConst(
                                                     3
                                                    ) [NumberConst]
                                                  ) [SingleTerm]
                                                ) [AddExpression]
                                              ) [BraExpr]
                                            ) [AddArrayExpression]
                                          ) [Designator]
                                          AssignOperation(
                                          ) [AssignOperation]
                                          PositiveStartExpr(
                                            SingleTerm(
                                              CharacterConst(
                                               c
                                              ) [CharacterConst]
                                            ) [SingleTerm]
                                          ) [PositiveStartExpr]
                                        ) [DesignatorExpr]
                                      ) [DesignatorStat]
                                    ) [Statements]
                                    PrintExpr(
                                      PositiveStartExpr(
                                        SingleTerm(
                                          DesignatorFact(
                                            Designator(
                                              WithoutNamespace(
                                               nizch
                                              ) [WithoutNamespace]
                                              AddArrayExpression(
                                                BraExpr(
                                                  PositiveStartExpr(
                                                    SingleTerm(
                                                      NumberConst(
                                                       1
                                                      ) [NumberConst]
                                                    ) [SingleTerm]
                                                  ) [PositiveStartExpr]
                                                ) [BraExpr]
                                              ) [AddArrayExpression]
                                            ) [Designator]
                                          ) [DesignatorFact]
                                        ) [SingleTerm]
                                      ) [PositiveStartExpr]
                                      NoNumConstOpt(
                                      ) [NoNumConstOpt]
                                    ) [PrintExpr]
                                  ) [Statements]
                                  PrintExpr(
                                    PositiveStartExpr(
                                      SingleTerm(
                                        DesignatorFact(
                                          Designator(
                                            WithoutNamespace(
                                             nizch
                                            ) [WithoutNamespace]
                                            AddArrayExpression(
                                              BraExpr(
                                                PositiveStartExpr(
                                                  MultipleTerms(
                                                    SingleTerm(
                                                      DesignatorFact(
                                                        Designator(
                                                          WithoutNamespace(
                                                           jedan
                                                          ) [WithoutNamespace]
                                                          NoArrayExpression(
                                                          ) [NoArrayExpression]
                                                        ) [Designator]
                                                      ) [DesignatorFact]
                                                    ) [SingleTerm]
                                                    Multiply(
                                                    ) [Multiply]
                                                    NumberConst(
                                                     2
                                                    ) [NumberConst]
                                                  ) [MultipleTerms]
                                                ) [PositiveStartExpr]
                                              ) [BraExpr]
                                            ) [AddArrayExpression]
                                          ) [Designator]
                                        ) [DesignatorFact]
                                      ) [SingleTerm]
                                    ) [PositiveStartExpr]
                                    NoNumConstOpt(
                                    ) [NoNumConstOpt]
                                  ) [PrintExpr]
                                ) [Statements]
                                DesignatorStat(
                                  DesignatorExpr(
                                    Designator(
                                      WithoutNamespace(
                                       a
                                      ) [WithoutNamespace]
                                      NoArrayExpression(
                                      ) [NoArrayExpression]
                                    ) [Designator]
                                    AssignOperation(
                                    ) [AssignOperation]
                                    PositiveStartExpr(
                                      SingleTerm(
                                        NumberConst(
                                         1
                                        ) [NumberConst]
                                      ) [SingleTerm]
                                    ) [PositiveStartExpr]
                                  ) [DesignatorExpr]
                                ) [DesignatorStat]
                              ) [Statements]
                              ReadDesignator(
                                Designator(
                                  WithoutNamespace(
                                   bodovi
                                  ) [WithoutNamespace]
                                  NoArrayExpression(
                                  ) [NoArrayExpression]
                                ) [Designator]
                              ) [ReadDesignator]
                            ) [Statements]
                            DesignatorStat(
                              DesignatorExpr(
                                Designator(
                                  WithoutNamespace(
                                   bodovi
                                  ) [WithoutNamespace]
                                  NoArrayExpression(
                                  ) [NoArrayExpression]
                                ) [Designator]
                                AssignOperation(
                                ) [AssignOperation]
                                AddExpression(
                                  AddExpression(
                                    NegativeStartExpr(
                                      SingleTerm(
                                        DesignatorFact(
                                          Designator(
                                            WithoutNamespace(
                                             bodovi
                                            ) [WithoutNamespace]
                                            NoArrayExpression(
                                            ) [NoArrayExpression]
                                          ) [Designator]
                                        ) [DesignatorFact]
                                      ) [SingleTerm]
                                    ) [NegativeStartExpr]
                                    Plus(
                                    ) [Plus]
                                    MultipleTerms(
                                      SingleTerm(
                                        ExpressionFact(
                                          AddExpression(
                                            PositiveStartExpr(
                                              MultipleTerms(
                                                MultipleTerms(
                                                  SingleTerm(
                                                    DesignatorFact(
                                                      Designator(
                                                        WithoutNamespace(
                                                         pet
                                                        ) [WithoutNamespace]
                                                        NoArrayExpression(
                                                        ) [NoArrayExpression]
                                                      ) [Designator]
                                                    ) [DesignatorFact]
                                                  ) [SingleTerm]
                                                  Multiply(
                                                  ) [Multiply]
                                                  DesignatorFact(
                                                    Designator(
                                                      WithoutNamespace(
                                                       a
                                                      ) [WithoutNamespace]
                                                      NoArrayExpression(
                                                      ) [NoArrayExpression]
                                                    ) [Designator]
                                                  ) [DesignatorFact]
                                                ) [MultipleTerms]
                                                Divide(
                                                ) [Divide]
                                                NumberConst(
                                                 2
                                                ) [NumberConst]
                                              ) [MultipleTerms]
                                            ) [PositiveStartExpr]
                                            Minus(
                                            ) [Minus]
                                            SingleTerm(
                                              DesignatorFact(
                                                Designator(
                                                  WithoutNamespace(
                                                   jedan
                                                  ) [WithoutNamespace]
                                                  NoArrayExpression(
                                                  ) [NoArrayExpression]
                                                ) [Designator]
                                              ) [DesignatorFact]
                                            ) [SingleTerm]
                                          ) [AddExpression]
                                        ) [ExpressionFact]
                                      ) [SingleTerm]
                                      Multiply(
                                      ) [Multiply]
                                      DesignatorFact(
                                        Designator(
                                          WithoutNamespace(
                                           bodovi
                                          ) [WithoutNamespace]
                                          NoArrayExpression(
                                          ) [NoArrayExpression]
                                        ) [Designator]
                                      ) [DesignatorFact]
                                    ) [MultipleTerms]
                                  ) [AddExpression]
                                  Minus(
                                  ) [Minus]
                                  SingleTerm(
                                    ExpressionFact(
                                      AddExpression(
                                        AddExpression(
                                          PositiveStartExpr(
                                            MultipleTerms(
                                              SingleTerm(
                                                NumberConst(
                                                 3
                                                ) [NumberConst]
                                              ) [SingleTerm]
                                              Modulo(
                                              ) [Modulo]
                                              NumberConst(
                                               2
                                              ) [NumberConst]
                                            ) [MultipleTerms]
                                          ) [PositiveStartExpr]
                                          Plus(
                                          ) [Plus]
                                          MultipleTerms(
                                            SingleTerm(
                                              NumberConst(
                                               3
                                              ) [NumberConst]
                                            ) [SingleTerm]
                                            Multiply(
                                            ) [Multiply]
                                            NumberConst(
                                             2
                                            ) [NumberConst]
                                          ) [MultipleTerms]
                                        ) [AddExpression]
                                        Minus(
                                        ) [Minus]
                                        SingleTerm(
                                          NumberConst(
                                           3
                                          ) [NumberConst]
                                        ) [SingleTerm]
                                      ) [AddExpression]
                                    ) [ExpressionFact]
                                  ) [SingleTerm]
                                ) [AddExpression]
                              ) [DesignatorExpr]
                            ) [DesignatorStat]
                          ) [Statements]
                          PrintExpr(
                            PositiveStartExpr(
                              SingleTerm(
                                DesignatorFact(
                                  Designator(
                                    WithoutNamespace(
                                     bodovi
                                    ) [WithoutNamespace]
                                    NoArrayExpression(
                                    ) [NoArrayExpression]
                                  ) [Designator]
                                ) [DesignatorFact]
                              ) [SingleTerm]
                            ) [PositiveStartExpr]
                            NoNumConstOpt(
                            ) [NoNumConstOpt]
                          ) [PrintExpr]
                        ) [Statements]
                        DesignatorStat(
                          DesignatorExpr(
                            Designator(
                              WithoutNamespace(
                               mat
                              ) [WithoutNamespace]
                              NoArrayExpression(
                              ) [NoArrayExpression]
                            ) [Designator]
                            AssignOperation(
                            ) [AssignOperation]
                            PositiveStartExpr(
                              SingleTerm(
                                NewTypeMat(
                                  Type(
                                   int
                                  ) [Type]
                                  PositiveStartExpr(
                                    SingleTerm(
                                      NumberConst(
                                       2
                                      ) [NumberConst]
                                    ) [SingleTerm]
                                  ) [PositiveStartExpr]
                                  PositiveStartExpr(
                                    SingleTerm(
                                      NumberConst(
                                       3
                                      ) [NumberConst]
                                    ) [SingleTerm]
                                  ) [PositiveStartExpr]
                                ) [NewTypeMat]
                              ) [SingleTerm]
                            ) [PositiveStartExpr]
                          ) [DesignatorExpr]
                        ) [DesignatorStat]
                      ) [Statements]
                      DesignatorStat(
                        DesignatorExpr(
                          Designator(
                            WithoutNamespace(
                             mat
                            ) [WithoutNamespace]
                            AddMatrixExpression(
                              BraExpr(
                                PositiveStartExpr(
                                  SingleTerm(
                                    DesignatorFact(
                                      Designator(
                                        WithoutNamespace(
                                         nula
                                        ) [WithoutNamespace]
                                        NoArrayExpression(
                                        ) [NoArrayExpression]
                                      ) [Designator]
                                    ) [DesignatorFact]
                                  ) [SingleTerm]
                                ) [PositiveStartExpr]
                              ) [BraExpr]
                              BraExpr(
                                AddExpression(
                                  PositiveStartExpr(
                                    SingleTerm(
                                      DesignatorFact(
                                        Designator(
                                          WithoutNamespace(
                                           jedan
                                          ) [WithoutNamespace]
                                          NoArrayExpression(
                                          ) [NoArrayExpression]
                                        ) [Designator]
                                      ) [DesignatorFact]
                                    ) [SingleTerm]
                                  ) [PositiveStartExpr]
                                  Minus(
                                  ) [Minus]
                                  SingleTerm(
                                    NumberConst(
                                     1
                                    ) [NumberConst]
                                  ) [SingleTerm]
                                ) [AddExpression]
                              ) [BraExpr]
                            ) [AddMatrixExpression]
                          ) [Designator]
                          AssignOperation(
                          ) [AssignOperation]
                          PositiveStartExpr(
                            SingleTerm(
                              DesignatorFact(
                                Designator(
                                  WithoutNamespace(
                                   jedan
                                  ) [WithoutNamespace]
                                  NoArrayExpression(
                                  ) [NoArrayExpression]
                                ) [Designator]
                              ) [DesignatorFact]
                            ) [SingleTerm]
                          ) [PositiveStartExpr]
                        ) [DesignatorExpr]
                      ) [DesignatorStat]
                    ) [Statements]
                    DesignatorStat(
                      DesignatorExpr(
                        Designator(
                          WithoutNamespace(
                           mat
                          ) [WithoutNamespace]
                          AddMatrixExpression(
                            BraExpr(
                              PositiveStartExpr(
                                SingleTerm(
                                  NumberConst(
                                   0
                                  ) [NumberConst]
                                ) [SingleTerm]
                              ) [PositiveStartExpr]
                            ) [BraExpr]
                            BraExpr(
                              PositiveStartExpr(
                                SingleTerm(
                                  DesignatorFact(
                                    Designator(
                                      WithoutNamespace(
                                       mat
                                      ) [WithoutNamespace]
                                      AddMatrixExpression(
                                        BraExpr(
                                          PositiveStartExpr(
                                            SingleTerm(
                                              NumberConst(
                                               0
                                              ) [NumberConst]
                                            ) [SingleTerm]
                                          ) [PositiveStartExpr]
                                        ) [BraExpr]
                                        BraExpr(
                                          PositiveStartExpr(
                                            SingleTerm(
                                              NumberConst(
                                               0
                                              ) [NumberConst]
                                            ) [SingleTerm]
                                          ) [PositiveStartExpr]
                                        ) [BraExpr]
                                      ) [AddMatrixExpression]
                                    ) [Designator]
                                  ) [DesignatorFact]
                                ) [SingleTerm]
                              ) [PositiveStartExpr]
                            ) [BraExpr]
                          ) [AddMatrixExpression]
                        ) [Designator]
                        AssignOperation(
                        ) [AssignOperation]
                        PositiveStartExpr(
                          SingleTerm(
                            NumberConst(
                             2
                            ) [NumberConst]
                          ) [SingleTerm]
                        ) [PositiveStartExpr]
                      ) [DesignatorExpr]
                    ) [DesignatorStat]
                  ) [Statements]
                  DesignatorStat(
                    DesignatorExpr(
                      Designator(
                        WithoutNamespace(
                         mat
                        ) [WithoutNamespace]
                        AddMatrixExpression(
                          BraExpr(
                            PositiveStartExpr(
                              SingleTerm(
                                NumberConst(
                                 0
                                ) [NumberConst]
                              ) [SingleTerm]
                            ) [PositiveStartExpr]
                          ) [BraExpr]
                          BraExpr(
                            PositiveStartExpr(
                              SingleTerm(
                                DesignatorFact(
                                  Designator(
                                    WithoutNamespace(
                                     mat
                                    ) [WithoutNamespace]
                                    AddMatrixExpression(
                                      BraExpr(
                                        PositiveStartExpr(
                                          SingleTerm(
                                            NumberConst(
                                             0
                                            ) [NumberConst]
                                          ) [SingleTerm]
                                        ) [PositiveStartExpr]
                                      ) [BraExpr]
                                      BraExpr(
                                        PositiveStartExpr(
                                          SingleTerm(
                                            NumberConst(
                                             1
                                            ) [NumberConst]
                                          ) [SingleTerm]
                                        ) [PositiveStartExpr]
                                      ) [BraExpr]
                                    ) [AddMatrixExpression]
                                  ) [Designator]
                                ) [DesignatorFact]
                              ) [SingleTerm]
                            ) [PositiveStartExpr]
                          ) [BraExpr]
                        ) [AddMatrixExpression]
                      ) [Designator]
                      AssignOperation(
                      ) [AssignOperation]
                      PositiveStartExpr(
                        SingleTerm(
                          NumberConst(
                           5
                          ) [NumberConst]
                        ) [SingleTerm]
                      ) [PositiveStartExpr]
                    ) [DesignatorExpr]
                  ) [DesignatorStat]
                ) [Statements]
                DesignatorStat(
                  DesignatorExpr(
                    Designator(
                      WithoutNamespace(
                       mat
                      ) [WithoutNamespace]
                      AddMatrixExpression(
                        BraExpr(
                          PositiveStartExpr(
                            SingleTerm(
                              NumberConst(
                               1
                              ) [NumberConst]
                            ) [SingleTerm]
                          ) [PositiveStartExpr]
                        ) [BraExpr]
                        BraExpr(
                          PositiveStartExpr(
                            MultipleTerms(
                              SingleTerm(
                                DesignatorFact(
                                  Designator(
                                    WithoutNamespace(
                                     mat
                                    ) [WithoutNamespace]
                                    AddMatrixExpression(
                                      BraExpr(
                                        PositiveStartExpr(
                                          SingleTerm(
                                            NumberConst(
                                             0
                                            ) [NumberConst]
                                          ) [SingleTerm]
                                        ) [PositiveStartExpr]
                                      ) [BraExpr]
                                      BraExpr(
                                        PositiveStartExpr(
                                          SingleTerm(
                                            NumberConst(
                                             0
                                            ) [NumberConst]
                                          ) [SingleTerm]
                                        ) [PositiveStartExpr]
                                      ) [BraExpr]
                                    ) [AddMatrixExpression]
                                  ) [Designator]
                                ) [DesignatorFact]
                              ) [SingleTerm]
                              Multiply(
                              ) [Multiply]
                              NumberConst(
                               2
                              ) [NumberConst]
                            ) [MultipleTerms]
                          ) [PositiveStartExpr]
                        ) [BraExpr]
                      ) [AddMatrixExpression]
                    ) [Designator]
                    AssignOperation(
                    ) [AssignOperation]
                    PositiveStartExpr(
                      SingleTerm(
                        NumberConst(
                         4
                        ) [NumberConst]
                      ) [SingleTerm]
                    ) [PositiveStartExpr]
                  ) [DesignatorExpr]
                ) [DesignatorStat]
              ) [Statements]
              DesignatorStat(
                DesignatorExpr(
                  Designator(
                    WithoutNamespace(
                     mat
                    ) [WithoutNamespace]
                    AddMatrixExpression(
                      BraExpr(
                        PositiveStartExpr(
                          SingleTerm(
                            DesignatorFact(
                              Designator(
                                WithoutNamespace(
                                 mat
                                ) [WithoutNamespace]
                                AddMatrixExpression(
                                  BraExpr(
                                    PositiveStartExpr(
                                      SingleTerm(
                                        NumberConst(
                                         0
                                        ) [NumberConst]
                                      ) [SingleTerm]
                                    ) [PositiveStartExpr]
                                  ) [BraExpr]
                                  BraExpr(
                                    PositiveStartExpr(
                                      SingleTerm(
                                        NumberConst(
                                         0
                                        ) [NumberConst]
                                      ) [SingleTerm]
                                    ) [PositiveStartExpr]
                                  ) [BraExpr]
                                ) [AddMatrixExpression]
                              ) [Designator]
                            ) [DesignatorFact]
                          ) [SingleTerm]
                        ) [PositiveStartExpr]
                      ) [BraExpr]
                      BraExpr(
                        PositiveStartExpr(
                          SingleTerm(
                            NumberConst(
                             1
                            ) [NumberConst]
                          ) [SingleTerm]
                        ) [PositiveStartExpr]
                      ) [BraExpr]
                    ) [AddMatrixExpression]
                  ) [Designator]
                  AssignOperation(
                  ) [AssignOperation]
                  PositiveStartExpr(
                    SingleTerm(
                      NumberConst(
                       3
                      ) [NumberConst]
                    ) [SingleTerm]
                  ) [PositiveStartExpr]
                ) [DesignatorExpr]
              ) [DesignatorStat]
            ) [Statements]
            DesignatorStat(
              DesignatorExpr(
                Designator(
                  WithoutNamespace(
                   mat
                  ) [WithoutNamespace]
                  AddMatrixExpression(
                    BraExpr(
                      PositiveStartExpr(
                        SingleTerm(
                          NumberConst(
                           1
                          ) [NumberConst]
                        ) [SingleTerm]
                      ) [PositiveStartExpr]
                    ) [BraExpr]
                    BraExpr(
                      PositiveStartExpr(
                        SingleTerm(
                          NumberConst(
                           0
                          ) [NumberConst]
                        ) [SingleTerm]
                      ) [PositiveStartExpr]
                    ) [BraExpr]
                  ) [AddMatrixExpression]
                ) [Designator]
                AssignOperation(
                ) [AssignOperation]
                PositiveStartExpr(
                  SingleTerm(
                    NumberConst(
                     2
                    ) [NumberConst]
                  ) [SingleTerm]
                ) [PositiveStartExpr]
              ) [DesignatorExpr]
            ) [DesignatorStat]
          ) [Statements]
          PrintExpr(
            PositiveStartExpr(
              SingleTerm(
                DesignatorFact(
                  Designator(
                    WithoutNamespace(
                     mat
                    ) [WithoutNamespace]
                    AddMatrixExpression(
                      BraExpr(
                        PositiveStartExpr(
                          SingleTerm(
                            NumberConst(
                             1
                            ) [NumberConst]
                          ) [SingleTerm]
                        ) [PositiveStartExpr]
                      ) [BraExpr]
                      BraExpr(
                        PositiveStartExpr(
                          SingleTerm(
                            NumberConst(
                             2
                            ) [NumberConst]
                          ) [SingleTerm]
                        ) [PositiveStartExpr]
                      ) [BraExpr]
                    ) [AddMatrixExpression]
                  ) [Designator]
                ) [DesignatorFact]
              ) [SingleTerm]
            ) [PositiveStartExpr]
            NoNumConstOpt(
            ) [NoNumConstOpt]
          ) [PrintExpr]
        ) [Statements]
        PrintExpr(
          PositiveStartExpr(
            SingleTerm(
              DesignatorFact(
                Designator(
                  WithoutNamespace(
                   mat
                  ) [WithoutNamespace]
                  AddMatrixExpression(
                    BraExpr(
                      PositiveStartExpr(
                        SingleTerm(
                          NumberConst(
                           0
                          ) [NumberConst]
                        ) [SingleTerm]
                      ) [PositiveStartExpr]
                    ) [BraExpr]
                    BraExpr(
                      PositiveStartExpr(
                        SingleTerm(
                          NumberConst(
                           2
                          ) [NumberConst]
                        ) [SingleTerm]
                      ) [PositiveStartExpr]
                    ) [BraExpr]
                  ) [AddMatrixExpression]
                ) [Designator]
              ) [DesignatorFact]
            ) [SingleTerm]
          ) [PositiveStartExpr]
          NoNumConstOpt(
          ) [NoNumConstOpt]
        ) [PrintExpr]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  16:06:19,258 - ================ Semanticka obrada ===================
INFO  16:06:19,260 - NEW CONST
INFO  16:06:19,260 - Con nula: int, 0, 0 on line 3
INFO  16:06:19,260 - NEW CONST
INFO  16:06:19,260 - Con jedan: int, 1, 0 on line 4
INFO  16:06:19,260 - NEW CONST
INFO  16:06:19,260 - Con pet: int, 5, 0 on line 5
INFO  16:06:19,260 - NEW SYMBOL
INFO  16:06:19,260 - Var niz: Arr of int, 0, 0 on line 7
INFO  16:06:19,260 - NEW SYMBOL
INFO  16:06:19,260 - Var nizch: Arr of char, 1, 0 on line 8
INFO  16:06:19,260 - NEW SYMBOL
INFO  16:06:19,260 - Var mat: Matrix of int, 2, 0 on line 9
INFO  16:06:19,260 - NEW SYMBOL
INFO  16:06:19,260 - Var a: int, 3, 0 on line 11
INFO  16:06:19,260 - NEW SYMBOL
INFO  16:06:19,260 - Var bodovi: int, 0, 1 on line 15
INFO  16:06:19,260 - NEW SYMBOL
INFO  16:06:19,260 - Var bt: boolean, 1, 1 on line 16
INFO  16:06:19,260 - Var bodovi: int, 0, 1 on line 18
INFO  16:06:19,260 - Var bodovi: int, 0, 1 on line 19
INFO  16:06:19,260 - Var bodovi: int, 0, 1 on line 20
INFO  16:06:19,260 - Var bodovi: int, 0, 1 on line 20
INFO  16:06:19,260 - Con jedan: int, 1, 0 on line 20
INFO  16:06:19,260 - Var bodovi: int, 0, 1 on line 21
INFO  16:06:19,260 - Var bodovi: int, 0, 1 on line 21
INFO  16:06:19,260 - Con pet: int, 5, 0 on line 21
INFO  16:06:19,260 - Var bodovi: int, 0, 1 on line 22
INFO  16:06:19,260 - Var bodovi: int, 0, 1 on line 23
INFO  16:06:19,260 - Var niz: Arr of int, 0, 0 on line 25
INFO  16:06:19,260 - Var niz: Arr of int, 0, 0 on line 26
INFO  16:06:19,260 - Con nula: int, 0, 0 on line 26
INFO  16:06:19,260 - Con jedan: int, 1, 0 on line 26
INFO  16:06:19,260 - Var niz: Arr of int, 0, 0 on line 27
INFO  16:06:19,260 - Var niz: Arr of int, 0, 0 on line 28
INFO  16:06:19,261 - Var niz: Arr of int, 0, 0 on line 28
INFO  16:06:19,261 - Con jedan: int, 1, 0 on line 28
INFO  16:06:19,261 - Var niz: Arr of int, 0, 0 on line 28
INFO  16:06:19,261 - Var niz: Arr of int, 0, 0 on line 28
INFO  16:06:19,261 - Var bodovi: int, 0, 1 on line 29
INFO  16:06:19,261 - Var niz: Arr of int, 0, 0 on line 29
INFO  16:06:19,261 - Var niz: Arr of int, 0, 0 on line 29
INFO  16:06:19,261 - Var bodovi: int, 0, 1 on line 30
INFO  16:06:19,261 - Var niz: Arr of int, 0, 0 on line 31
INFO  16:06:19,261 - Var nizch: Arr of char, 1, 0 on line 34
INFO  16:06:19,261 - Var nizch: Arr of char, 1, 0 on line 35
INFO  16:06:19,261 - Var nizch: Arr of char, 1, 0 on line 36
INFO  16:06:19,261 - Con jedan: int, 1, 0 on line 36
INFO  16:06:19,261 - Var nizch: Arr of char, 1, 0 on line 37
INFO  16:06:19,261 - Con pet: int, 5, 0 on line 37
INFO  16:06:19,261 - Var nizch: Arr of char, 1, 0 on line 38
INFO  16:06:19,261 - Var nizch: Arr of char, 1, 0 on line 39
INFO  16:06:19,261 - Con jedan: int, 1, 0 on line 39
INFO  16:06:19,261 - Var a: int, 3, 0 on line 41
INFO  16:06:19,261 - Var bodovi: int, 0, 1 on line 42
INFO  16:06:19,261 - read() function call on line 42
INFO  16:06:19,261 - Var bodovi: int, 0, 1 on line 43
INFO  16:06:19,261 - Var bodovi: int, 0, 1 on line 43
INFO  16:06:19,261 - Con pet: int, 5, 0 on line 43
INFO  16:06:19,261 - Var a: int, 3, 0 on line 43
INFO  16:06:19,261 - Con jedan: int, 1, 0 on line 43
INFO  16:06:19,261 - Var bodovi: int, 0, 1 on line 43
INFO  16:06:19,261 - Var bodovi: int, 0, 1 on line 44
INFO  16:06:19,261 - Var mat: Matrix of int, 2, 0 on line 46
INFO  16:06:19,261 - Var mat: Matrix of int, 2, 0 on line 47
INFO  16:06:19,261 - Con nula: int, 0, 0 on line 47
INFO  16:06:19,261 - Con jedan: int, 1, 0 on line 47
INFO  16:06:19,261 - Con jedan: int, 1, 0 on line 47
INFO  16:06:19,261 - Var mat: Matrix of int, 2, 0 on line 48
INFO  16:06:19,261 - Var mat: Matrix of int, 2, 0 on line 48
INFO  16:06:19,261 - Var mat: Matrix of int, 2, 0 on line 49
INFO  16:06:19,261 - Var mat: Matrix of int, 2, 0 on line 49
INFO  16:06:19,261 - Var mat: Matrix of int, 2, 0 on line 50
INFO  16:06:19,261 - Var mat: Matrix of int, 2, 0 on line 50
INFO  16:06:19,261 - Var mat: Matrix of int, 2, 0 on line 51
INFO  16:06:19,261 - Var mat: Matrix of int, 2, 0 on line 51
INFO  16:06:19,261 - Var mat: Matrix of int, 2, 0 on line 52
INFO  16:06:19,261 - Var mat: Matrix of int, 2, 0 on line 54
INFO  16:06:19,261 - Var mat: Matrix of int, 2, 0 on line 55
INFO  16:06:19,261 - Meth main: notype, 0, 0 on line 1
INFO  16:06:19,263 - Parser SUCCESS!
INFO  16:07:16,366 - Compiling source file: C:\Users\se200106\Desktop\wsp\MJCompilerAVGUST3.zip_expanded\MJCompiler\test\program.mj
INFO  16:07:16,367 - ================= LEKSICKA ANALIZA =================
INFO  16:07:16,382 - #2 program
INFO  16:07:16,382 - #47 test301
INFO  16:07:16,382 - #3 const
INFO  16:07:16,383 - #47 int
INFO  16:07:16,383 - #47 nula
INFO  16:07:16,383 - #24 =
INFO  16:07:16,383 - #46 0
INFO  16:07:16,383 - #27 ;
INFO  16:07:16,384 - #3 const
INFO  16:07:16,384 - #47 int
INFO  16:07:16,384 - #47 jedan
INFO  16:07:16,384 - #24 =
INFO  16:07:16,384 - #46 1
INFO  16:07:16,384 - #27 ;
INFO  16:07:16,384 - #3 const
INFO  16:07:16,384 - #47 int
INFO  16:07:16,384 - #47 pet
INFO  16:07:16,384 - #24 =
INFO  16:07:16,385 - #46 5
INFO  16:07:16,385 - #27 ;
INFO  16:07:16,385 - #47 int
INFO  16:07:16,385 - #47 niz
INFO  16:07:16,385 - #33 [
INFO  16:07:16,385 - #34 ]
INFO  16:07:16,385 - #27 ;
INFO  16:07:16,385 - #47 char
INFO  16:07:16,385 - #47 nizch
INFO  16:07:16,385 - #33 [
INFO  16:07:16,386 - #34 ]
INFO  16:07:16,386 - #27 ;
INFO  16:07:16,386 - #47 int
INFO  16:07:16,386 - #47 mat
INFO  16:07:16,386 - #33 [
INFO  16:07:16,386 - #34 ]
INFO  16:07:16,386 - #33 [
INFO  16:07:16,386 - #34 ]
INFO  16:07:16,386 - #27 ;
INFO  16:07:16,386 - #47 int
INFO  16:07:16,386 - #47 a
INFO  16:07:16,386 - #27 ;
INFO  16:07:16,387 - #35 {
INFO  16:07:16,387 - #8 void
INFO  16:07:16,387 - #47 main
INFO  16:07:16,387 - #31 (
INFO  16:07:16,387 - #32 )
INFO  16:07:16,388 - #47 int
INFO  16:07:16,388 - #47 bodovi
INFO  16:07:16,388 - #27 ;
INFO  16:07:16,388 - #47 bool
INFO  16:07:16,388 - #47 bt
INFO  16:07:16,388 - #27 ;
INFO  16:07:16,388 - #35 {
INFO  16:07:16,388 - #47 bodovi
INFO  16:07:16,388 - #24 =
INFO  16:07:16,389 - #46 0
INFO  16:07:16,389 - #27 ;
INFO  16:07:16,389 - #47 bodovi
INFO  16:07:16,389 - #25 ++
INFO  16:07:16,389 - #27 ;
INFO  16:07:16,389 - #47 bodovi
INFO  16:07:16,389 - #24 =
INFO  16:07:16,390 - #47 bodovi
INFO  16:07:16,390 - #11 +
INFO  16:07:16,390 - #47 jedan
INFO  16:07:16,390 - #27 ;
INFO  16:07:16,390 - #47 bodovi
INFO  16:07:16,390 - #24 =
INFO  16:07:16,390 - #47 bodovi
INFO  16:07:16,390 - #13 *
INFO  16:07:16,390 - #47 pet
INFO  16:07:16,391 - #27 ;
INFO  16:07:16,391 - #47 bodovi
INFO  16:07:16,391 - #26 --
INFO  16:07:16,391 - #27 ;
INFO  16:07:16,391 - #5 print
INFO  16:07:16,391 - #31 (
INFO  16:07:16,391 - #47 bodovi
INFO  16:07:16,391 - #32 )
INFO  16:07:16,391 - #27 ;
INFO  16:07:16,391 - #47 niz
INFO  16:07:16,391 - #24 =
INFO  16:07:16,391 - #4 new
INFO  16:07:16,391 - #47 int
INFO  16:07:16,391 - #33 [
INFO  16:07:16,392 - #46 3
INFO  16:07:16,392 - #34 ]
INFO  16:07:16,392 - #27 ;
INFO  16:07:16,392 - #47 niz
INFO  16:07:16,392 - #33 [
INFO  16:07:16,392 - #47 nula
INFO  16:07:16,392 - #34 ]
INFO  16:07:16,392 - #24 =
INFO  16:07:16,392 - #47 jedan
INFO  16:07:16,392 - #27 ;
INFO  16:07:16,392 - #47 niz
INFO  16:07:16,392 - #33 [
INFO  16:07:16,392 - #46 1
INFO  16:07:16,392 - #34 ]
INFO  16:07:16,392 - #24 =
INFO  16:07:16,392 - #46 2
INFO  16:07:16,392 - #27 ;
INFO  16:07:16,392 - #47 niz
INFO  16:07:16,392 - #33 [
INFO  16:07:16,392 - #47 niz
INFO  16:07:16,392 - #33 [
INFO  16:07:16,392 - #47 jedan
INFO  16:07:16,393 - #34 ]
INFO  16:07:16,393 - #34 ]
INFO  16:07:16,393 - #24 =
INFO  16:07:16,393 - #47 niz
INFO  16:07:16,393 - #33 [
INFO  16:07:16,393 - #47 niz
INFO  16:07:16,393 - #33 [
INFO  16:07:16,393 - #46 0
INFO  16:07:16,393 - #34 ]
INFO  16:07:16,393 - #34 ]
INFO  16:07:16,393 - #13 *
INFO  16:07:16,393 - #46 3
INFO  16:07:16,393 - #27 ;
INFO  16:07:16,393 - #47 bodovi
INFO  16:07:16,393 - #24 =
INFO  16:07:16,393 - #47 niz
INFO  16:07:16,393 - #33 [
INFO  16:07:16,393 - #46 2
INFO  16:07:16,393 - #34 ]
INFO  16:07:16,393 - #14 /
INFO  16:07:16,393 - #47 niz
INFO  16:07:16,394 - #33 [
INFO  16:07:16,394 - #46 0
INFO  16:07:16,394 - #34 ]
INFO  16:07:16,394 - #27 ;
INFO  16:07:16,394 - #5 print
INFO  16:07:16,394 - #31 (
INFO  16:07:16,394 - #47 bodovi
INFO  16:07:16,394 - #32 )
INFO  16:07:16,394 - #27 ;
INFO  16:07:16,394 - #5 print
INFO  16:07:16,394 - #31 (
INFO  16:07:16,394 - #47 niz
INFO  16:07:16,394 - #33 [
INFO  16:07:16,394 - #46 2
INFO  16:07:16,394 - #34 ]
INFO  16:07:16,394 - #32 )
INFO  16:07:16,394 - #27 ;
INFO  16:07:16,394 - #47 nizch
INFO  16:07:16,394 - #24 =
INFO  16:07:16,394 - #4 new
INFO  16:07:16,394 - #47 char
INFO  16:07:16,394 - #33 [
INFO  16:07:16,394 - #46 3
INFO  16:07:16,394 - #34 ]
INFO  16:07:16,394 - #27 ;
INFO  16:07:16,394 - #47 nizch
INFO  16:07:16,394 - #33 [
INFO  16:07:16,394 - #46 0
INFO  16:07:16,394 - #34 ]
INFO  16:07:16,394 - #24 =
INFO  16:07:16,395 - #48 a
INFO  16:07:16,395 - #27 ;
INFO  16:07:16,395 - #47 nizch
INFO  16:07:16,395 - #33 [
INFO  16:07:16,395 - #47 jedan
INFO  16:07:16,395 - #34 ]
INFO  16:07:16,395 - #24 =
INFO  16:07:16,395 - #48 b
INFO  16:07:16,395 - #27 ;
INFO  16:07:16,395 - #47 nizch
INFO  16:07:16,395 - #33 [
INFO  16:07:16,395 - #47 pet
INFO  16:07:16,395 - #12 -
INFO  16:07:16,395 - #46 3
INFO  16:07:16,395 - #34 ]
INFO  16:07:16,395 - #24 =
INFO  16:07:16,395 - #48 c
INFO  16:07:16,395 - #27 ;
INFO  16:07:16,395 - #5 print
INFO  16:07:16,395 - #31 (
INFO  16:07:16,395 - #47 nizch
INFO  16:07:16,396 - #33 [
INFO  16:07:16,396 - #46 1
INFO  16:07:16,396 - #34 ]
INFO  16:07:16,396 - #32 )
INFO  16:07:16,396 - #27 ;
INFO  16:07:16,396 - #5 print
INFO  16:07:16,396 - #31 (
INFO  16:07:16,396 - #47 nizch
INFO  16:07:16,396 - #33 [
INFO  16:07:16,396 - #47 jedan
INFO  16:07:16,396 - #13 *
INFO  16:07:16,396 - #46 2
INFO  16:07:16,396 - #34 ]
INFO  16:07:16,396 - #32 )
INFO  16:07:16,396 - #27 ;
INFO  16:07:16,396 - #47 a
INFO  16:07:16,396 - #24 =
INFO  16:07:16,396 - #46 1
INFO  16:07:16,396 - #27 ;
INFO  16:07:16,396 - #6 read
INFO  16:07:16,396 - #31 (
INFO  16:07:16,396 - #47 bodovi
INFO  16:07:16,396 - #32 )
INFO  16:07:16,396 - #27 ;
INFO  16:07:16,396 - #47 bodovi
INFO  16:07:16,396 - #24 =
INFO  16:07:16,396 - #12 -
INFO  16:07:16,397 - #47 bodovi
INFO  16:07:16,397 - #11 +
INFO  16:07:16,397 - #31 (
INFO  16:07:16,397 - #47 pet
INFO  16:07:16,397 - #13 *
INFO  16:07:16,397 - #47 a
INFO  16:07:16,397 - #14 /
INFO  16:07:16,397 - #46 2
INFO  16:07:16,397 - #12 -
INFO  16:07:16,397 - #47 jedan
INFO  16:07:16,397 - #32 )
INFO  16:07:16,397 - #13 *
INFO  16:07:16,397 - #47 bodovi
INFO  16:07:16,397 - #12 -
INFO  16:07:16,397 - #31 (
INFO  16:07:16,397 - #46 3
INFO  16:07:16,397 - #15 %
INFO  16:07:16,397 - #46 2
INFO  16:07:16,397 - #11 +
INFO  16:07:16,398 - #46 3
INFO  16:07:16,398 - #13 *
INFO  16:07:16,398 - #46 2
INFO  16:07:16,398 - #12 -
INFO  16:07:16,398 - #46 3
INFO  16:07:16,398 - #32 )
INFO  16:07:16,398 - #27 ;
INFO  16:07:16,398 - #5 print
INFO  16:07:16,398 - #31 (
INFO  16:07:16,398 - #47 bodovi
INFO  16:07:16,398 - #32 )
INFO  16:07:16,398 - #27 ;
INFO  16:07:16,398 - #47 mat
INFO  16:07:16,398 - #24 =
INFO  16:07:16,398 - #4 new
INFO  16:07:16,398 - #47 int
INFO  16:07:16,398 - #33 [
INFO  16:07:16,398 - #46 2
INFO  16:07:16,398 - #34 ]
INFO  16:07:16,398 - #33 [
INFO  16:07:16,398 - #46 3
INFO  16:07:16,398 - #34 ]
INFO  16:07:16,398 - #27 ;
INFO  16:07:16,398 - #47 mat
INFO  16:07:16,398 - #33 [
INFO  16:07:16,398 - #47 nula
INFO  16:07:16,398 - #34 ]
INFO  16:07:16,398 - #33 [
INFO  16:07:16,398 - #47 jedan
INFO  16:07:16,398 - #12 -
INFO  16:07:16,398 - #46 1
INFO  16:07:16,399 - #34 ]
INFO  16:07:16,399 - #24 =
INFO  16:07:16,399 - #47 jedan
INFO  16:07:16,399 - #27 ;
INFO  16:07:16,399 - #47 mat
INFO  16:07:16,399 - #33 [
INFO  16:07:16,399 - #46 0
INFO  16:07:16,399 - #34 ]
INFO  16:07:16,399 - #33 [
INFO  16:07:16,399 - #47 mat
INFO  16:07:16,399 - #33 [
INFO  16:07:16,399 - #46 0
INFO  16:07:16,399 - #34 ]
INFO  16:07:16,399 - #33 [
INFO  16:07:16,399 - #46 0
INFO  16:07:16,399 - #34 ]
INFO  16:07:16,399 - #34 ]
INFO  16:07:16,399 - #24 =
INFO  16:07:16,399 - #46 2
INFO  16:07:16,399 - #27 ;
INFO  16:07:16,399 - #47 mat
INFO  16:07:16,399 - #33 [
INFO  16:07:16,399 - #46 0
INFO  16:07:16,399 - #34 ]
INFO  16:07:16,399 - #33 [
INFO  16:07:16,399 - #47 mat
INFO  16:07:16,399 - #33 [
INFO  16:07:16,399 - #46 0
INFO  16:07:16,399 - #34 ]
INFO  16:07:16,399 - #33 [
INFO  16:07:16,399 - #46 1
INFO  16:07:16,399 - #34 ]
INFO  16:07:16,399 - #34 ]
INFO  16:07:16,399 - #24 =
INFO  16:07:16,399 - #46 5
INFO  16:07:16,399 - #27 ;
INFO  16:07:16,399 - #47 mat
INFO  16:07:16,399 - #33 [
INFO  16:07:16,400 - #46 1
INFO  16:07:16,400 - #34 ]
INFO  16:07:16,400 - #33 [
INFO  16:07:16,400 - #47 mat
INFO  16:07:16,400 - #33 [
INFO  16:07:16,400 - #46 0
INFO  16:07:16,400 - #34 ]
INFO  16:07:16,400 - #33 [
INFO  16:07:16,400 - #46 0
INFO  16:07:16,400 - #34 ]
INFO  16:07:16,400 - #13 *
INFO  16:07:16,400 - #46 2
INFO  16:07:16,400 - #34 ]
INFO  16:07:16,400 - #24 =
INFO  16:07:16,400 - #46 4
INFO  16:07:16,400 - #27 ;
INFO  16:07:16,400 - #47 mat
INFO  16:07:16,400 - #33 [
INFO  16:07:16,400 - #47 mat
INFO  16:07:16,400 - #33 [
INFO  16:07:16,400 - #46 0
INFO  16:07:16,400 - #34 ]
INFO  16:07:16,400 - #33 [
INFO  16:07:16,400 - #46 0
INFO  16:07:16,400 - #34 ]
INFO  16:07:16,400 - #34 ]
INFO  16:07:16,400 - #33 [
INFO  16:07:16,400 - #46 1
INFO  16:07:16,400 - #34 ]
INFO  16:07:16,400 - #24 =
INFO  16:07:16,400 - #46 3
INFO  16:07:16,400 - #27 ;
INFO  16:07:16,400 - #47 mat
INFO  16:07:16,400 - #33 [
INFO  16:07:16,400 - #46 1
INFO  16:07:16,400 - #34 ]
INFO  16:07:16,400 - #33 [
INFO  16:07:16,400 - #46 0
INFO  16:07:16,400 - #34 ]
INFO  16:07:16,400 - #24 =
INFO  16:07:16,400 - #46 2
INFO  16:07:16,400 - #27 ;
INFO  16:07:16,400 - #5 print
INFO  16:07:16,400 - #31 (
INFO  16:07:16,400 - #47 mat
INFO  16:07:16,401 - #33 [
INFO  16:07:16,401 - #46 1
INFO  16:07:16,401 - #34 ]
INFO  16:07:16,401 - #33 [
INFO  16:07:16,401 - #46 2
INFO  16:07:16,401 - #34 ]
INFO  16:07:16,401 - #32 )
INFO  16:07:16,401 - #27 ;
INFO  16:07:16,401 - #5 print
INFO  16:07:16,401 - #31 (
INFO  16:07:16,401 - #47 mat
INFO  16:07:16,401 - #33 [
INFO  16:07:16,401 - #46 0
INFO  16:07:16,401 - #34 ]
INFO  16:07:16,401 - #33 [
INFO  16:07:16,401 - #46 2
INFO  16:07:16,401 - #34 ]
INFO  16:07:16,401 - #32 )
INFO  16:07:16,401 - #27 ;
INFO  16:07:16,401 - #36 }
INFO  16:07:16,401 - #36 }
INFO  16:07:16,402 - ================= PARSIRANO STABLO =================
INFO  16:07:16,406 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  Declarations(
    Declarations(
      Declarations(
        Declarations(
          Declarations(
            Declarations(
              Declarations(
                NoDeclarations(
                ) [NoDeclarations]
                ConstantDeclaration(
                  ConDecl(
                    Type(
                     int
                    ) [Type]
                    ConstDef(
                     nula
                      NumConst(
                       0
                      ) [NumConst]
                    ) [ConstDef]
                    NoConstantDeclaration(
                    ) [NoConstantDeclaration]
                  ) [ConDecl]
                ) [ConstantDeclaration]
              ) [Declarations]
              ConstantDeclaration(
                ConDecl(
                  Type(
                   int
                  ) [Type]
                  ConstDef(
                   jedan
                    NumConst(
                     1
                    ) [NumConst]
                  ) [ConstDef]
                  NoConstantDeclaration(
                  ) [NoConstantDeclaration]
                ) [ConDecl]
              ) [ConstantDeclaration]
            ) [Declarations]
            ConstantDeclaration(
              ConDecl(
                Type(
                 int
                ) [Type]
                ConstDef(
                 pet
                  NumConst(
                   5
                  ) [NumConst]
                ) [ConstDef]
                NoConstantDeclaration(
                ) [NoConstantDeclaration]
              ) [ConDecl]
            ) [ConstantDeclaration]
          ) [Declarations]
          VariableDeclaration(
            VarDeclaration(
              Type(
               int
              ) [Type]
              OneVarDeclaration(
                AddVarDecl1(
                 niz
                  Brackets(
                  ) [Brackets]
                ) [AddVarDecl1]
              ) [OneVarDeclaration]
            ) [VarDeclaration]
          ) [VariableDeclaration]
        ) [Declarations]
        VariableDeclaration(
          VarDeclaration(
            Type(
             char
            ) [Type]
            OneVarDeclaration(
              AddVarDecl1(
               nizch
                Brackets(
                ) [Brackets]
              ) [AddVarDecl1]
            ) [OneVarDeclaration]
          ) [VarDeclaration]
        ) [VariableDeclaration]
      ) [Declarations]
      VariableDeclaration(
        VarDeclaration(
          Type(
           int
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             mat
              TwoBrackets(
              ) [TwoBrackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [VariableDeclaration]
    ) [Declarations]
    VariableDeclaration(
      VarDeclaration(
        Type(
         int
        ) [Type]
        OneVarDeclaration(
          AddVarDecl1(
           a
            NoBrackets(
            ) [NoBrackets]
          ) [AddVarDecl1]
        ) [OneVarDeclaration]
      ) [VarDeclaration]
    ) [VariableDeclaration]
  ) [Declarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      ListOfVarDecl(
        ListOfVarDecl(
          NoVarDeclarations(
          ) [NoVarDeclarations]
          VarDeclaration(
            Type(
             int
            ) [Type]
            OneVarDeclaration(
              AddVarDecl1(
               bodovi
                NoBrackets(
                ) [NoBrackets]
              ) [AddVarDecl1]
            ) [OneVarDeclaration]
          ) [VarDeclaration]
        ) [ListOfVarDecl]
        VarDeclaration(
          Type(
           bool
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             bt
              NoBrackets(
              ) [NoBrackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [ListOfVarDecl]
      Statements(
        Statements(
          Statements(
            Statements(
              Statements(
                Statements(
                  Statements(
                    Statements(
                      Statements(
                        Statements(
                          Statements(
                            Statements(
                              Statements(
                                Statements(
                                  Statements(
                                    Statements(
                                      Statements(
                                        Statements(
                                          Statements(
                                            Statements(
                                              Statements(
                                                Statements(
                                                  Statements(
                                                    Statements(
                                                      Statements(
                                                        Statements(
                                                          Statements(
                                                            Statements(
                                                              Statements(
                                                                Statements(
                                                                  Statements(
                                                                    Statements(
                                                                      NoStatements(
                                                                      ) [NoStatements]
                                                                      DesignatorStat(
                                                                        DesignatorExpr(
                                                                          Designator(
                                                                            WithoutNamespace(
                                                                             bodovi
                                                                            ) [WithoutNamespace]
                                                                            NoArrayExpression(
                                                                            ) [NoArrayExpression]
                                                                          ) [Designator]
                                                                          AssignOperation(
                                                                          ) [AssignOperation]
                                                                          PositiveStartExpr(
                                                                            SingleTerm(
                                                                              NumberConst(
                                                                               0
                                                                              ) [NumberConst]
                                                                            ) [SingleTerm]
                                                                          ) [PositiveStartExpr]
                                                                        ) [DesignatorExpr]
                                                                      ) [DesignatorStat]
                                                                    ) [Statements]
                                                                    DesignatorStat(
                                                                      DesignatorPP(
                                                                        Designator(
                                                                          WithoutNamespace(
                                                                           bodovi
                                                                          ) [WithoutNamespace]
                                                                          NoArrayExpression(
                                                                          ) [NoArrayExpression]
                                                                        ) [Designator]
                                                                      ) [DesignatorPP]
                                                                    ) [DesignatorStat]
                                                                  ) [Statements]
                                                                  DesignatorStat(
                                                                    DesignatorExpr(
                                                                      Designator(
                                                                        WithoutNamespace(
                                                                         bodovi
                                                                        ) [WithoutNamespace]
                                                                        NoArrayExpression(
                                                                        ) [NoArrayExpression]
                                                                      ) [Designator]
                                                                      AssignOperation(
                                                                      ) [AssignOperation]
                                                                      AddExpression(
                                                                        PositiveStartExpr(
                                                                          SingleTerm(
                                                                            DesignatorFact(
                                                                              Designator(
                                                                                WithoutNamespace(
                                                                                 bodovi
                                                                                ) [WithoutNamespace]
                                                                                NoArrayExpression(
                                                                                ) [NoArrayExpression]
                                                                              ) [Designator]
                                                                            ) [DesignatorFact]
                                                                          ) [SingleTerm]
                                                                        ) [PositiveStartExpr]
                                                                        Plus(
                                                                        ) [Plus]
                                                                        SingleTerm(
                                                                          DesignatorFact(
                                                                            Designator(
                                                                              WithoutNamespace(
                                                                               jedan
                                                                              ) [WithoutNamespace]
                                                                              NoArrayExpression(
                                                                              ) [NoArrayExpression]
                                                                            ) [Designator]
                                                                          ) [DesignatorFact]
                                                                        ) [SingleTerm]
                                                                      ) [AddExpression]
                                                                    ) [DesignatorExpr]
                                                                  ) [DesignatorStat]
                                                                ) [Statements]
                                                                DesignatorStat(
                                                                  DesignatorExpr(
                                                                    Designator(
                                                                      WithoutNamespace(
                                                                       bodovi
                                                                      ) [WithoutNamespace]
                                                                      NoArrayExpression(
                                                                      ) [NoArrayExpression]
                                                                    ) [Designator]
                                                                    AssignOperation(
                                                                    ) [AssignOperation]
                                                                    PositiveStartExpr(
                                                                      MultipleTerms(
                                                                        SingleTerm(
                                                                          DesignatorFact(
                                                                            Designator(
                                                                              WithoutNamespace(
                                                                               bodovi
                                                                              ) [WithoutNamespace]
                                                                              NoArrayExpression(
                                                                              ) [NoArrayExpression]
                                                                            ) [Designator]
                                                                          ) [DesignatorFact]
                                                                        ) [SingleTerm]
                                                                        Multiply(
                                                                        ) [Multiply]
                                                                        DesignatorFact(
                                                                          Designator(
                                                                            WithoutNamespace(
                                                                             pet
                                                                            ) [WithoutNamespace]
                                                                            NoArrayExpression(
                                                                            ) [NoArrayExpression]
                                                                          ) [Designator]
                                                                        ) [DesignatorFact]
                                                                      ) [MultipleTerms]
                                                                    ) [PositiveStartExpr]
                                                                  ) [DesignatorExpr]
                                                                ) [DesignatorStat]
                                                              ) [Statements]
                                                              DesignatorStat(
                                                                DesignatorMM(
                                                                  Designator(
                                                                    WithoutNamespace(
                                                                     bodovi
                                                                    ) [WithoutNamespace]
                                                                    NoArrayExpression(
                                                                    ) [NoArrayExpression]
                                                                  ) [Designator]
                                                                ) [DesignatorMM]
                                                              ) [DesignatorStat]
                                                            ) [Statements]
                                                            PrintExpr(
                                                              PositiveStartExpr(
                                                                SingleTerm(
                                                                  DesignatorFact(
                                                                    Designator(
                                                                      WithoutNamespace(
                                                                       bodovi
                                                                      ) [WithoutNamespace]
                                                                      NoArrayExpression(
                                                                      ) [NoArrayExpression]
                                                                    ) [Designator]
                                                                  ) [DesignatorFact]
                                                                ) [SingleTerm]
                                                              ) [PositiveStartExpr]
                                                              NoNumConstOpt(
                                                              ) [NoNumConstOpt]
                                                            ) [PrintExpr]
                                                          ) [Statements]
                                                          DesignatorStat(
                                                            DesignatorExpr(
                                                              Designator(
                                                                WithoutNamespace(
                                                                 niz
                                                                ) [WithoutNamespace]
                                                                NoArrayExpression(
                                                                ) [NoArrayExpression]
                                                              ) [Designator]
                                                              AssignOperation(
                                                              ) [AssignOperation]
                                                              PositiveStartExpr(
                                                                SingleTerm(
                                                                  NewType(
                                                                    Type(
                                                                     int
                                                                    ) [Type]
                                                                    PositiveStartExpr(
                                                                      SingleTerm(
                                                                        NumberConst(
                                                                         3
                                                                        ) [NumberConst]
                                                                      ) [SingleTerm]
                                                                    ) [PositiveStartExpr]
                                                                  ) [NewType]
                                                                ) [SingleTerm]
                                                              ) [PositiveStartExpr]
                                                            ) [DesignatorExpr]
                                                          ) [DesignatorStat]
                                                        ) [Statements]
                                                        DesignatorStat(
                                                          DesignatorExpr(
                                                            Designator(
                                                              WithoutNamespace(
                                                               niz
                                                              ) [WithoutNamespace]
                                                              AddArrayExpression(
                                                                BraExpr(
                                                                  PositiveStartExpr(
                                                                    SingleTerm(
                                                                      DesignatorFact(
                                                                        Designator(
                                                                          WithoutNamespace(
                                                                           nula
                                                                          ) [WithoutNamespace]
                                                                          NoArrayExpression(
                                                                          ) [NoArrayExpression]
                                                                        ) [Designator]
                                                                      ) [DesignatorFact]
                                                                    ) [SingleTerm]
                                                                  ) [PositiveStartExpr]
                                                                ) [BraExpr]
                                                              ) [AddArrayExpression]
                                                            ) [Designator]
                                                            AssignOperation(
                                                            ) [AssignOperation]
                                                            PositiveStartExpr(
                                                              SingleTerm(
                                                                DesignatorFact(
                                                                  Designator(
                                                                    WithoutNamespace(
                                                                     jedan
                                                                    ) [WithoutNamespace]
                                                                    NoArrayExpression(
                                                                    ) [NoArrayExpression]
                                                                  ) [Designator]
                                                                ) [DesignatorFact]
                                                              ) [SingleTerm]
                                                            ) [PositiveStartExpr]
                                                          ) [DesignatorExpr]
                                                        ) [DesignatorStat]
                                                      ) [Statements]
                                                      DesignatorStat(
                                                        DesignatorExpr(
                                                          Designator(
                                                            WithoutNamespace(
                                                             niz
                                                            ) [WithoutNamespace]
                                                            AddArrayExpression(
                                                              BraExpr(
                                                                PositiveStartExpr(
                                                                  SingleTerm(
                                                                    NumberConst(
                                                                     1
                                                                    ) [NumberConst]
                                                                  ) [SingleTerm]
                                                                ) [PositiveStartExpr]
                                                              ) [BraExpr]
                                                            ) [AddArrayExpression]
                                                          ) [Designator]
                                                          AssignOperation(
                                                          ) [AssignOperation]
                                                          PositiveStartExpr(
                                                            SingleTerm(
                                                              NumberConst(
                                                               2
                                                              ) [NumberConst]
                                                            ) [SingleTerm]
                                                          ) [PositiveStartExpr]
                                                        ) [DesignatorExpr]
                                                      ) [DesignatorStat]
                                                    ) [Statements]
                                                    DesignatorStat(
                                                      DesignatorExpr(
                                                        Designator(
                                                          WithoutNamespace(
                                                           niz
                                                          ) [WithoutNamespace]
                                                          AddArrayExpression(
                                                            BraExpr(
                                                              PositiveStartExpr(
                                                                SingleTerm(
                                                                  DesignatorFact(
                                                                    Designator(
                                                                      WithoutNamespace(
                                                                       niz
                                                                      ) [WithoutNamespace]
                                                                      AddArrayExpression(
                                                                        BraExpr(
                                                                          PositiveStartExpr(
                                                                            SingleTerm(
                                                                              DesignatorFact(
                                                                                Designator(
                                                                                  WithoutNamespace(
                                                                                   jedan
                                                                                  ) [WithoutNamespace]
                                                                                  NoArrayExpression(
                                                                                  ) [NoArrayExpression]
                                                                                ) [Designator]
                                                                              ) [DesignatorFact]
                                                                            ) [SingleTerm]
                                                                          ) [PositiveStartExpr]
                                                                        ) [BraExpr]
                                                                      ) [AddArrayExpression]
                                                                    ) [Designator]
                                                                  ) [DesignatorFact]
                                                                ) [SingleTerm]
                                                              ) [PositiveStartExpr]
                                                            ) [BraExpr]
                                                          ) [AddArrayExpression]
                                                        ) [Designator]
                                                        AssignOperation(
                                                        ) [AssignOperation]
                                                        PositiveStartExpr(
                                                          MultipleTerms(
                                                            SingleTerm(
                                                              DesignatorFact(
                                                                Designator(
                                                                  WithoutNamespace(
                                                                   niz
                                                                  ) [WithoutNamespace]
                                                                  AddArrayExpression(
                                                                    BraExpr(
                                                                      PositiveStartExpr(
                                                                        SingleTerm(
                                                                          DesignatorFact(
                                                                            Designator(
                                                                              WithoutNamespace(
                                                                               niz
                                                                              ) [WithoutNamespace]
                                                                              AddArrayExpression(
                                                                                BraExpr(
                                                                                  PositiveStartExpr(
                                                                                    SingleTerm(
                                                                                      NumberConst(
                                                                                       0
                                                                                      ) [NumberConst]
                                                                                    ) [SingleTerm]
                                                                                  ) [PositiveStartExpr]
                                                                                ) [BraExpr]
                                                                              ) [AddArrayExpression]
                                                                            ) [Designator]
                                                                          ) [DesignatorFact]
                                                                        ) [SingleTerm]
                                                                      ) [PositiveStartExpr]
                                                                    ) [BraExpr]
                                                                  ) [AddArrayExpression]
                                                                ) [Designator]
                                                              ) [DesignatorFact]
                                                            ) [SingleTerm]
                                                            Multiply(
                                                            ) [Multiply]
                                                            NumberConst(
                                                             3
                                                            ) [NumberConst]
                                                          ) [MultipleTerms]
                                                        ) [PositiveStartExpr]
                                                      ) [DesignatorExpr]
                                                    ) [DesignatorStat]
                                                  ) [Statements]
                                                  DesignatorStat(
                                                    DesignatorExpr(
                                                      Designator(
                                                        WithoutNamespace(
                                                         bodovi
                                                        ) [WithoutNamespace]
                                                        NoArrayExpression(
                                                        ) [NoArrayExpression]
                                                      ) [Designator]
                                                      AssignOperation(
                                                      ) [AssignOperation]
                                                      PositiveStartExpr(
                                                        MultipleTerms(
                                                          SingleTerm(
                                                            DesignatorFact(
                                                              Designator(
                                                                WithoutNamespace(
                                                                 niz
                                                                ) [WithoutNamespace]
                                                                AddArrayExpression(
                                                                  BraExpr(
                                                                    PositiveStartExpr(
                                                                      SingleTerm(
                                                                        NumberConst(
                                                                         2
                                                                        ) [NumberConst]
                                                                      ) [SingleTerm]
                                                                    ) [PositiveStartExpr]
                                                                  ) [BraExpr]
                                                                ) [AddArrayExpression]
                                                              ) [Designator]
                                                            ) [DesignatorFact]
                                                          ) [SingleTerm]
                                                          Divide(
                                                          ) [Divide]
                                                          DesignatorFact(
                                                            Designator(
                                                              WithoutNamespace(
                                                               niz
                                                              ) [WithoutNamespace]
                                                              AddArrayExpression(
                                                                BraExpr(
                                                                  PositiveStartExpr(
                                                                    SingleTerm(
                                                                      NumberConst(
                                                                       0
                                                                      ) [NumberConst]
                                                                    ) [SingleTerm]
                                                                  ) [PositiveStartExpr]
                                                                ) [BraExpr]
                                                              ) [AddArrayExpression]
                                                            ) [Designator]
                                                          ) [DesignatorFact]
                                                        ) [MultipleTerms]
                                                      ) [PositiveStartExpr]
                                                    ) [DesignatorExpr]
                                                  ) [DesignatorStat]
                                                ) [Statements]
                                                PrintExpr(
                                                  PositiveStartExpr(
                                                    SingleTerm(
                                                      DesignatorFact(
                                                        Designator(
                                                          WithoutNamespace(
                                                           bodovi
                                                          ) [WithoutNamespace]
                                                          NoArrayExpression(
                                                          ) [NoArrayExpression]
                                                        ) [Designator]
                                                      ) [DesignatorFact]
                                                    ) [SingleTerm]
                                                  ) [PositiveStartExpr]
                                                  NoNumConstOpt(
                                                  ) [NoNumConstOpt]
                                                ) [PrintExpr]
                                              ) [Statements]
                                              PrintExpr(
                                                PositiveStartExpr(
                                                  SingleTerm(
                                                    DesignatorFact(
                                                      Designator(
                                                        WithoutNamespace(
                                                         niz
                                                        ) [WithoutNamespace]
                                                        AddArrayExpression(
                                                          BraExpr(
                                                            PositiveStartExpr(
                                                              SingleTerm(
                                                                NumberConst(
                                                                 2
                                                                ) [NumberConst]
                                                              ) [SingleTerm]
                                                            ) [PositiveStartExpr]
                                                          ) [BraExpr]
                                                        ) [AddArrayExpression]
                                                      ) [Designator]
                                                    ) [DesignatorFact]
                                                  ) [SingleTerm]
                                                ) [PositiveStartExpr]
                                                NoNumConstOpt(
                                                ) [NoNumConstOpt]
                                              ) [PrintExpr]
                                            ) [Statements]
                                            DesignatorStat(
                                              DesignatorExpr(
                                                Designator(
                                                  WithoutNamespace(
                                                   nizch
                                                  ) [WithoutNamespace]
                                                  NoArrayExpression(
                                                  ) [NoArrayExpression]
                                                ) [Designator]
                                                AssignOperation(
                                                ) [AssignOperation]
                                                PositiveStartExpr(
                                                  SingleTerm(
                                                    NewType(
                                                      Type(
                                                       char
                                                      ) [Type]
                                                      PositiveStartExpr(
                                                        SingleTerm(
                                                          NumberConst(
                                                           3
                                                          ) [NumberConst]
                                                        ) [SingleTerm]
                                                      ) [PositiveStartExpr]
                                                    ) [NewType]
                                                  ) [SingleTerm]
                                                ) [PositiveStartExpr]
                                              ) [DesignatorExpr]
                                            ) [DesignatorStat]
                                          ) [Statements]
                                          DesignatorStat(
                                            DesignatorExpr(
                                              Designator(
                                                WithoutNamespace(
                                                 nizch
                                                ) [WithoutNamespace]
                                                AddArrayExpression(
                                                  BraExpr(
                                                    PositiveStartExpr(
                                                      SingleTerm(
                                                        NumberConst(
                                                         0
                                                        ) [NumberConst]
                                                      ) [SingleTerm]
                                                    ) [PositiveStartExpr]
                                                  ) [BraExpr]
                                                ) [AddArrayExpression]
                                              ) [Designator]
                                              AssignOperation(
                                              ) [AssignOperation]
                                              PositiveStartExpr(
                                                SingleTerm(
                                                  CharacterConst(
                                                   a
                                                  ) [CharacterConst]
                                                ) [SingleTerm]
                                              ) [PositiveStartExpr]
                                            ) [DesignatorExpr]
                                          ) [DesignatorStat]
                                        ) [Statements]
                                        DesignatorStat(
                                          DesignatorExpr(
                                            Designator(
                                              WithoutNamespace(
                                               nizch
                                              ) [WithoutNamespace]
                                              AddArrayExpression(
                                                BraExpr(
                                                  PositiveStartExpr(
                                                    SingleTerm(
                                                      DesignatorFact(
                                                        Designator(
                                                          WithoutNamespace(
                                                           jedan
                                                          ) [WithoutNamespace]
                                                          NoArrayExpression(
                                                          ) [NoArrayExpression]
                                                        ) [Designator]
                                                      ) [DesignatorFact]
                                                    ) [SingleTerm]
                                                  ) [PositiveStartExpr]
                                                ) [BraExpr]
                                              ) [AddArrayExpression]
                                            ) [Designator]
                                            AssignOperation(
                                            ) [AssignOperation]
                                            PositiveStartExpr(
                                              SingleTerm(
                                                CharacterConst(
                                                 b
                                                ) [CharacterConst]
                                              ) [SingleTerm]
                                            ) [PositiveStartExpr]
                                          ) [DesignatorExpr]
                                        ) [DesignatorStat]
                                      ) [Statements]
                                      DesignatorStat(
                                        DesignatorExpr(
                                          Designator(
                                            WithoutNamespace(
                                             nizch
                                            ) [WithoutNamespace]
                                            AddArrayExpression(
                                              BraExpr(
                                                AddExpression(
                                                  PositiveStartExpr(
                                                    SingleTerm(
                                                      DesignatorFact(
                                                        Designator(
                                                          WithoutNamespace(
                                                           pet
                                                          ) [WithoutNamespace]
                                                          NoArrayExpression(
                                                          ) [NoArrayExpression]
                                                        ) [Designator]
                                                      ) [DesignatorFact]
                                                    ) [SingleTerm]
                                                  ) [PositiveStartExpr]
                                                  Minus(
                                                  ) [Minus]
                                                  SingleTerm(
                                                    NumberConst(
                                                     3
                                                    ) [NumberConst]
                                                  ) [SingleTerm]
                                                ) [AddExpression]
                                              ) [BraExpr]
                                            ) [AddArrayExpression]
                                          ) [Designator]
                                          AssignOperation(
                                          ) [AssignOperation]
                                          PositiveStartExpr(
                                            SingleTerm(
                                              CharacterConst(
                                               c
                                              ) [CharacterConst]
                                            ) [SingleTerm]
                                          ) [PositiveStartExpr]
                                        ) [DesignatorExpr]
                                      ) [DesignatorStat]
                                    ) [Statements]
                                    PrintExpr(
                                      PositiveStartExpr(
                                        SingleTerm(
                                          DesignatorFact(
                                            Designator(
                                              WithoutNamespace(
                                               nizch
                                              ) [WithoutNamespace]
                                              AddArrayExpression(
                                                BraExpr(
                                                  PositiveStartExpr(
                                                    SingleTerm(
                                                      NumberConst(
                                                       1
                                                      ) [NumberConst]
                                                    ) [SingleTerm]
                                                  ) [PositiveStartExpr]
                                                ) [BraExpr]
                                              ) [AddArrayExpression]
                                            ) [Designator]
                                          ) [DesignatorFact]
                                        ) [SingleTerm]
                                      ) [PositiveStartExpr]
                                      NoNumConstOpt(
                                      ) [NoNumConstOpt]
                                    ) [PrintExpr]
                                  ) [Statements]
                                  PrintExpr(
                                    PositiveStartExpr(
                                      SingleTerm(
                                        DesignatorFact(
                                          Designator(
                                            WithoutNamespace(
                                             nizch
                                            ) [WithoutNamespace]
                                            AddArrayExpression(
                                              BraExpr(
                                                PositiveStartExpr(
                                                  MultipleTerms(
                                                    SingleTerm(
                                                      DesignatorFact(
                                                        Designator(
                                                          WithoutNamespace(
                                                           jedan
                                                          ) [WithoutNamespace]
                                                          NoArrayExpression(
                                                          ) [NoArrayExpression]
                                                        ) [Designator]
                                                      ) [DesignatorFact]
                                                    ) [SingleTerm]
                                                    Multiply(
                                                    ) [Multiply]
                                                    NumberConst(
                                                     2
                                                    ) [NumberConst]
                                                  ) [MultipleTerms]
                                                ) [PositiveStartExpr]
                                              ) [BraExpr]
                                            ) [AddArrayExpression]
                                          ) [Designator]
                                        ) [DesignatorFact]
                                      ) [SingleTerm]
                                    ) [PositiveStartExpr]
                                    NoNumConstOpt(
                                    ) [NoNumConstOpt]
                                  ) [PrintExpr]
                                ) [Statements]
                                DesignatorStat(
                                  DesignatorExpr(
                                    Designator(
                                      WithoutNamespace(
                                       a
                                      ) [WithoutNamespace]
                                      NoArrayExpression(
                                      ) [NoArrayExpression]
                                    ) [Designator]
                                    AssignOperation(
                                    ) [AssignOperation]
                                    PositiveStartExpr(
                                      SingleTerm(
                                        NumberConst(
                                         1
                                        ) [NumberConst]
                                      ) [SingleTerm]
                                    ) [PositiveStartExpr]
                                  ) [DesignatorExpr]
                                ) [DesignatorStat]
                              ) [Statements]
                              ReadDesignator(
                                Designator(
                                  WithoutNamespace(
                                   bodovi
                                  ) [WithoutNamespace]
                                  NoArrayExpression(
                                  ) [NoArrayExpression]
                                ) [Designator]
                              ) [ReadDesignator]
                            ) [Statements]
                            DesignatorStat(
                              DesignatorExpr(
                                Designator(
                                  WithoutNamespace(
                                   bodovi
                                  ) [WithoutNamespace]
                                  NoArrayExpression(
                                  ) [NoArrayExpression]
                                ) [Designator]
                                AssignOperation(
                                ) [AssignOperation]
                                AddExpression(
                                  AddExpression(
                                    NegativeStartExpr(
                                      SingleTerm(
                                        DesignatorFact(
                                          Designator(
                                            WithoutNamespace(
                                             bodovi
                                            ) [WithoutNamespace]
                                            NoArrayExpression(
                                            ) [NoArrayExpression]
                                          ) [Designator]
                                        ) [DesignatorFact]
                                      ) [SingleTerm]
                                    ) [NegativeStartExpr]
                                    Plus(
                                    ) [Plus]
                                    MultipleTerms(
                                      SingleTerm(
                                        ExpressionFact(
                                          AddExpression(
                                            PositiveStartExpr(
                                              MultipleTerms(
                                                MultipleTerms(
                                                  SingleTerm(
                                                    DesignatorFact(
                                                      Designator(
                                                        WithoutNamespace(
                                                         pet
                                                        ) [WithoutNamespace]
                                                        NoArrayExpression(
                                                        ) [NoArrayExpression]
                                                      ) [Designator]
                                                    ) [DesignatorFact]
                                                  ) [SingleTerm]
                                                  Multiply(
                                                  ) [Multiply]
                                                  DesignatorFact(
                                                    Designator(
                                                      WithoutNamespace(
                                                       a
                                                      ) [WithoutNamespace]
                                                      NoArrayExpression(
                                                      ) [NoArrayExpression]
                                                    ) [Designator]
                                                  ) [DesignatorFact]
                                                ) [MultipleTerms]
                                                Divide(
                                                ) [Divide]
                                                NumberConst(
                                                 2
                                                ) [NumberConst]
                                              ) [MultipleTerms]
                                            ) [PositiveStartExpr]
                                            Minus(
                                            ) [Minus]
                                            SingleTerm(
                                              DesignatorFact(
                                                Designator(
                                                  WithoutNamespace(
                                                   jedan
                                                  ) [WithoutNamespace]
                                                  NoArrayExpression(
                                                  ) [NoArrayExpression]
                                                ) [Designator]
                                              ) [DesignatorFact]
                                            ) [SingleTerm]
                                          ) [AddExpression]
                                        ) [ExpressionFact]
                                      ) [SingleTerm]
                                      Multiply(
                                      ) [Multiply]
                                      DesignatorFact(
                                        Designator(
                                          WithoutNamespace(
                                           bodovi
                                          ) [WithoutNamespace]
                                          NoArrayExpression(
                                          ) [NoArrayExpression]
                                        ) [Designator]
                                      ) [DesignatorFact]
                                    ) [MultipleTerms]
                                  ) [AddExpression]
                                  Minus(
                                  ) [Minus]
                                  SingleTerm(
                                    ExpressionFact(
                                      AddExpression(
                                        AddExpression(
                                          PositiveStartExpr(
                                            MultipleTerms(
                                              SingleTerm(
                                                NumberConst(
                                                 3
                                                ) [NumberConst]
                                              ) [SingleTerm]
                                              Modulo(
                                              ) [Modulo]
                                              NumberConst(
                                               2
                                              ) [NumberConst]
                                            ) [MultipleTerms]
                                          ) [PositiveStartExpr]
                                          Plus(
                                          ) [Plus]
                                          MultipleTerms(
                                            SingleTerm(
                                              NumberConst(
                                               3
                                              ) [NumberConst]
                                            ) [SingleTerm]
                                            Multiply(
                                            ) [Multiply]
                                            NumberConst(
                                             2
                                            ) [NumberConst]
                                          ) [MultipleTerms]
                                        ) [AddExpression]
                                        Minus(
                                        ) [Minus]
                                        SingleTerm(
                                          NumberConst(
                                           3
                                          ) [NumberConst]
                                        ) [SingleTerm]
                                      ) [AddExpression]
                                    ) [ExpressionFact]
                                  ) [SingleTerm]
                                ) [AddExpression]
                              ) [DesignatorExpr]
                            ) [DesignatorStat]
                          ) [Statements]
                          PrintExpr(
                            PositiveStartExpr(
                              SingleTerm(
                                DesignatorFact(
                                  Designator(
                                    WithoutNamespace(
                                     bodovi
                                    ) [WithoutNamespace]
                                    NoArrayExpression(
                                    ) [NoArrayExpression]
                                  ) [Designator]
                                ) [DesignatorFact]
                              ) [SingleTerm]
                            ) [PositiveStartExpr]
                            NoNumConstOpt(
                            ) [NoNumConstOpt]
                          ) [PrintExpr]
                        ) [Statements]
                        DesignatorStat(
                          DesignatorExpr(
                            Designator(
                              WithoutNamespace(
                               mat
                              ) [WithoutNamespace]
                              NoArrayExpression(
                              ) [NoArrayExpression]
                            ) [Designator]
                            AssignOperation(
                            ) [AssignOperation]
                            PositiveStartExpr(
                              SingleTerm(
                                NewTypeMat(
                                  Type(
                                   int
                                  ) [Type]
                                  PositiveStartExpr(
                                    SingleTerm(
                                      NumberConst(
                                       2
                                      ) [NumberConst]
                                    ) [SingleTerm]
                                  ) [PositiveStartExpr]
                                  PositiveStartExpr(
                                    SingleTerm(
                                      NumberConst(
                                       3
                                      ) [NumberConst]
                                    ) [SingleTerm]
                                  ) [PositiveStartExpr]
                                ) [NewTypeMat]
                              ) [SingleTerm]
                            ) [PositiveStartExpr]
                          ) [DesignatorExpr]
                        ) [DesignatorStat]
                      ) [Statements]
                      DesignatorStat(
                        DesignatorExpr(
                          Designator(
                            WithoutNamespace(
                             mat
                            ) [WithoutNamespace]
                            AddMatrixExpression(
                              BraExpr(
                                PositiveStartExpr(
                                  SingleTerm(
                                    DesignatorFact(
                                      Designator(
                                        WithoutNamespace(
                                         nula
                                        ) [WithoutNamespace]
                                        NoArrayExpression(
                                        ) [NoArrayExpression]
                                      ) [Designator]
                                    ) [DesignatorFact]
                                  ) [SingleTerm]
                                ) [PositiveStartExpr]
                              ) [BraExpr]
                              BraExpr(
                                AddExpression(
                                  PositiveStartExpr(
                                    SingleTerm(
                                      DesignatorFact(
                                        Designator(
                                          WithoutNamespace(
                                           jedan
                                          ) [WithoutNamespace]
                                          NoArrayExpression(
                                          ) [NoArrayExpression]
                                        ) [Designator]
                                      ) [DesignatorFact]
                                    ) [SingleTerm]
                                  ) [PositiveStartExpr]
                                  Minus(
                                  ) [Minus]
                                  SingleTerm(
                                    NumberConst(
                                     1
                                    ) [NumberConst]
                                  ) [SingleTerm]
                                ) [AddExpression]
                              ) [BraExpr]
                            ) [AddMatrixExpression]
                          ) [Designator]
                          AssignOperation(
                          ) [AssignOperation]
                          PositiveStartExpr(
                            SingleTerm(
                              DesignatorFact(
                                Designator(
                                  WithoutNamespace(
                                   jedan
                                  ) [WithoutNamespace]
                                  NoArrayExpression(
                                  ) [NoArrayExpression]
                                ) [Designator]
                              ) [DesignatorFact]
                            ) [SingleTerm]
                          ) [PositiveStartExpr]
                        ) [DesignatorExpr]
                      ) [DesignatorStat]
                    ) [Statements]
                    DesignatorStat(
                      DesignatorExpr(
                        Designator(
                          WithoutNamespace(
                           mat
                          ) [WithoutNamespace]
                          AddMatrixExpression(
                            BraExpr(
                              PositiveStartExpr(
                                SingleTerm(
                                  NumberConst(
                                   0
                                  ) [NumberConst]
                                ) [SingleTerm]
                              ) [PositiveStartExpr]
                            ) [BraExpr]
                            BraExpr(
                              PositiveStartExpr(
                                SingleTerm(
                                  DesignatorFact(
                                    Designator(
                                      WithoutNamespace(
                                       mat
                                      ) [WithoutNamespace]
                                      AddMatrixExpression(
                                        BraExpr(
                                          PositiveStartExpr(
                                            SingleTerm(
                                              NumberConst(
                                               0
                                              ) [NumberConst]
                                            ) [SingleTerm]
                                          ) [PositiveStartExpr]
                                        ) [BraExpr]
                                        BraExpr(
                                          PositiveStartExpr(
                                            SingleTerm(
                                              NumberConst(
                                               0
                                              ) [NumberConst]
                                            ) [SingleTerm]
                                          ) [PositiveStartExpr]
                                        ) [BraExpr]
                                      ) [AddMatrixExpression]
                                    ) [Designator]
                                  ) [DesignatorFact]
                                ) [SingleTerm]
                              ) [PositiveStartExpr]
                            ) [BraExpr]
                          ) [AddMatrixExpression]
                        ) [Designator]
                        AssignOperation(
                        ) [AssignOperation]
                        PositiveStartExpr(
                          SingleTerm(
                            NumberConst(
                             2
                            ) [NumberConst]
                          ) [SingleTerm]
                        ) [PositiveStartExpr]
                      ) [DesignatorExpr]
                    ) [DesignatorStat]
                  ) [Statements]
                  DesignatorStat(
                    DesignatorExpr(
                      Designator(
                        WithoutNamespace(
                         mat
                        ) [WithoutNamespace]
                        AddMatrixExpression(
                          BraExpr(
                            PositiveStartExpr(
                              SingleTerm(
                                NumberConst(
                                 0
                                ) [NumberConst]
                              ) [SingleTerm]
                            ) [PositiveStartExpr]
                          ) [BraExpr]
                          BraExpr(
                            PositiveStartExpr(
                              SingleTerm(
                                DesignatorFact(
                                  Designator(
                                    WithoutNamespace(
                                     mat
                                    ) [WithoutNamespace]
                                    AddMatrixExpression(
                                      BraExpr(
                                        PositiveStartExpr(
                                          SingleTerm(
                                            NumberConst(
                                             0
                                            ) [NumberConst]
                                          ) [SingleTerm]
                                        ) [PositiveStartExpr]
                                      ) [BraExpr]
                                      BraExpr(
                                        PositiveStartExpr(
                                          SingleTerm(
                                            NumberConst(
                                             1
                                            ) [NumberConst]
                                          ) [SingleTerm]
                                        ) [PositiveStartExpr]
                                      ) [BraExpr]
                                    ) [AddMatrixExpression]
                                  ) [Designator]
                                ) [DesignatorFact]
                              ) [SingleTerm]
                            ) [PositiveStartExpr]
                          ) [BraExpr]
                        ) [AddMatrixExpression]
                      ) [Designator]
                      AssignOperation(
                      ) [AssignOperation]
                      PositiveStartExpr(
                        SingleTerm(
                          NumberConst(
                           5
                          ) [NumberConst]
                        ) [SingleTerm]
                      ) [PositiveStartExpr]
                    ) [DesignatorExpr]
                  ) [DesignatorStat]
                ) [Statements]
                DesignatorStat(
                  DesignatorExpr(
                    Designator(
                      WithoutNamespace(
                       mat
                      ) [WithoutNamespace]
                      AddMatrixExpression(
                        BraExpr(
                          PositiveStartExpr(
                            SingleTerm(
                              NumberConst(
                               1
                              ) [NumberConst]
                            ) [SingleTerm]
                          ) [PositiveStartExpr]
                        ) [BraExpr]
                        BraExpr(
                          PositiveStartExpr(
                            MultipleTerms(
                              SingleTerm(
                                DesignatorFact(
                                  Designator(
                                    WithoutNamespace(
                                     mat
                                    ) [WithoutNamespace]
                                    AddMatrixExpression(
                                      BraExpr(
                                        PositiveStartExpr(
                                          SingleTerm(
                                            NumberConst(
                                             0
                                            ) [NumberConst]
                                          ) [SingleTerm]
                                        ) [PositiveStartExpr]
                                      ) [BraExpr]
                                      BraExpr(
                                        PositiveStartExpr(
                                          SingleTerm(
                                            NumberConst(
                                             0
                                            ) [NumberConst]
                                          ) [SingleTerm]
                                        ) [PositiveStartExpr]
                                      ) [BraExpr]
                                    ) [AddMatrixExpression]
                                  ) [Designator]
                                ) [DesignatorFact]
                              ) [SingleTerm]
                              Multiply(
                              ) [Multiply]
                              NumberConst(
                               2
                              ) [NumberConst]
                            ) [MultipleTerms]
                          ) [PositiveStartExpr]
                        ) [BraExpr]
                      ) [AddMatrixExpression]
                    ) [Designator]
                    AssignOperation(
                    ) [AssignOperation]
                    PositiveStartExpr(
                      SingleTerm(
                        NumberConst(
                         4
                        ) [NumberConst]
                      ) [SingleTerm]
                    ) [PositiveStartExpr]
                  ) [DesignatorExpr]
                ) [DesignatorStat]
              ) [Statements]
              DesignatorStat(
                DesignatorExpr(
                  Designator(
                    WithoutNamespace(
                     mat
                    ) [WithoutNamespace]
                    AddMatrixExpression(
                      BraExpr(
                        PositiveStartExpr(
                          SingleTerm(
                            DesignatorFact(
                              Designator(
                                WithoutNamespace(
                                 mat
                                ) [WithoutNamespace]
                                AddMatrixExpression(
                                  BraExpr(
                                    PositiveStartExpr(
                                      SingleTerm(
                                        NumberConst(
                                         0
                                        ) [NumberConst]
                                      ) [SingleTerm]
                                    ) [PositiveStartExpr]
                                  ) [BraExpr]
                                  BraExpr(
                                    PositiveStartExpr(
                                      SingleTerm(
                                        NumberConst(
                                         0
                                        ) [NumberConst]
                                      ) [SingleTerm]
                                    ) [PositiveStartExpr]
                                  ) [BraExpr]
                                ) [AddMatrixExpression]
                              ) [Designator]
                            ) [DesignatorFact]
                          ) [SingleTerm]
                        ) [PositiveStartExpr]
                      ) [BraExpr]
                      BraExpr(
                        PositiveStartExpr(
                          SingleTerm(
                            NumberConst(
                             1
                            ) [NumberConst]
                          ) [SingleTerm]
                        ) [PositiveStartExpr]
                      ) [BraExpr]
                    ) [AddMatrixExpression]
                  ) [Designator]
                  AssignOperation(
                  ) [AssignOperation]
                  PositiveStartExpr(
                    SingleTerm(
                      NumberConst(
                       3
                      ) [NumberConst]
                    ) [SingleTerm]
                  ) [PositiveStartExpr]
                ) [DesignatorExpr]
              ) [DesignatorStat]
            ) [Statements]
            DesignatorStat(
              DesignatorExpr(
                Designator(
                  WithoutNamespace(
                   mat
                  ) [WithoutNamespace]
                  AddMatrixExpression(
                    BraExpr(
                      PositiveStartExpr(
                        SingleTerm(
                          NumberConst(
                           1
                          ) [NumberConst]
                        ) [SingleTerm]
                      ) [PositiveStartExpr]
                    ) [BraExpr]
                    BraExpr(
                      PositiveStartExpr(
                        SingleTerm(
                          NumberConst(
                           0
                          ) [NumberConst]
                        ) [SingleTerm]
                      ) [PositiveStartExpr]
                    ) [BraExpr]
                  ) [AddMatrixExpression]
                ) [Designator]
                AssignOperation(
                ) [AssignOperation]
                PositiveStartExpr(
                  SingleTerm(
                    NumberConst(
                     2
                    ) [NumberConst]
                  ) [SingleTerm]
                ) [PositiveStartExpr]
              ) [DesignatorExpr]
            ) [DesignatorStat]
          ) [Statements]
          PrintExpr(
            PositiveStartExpr(
              SingleTerm(
                DesignatorFact(
                  Designator(
                    WithoutNamespace(
                     mat
                    ) [WithoutNamespace]
                    AddMatrixExpression(
                      BraExpr(
                        PositiveStartExpr(
                          SingleTerm(
                            NumberConst(
                             1
                            ) [NumberConst]
                          ) [SingleTerm]
                        ) [PositiveStartExpr]
                      ) [BraExpr]
                      BraExpr(
                        PositiveStartExpr(
                          SingleTerm(
                            NumberConst(
                             2
                            ) [NumberConst]
                          ) [SingleTerm]
                        ) [PositiveStartExpr]
                      ) [BraExpr]
                    ) [AddMatrixExpression]
                  ) [Designator]
                ) [DesignatorFact]
              ) [SingleTerm]
            ) [PositiveStartExpr]
            NoNumConstOpt(
            ) [NoNumConstOpt]
          ) [PrintExpr]
        ) [Statements]
        PrintExpr(
          PositiveStartExpr(
            SingleTerm(
              DesignatorFact(
                Designator(
                  WithoutNamespace(
                   mat
                  ) [WithoutNamespace]
                  AddMatrixExpression(
                    BraExpr(
                      PositiveStartExpr(
                        SingleTerm(
                          NumberConst(
                           0
                          ) [NumberConst]
                        ) [SingleTerm]
                      ) [PositiveStartExpr]
                    ) [BraExpr]
                    BraExpr(
                      PositiveStartExpr(
                        SingleTerm(
                          NumberConst(
                           2
                          ) [NumberConst]
                        ) [SingleTerm]
                      ) [PositiveStartExpr]
                    ) [BraExpr]
                  ) [AddMatrixExpression]
                ) [Designator]
              ) [DesignatorFact]
            ) [SingleTerm]
          ) [PositiveStartExpr]
          NoNumConstOpt(
          ) [NoNumConstOpt]
        ) [PrintExpr]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  16:07:16,407 - ================ Semanticka obrada ===================
INFO  16:07:16,409 - NEW CONST
INFO  16:07:16,409 - Con nula: int, 0, 0 on line 3
INFO  16:07:16,409 - NEW CONST
INFO  16:07:16,409 - Con jedan: int, 1, 0 on line 4
INFO  16:07:16,409 - NEW CONST
INFO  16:07:16,409 - Con pet: int, 5, 0 on line 5
INFO  16:07:16,409 - NEW SYMBOL
INFO  16:07:16,409 - Var niz: Arr of int, 0, 0 on line 7
INFO  16:07:16,409 - NEW SYMBOL
INFO  16:07:16,409 - Var nizch: Arr of char, 1, 0 on line 8
INFO  16:07:16,409 - NEW SYMBOL
INFO  16:07:16,409 - Var mat: Matrix of int, 2, 0 on line 9
INFO  16:07:16,409 - NEW SYMBOL
INFO  16:07:16,409 - Var a: int, 3, 0 on line 11
INFO  16:07:16,409 - NEW SYMBOL
INFO  16:07:16,409 - Var bodovi: int, 0, 1 on line 15
INFO  16:07:16,409 - NEW SYMBOL
INFO  16:07:16,409 - Var bt: boolean, 1, 1 on line 16
INFO  16:07:16,410 - Var bodovi: int, 0, 1 on line 18
INFO  16:07:16,410 - Var bodovi: int, 0, 1 on line 19
INFO  16:07:16,410 - Var bodovi: int, 0, 1 on line 20
INFO  16:07:16,410 - Var bodovi: int, 0, 1 on line 20
INFO  16:07:16,410 - Con jedan: int, 1, 0 on line 20
INFO  16:07:16,410 - Var bodovi: int, 0, 1 on line 21
INFO  16:07:16,410 - Var bodovi: int, 0, 1 on line 21
INFO  16:07:16,410 - Con pet: int, 5, 0 on line 21
INFO  16:07:16,410 - Var bodovi: int, 0, 1 on line 22
INFO  16:07:16,410 - Var bodovi: int, 0, 1 on line 23
INFO  16:07:16,410 - Var niz: Arr of int, 0, 0 on line 25
INFO  16:07:16,410 - Var niz: Arr of int, 0, 0 on line 26
INFO  16:07:16,410 - Con nula: int, 0, 0 on line 26
INFO  16:07:16,410 - Con jedan: int, 1, 0 on line 26
INFO  16:07:16,410 - Var niz: Arr of int, 0, 0 on line 27
INFO  16:07:16,410 - Var niz: Arr of int, 0, 0 on line 28
INFO  16:07:16,410 - Var niz: Arr of int, 0, 0 on line 28
INFO  16:07:16,410 - Con jedan: int, 1, 0 on line 28
INFO  16:07:16,410 - Var niz: Arr of int, 0, 0 on line 28
INFO  16:07:16,410 - Var niz: Arr of int, 0, 0 on line 28
INFO  16:07:16,410 - Var bodovi: int, 0, 1 on line 29
INFO  16:07:16,410 - Var niz: Arr of int, 0, 0 on line 29
INFO  16:07:16,410 - Var niz: Arr of int, 0, 0 on line 29
INFO  16:07:16,410 - Var bodovi: int, 0, 1 on line 30
INFO  16:07:16,410 - Var niz: Arr of int, 0, 0 on line 31
INFO  16:07:16,410 - Var nizch: Arr of char, 1, 0 on line 34
INFO  16:07:16,410 - Var nizch: Arr of char, 1, 0 on line 35
INFO  16:07:16,410 - Var nizch: Arr of char, 1, 0 on line 36
INFO  16:07:16,410 - Con jedan: int, 1, 0 on line 36
INFO  16:07:16,410 - Var nizch: Arr of char, 1, 0 on line 37
INFO  16:07:16,410 - Con pet: int, 5, 0 on line 37
INFO  16:07:16,410 - Var nizch: Arr of char, 1, 0 on line 38
INFO  16:07:16,410 - Var nizch: Arr of char, 1, 0 on line 39
INFO  16:07:16,410 - Con jedan: int, 1, 0 on line 39
INFO  16:07:16,410 - Var a: int, 3, 0 on line 41
INFO  16:07:16,410 - Var bodovi: int, 0, 1 on line 42
INFO  16:07:16,410 - read() function call on line 42
INFO  16:07:16,410 - Var bodovi: int, 0, 1 on line 43
INFO  16:07:16,410 - Var bodovi: int, 0, 1 on line 43
INFO  16:07:16,410 - Con pet: int, 5, 0 on line 43
INFO  16:07:16,410 - Var a: int, 3, 0 on line 43
INFO  16:07:16,410 - Con jedan: int, 1, 0 on line 43
INFO  16:07:16,410 - Var bodovi: int, 0, 1 on line 43
INFO  16:07:16,410 - Var bodovi: int, 0, 1 on line 44
INFO  16:07:16,410 - Var mat: Matrix of int, 2, 0 on line 46
INFO  16:07:16,410 - Var mat: Matrix of int, 2, 0 on line 47
INFO  16:07:16,410 - Con nula: int, 0, 0 on line 47
INFO  16:07:16,410 - Con jedan: int, 1, 0 on line 47
INFO  16:07:16,410 - Con jedan: int, 1, 0 on line 47
INFO  16:07:16,410 - Var mat: Matrix of int, 2, 0 on line 48
INFO  16:07:16,410 - Var mat: Matrix of int, 2, 0 on line 48
INFO  16:07:16,410 - Var mat: Matrix of int, 2, 0 on line 49
INFO  16:07:16,411 - Var mat: Matrix of int, 2, 0 on line 49
INFO  16:07:16,411 - Var mat: Matrix of int, 2, 0 on line 50
INFO  16:07:16,411 - Var mat: Matrix of int, 2, 0 on line 50
INFO  16:07:16,411 - Var mat: Matrix of int, 2, 0 on line 51
INFO  16:07:16,411 - Var mat: Matrix of int, 2, 0 on line 51
INFO  16:07:16,411 - Var mat: Matrix of int, 2, 0 on line 52
INFO  16:07:16,411 - Var mat: Matrix of int, 2, 0 on line 54
INFO  16:07:16,411 - Var mat: Matrix of int, 2, 0 on line 55
INFO  16:07:16,411 - Meth main: notype, 0, 0 on line 1
INFO  16:07:16,413 - Parser SUCCESS!
