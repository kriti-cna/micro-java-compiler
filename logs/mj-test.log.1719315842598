INFO  11:33:29,335 - Compiling source file: C:\Users\elena\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  11:33:29,337 - ================= LEKSICKA ANALIZA =================
INFO  11:33:29,390 - #2 program
INFO  11:33:29,390 - #47 test301
INFO  11:33:29,390 - #35 {
INFO  11:33:29,392 - #8 void
INFO  11:33:29,393 - #47 main
INFO  11:33:29,394 - #31 (
INFO  11:33:29,394 - #32 )
INFO  11:33:29,395 - #47 int
INFO  11:33:29,396 - #47 niz
INFO  11:33:29,398 - #33 [
INFO  11:33:29,398 - #34 ]
INFO  11:33:29,398 - #27 ;
INFO  11:33:29,399 - #35 {
INFO  11:33:29,399 - #47 niz
INFO  11:33:29,400 - #24 =
INFO  11:33:29,401 - #45 range
INFO  11:33:29,403 - #31 (
INFO  11:33:29,403 - #46 7
INFO  11:33:29,439 - #32 )
INFO  11:33:29,439 - #27 ;
INFO  11:33:29,439 - #5 print
INFO  11:33:29,439 - #31 (
INFO  11:33:29,439 - #47 niz
INFO  11:33:29,439 - #32 )
INFO  11:33:29,441 - #27 ;
INFO  11:33:29,441 - #36 }
INFO  11:33:29,441 - #36 }
INFO  11:33:29,442 - ================= PARSIRANO STABLO =================
INFO  11:33:29,447 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  NoDeclarations(
  ) [NoDeclarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      ListOfVarDecl(
        NoVarDeclarations(
        ) [NoVarDeclarations]
        VarDeclaration(
          Type(
           int
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             niz
              Brackets(
              ) [Brackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [ListOfVarDecl]
      Statements(
        Statements(
          NoStatements(
          ) [NoStatements]
          DesignatorStat(
            DesignatorExpr(
              Designator(
                WithoutNamespace(
                 niz
                ) [WithoutNamespace]
                NoArrayExpression(
                ) [NoArrayExpression]
              ) [Designator]
              AssignOperation(
              ) [AssignOperation]
              PositiveStartExpr(
                SingleTerm(
                  RangeExpression(
                    PositiveStartExpr(
                      SingleTerm(
                        NumberConst(
                         7
                        ) [NumberConst]
                      ) [SingleTerm]
                    ) [PositiveStartExpr]
                  ) [RangeExpression]
                ) [SingleTerm]
              ) [PositiveStartExpr]
            ) [DesignatorExpr]
          ) [DesignatorStat]
        ) [Statements]
        PrintExpr(
          PositiveStartExpr(
            SingleTerm(
              DesignatorFact(
                Designator(
                  WithoutNamespace(
                   niz
                  ) [WithoutNamespace]
                  NoArrayExpression(
                  ) [NoArrayExpression]
                ) [Designator]
              ) [DesignatorFact]
            ) [SingleTerm]
          ) [PositiveStartExpr]
          NoNumConstOpt(
          ) [NoNumConstOpt]
        ) [PrintExpr]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  11:33:29,448 - ================ Semanticka obrada ===================
INFO  11:33:29,483 - Symbol niz found on line 6
INFO  11:33:29,483 - Symbol niz found on line 7
INFO  11:33:29,483 - main() method found on line 1
INFO  11:39:38,092 - Compiling source file: C:\Users\elena\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  11:39:38,093 - ================= LEKSICKA ANALIZA =================
INFO  11:39:38,141 - #2 program
INFO  11:39:38,142 - #47 test301
INFO  11:39:38,142 - #35 {
INFO  11:39:38,144 - #8 void
INFO  11:39:38,145 - #47 main
INFO  11:39:38,145 - #31 (
INFO  11:39:38,146 - #32 )
INFO  11:39:38,148 - #47 int
INFO  11:39:38,148 - #47 niz
INFO  11:39:38,149 - #33 [
INFO  11:39:38,149 - #34 ]
INFO  11:39:38,150 - #27 ;
INFO  11:39:38,151 - #35 {
INFO  11:39:38,152 - #47 niz
INFO  11:39:38,153 - #24 =
INFO  11:39:38,154 - #45 range
INFO  11:39:38,155 - #31 (
INFO  11:39:38,155 - #46 7
INFO  11:39:38,157 - #32 )
INFO  11:39:38,157 - #27 ;
INFO  11:39:38,157 - #5 print
INFO  11:39:38,158 - #31 (
INFO  11:39:38,158 - #47 niz
INFO  11:39:38,158 - #32 )
INFO  11:39:38,158 - #27 ;
INFO  11:39:38,159 - #36 }
INFO  11:39:38,159 - #36 }
INFO  11:39:38,162 - ================= PARSIRANO STABLO =================
INFO  11:39:38,168 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  NoDeclarations(
  ) [NoDeclarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      ListOfVarDecl(
        NoVarDeclarations(
        ) [NoVarDeclarations]
        VarDeclaration(
          Type(
           int
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             niz
              Brackets(
              ) [Brackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [ListOfVarDecl]
      Statements(
        Statements(
          NoStatements(
          ) [NoStatements]
          DesignatorStat(
            DesignatorExpr(
              Designator(
                WithoutNamespace(
                 niz
                ) [WithoutNamespace]
                NoArrayExpression(
                ) [NoArrayExpression]
              ) [Designator]
              AssignOperation(
              ) [AssignOperation]
              PositiveStartExpr(
                SingleTerm(
                  RangeExpression(
                    PositiveStartExpr(
                      SingleTerm(
                        NumberConst(
                         7
                        ) [NumberConst]
                      ) [SingleTerm]
                    ) [PositiveStartExpr]
                  ) [RangeExpression]
                ) [SingleTerm]
              ) [PositiveStartExpr]
            ) [DesignatorExpr]
          ) [DesignatorStat]
        ) [Statements]
        PrintExpr(
          PositiveStartExpr(
            SingleTerm(
              DesignatorFact(
                Designator(
                  WithoutNamespace(
                   niz
                  ) [WithoutNamespace]
                  NoArrayExpression(
                  ) [NoArrayExpression]
                ) [Designator]
              ) [DesignatorFact]
            ) [SingleTerm]
          ) [PositiveStartExpr]
          NoNumConstOpt(
          ) [NoNumConstOpt]
        ) [PrintExpr]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  11:39:38,169 - ================ Semanticka obrada ===================
INFO  11:39:38,173 - Symbol niz found on line 6
INFO  11:39:38,174 - Symbol niz found on line 7
INFO  11:39:38,174 - main() method found on line 1
INFO  11:39:38,177 - Parser SUCCESS!
INFO  11:42:01,728 - Compiling source file: C:\Users\elena\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  11:42:01,730 - ================= LEKSICKA ANALIZA =================
INFO  11:42:01,792 - #2 program
INFO  11:42:01,793 - #47 test301
INFO  11:42:01,793 - #35 {
INFO  11:42:01,795 - #8 void
INFO  11:42:01,796 - #47 main
INFO  11:42:01,797 - #31 (
INFO  11:42:01,798 - #32 )
INFO  11:42:01,799 - #47 int
INFO  11:42:01,800 - #47 niz
INFO  11:42:01,800 - #33 [
INFO  11:42:01,801 - #34 ]
INFO  11:42:01,801 - #27 ;
INFO  11:42:01,802 - #35 {
INFO  11:42:01,803 - #47 niz
INFO  11:42:01,804 - #24 =
INFO  11:42:01,806 - #45 range
INFO  11:42:01,809 - #31 (
INFO  11:42:01,809 - #46 7
INFO  11:42:01,809 - #32 )
INFO  11:42:01,810 - #27 ;
INFO  11:42:01,810 - #5 print
INFO  11:42:01,810 - #31 (
INFO  11:42:01,810 - #47 niz
INFO  11:42:01,811 - #32 )
INFO  11:42:01,812 - #27 ;
INFO  11:42:01,813 - #36 }
INFO  11:42:01,813 - #36 }
INFO  11:42:01,815 - ================= PARSIRANO STABLO =================
INFO  11:42:01,824 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  NoDeclarations(
  ) [NoDeclarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      ListOfVarDecl(
        NoVarDeclarations(
        ) [NoVarDeclarations]
        VarDeclaration(
          Type(
           int
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             niz
              Brackets(
              ) [Brackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [ListOfVarDecl]
      Statements(
        Statements(
          NoStatements(
          ) [NoStatements]
          DesignatorStat(
            DesignatorExpr(
              Designator(
                WithoutNamespace(
                 niz
                ) [WithoutNamespace]
                NoArrayExpression(
                ) [NoArrayExpression]
              ) [Designator]
              AssignOperation(
              ) [AssignOperation]
              PositiveStartExpr(
                SingleTerm(
                  RangeExpression(
                    PositiveStartExpr(
                      SingleTerm(
                        NumberConst(
                         7
                        ) [NumberConst]
                      ) [SingleTerm]
                    ) [PositiveStartExpr]
                  ) [RangeExpression]
                ) [SingleTerm]
              ) [PositiveStartExpr]
            ) [DesignatorExpr]
          ) [DesignatorStat]
        ) [Statements]
        PrintExpr(
          PositiveStartExpr(
            SingleTerm(
              DesignatorFact(
                Designator(
                  WithoutNamespace(
                   niz
                  ) [WithoutNamespace]
                  NoArrayExpression(
                  ) [NoArrayExpression]
                ) [Designator]
              ) [DesignatorFact]
            ) [SingleTerm]
          ) [PositiveStartExpr]
          NoNumConstOpt(
          ) [NoNumConstOpt]
        ) [PrintExpr]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  11:42:01,825 - ================ Semanticka obrada ===================
INFO  11:42:01,832 - Symbol niz found on line 6
INFO  11:42:01,832 - Symbol niz found on line 7
INFO  11:42:01,833 - main() method found on line 1
INFO  11:42:01,837 - Parser SUCCESS!
INFO  11:43:37,100 - Compiling source file: C:\Users\elena\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  11:43:37,101 - ================= LEKSICKA ANALIZA =================
INFO  11:43:37,159 - #2 program
INFO  11:43:37,159 - #47 test301
INFO  11:43:37,159 - #35 {
INFO  11:43:37,161 - #8 void
INFO  11:43:37,162 - #47 main
INFO  11:43:37,163 - #31 (
INFO  11:43:37,165 - #32 )
INFO  11:43:37,166 - #47 int
INFO  11:43:37,168 - #47 niz
INFO  11:43:37,169 - #33 [
INFO  11:43:37,169 - #34 ]
INFO  11:43:37,169 - #27 ;
INFO  11:43:37,172 - #35 {
INFO  11:43:37,173 - #47 niz
INFO  11:43:37,174 - #24 =
INFO  11:43:37,175 - #45 range
INFO  11:43:37,177 - #31 (
INFO  11:43:37,177 - #46 7
INFO  11:43:37,177 - #32 )
INFO  11:43:37,178 - #27 ;
INFO  11:43:37,178 - #5 print
INFO  11:43:37,179 - #31 (
INFO  11:43:37,179 - #47 niz
INFO  11:43:37,179 - #32 )
INFO  11:43:37,180 - #27 ;
INFO  11:43:37,180 - #36 }
INFO  11:43:37,180 - #36 }
INFO  11:43:37,182 - ================= PARSIRANO STABLO =================
INFO  11:43:37,188 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  NoDeclarations(
  ) [NoDeclarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      ListOfVarDecl(
        NoVarDeclarations(
        ) [NoVarDeclarations]
        VarDeclaration(
          Type(
           int
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             niz
              Brackets(
              ) [Brackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [ListOfVarDecl]
      Statements(
        Statements(
          NoStatements(
          ) [NoStatements]
          DesignatorStat(
            DesignatorExpr(
              Designator(
                WithoutNamespace(
                 niz
                ) [WithoutNamespace]
                NoArrayExpression(
                ) [NoArrayExpression]
              ) [Designator]
              AssignOperation(
              ) [AssignOperation]
              PositiveStartExpr(
                SingleTerm(
                  RangeExpression(
                    PositiveStartExpr(
                      SingleTerm(
                        NumberConst(
                         7
                        ) [NumberConst]
                      ) [SingleTerm]
                    ) [PositiveStartExpr]
                  ) [RangeExpression]
                ) [SingleTerm]
              ) [PositiveStartExpr]
            ) [DesignatorExpr]
          ) [DesignatorStat]
        ) [Statements]
        PrintExpr(
          PositiveStartExpr(
            SingleTerm(
              DesignatorFact(
                Designator(
                  WithoutNamespace(
                   niz
                  ) [WithoutNamespace]
                  NoArrayExpression(
                  ) [NoArrayExpression]
                ) [Designator]
              ) [DesignatorFact]
            ) [SingleTerm]
          ) [PositiveStartExpr]
          NoNumConstOpt(
          ) [NoNumConstOpt]
        ) [PrintExpr]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  11:43:37,188 - ================ Semanticka obrada ===================
INFO  11:43:37,222 - Symbol niz found on line 6
INFO  11:43:37,222 - Symbol niz found on line 7
INFO  11:43:37,223 - main() method found on line 1
INFO  11:43:49,914 - Compiling source file: C:\Users\elena\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  11:43:49,915 - ================= LEKSICKA ANALIZA =================
INFO  11:43:49,969 - #2 program
INFO  11:43:49,969 - #47 test301
INFO  11:43:49,969 - #35 {
INFO  11:43:49,970 - #8 void
INFO  11:43:49,971 - #47 main
INFO  11:43:49,973 - #31 (
INFO  11:43:49,974 - #32 )
INFO  11:43:49,975 - #47 int
INFO  11:43:49,976 - #47 niz
INFO  11:43:49,976 - #33 [
INFO  11:43:49,976 - #34 ]
INFO  11:43:49,976 - #27 ;
INFO  11:43:49,979 - #35 {
INFO  11:43:49,979 - #47 niz
INFO  11:43:49,980 - #24 =
INFO  11:43:49,982 - #45 range
INFO  11:43:49,983 - #31 (
INFO  11:43:49,983 - #46 7
INFO  11:43:49,983 - #32 )
INFO  11:43:49,983 - #27 ;
INFO  11:43:49,984 - #5 print
INFO  11:43:49,984 - #31 (
INFO  11:43:49,984 - #47 niz
INFO  11:43:49,984 - #32 )
INFO  11:43:49,985 - #27 ;
INFO  11:43:49,985 - #36 }
INFO  11:43:49,985 - #36 }
INFO  11:43:49,987 - ================= PARSIRANO STABLO =================
INFO  11:43:49,994 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  NoDeclarations(
  ) [NoDeclarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      ListOfVarDecl(
        NoVarDeclarations(
        ) [NoVarDeclarations]
        VarDeclaration(
          Type(
           int
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             niz
              Brackets(
              ) [Brackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [ListOfVarDecl]
      Statements(
        Statements(
          NoStatements(
          ) [NoStatements]
          DesignatorStat(
            DesignatorExpr(
              Designator(
                WithoutNamespace(
                 niz
                ) [WithoutNamespace]
                NoArrayExpression(
                ) [NoArrayExpression]
              ) [Designator]
              AssignOperation(
              ) [AssignOperation]
              PositiveStartExpr(
                SingleTerm(
                  RangeExpression(
                    PositiveStartExpr(
                      SingleTerm(
                        NumberConst(
                         7
                        ) [NumberConst]
                      ) [SingleTerm]
                    ) [PositiveStartExpr]
                  ) [RangeExpression]
                ) [SingleTerm]
              ) [PositiveStartExpr]
            ) [DesignatorExpr]
          ) [DesignatorStat]
        ) [Statements]
        PrintExpr(
          PositiveStartExpr(
            SingleTerm(
              DesignatorFact(
                Designator(
                  WithoutNamespace(
                   niz
                  ) [WithoutNamespace]
                  NoArrayExpression(
                  ) [NoArrayExpression]
                ) [Designator]
              ) [DesignatorFact]
            ) [SingleTerm]
          ) [PositiveStartExpr]
          NoNumConstOpt(
          ) [NoNumConstOpt]
        ) [PrintExpr]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  11:43:49,994 - ================ Semanticka obrada ===================
INFO  11:43:50,029 - Symbol niz found on line 6
INFO  11:43:50,030 - Symbol niz found on line 7
INFO  11:43:50,030 - main() method found on line 1
INFO  11:43:59,632 - Compiling source file: C:\Users\elena\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  11:43:59,635 - ================= LEKSICKA ANALIZA =================
INFO  11:43:59,772 - #2 program
INFO  11:43:59,772 - #47 test301
INFO  11:43:59,773 - #35 {
INFO  11:43:59,777 - #8 void
INFO  11:43:59,779 - #47 main
INFO  11:43:59,781 - #31 (
INFO  11:43:59,783 - #32 )
INFO  11:43:59,785 - #47 int
INFO  11:43:59,787 - #47 niz
INFO  11:43:59,788 - #33 [
INFO  11:43:59,789 - #34 ]
INFO  11:43:59,789 - #27 ;
INFO  11:43:59,792 - #35 {
INFO  11:43:59,793 - #47 niz
INFO  11:43:59,795 - #24 =
INFO  11:43:59,799 - #45 range
INFO  11:43:59,803 - #31 (
INFO  11:43:59,803 - #46 7
INFO  11:43:59,803 - #32 )
INFO  11:43:59,804 - #27 ;
INFO  11:43:59,805 - #5 print
INFO  11:43:59,807 - #31 (
INFO  11:43:59,807 - #47 niz
INFO  11:43:59,807 - #32 )
INFO  11:43:59,810 - #27 ;
INFO  11:43:59,810 - #36 }
INFO  11:43:59,810 - #36 }
INFO  11:43:59,816 - ================= PARSIRANO STABLO =================
INFO  11:43:59,832 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  NoDeclarations(
  ) [NoDeclarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      ListOfVarDecl(
        NoVarDeclarations(
        ) [NoVarDeclarations]
        VarDeclaration(
          Type(
           int
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             niz
              Brackets(
              ) [Brackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [ListOfVarDecl]
      Statements(
        Statements(
          NoStatements(
          ) [NoStatements]
          DesignatorStat(
            DesignatorExpr(
              Designator(
                WithoutNamespace(
                 niz
                ) [WithoutNamespace]
                NoArrayExpression(
                ) [NoArrayExpression]
              ) [Designator]
              AssignOperation(
              ) [AssignOperation]
              PositiveStartExpr(
                SingleTerm(
                  RangeExpression(
                    PositiveStartExpr(
                      SingleTerm(
                        NumberConst(
                         7
                        ) [NumberConst]
                      ) [SingleTerm]
                    ) [PositiveStartExpr]
                  ) [RangeExpression]
                ) [SingleTerm]
              ) [PositiveStartExpr]
            ) [DesignatorExpr]
          ) [DesignatorStat]
        ) [Statements]
        PrintExpr(
          PositiveStartExpr(
            SingleTerm(
              DesignatorFact(
                Designator(
                  WithoutNamespace(
                   niz
                  ) [WithoutNamespace]
                  NoArrayExpression(
                  ) [NoArrayExpression]
                ) [Designator]
              ) [DesignatorFact]
            ) [SingleTerm]
          ) [PositiveStartExpr]
          NoNumConstOpt(
          ) [NoNumConstOpt]
        ) [PrintExpr]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  11:43:59,832 - ================ Semanticka obrada ===================
INFO  11:43:59,924 - Symbol niz found on line 6
INFO  11:43:59,925 - Symbol niz found on line 7
INFO  11:43:59,925 - main() method found on line 1
INFO  11:44:17,122 - Compiling source file: C:\Users\elena\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  11:44:17,125 - ================= LEKSICKA ANALIZA =================
INFO  11:44:17,240 - #2 program
INFO  11:44:17,240 - #47 test301
INFO  11:44:17,241 - #35 {
INFO  11:44:17,245 - #8 void
INFO  11:44:17,246 - #47 main
INFO  11:44:17,248 - #31 (
INFO  11:44:17,250 - #32 )
INFO  11:44:17,251 - #47 int
INFO  11:44:17,253 - #47 niz
INFO  11:44:17,255 - #33 [
INFO  11:44:17,255 - #34 ]
INFO  11:44:17,256 - #27 ;
INFO  11:44:17,258 - #35 {
INFO  11:44:17,259 - #47 niz
INFO  11:44:17,261 - #24 =
INFO  11:44:17,265 - #45 range
INFO  11:44:17,268 - #31 (
INFO  11:44:17,269 - #46 7
INFO  11:44:17,269 - #32 )
INFO  11:44:17,270 - #27 ;
INFO  11:44:17,271 - #5 print
INFO  11:44:17,271 - #31 (
INFO  11:44:17,273 - #47 niz
INFO  11:44:17,273 - #32 )
INFO  11:44:17,275 - #27 ;
INFO  11:44:17,275 - #36 }
INFO  11:44:17,276 - #36 }
INFO  11:44:17,282 - ================= PARSIRANO STABLO =================
INFO  11:44:17,298 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  NoDeclarations(
  ) [NoDeclarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      ListOfVarDecl(
        NoVarDeclarations(
        ) [NoVarDeclarations]
        VarDeclaration(
          Type(
           int
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             niz
              Brackets(
              ) [Brackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [ListOfVarDecl]
      Statements(
        Statements(
          NoStatements(
          ) [NoStatements]
          DesignatorStat(
            DesignatorExpr(
              Designator(
                WithoutNamespace(
                 niz
                ) [WithoutNamespace]
                NoArrayExpression(
                ) [NoArrayExpression]
              ) [Designator]
              AssignOperation(
              ) [AssignOperation]
              PositiveStartExpr(
                SingleTerm(
                  RangeExpression(
                    PositiveStartExpr(
                      SingleTerm(
                        NumberConst(
                         7
                        ) [NumberConst]
                      ) [SingleTerm]
                    ) [PositiveStartExpr]
                  ) [RangeExpression]
                ) [SingleTerm]
              ) [PositiveStartExpr]
            ) [DesignatorExpr]
          ) [DesignatorStat]
        ) [Statements]
        PrintExpr(
          PositiveStartExpr(
            SingleTerm(
              DesignatorFact(
                Designator(
                  WithoutNamespace(
                   niz
                  ) [WithoutNamespace]
                  NoArrayExpression(
                  ) [NoArrayExpression]
                ) [Designator]
              ) [DesignatorFact]
            ) [SingleTerm]
          ) [PositiveStartExpr]
          NoNumConstOpt(
          ) [NoNumConstOpt]
        ) [PrintExpr]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  11:44:17,300 - ================ Semanticka obrada ===================
INFO  11:44:17,312 - Symbol niz found on line 6
INFO  11:44:17,312 - Symbol niz found on line 7
INFO  11:44:17,313 - main() method found on line 1
INFO  11:44:17,321 - Parser SUCCESS!
INFO  11:44:22,544 - Compiling source file: C:\Users\elena\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  11:44:22,548 - ================= LEKSICKA ANALIZA =================
INFO  11:44:22,677 - #2 program
INFO  11:44:22,677 - #47 test301
INFO  11:44:22,677 - #35 {
INFO  11:44:22,682 - #8 void
INFO  11:44:22,683 - #47 main
INFO  11:44:22,685 - #31 (
INFO  11:44:22,687 - #32 )
INFO  11:44:22,689 - #47 int
INFO  11:44:22,691 - #47 niz
INFO  11:44:22,692 - #33 [
INFO  11:44:22,693 - #34 ]
INFO  11:44:22,693 - #27 ;
INFO  11:44:22,696 - #35 {
INFO  11:44:22,697 - #47 niz
INFO  11:44:22,699 - #24 =
INFO  11:44:22,703 - #45 range
INFO  11:44:22,706 - #31 (
INFO  11:44:22,706 - #46 7
INFO  11:44:22,706 - #32 )
INFO  11:44:22,707 - #27 ;
INFO  11:44:22,708 - #5 print
INFO  11:44:22,708 - #31 (
INFO  11:44:22,709 - #47 niz
INFO  11:44:22,709 - #32 )
INFO  11:44:22,710 - #27 ;
INFO  11:44:22,712 - #36 }
INFO  11:44:22,712 - #36 }
INFO  11:44:22,716 - ================= PARSIRANO STABLO =================
INFO  11:44:22,729 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  NoDeclarations(
  ) [NoDeclarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      ListOfVarDecl(
        NoVarDeclarations(
        ) [NoVarDeclarations]
        VarDeclaration(
          Type(
           int
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             niz
              Brackets(
              ) [Brackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [ListOfVarDecl]
      Statements(
        Statements(
          NoStatements(
          ) [NoStatements]
          DesignatorStat(
            DesignatorExpr(
              Designator(
                WithoutNamespace(
                 niz
                ) [WithoutNamespace]
                NoArrayExpression(
                ) [NoArrayExpression]
              ) [Designator]
              AssignOperation(
              ) [AssignOperation]
              PositiveStartExpr(
                SingleTerm(
                  RangeExpression(
                    PositiveStartExpr(
                      SingleTerm(
                        NumberConst(
                         7
                        ) [NumberConst]
                      ) [SingleTerm]
                    ) [PositiveStartExpr]
                  ) [RangeExpression]
                ) [SingleTerm]
              ) [PositiveStartExpr]
            ) [DesignatorExpr]
          ) [DesignatorStat]
        ) [Statements]
        PrintExpr(
          PositiveStartExpr(
            SingleTerm(
              DesignatorFact(
                Designator(
                  WithoutNamespace(
                   niz
                  ) [WithoutNamespace]
                  NoArrayExpression(
                  ) [NoArrayExpression]
                ) [Designator]
              ) [DesignatorFact]
            ) [SingleTerm]
          ) [PositiveStartExpr]
          NoNumConstOpt(
          ) [NoNumConstOpt]
        ) [PrintExpr]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  11:44:22,731 - ================ Semanticka obrada ===================
INFO  11:44:22,771 - Symbol niz found on line 6
INFO  11:44:22,771 - Symbol niz found on line 7
INFO  11:44:22,771 - main() method found on line 1
INFO  11:51:18,335 - Compiling source file: C:\Users\elena\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  11:51:18,336 - ================= LEKSICKA ANALIZA =================
INFO  11:51:18,409 - #2 program
INFO  11:51:18,410 - #47 test301
INFO  11:51:18,410 - #35 {
INFO  11:51:18,413 - #8 void
INFO  11:51:18,414 - #47 main
INFO  11:51:18,415 - #31 (
INFO  11:51:18,416 - #32 )
INFO  11:51:18,418 - #47 int
INFO  11:51:18,419 - #47 niz
INFO  11:51:18,421 - #33 [
INFO  11:51:18,421 - #34 ]
INFO  11:51:18,422 - #27 ;
INFO  11:51:18,424 - #35 {
INFO  11:51:18,424 - #47 niz
INFO  11:51:18,426 - #24 =
INFO  11:51:18,429 - #45 range
INFO  11:51:18,432 - #31 (
INFO  11:51:18,432 - #46 7
INFO  11:51:18,432 - #32 )
INFO  11:51:18,433 - #27 ;
INFO  11:51:18,433 - #5 print
INFO  11:51:18,434 - #31 (
INFO  11:51:18,434 - #47 niz
INFO  11:51:18,434 - #32 )
INFO  11:51:18,436 - #27 ;
INFO  11:51:18,436 - #36 }
INFO  11:51:18,436 - #36 }
INFO  11:51:18,440 - ================= PARSIRANO STABLO =================
INFO  11:51:18,449 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  NoDeclarations(
  ) [NoDeclarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      ListOfVarDecl(
        NoVarDeclarations(
        ) [NoVarDeclarations]
        VarDeclaration(
          Type(
           int
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             niz
              Brackets(
              ) [Brackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [ListOfVarDecl]
      Statements(
        Statements(
          NoStatements(
          ) [NoStatements]
          DesignatorStat(
            DesignatorExpr(
              Designator(
                WithoutNamespace(
                 niz
                ) [WithoutNamespace]
                NoArrayExpression(
                ) [NoArrayExpression]
              ) [Designator]
              AssignOperation(
              ) [AssignOperation]
              PositiveStartExpr(
                SingleTerm(
                  RangeExpression(
                    PositiveStartExpr(
                      SingleTerm(
                        NumberConst(
                         7
                        ) [NumberConst]
                      ) [SingleTerm]
                    ) [PositiveStartExpr]
                  ) [RangeExpression]
                ) [SingleTerm]
              ) [PositiveStartExpr]
            ) [DesignatorExpr]
          ) [DesignatorStat]
        ) [Statements]
        PrintExpr(
          PositiveStartExpr(
            SingleTerm(
              DesignatorFact(
                Designator(
                  WithoutNamespace(
                   niz
                  ) [WithoutNamespace]
                  NoArrayExpression(
                  ) [NoArrayExpression]
                ) [Designator]
              ) [DesignatorFact]
            ) [SingleTerm]
          ) [PositiveStartExpr]
          NoNumConstOpt(
          ) [NoNumConstOpt]
        ) [PrintExpr]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  11:51:18,450 - ================ Semanticka obrada ===================
INFO  11:51:18,457 - Symbol niz found on line 6
INFO  11:51:18,457 - Symbol niz found on line 7
INFO  11:51:18,458 - main() method found on line 1
INFO  11:51:18,463 - Parser SUCCESS!
INFO  11:54:09,397 - Compiling source file: C:\Users\elena\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  11:54:09,399 - ================= LEKSICKA ANALIZA =================
INFO  11:54:09,501 - #2 program
INFO  11:54:09,502 - #47 test301
INFO  11:54:09,502 - #35 {
INFO  11:54:09,505 - #8 void
INFO  11:54:09,506 - #47 main
INFO  11:54:09,507 - #31 (
INFO  11:54:09,509 - #32 )
INFO  11:54:09,509 - #47 int
INFO  11:54:09,512 - #47 niz
INFO  11:54:09,513 - #33 [
INFO  11:54:09,513 - #34 ]
INFO  11:54:09,514 - #27 ;
INFO  11:54:09,517 - #35 {
INFO  11:54:09,517 - #47 niz
INFO  11:54:09,518 - #24 =
INFO  11:54:09,522 - #45 range
INFO  11:54:09,524 - #31 (
INFO  11:54:09,526 - #46 7
INFO  11:54:09,526 - #32 )
INFO  11:54:09,527 - #27 ;
INFO  11:54:09,527 - #5 print
INFO  11:54:09,527 - #31 (
INFO  11:54:09,527 - #47 niz
INFO  11:54:09,528 - #32 )
INFO  11:54:09,528 - #27 ;
INFO  11:54:09,529 - #36 }
INFO  11:54:09,529 - #36 }
INFO  11:54:09,533 - ================= PARSIRANO STABLO =================
INFO  11:54:09,547 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  NoDeclarations(
  ) [NoDeclarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      ListOfVarDecl(
        NoVarDeclarations(
        ) [NoVarDeclarations]
        VarDeclaration(
          Type(
           int
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             niz
              Brackets(
              ) [Brackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [ListOfVarDecl]
      Statements(
        Statements(
          NoStatements(
          ) [NoStatements]
          DesignatorStat(
            DesignatorExpr(
              Designator(
                WithoutNamespace(
                 niz
                ) [WithoutNamespace]
                NoArrayExpression(
                ) [NoArrayExpression]
              ) [Designator]
              AssignOperation(
              ) [AssignOperation]
              PositiveStartExpr(
                SingleTerm(
                  RangeExpression(
                    PositiveStartExpr(
                      SingleTerm(
                        NumberConst(
                         7
                        ) [NumberConst]
                      ) [SingleTerm]
                    ) [PositiveStartExpr]
                  ) [RangeExpression]
                ) [SingleTerm]
              ) [PositiveStartExpr]
            ) [DesignatorExpr]
          ) [DesignatorStat]
        ) [Statements]
        PrintExpr(
          PositiveStartExpr(
            SingleTerm(
              DesignatorFact(
                Designator(
                  WithoutNamespace(
                   niz
                  ) [WithoutNamespace]
                  NoArrayExpression(
                  ) [NoArrayExpression]
                ) [Designator]
              ) [DesignatorFact]
            ) [SingleTerm]
          ) [PositiveStartExpr]
          NoNumConstOpt(
          ) [NoNumConstOpt]
        ) [PrintExpr]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  11:54:09,547 - ================ Semanticka obrada ===================
INFO  11:54:09,555 - Symbol niz found on line 6
INFO  11:54:09,556 - Symbol niz found on line 7
INFO  11:54:09,556 - main() method found on line 1
INFO  11:54:09,564 - Parser SUCCESS!
INFO  11:54:10,056 - Compiling source file: C:\Users\elena\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  11:54:10,057 - ================= LEKSICKA ANALIZA =================
INFO  11:54:10,097 - #2 program
INFO  11:54:10,097 - #47 test301
INFO  11:54:10,097 - #35 {
INFO  11:54:10,098 - #8 void
INFO  11:54:10,099 - #47 main
INFO  11:54:10,100 - #31 (
INFO  11:54:10,101 - #32 )
INFO  11:54:10,101 - #47 int
INFO  11:54:10,102 - #47 niz
INFO  11:54:10,103 - #33 [
INFO  11:54:10,103 - #34 ]
INFO  11:54:10,103 - #27 ;
INFO  11:54:10,104 - #35 {
INFO  11:54:10,105 - #47 niz
INFO  11:54:10,105 - #24 =
INFO  11:54:10,106 - #45 range
INFO  11:54:10,107 - #31 (
INFO  11:54:10,107 - #46 7
INFO  11:54:10,108 - #32 )
INFO  11:54:10,108 - #27 ;
INFO  11:54:10,108 - #5 print
INFO  11:54:10,108 - #31 (
INFO  11:54:10,108 - #47 niz
INFO  11:54:10,109 - #32 )
INFO  11:54:10,109 - #27 ;
INFO  11:54:10,109 - #36 }
INFO  11:54:10,110 - #36 }
INFO  11:54:10,111 - ================= PARSIRANO STABLO =================
INFO  11:54:10,117 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  NoDeclarations(
  ) [NoDeclarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      ListOfVarDecl(
        NoVarDeclarations(
        ) [NoVarDeclarations]
        VarDeclaration(
          Type(
           int
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             niz
              Brackets(
              ) [Brackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [ListOfVarDecl]
      Statements(
        Statements(
          NoStatements(
          ) [NoStatements]
          DesignatorStat(
            DesignatorExpr(
              Designator(
                WithoutNamespace(
                 niz
                ) [WithoutNamespace]
                NoArrayExpression(
                ) [NoArrayExpression]
              ) [Designator]
              AssignOperation(
              ) [AssignOperation]
              PositiveStartExpr(
                SingleTerm(
                  RangeExpression(
                    PositiveStartExpr(
                      SingleTerm(
                        NumberConst(
                         7
                        ) [NumberConst]
                      ) [SingleTerm]
                    ) [PositiveStartExpr]
                  ) [RangeExpression]
                ) [SingleTerm]
              ) [PositiveStartExpr]
            ) [DesignatorExpr]
          ) [DesignatorStat]
        ) [Statements]
        PrintExpr(
          PositiveStartExpr(
            SingleTerm(
              DesignatorFact(
                Designator(
                  WithoutNamespace(
                   niz
                  ) [WithoutNamespace]
                  NoArrayExpression(
                  ) [NoArrayExpression]
                ) [Designator]
              ) [DesignatorFact]
            ) [SingleTerm]
          ) [PositiveStartExpr]
          NoNumConstOpt(
          ) [NoNumConstOpt]
        ) [PrintExpr]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  11:54:10,117 - ================ Semanticka obrada ===================
INFO  11:54:10,123 - Symbol niz found on line 6
INFO  11:54:10,123 - Symbol niz found on line 7
INFO  11:54:10,123 - main() method found on line 1
INFO  11:54:10,126 - Parser SUCCESS!
INFO  12:13:10,240 - Compiling source file: C:\Users\elena\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  12:13:10,243 - ================= LEKSICKA ANALIZA =================
INFO  12:13:10,306 - #2 program
INFO  12:13:10,306 - #47 test301
INFO  12:13:10,306 - #35 {
INFO  12:13:10,307 - #8 void
INFO  12:13:10,308 - #47 main
INFO  12:13:10,308 - #31 (
INFO  12:13:10,309 - #32 )
INFO  12:13:10,309 - #47 int
INFO  12:13:10,309 - #47 niz
INFO  12:13:10,310 - #33 [
INFO  12:13:10,310 - #34 ]
INFO  12:13:10,310 - #27 ;
INFO  12:13:10,311 - #35 {
INFO  12:13:10,311 - #47 niz
INFO  12:13:10,312 - #24 =
INFO  12:13:10,314 - #45 range
INFO  12:13:10,315 - #31 (
INFO  12:13:10,315 - #46 7
INFO  12:13:10,315 - #32 )
INFO  12:13:10,315 - #27 ;
INFO  12:13:10,315 - #5 print
INFO  12:13:10,315 - #31 (
INFO  12:13:10,315 - #47 niz
INFO  12:13:10,315 - #32 )
INFO  12:13:10,316 - #27 ;
INFO  12:13:10,316 - #36 }
INFO  12:13:10,316 - #36 }
INFO  12:13:10,318 - ================= PARSIRANO STABLO =================
INFO  12:13:10,321 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  NoDeclarations(
  ) [NoDeclarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      ListOfVarDecl(
        NoVarDeclarations(
        ) [NoVarDeclarations]
        VarDeclaration(
          Type(
           int
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             niz
              Brackets(
              ) [Brackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [ListOfVarDecl]
      Statements(
        Statements(
          NoStatements(
          ) [NoStatements]
          DesignatorStat(
            DesignatorExpr(
              Designator(
                WithoutNamespace(
                 niz
                ) [WithoutNamespace]
                NoArrayExpression(
                ) [NoArrayExpression]
              ) [Designator]
              AssignOperation(
              ) [AssignOperation]
              PositiveStartExpr(
                SingleTerm(
                  RangeExpression(
                    PositiveStartExpr(
                      SingleTerm(
                        NumberConst(
                         7
                        ) [NumberConst]
                      ) [SingleTerm]
                    ) [PositiveStartExpr]
                  ) [RangeExpression]
                ) [SingleTerm]
              ) [PositiveStartExpr]
            ) [DesignatorExpr]
          ) [DesignatorStat]
        ) [Statements]
        PrintExpr(
          PositiveStartExpr(
            SingleTerm(
              DesignatorFact(
                Designator(
                  WithoutNamespace(
                   niz
                  ) [WithoutNamespace]
                  NoArrayExpression(
                  ) [NoArrayExpression]
                ) [Designator]
              ) [DesignatorFact]
            ) [SingleTerm]
          ) [PositiveStartExpr]
          NoNumConstOpt(
          ) [NoNumConstOpt]
        ) [PrintExpr]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  12:13:10,322 - ================ Semanticka obrada ===================
INFO  12:13:10,325 - Symbol niz found on line 6
INFO  12:13:10,325 - Symbol niz found on line 7
INFO  12:13:10,325 - main() method found on line 1
INFO  12:13:10,328 - Parser SUCCESS!
INFO  12:49:11,293 - Compiling source file: C:\Users\elena\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  12:49:11,305 - ================= LEKSICKA ANALIZA =================
INFO  12:49:11,445 - #2 program
INFO  12:49:11,445 - #47 test301
INFO  12:49:11,446 - #35 {
INFO  12:49:11,448 - #8 void
INFO  12:49:11,449 - #47 main
INFO  12:49:11,449 - #31 (
INFO  12:49:11,450 - #32 )
INFO  12:49:11,451 - #47 int
INFO  12:49:11,452 - #47 niz
INFO  12:49:11,452 - #33 [
INFO  12:49:11,453 - #34 ]
INFO  12:49:11,453 - #27 ;
INFO  12:49:11,454 - #35 {
INFO  12:49:11,455 - #47 niz
INFO  12:49:11,456 - #24 =
INFO  12:49:11,458 - #45 range
INFO  12:49:11,460 - #31 (
INFO  12:49:11,461 - #46 7
INFO  12:49:11,461 - #32 )
INFO  12:49:11,461 - #27 ;
INFO  12:49:11,462 - #5 print
INFO  12:49:11,462 - #31 (
INFO  12:49:11,462 - #47 niz
INFO  12:49:11,462 - #32 )
INFO  12:49:11,464 - #27 ;
INFO  12:49:11,464 - #36 }
INFO  12:49:11,465 - #36 }
INFO  12:49:11,467 - ================= PARSIRANO STABLO =================
INFO  12:49:11,476 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  NoDeclarations(
  ) [NoDeclarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      ListOfVarDecl(
        NoVarDeclarations(
        ) [NoVarDeclarations]
        VarDeclaration(
          Type(
           int
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             niz
              Brackets(
              ) [Brackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [ListOfVarDecl]
      Statements(
        Statements(
          NoStatements(
          ) [NoStatements]
          DesignatorStat(
            DesignatorExpr(
              Designator(
                WithoutNamespace(
                 niz
                ) [WithoutNamespace]
                NoArrayExpression(
                ) [NoArrayExpression]
              ) [Designator]
              AssignOperation(
              ) [AssignOperation]
              PositiveStartExpr(
                SingleTerm(
                  RangeExpression(
                    PositiveStartExpr(
                      SingleTerm(
                        NumberConst(
                         7
                        ) [NumberConst]
                      ) [SingleTerm]
                    ) [PositiveStartExpr]
                  ) [RangeExpression]
                ) [SingleTerm]
              ) [PositiveStartExpr]
            ) [DesignatorExpr]
          ) [DesignatorStat]
        ) [Statements]
        PrintExpr(
          PositiveStartExpr(
            SingleTerm(
              DesignatorFact(
                Designator(
                  WithoutNamespace(
                   niz
                  ) [WithoutNamespace]
                  NoArrayExpression(
                  ) [NoArrayExpression]
                ) [Designator]
              ) [DesignatorFact]
            ) [SingleTerm]
          ) [PositiveStartExpr]
          NoNumConstOpt(
          ) [NoNumConstOpt]
        ) [PrintExpr]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  12:49:11,476 - ================ Semanticka obrada ===================
INFO  12:49:11,530 - Symbol niz found on line 6
INFO  12:49:11,531 - Symbol niz found on line 7
INFO  12:49:11,531 - main() method found on line 1
INFO  12:49:11,535 - Parser SUCCESS!
INFO  13:33:51,997 - Compiling source file: C:\Users\elena\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  13:33:51,997 - ================= LEKSICKA ANALIZA =================
INFO  13:33:52,026 - #2 program
INFO  13:33:52,026 - #47 test301
INFO  13:33:52,026 - #35 {
INFO  13:33:52,027 - #8 void
INFO  13:33:52,027 - #47 main
INFO  13:33:52,027 - #31 (
INFO  13:33:52,028 - #32 )
INFO  13:33:52,028 - #47 int
INFO  13:33:52,028 - #47 niz
INFO  13:33:52,028 - #33 [
INFO  13:33:52,028 - #34 ]
INFO  13:33:52,028 - #27 ;
INFO  13:33:52,029 - #35 {
INFO  13:33:52,029 - #47 niz
INFO  13:33:52,029 - #24 =
INFO  13:33:52,030 - #45 range
INFO  13:33:52,031 - #31 (
INFO  13:33:52,031 - #46 7
INFO  13:33:52,031 - #32 )
INFO  13:33:52,031 - #27 ;
INFO  13:33:52,031 - #5 print
INFO  13:33:52,031 - #31 (
INFO  13:33:52,031 - #47 niz
INFO  13:33:52,031 - #32 )
INFO  13:33:52,032 - #27 ;
INFO  13:33:52,032 - #36 }
INFO  13:33:52,032 - #36 }
INFO  13:33:52,033 - ================= PARSIRANO STABLO =================
INFO  13:33:52,037 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  NoDeclarations(
  ) [NoDeclarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      ListOfVarDecl(
        NoVarDeclarations(
        ) [NoVarDeclarations]
        VarDeclaration(
          Type(
           int
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             niz
              Brackets(
              ) [Brackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [ListOfVarDecl]
      Statements(
        Statements(
          NoStatements(
          ) [NoStatements]
          DesignatorStat(
            DesignatorExpr(
              Designator(
                WithoutNamespace(
                 niz
                ) [WithoutNamespace]
                NoArrayExpression(
                ) [NoArrayExpression]
              ) [Designator]
              AssignOperation(
              ) [AssignOperation]
              PositiveStartExpr(
                SingleTerm(
                  RangeExpression(
                    PositiveStartExpr(
                      SingleTerm(
                        NumberConst(
                         7
                        ) [NumberConst]
                      ) [SingleTerm]
                    ) [PositiveStartExpr]
                  ) [RangeExpression]
                ) [SingleTerm]
              ) [PositiveStartExpr]
            ) [DesignatorExpr]
          ) [DesignatorStat]
        ) [Statements]
        PrintExpr(
          PositiveStartExpr(
            SingleTerm(
              DesignatorFact(
                Designator(
                  WithoutNamespace(
                   niz
                  ) [WithoutNamespace]
                  NoArrayExpression(
                  ) [NoArrayExpression]
                ) [Designator]
              ) [DesignatorFact]
            ) [SingleTerm]
          ) [PositiveStartExpr]
          NoNumConstOpt(
          ) [NoNumConstOpt]
        ) [PrintExpr]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  13:33:52,037 - ================ Semanticka obrada ===================
INFO  13:33:52,052 - Symbol niz found on line 6
INFO  13:33:52,052 - Symbol niz found on line 7
INFO  13:33:52,052 - main() method found on line 1
INFO  13:34:08,117 - Compiling source file: C:\Users\elena\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  13:34:08,118 - ================= LEKSICKA ANALIZA =================
INFO  13:34:08,140 - #2 program
INFO  13:34:08,141 - #47 test301
INFO  13:34:08,141 - #35 {
INFO  13:34:08,141 - #8 void
INFO  13:34:08,142 - #47 main
INFO  13:34:08,142 - #31 (
INFO  13:34:08,142 - #32 )
INFO  13:34:08,142 - #47 int
INFO  13:34:08,143 - #47 niz
INFO  13:34:08,143 - #33 [
INFO  13:34:08,143 - #34 ]
INFO  13:34:08,143 - #27 ;
INFO  13:34:08,144 - #35 {
INFO  13:34:08,144 - #47 niz
INFO  13:34:08,144 - #24 =
INFO  13:34:08,145 - #45 range
INFO  13:34:08,147 - #31 (
INFO  13:34:08,147 - #46 7
INFO  13:34:08,147 - #32 )
INFO  13:34:08,147 - #27 ;
INFO  13:34:08,148 - #5 print
INFO  13:34:08,148 - #31 (
INFO  13:34:08,148 - #47 niz
INFO  13:34:08,148 - #32 )
INFO  13:34:08,149 - #27 ;
INFO  13:34:08,149 - #36 }
INFO  13:34:08,149 - #36 }
INFO  13:34:08,150 - ================= PARSIRANO STABLO =================
INFO  13:34:08,152 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  NoDeclarations(
  ) [NoDeclarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      ListOfVarDecl(
        NoVarDeclarations(
        ) [NoVarDeclarations]
        VarDeclaration(
          Type(
           int
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             niz
              Brackets(
              ) [Brackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [ListOfVarDecl]
      Statements(
        Statements(
          NoStatements(
          ) [NoStatements]
          DesignatorStat(
            DesignatorExpr(
              Designator(
                WithoutNamespace(
                 niz
                ) [WithoutNamespace]
                NoArrayExpression(
                ) [NoArrayExpression]
              ) [Designator]
              AssignOperation(
              ) [AssignOperation]
              PositiveStartExpr(
                SingleTerm(
                  RangeExpression(
                    PositiveStartExpr(
                      SingleTerm(
                        NumberConst(
                         7
                        ) [NumberConst]
                      ) [SingleTerm]
                    ) [PositiveStartExpr]
                  ) [RangeExpression]
                ) [SingleTerm]
              ) [PositiveStartExpr]
            ) [DesignatorExpr]
          ) [DesignatorStat]
        ) [Statements]
        PrintExpr(
          PositiveStartExpr(
            SingleTerm(
              DesignatorFact(
                Designator(
                  WithoutNamespace(
                   niz
                  ) [WithoutNamespace]
                  NoArrayExpression(
                  ) [NoArrayExpression]
                ) [Designator]
              ) [DesignatorFact]
            ) [SingleTerm]
          ) [PositiveStartExpr]
          NoNumConstOpt(
          ) [NoNumConstOpt]
        ) [PrintExpr]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  13:34:08,152 - ================ Semanticka obrada ===================
INFO  13:34:08,156 - Symbol niz found on line 6
INFO  13:34:08,156 - Symbol niz found on line 7
INFO  13:34:08,156 - main() method found on line 1
INFO  13:34:08,158 - Parser SUCCESS!
INFO  13:39:06,147 - Compiling source file: C:\Users\elena\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  13:39:06,149 - ================= LEKSICKA ANALIZA =================
INFO  13:39:06,178 - #2 program
INFO  13:39:06,178 - #47 test301
INFO  13:39:06,178 - #35 {
INFO  13:39:06,179 - #8 void
INFO  13:39:06,179 - #47 main
INFO  13:39:06,181 - #31 (
INFO  13:39:06,181 - #32 )
INFO  13:39:06,182 - #47 int
INFO  13:39:06,182 - #47 niz
INFO  13:39:06,182 - #33 [
INFO  13:39:06,182 - #34 ]
INFO  13:39:06,182 - #27 ;
INFO  13:39:06,183 - #35 {
INFO  13:39:06,183 - #47 niz
INFO  13:39:06,184 - #24 =
INFO  13:39:06,185 - #45 range
INFO  13:39:06,186 - #31 (
INFO  13:39:06,186 - #46 7
INFO  13:39:06,186 - #32 )
INFO  13:39:06,186 - #27 ;
INFO  13:39:06,186 - #5 print
INFO  13:39:06,187 - #31 (
INFO  13:39:06,187 - #47 niz
INFO  13:39:06,187 - #32 )
INFO  13:39:06,187 - #27 ;
INFO  13:39:06,187 - #36 }
INFO  13:39:06,187 - #36 }
INFO  13:39:06,188 - ================= PARSIRANO STABLO =================
INFO  13:39:06,192 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  NoDeclarations(
  ) [NoDeclarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      ListOfVarDecl(
        NoVarDeclarations(
        ) [NoVarDeclarations]
        VarDeclaration(
          Type(
           int
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             niz
              Brackets(
              ) [Brackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [ListOfVarDecl]
      Statements(
        Statements(
          NoStatements(
          ) [NoStatements]
          DesignatorStat(
            DesignatorExpr(
              Designator(
                WithoutNamespace(
                 niz
                ) [WithoutNamespace]
                NoArrayExpression(
                ) [NoArrayExpression]
              ) [Designator]
              AssignOperation(
              ) [AssignOperation]
              PositiveStartExpr(
                SingleTerm(
                  RangeExpression(
                    PositiveStartExpr(
                      SingleTerm(
                        NumberConst(
                         7
                        ) [NumberConst]
                      ) [SingleTerm]
                    ) [PositiveStartExpr]
                  ) [RangeExpression]
                ) [SingleTerm]
              ) [PositiveStartExpr]
            ) [DesignatorExpr]
          ) [DesignatorStat]
        ) [Statements]
        PrintExpr(
          PositiveStartExpr(
            SingleTerm(
              DesignatorFact(
                Designator(
                  WithoutNamespace(
                   niz
                  ) [WithoutNamespace]
                  NoArrayExpression(
                  ) [NoArrayExpression]
                ) [Designator]
              ) [DesignatorFact]
            ) [SingleTerm]
          ) [PositiveStartExpr]
          NoNumConstOpt(
          ) [NoNumConstOpt]
        ) [PrintExpr]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  13:39:06,192 - ================ Semanticka obrada ===================
INFO  13:39:06,207 - Symbol niz found on line 6
INFO  13:39:06,207 - Symbol niz found on line 7
INFO  13:39:06,207 - main() method found on line 1
INFO  13:39:19,903 - Compiling source file: C:\Users\elena\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  13:39:19,904 - ================= LEKSICKA ANALIZA =================
INFO  13:39:19,926 - #2 program
INFO  13:39:19,926 - #47 test301
INFO  13:39:19,927 - #35 {
INFO  13:39:19,927 - #8 void
INFO  13:39:19,929 - #47 main
INFO  13:39:19,929 - #31 (
INFO  13:39:19,929 - #32 )
INFO  13:39:19,929 - #47 int
INFO  13:39:19,930 - #47 niz
INFO  13:39:19,930 - #33 [
INFO  13:39:19,930 - #34 ]
INFO  13:39:19,930 - #27 ;
INFO  13:39:19,931 - #35 {
INFO  13:39:19,932 - #47 niz
INFO  13:39:19,932 - #24 =
INFO  13:39:19,933 - #45 range
INFO  13:39:19,933 - #31 (
INFO  13:39:19,933 - #46 7
INFO  13:39:19,933 - #32 )
INFO  13:39:19,935 - #27 ;
INFO  13:39:19,935 - #5 print
INFO  13:39:19,935 - #31 (
INFO  13:39:19,935 - #47 niz
INFO  13:39:19,935 - #32 )
INFO  13:39:19,936 - #27 ;
INFO  13:39:19,936 - #36 }
INFO  13:39:19,936 - #36 }
INFO  13:39:19,938 - ================= PARSIRANO STABLO =================
INFO  13:39:19,940 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  NoDeclarations(
  ) [NoDeclarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      ListOfVarDecl(
        NoVarDeclarations(
        ) [NoVarDeclarations]
        VarDeclaration(
          Type(
           int
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             niz
              Brackets(
              ) [Brackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [ListOfVarDecl]
      Statements(
        Statements(
          NoStatements(
          ) [NoStatements]
          DesignatorStat(
            DesignatorExpr(
              Designator(
                WithoutNamespace(
                 niz
                ) [WithoutNamespace]
                NoArrayExpression(
                ) [NoArrayExpression]
              ) [Designator]
              AssignOperation(
              ) [AssignOperation]
              PositiveStartExpr(
                SingleTerm(
                  RangeExpression(
                    PositiveStartExpr(
                      SingleTerm(
                        NumberConst(
                         7
                        ) [NumberConst]
                      ) [SingleTerm]
                    ) [PositiveStartExpr]
                  ) [RangeExpression]
                ) [SingleTerm]
              ) [PositiveStartExpr]
            ) [DesignatorExpr]
          ) [DesignatorStat]
        ) [Statements]
        PrintExpr(
          PositiveStartExpr(
            SingleTerm(
              DesignatorFact(
                Designator(
                  WithoutNamespace(
                   niz
                  ) [WithoutNamespace]
                  NoArrayExpression(
                  ) [NoArrayExpression]
                ) [Designator]
              ) [DesignatorFact]
            ) [SingleTerm]
          ) [PositiveStartExpr]
          NoNumConstOpt(
          ) [NoNumConstOpt]
        ) [PrintExpr]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  13:39:19,940 - ================ Semanticka obrada ===================
INFO  13:39:19,941 - Symbol niz found on line 6
INFO  13:39:19,942 - Symbol niz found on line 7
INFO  13:39:19,942 - main() method found on line 1
INFO  13:39:19,943 - Parser SUCCESS!
INFO  13:41:14,443 - Compiling source file: C:\Users\elena\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  13:41:14,444 - ================= LEKSICKA ANALIZA =================
INFO  13:41:14,472 - #2 program
INFO  13:41:14,472 - #47 test301
INFO  13:41:14,472 - #35 {
INFO  13:41:14,473 - #8 void
INFO  13:41:14,474 - #47 main
INFO  13:41:14,474 - #31 (
INFO  13:41:14,474 - #32 )
INFO  13:41:14,475 - #47 int
INFO  13:41:14,475 - #47 niz
INFO  13:41:14,475 - #33 [
INFO  13:41:14,475 - #34 ]
INFO  13:41:14,475 - #27 ;
INFO  13:41:14,476 - #35 {
INFO  13:41:14,476 - #47 niz
INFO  13:41:14,477 - #24 =
INFO  13:41:14,477 - #45 range
INFO  13:41:14,478 - #31 (
INFO  13:41:14,478 - #46 7
INFO  13:41:14,478 - #32 )
INFO  13:41:14,479 - #27 ;
INFO  13:41:14,479 - #5 print
INFO  13:41:14,479 - #31 (
INFO  13:41:14,479 - #47 niz
INFO  13:41:14,479 - #32 )
INFO  13:41:14,479 - #27 ;
INFO  13:41:14,479 - #36 }
INFO  13:41:14,479 - #36 }
INFO  13:41:14,481 - ================= PARSIRANO STABLO =================
INFO  13:41:14,483 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  NoDeclarations(
  ) [NoDeclarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      ListOfVarDecl(
        NoVarDeclarations(
        ) [NoVarDeclarations]
        VarDeclaration(
          Type(
           int
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             niz
              Brackets(
              ) [Brackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [ListOfVarDecl]
      Statements(
        Statements(
          NoStatements(
          ) [NoStatements]
          DesignatorStat(
            DesignatorExpr(
              Designator(
                WithoutNamespace(
                 niz
                ) [WithoutNamespace]
                NoArrayExpression(
                ) [NoArrayExpression]
              ) [Designator]
              AssignOperation(
              ) [AssignOperation]
              PositiveStartExpr(
                SingleTerm(
                  RangeExpression(
                    PositiveStartExpr(
                      SingleTerm(
                        NumberConst(
                         7
                        ) [NumberConst]
                      ) [SingleTerm]
                    ) [PositiveStartExpr]
                  ) [RangeExpression]
                ) [SingleTerm]
              ) [PositiveStartExpr]
            ) [DesignatorExpr]
          ) [DesignatorStat]
        ) [Statements]
        PrintExpr(
          PositiveStartExpr(
            SingleTerm(
              DesignatorFact(
                Designator(
                  WithoutNamespace(
                   niz
                  ) [WithoutNamespace]
                  NoArrayExpression(
                  ) [NoArrayExpression]
                ) [Designator]
              ) [DesignatorFact]
            ) [SingleTerm]
          ) [PositiveStartExpr]
          NoNumConstOpt(
          ) [NoNumConstOpt]
        ) [PrintExpr]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  13:41:14,484 - ================ Semanticka obrada ===================
INFO  13:41:14,487 - Symbol niz found on line 6
INFO  13:41:14,488 - Symbol niz found on line 7
INFO  13:41:14,488 - main() method found on line 1
INFO  13:41:14,489 - Parser SUCCESS!
INFO  13:41:55,560 - Compiling source file: C:\Users\elena\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  13:41:55,561 - ================= LEKSICKA ANALIZA =================
INFO  13:41:55,581 - #2 program
INFO  13:41:55,581 - #47 test301
INFO  13:41:55,581 - #3 const
INFO  13:41:55,583 - #47 int
INFO  13:41:55,583 - #47 nula
INFO  13:41:55,583 - #24 =
INFO  13:41:55,583 - #46 0
INFO  13:41:55,583 - #27 ;
INFO  13:41:55,584 - #3 const
INFO  13:41:55,584 - #47 int
INFO  13:41:55,584 - #47 jedan
INFO  13:41:55,584 - #24 =
INFO  13:41:55,584 - #46 1
INFO  13:41:55,584 - #27 ;
INFO  13:41:55,584 - #3 const
INFO  13:41:55,584 - #47 int
INFO  13:41:55,584 - #47 pet
INFO  13:41:55,584 - #24 =
INFO  13:41:55,585 - #46 5
INFO  13:41:55,585 - #27 ;
INFO  13:41:55,585 - #47 int
INFO  13:41:55,585 - #47 niz
INFO  13:41:55,585 - #33 [
INFO  13:41:55,585 - #34 ]
INFO  13:41:55,585 - #29 ,
INFO  13:41:55,585 - #47 niz2
INFO  13:41:55,585 - #33 [
INFO  13:41:55,585 - #34 ]
INFO  13:41:55,586 - #27 ;
INFO  13:41:55,586 - #47 char
INFO  13:41:55,586 - #47 nizch
INFO  13:41:55,586 - #33 [
INFO  13:41:55,586 - #34 ]
INFO  13:41:55,586 - #27 ;
INFO  13:41:55,586 - #35 {
INFO  13:41:55,586 - #8 void
INFO  13:41:55,586 - #47 main
INFO  13:41:55,588 - #31 (
INFO  13:41:55,588 - #32 )
INFO  13:41:55,588 - #47 int
INFO  13:41:55,588 - #47 bodovi
INFO  13:41:55,589 - #27 ;
INFO  13:41:55,589 - #47 bool
INFO  13:41:55,589 - #47 bt
INFO  13:41:55,589 - #27 ;
INFO  13:41:55,589 - #35 {
INFO  13:41:55,589 - #47 bodovi
INFO  13:41:55,589 - #24 =
INFO  13:41:55,590 - #46 0
INFO  13:41:55,590 - #27 ;
INFO  13:41:55,590 - #47 bodovi
INFO  13:41:55,590 - #25 ++
INFO  13:41:55,591 - #27 ;
INFO  13:41:55,591 - #47 bodovi
INFO  13:41:55,591 - #24 =
INFO  13:41:55,591 - #47 bodovi
INFO  13:41:55,591 - #11 +
INFO  13:41:55,591 - #47 jedan
INFO  13:41:55,593 - #27 ;
INFO  13:41:55,593 - #47 bodovi
INFO  13:41:55,593 - #24 =
INFO  13:41:55,593 - #47 bodovi
INFO  13:41:55,593 - #13 *
INFO  13:41:55,593 - #47 pet
INFO  13:41:55,593 - #27 ;
INFO  13:41:55,594 - #47 bodovi
INFO  13:41:55,594 - #26 --
INFO  13:41:55,594 - #27 ;
INFO  13:41:55,594 - #5 print
INFO  13:41:55,594 - #31 (
INFO  13:41:55,594 - #47 bodovi
INFO  13:41:55,594 - #32 )
INFO  13:41:55,594 - #27 ;
INFO  13:41:55,594 - #47 niz
INFO  13:41:55,594 - #24 =
INFO  13:41:55,594 - #4 new
INFO  13:41:55,594 - #47 int
INFO  13:41:55,594 - #33 [
INFO  13:41:55,594 - #46 3
INFO  13:41:55,594 - #34 ]
INFO  13:41:55,594 - #27 ;
INFO  13:41:55,595 - #47 niz
INFO  13:41:55,595 - #33 [
INFO  13:41:55,595 - #47 nula
INFO  13:41:55,595 - #34 ]
INFO  13:41:55,595 - #24 =
INFO  13:41:55,595 - #47 jedan
INFO  13:41:55,595 - #27 ;
INFO  13:41:55,595 - #47 niz
INFO  13:41:55,595 - #33 [
INFO  13:41:55,595 - #46 1
INFO  13:41:55,595 - #34 ]
INFO  13:41:55,595 - #24 =
INFO  13:41:55,595 - #46 2
INFO  13:41:55,595 - #27 ;
INFO  13:41:55,595 - #47 niz
INFO  13:41:55,595 - #33 [
INFO  13:41:55,595 - #47 niz
INFO  13:41:55,595 - #33 [
INFO  13:41:55,595 - #47 jedan
INFO  13:41:55,596 - #34 ]
INFO  13:41:55,596 - #34 ]
INFO  13:41:55,596 - #24 =
INFO  13:41:55,596 - #47 niz
INFO  13:41:55,596 - #33 [
INFO  13:41:55,596 - #47 niz
INFO  13:41:55,596 - #33 [
INFO  13:41:55,596 - #46 0
INFO  13:41:55,596 - #34 ]
INFO  13:41:55,596 - #34 ]
INFO  13:41:55,596 - #13 *
INFO  13:41:55,596 - #46 3
INFO  13:41:55,596 - #27 ;
INFO  13:41:55,596 - #47 bodovi
INFO  13:41:55,596 - #24 =
INFO  13:41:55,597 - #47 niz
INFO  13:41:55,597 - #33 [
INFO  13:41:55,597 - #46 2
INFO  13:41:55,597 - #34 ]
INFO  13:41:55,597 - #14 /
INFO  13:41:55,597 - #47 niz
INFO  13:41:55,598 - #33 [
INFO  13:41:55,598 - #46 0
INFO  13:41:55,598 - #34 ]
INFO  13:41:55,598 - #27 ;
INFO  13:41:55,598 - #5 print
INFO  13:41:55,599 - #31 (
INFO  13:41:55,599 - #47 bodovi
INFO  13:41:55,599 - #32 )
INFO  13:41:55,599 - #27 ;
INFO  13:41:55,599 - #5 print
INFO  13:41:55,599 - #31 (
INFO  13:41:55,599 - #47 niz
INFO  13:41:55,599 - #33 [
INFO  13:41:55,599 - #46 2
INFO  13:41:55,599 - #34 ]
INFO  13:41:55,599 - #32 )
INFO  13:41:55,599 - #27 ;
INFO  13:41:55,599 - #47 nizch
INFO  13:41:55,599 - #24 =
INFO  13:41:55,599 - #4 new
INFO  13:41:55,600 - #47 char
INFO  13:41:55,600 - #33 [
INFO  13:41:55,600 - #46 3
INFO  13:41:55,600 - #34 ]
INFO  13:41:55,600 - #27 ;
INFO  13:41:55,600 - #47 nizch
INFO  13:41:55,600 - #33 [
INFO  13:41:55,600 - #46 0
INFO  13:41:55,600 - #34 ]
INFO  13:41:55,600 - #24 =
INFO  13:41:55,600 - #48 a
INFO  13:41:55,600 - #27 ;
INFO  13:41:55,600 - #47 nizch
INFO  13:41:55,600 - #33 [
INFO  13:41:55,600 - #47 jedan
INFO  13:41:55,600 - #34 ]
INFO  13:41:55,600 - #24 =
INFO  13:41:55,600 - #48 b
INFO  13:41:55,600 - #27 ;
INFO  13:41:55,600 - #47 nizch
INFO  13:41:55,600 - #33 [
INFO  13:41:55,601 - #47 pet
INFO  13:41:55,601 - #12 -
INFO  13:41:55,601 - #46 3
INFO  13:41:55,601 - #34 ]
INFO  13:41:55,601 - #24 =
INFO  13:41:55,601 - #48 c
INFO  13:41:55,601 - #27 ;
INFO  13:41:55,601 - #5 print
INFO  13:41:55,601 - #31 (
INFO  13:41:55,601 - #47 nizch
INFO  13:41:55,601 - #33 [
INFO  13:41:55,601 - #46 1
INFO  13:41:55,601 - #34 ]
INFO  13:41:55,601 - #32 )
INFO  13:41:55,601 - #27 ;
INFO  13:41:55,601 - #5 print
INFO  13:41:55,601 - #31 (
INFO  13:41:55,601 - #47 nizch
INFO  13:41:55,601 - #33 [
INFO  13:41:55,601 - #47 jedan
INFO  13:41:55,601 - #13 *
INFO  13:41:55,603 - #46 2
INFO  13:41:55,603 - #34 ]
INFO  13:41:55,603 - #32 )
INFO  13:41:55,603 - #27 ;
INFO  13:41:55,603 - #47 bodovi
INFO  13:41:55,603 - #24 =
INFO  13:41:55,603 - #47 bodovi
INFO  13:41:55,603 - #11 +
INFO  13:41:55,603 - #31 (
INFO  13:41:55,603 - #47 pet
INFO  13:41:55,603 - #13 *
INFO  13:41:55,603 - #47 jedan
INFO  13:41:55,603 - #12 -
INFO  13:41:55,603 - #46 1
INFO  13:41:55,603 - #32 )
INFO  13:41:55,603 - #13 *
INFO  13:41:55,603 - #47 bodovi
INFO  13:41:55,603 - #12 -
INFO  13:41:55,603 - #31 (
INFO  13:41:55,603 - #46 3
INFO  13:41:55,603 - #15 %
INFO  13:41:55,603 - #46 2
INFO  13:41:55,603 - #11 +
INFO  13:41:55,604 - #46 3
INFO  13:41:55,604 - #13 *
INFO  13:41:55,604 - #46 2
INFO  13:41:55,604 - #12 -
INFO  13:41:55,604 - #46 3
INFO  13:41:55,604 - #32 )
INFO  13:41:55,604 - #27 ;
INFO  13:41:55,604 - #5 print
INFO  13:41:55,604 - #31 (
INFO  13:41:55,604 - #47 bodovi
INFO  13:41:55,604 - #32 )
INFO  13:41:55,604 - #27 ;
INFO  13:41:55,604 - #6 read
INFO  13:41:55,604 - #31 (
INFO  13:41:55,604 - #47 bodovi
INFO  13:41:55,604 - #32 )
INFO  13:41:55,604 - #27 ;
INFO  13:41:55,604 - #5 print
INFO  13:41:55,604 - #31 (
INFO  13:41:55,604 - #47 bodovi
INFO  13:41:55,604 - #32 )
INFO  13:41:55,604 - #27 ;
INFO  13:41:55,604 - #47 niz2
INFO  13:41:55,604 - #24 =
INFO  13:41:55,604 - #45 range
INFO  13:41:55,604 - #31 (
INFO  13:41:55,604 - #47 bodovi
INFO  13:41:55,604 - #11 +
INFO  13:41:55,604 - #46 1
INFO  13:41:55,604 - #32 )
INFO  13:41:55,604 - #27 ;
INFO  13:41:55,605 - #5 print
INFO  13:41:55,605 - #31 (
INFO  13:41:55,605 - #47 niz2
INFO  13:41:55,605 - #32 )
INFO  13:41:55,605 - #27 ;
INFO  13:41:55,605 - #36 }
INFO  13:41:55,605 - #36 }
INFO  13:41:55,606 - ================= PARSIRANO STABLO =================
INFO  13:41:55,610 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  Declarations(
    Declarations(
      Declarations(
        Declarations(
          Declarations(
            NoDeclarations(
            ) [NoDeclarations]
            ConstantDeclaration(
              ConDecl(
                Type(
                 int
                ) [Type]
                ConstDef(
                 nula
                  NumConst(
                   0
                  ) [NumConst]
                ) [ConstDef]
                NoConstantDeclaration(
                ) [NoConstantDeclaration]
              ) [ConDecl]
            ) [ConstantDeclaration]
          ) [Declarations]
          ConstantDeclaration(
            ConDecl(
              Type(
               int
              ) [Type]
              ConstDef(
               jedan
                NumConst(
                 1
                ) [NumConst]
              ) [ConstDef]
              NoConstantDeclaration(
              ) [NoConstantDeclaration]
            ) [ConDecl]
          ) [ConstantDeclaration]
        ) [Declarations]
        ConstantDeclaration(
          ConDecl(
            Type(
             int
            ) [Type]
            ConstDef(
             pet
              NumConst(
               5
              ) [NumConst]
            ) [ConstDef]
            NoConstantDeclaration(
            ) [NoConstantDeclaration]
          ) [ConDecl]
        ) [ConstantDeclaration]
      ) [Declarations]
      VariableDeclaration(
        VarDeclaration(
          Type(
           int
          ) [Type]
          MultipleVarDeclarations(
            OneVarDeclaration(
              AddVarDecl1(
               niz
                Brackets(
                ) [Brackets]
              ) [AddVarDecl1]
            ) [OneVarDeclaration]
            AddVarDecl1(
             niz2
              Brackets(
              ) [Brackets]
            ) [AddVarDecl1]
          ) [MultipleVarDeclarations]
        ) [VarDeclaration]
      ) [VariableDeclaration]
    ) [Declarations]
    VariableDeclaration(
      VarDeclaration(
        Type(
         char
        ) [Type]
        OneVarDeclaration(
          AddVarDecl1(
           nizch
            Brackets(
            ) [Brackets]
          ) [AddVarDecl1]
        ) [OneVarDeclaration]
      ) [VarDeclaration]
    ) [VariableDeclaration]
  ) [Declarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      ListOfVarDecl(
        ListOfVarDecl(
          NoVarDeclarations(
          ) [NoVarDeclarations]
          VarDeclaration(
            Type(
             int
            ) [Type]
            OneVarDeclaration(
              AddVarDecl1(
               bodovi
                NoBrackets(
                ) [NoBrackets]
              ) [AddVarDecl1]
            ) [OneVarDeclaration]
          ) [VarDeclaration]
        ) [ListOfVarDecl]
        VarDeclaration(
          Type(
           bool
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             bt
              NoBrackets(
              ) [NoBrackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [ListOfVarDecl]
      Statements(
        Statements(
          Statements(
            Statements(
              Statements(
                Statements(
                  Statements(
                    Statements(
                      Statements(
                        Statements(
                          Statements(
                            Statements(
                              Statements(
                                Statements(
                                  Statements(
                                    Statements(
                                      Statements(
                                        Statements(
                                          Statements(
                                            Statements(
                                              Statements(
                                                Statements(
                                                  Statements(
                                                    Statements(
                                                      Statements(
                                                        NoStatements(
                                                        ) [NoStatements]
                                                        DesignatorStat(
                                                          DesignatorExpr(
                                                            Designator(
                                                              WithoutNamespace(
                                                               bodovi
                                                              ) [WithoutNamespace]
                                                              NoArrayExpression(
                                                              ) [NoArrayExpression]
                                                            ) [Designator]
                                                            AssignOperation(
                                                            ) [AssignOperation]
                                                            PositiveStartExpr(
                                                              SingleTerm(
                                                                NumberConst(
                                                                 0
                                                                ) [NumberConst]
                                                              ) [SingleTerm]
                                                            ) [PositiveStartExpr]
                                                          ) [DesignatorExpr]
                                                        ) [DesignatorStat]
                                                      ) [Statements]
                                                      DesignatorStat(
                                                        DesignatorPP(
                                                          Designator(
                                                            WithoutNamespace(
                                                             bodovi
                                                            ) [WithoutNamespace]
                                                            NoArrayExpression(
                                                            ) [NoArrayExpression]
                                                          ) [Designator]
                                                        ) [DesignatorPP]
                                                      ) [DesignatorStat]
                                                    ) [Statements]
                                                    DesignatorStat(
                                                      DesignatorExpr(
                                                        Designator(
                                                          WithoutNamespace(
                                                           bodovi
                                                          ) [WithoutNamespace]
                                                          NoArrayExpression(
                                                          ) [NoArrayExpression]
                                                        ) [Designator]
                                                        AssignOperation(
                                                        ) [AssignOperation]
                                                        AddExpression(
                                                          PositiveStartExpr(
                                                            SingleTerm(
                                                              DesignatorFact(
                                                                Designator(
                                                                  WithoutNamespace(
                                                                   bodovi
                                                                  ) [WithoutNamespace]
                                                                  NoArrayExpression(
                                                                  ) [NoArrayExpression]
                                                                ) [Designator]
                                                              ) [DesignatorFact]
                                                            ) [SingleTerm]
                                                          ) [PositiveStartExpr]
                                                          Plus(
                                                          ) [Plus]
                                                          SingleTerm(
                                                            DesignatorFact(
                                                              Designator(
                                                                WithoutNamespace(
                                                                 jedan
                                                                ) [WithoutNamespace]
                                                                NoArrayExpression(
                                                                ) [NoArrayExpression]
                                                              ) [Designator]
                                                            ) [DesignatorFact]
                                                          ) [SingleTerm]
                                                        ) [AddExpression]
                                                      ) [DesignatorExpr]
                                                    ) [DesignatorStat]
                                                  ) [Statements]
                                                  DesignatorStat(
                                                    DesignatorExpr(
                                                      Designator(
                                                        WithoutNamespace(
                                                         bodovi
                                                        ) [WithoutNamespace]
                                                        NoArrayExpression(
                                                        ) [NoArrayExpression]
                                                      ) [Designator]
                                                      AssignOperation(
                                                      ) [AssignOperation]
                                                      PositiveStartExpr(
                                                        MultipleTerms(
                                                          SingleTerm(
                                                            DesignatorFact(
                                                              Designator(
                                                                WithoutNamespace(
                                                                 bodovi
                                                                ) [WithoutNamespace]
                                                                NoArrayExpression(
                                                                ) [NoArrayExpression]
                                                              ) [Designator]
                                                            ) [DesignatorFact]
                                                          ) [SingleTerm]
                                                          Multiply(
                                                          ) [Multiply]
                                                          DesignatorFact(
                                                            Designator(
                                                              WithoutNamespace(
                                                               pet
                                                              ) [WithoutNamespace]
                                                              NoArrayExpression(
                                                              ) [NoArrayExpression]
                                                            ) [Designator]
                                                          ) [DesignatorFact]
                                                        ) [MultipleTerms]
                                                      ) [PositiveStartExpr]
                                                    ) [DesignatorExpr]
                                                  ) [DesignatorStat]
                                                ) [Statements]
                                                DesignatorStat(
                                                  DesignatorMM(
                                                    Designator(
                                                      WithoutNamespace(
                                                       bodovi
                                                      ) [WithoutNamespace]
                                                      NoArrayExpression(
                                                      ) [NoArrayExpression]
                                                    ) [Designator]
                                                  ) [DesignatorMM]
                                                ) [DesignatorStat]
                                              ) [Statements]
                                              PrintExpr(
                                                PositiveStartExpr(
                                                  SingleTerm(
                                                    DesignatorFact(
                                                      Designator(
                                                        WithoutNamespace(
                                                         bodovi
                                                        ) [WithoutNamespace]
                                                        NoArrayExpression(
                                                        ) [NoArrayExpression]
                                                      ) [Designator]
                                                    ) [DesignatorFact]
                                                  ) [SingleTerm]
                                                ) [PositiveStartExpr]
                                                NoNumConstOpt(
                                                ) [NoNumConstOpt]
                                              ) [PrintExpr]
                                            ) [Statements]
                                            DesignatorStat(
                                              DesignatorExpr(
                                                Designator(
                                                  WithoutNamespace(
                                                   niz
                                                  ) [WithoutNamespace]
                                                  NoArrayExpression(
                                                  ) [NoArrayExpression]
                                                ) [Designator]
                                                AssignOperation(
                                                ) [AssignOperation]
                                                PositiveStartExpr(
                                                  SingleTerm(
                                                    NewType(
                                                      Type(
                                                       int
                                                      ) [Type]
                                                      PositiveStartExpr(
                                                        SingleTerm(
                                                          NumberConst(
                                                           3
                                                          ) [NumberConst]
                                                        ) [SingleTerm]
                                                      ) [PositiveStartExpr]
                                                    ) [NewType]
                                                  ) [SingleTerm]
                                                ) [PositiveStartExpr]
                                              ) [DesignatorExpr]
                                            ) [DesignatorStat]
                                          ) [Statements]
                                          DesignatorStat(
                                            DesignatorExpr(
                                              Designator(
                                                WithoutNamespace(
                                                 niz
                                                ) [WithoutNamespace]
                                                AddArrayExpression(
                                                  BraExpr(
                                                    PositiveStartExpr(
                                                      SingleTerm(
                                                        DesignatorFact(
                                                          Designator(
                                                            WithoutNamespace(
                                                             nula
                                                            ) [WithoutNamespace]
                                                            NoArrayExpression(
                                                            ) [NoArrayExpression]
                                                          ) [Designator]
                                                        ) [DesignatorFact]
                                                      ) [SingleTerm]
                                                    ) [PositiveStartExpr]
                                                  ) [BraExpr]
                                                ) [AddArrayExpression]
                                              ) [Designator]
                                              AssignOperation(
                                              ) [AssignOperation]
                                              PositiveStartExpr(
                                                SingleTerm(
                                                  DesignatorFact(
                                                    Designator(
                                                      WithoutNamespace(
                                                       jedan
                                                      ) [WithoutNamespace]
                                                      NoArrayExpression(
                                                      ) [NoArrayExpression]
                                                    ) [Designator]
                                                  ) [DesignatorFact]
                                                ) [SingleTerm]
                                              ) [PositiveStartExpr]
                                            ) [DesignatorExpr]
                                          ) [DesignatorStat]
                                        ) [Statements]
                                        DesignatorStat(
                                          DesignatorExpr(
                                            Designator(
                                              WithoutNamespace(
                                               niz
                                              ) [WithoutNamespace]
                                              AddArrayExpression(
                                                BraExpr(
                                                  PositiveStartExpr(
                                                    SingleTerm(
                                                      NumberConst(
                                                       1
                                                      ) [NumberConst]
                                                    ) [SingleTerm]
                                                  ) [PositiveStartExpr]
                                                ) [BraExpr]
                                              ) [AddArrayExpression]
                                            ) [Designator]
                                            AssignOperation(
                                            ) [AssignOperation]
                                            PositiveStartExpr(
                                              SingleTerm(
                                                NumberConst(
                                                 2
                                                ) [NumberConst]
                                              ) [SingleTerm]
                                            ) [PositiveStartExpr]
                                          ) [DesignatorExpr]
                                        ) [DesignatorStat]
                                      ) [Statements]
                                      DesignatorStat(
                                        DesignatorExpr(
                                          Designator(
                                            WithoutNamespace(
                                             niz
                                            ) [WithoutNamespace]
                                            AddArrayExpression(
                                              BraExpr(
                                                PositiveStartExpr(
                                                  SingleTerm(
                                                    DesignatorFact(
                                                      Designator(
                                                        WithoutNamespace(
                                                         niz
                                                        ) [WithoutNamespace]
                                                        AddArrayExpression(
                                                          BraExpr(
                                                            PositiveStartExpr(
                                                              SingleTerm(
                                                                DesignatorFact(
                                                                  Designator(
                                                                    WithoutNamespace(
                                                                     jedan
                                                                    ) [WithoutNamespace]
                                                                    NoArrayExpression(
                                                                    ) [NoArrayExpression]
                                                                  ) [Designator]
                                                                ) [DesignatorFact]
                                                              ) [SingleTerm]
                                                            ) [PositiveStartExpr]
                                                          ) [BraExpr]
                                                        ) [AddArrayExpression]
                                                      ) [Designator]
                                                    ) [DesignatorFact]
                                                  ) [SingleTerm]
                                                ) [PositiveStartExpr]
                                              ) [BraExpr]
                                            ) [AddArrayExpression]
                                          ) [Designator]
                                          AssignOperation(
                                          ) [AssignOperation]
                                          PositiveStartExpr(
                                            MultipleTerms(
                                              SingleTerm(
                                                DesignatorFact(
                                                  Designator(
                                                    WithoutNamespace(
                                                     niz
                                                    ) [WithoutNamespace]
                                                    AddArrayExpression(
                                                      BraExpr(
                                                        PositiveStartExpr(
                                                          SingleTerm(
                                                            DesignatorFact(
                                                              Designator(
                                                                WithoutNamespace(
                                                                 niz
                                                                ) [WithoutNamespace]
                                                                AddArrayExpression(
                                                                  BraExpr(
                                                                    PositiveStartExpr(
                                                                      SingleTerm(
                                                                        NumberConst(
                                                                         0
                                                                        ) [NumberConst]
                                                                      ) [SingleTerm]
                                                                    ) [PositiveStartExpr]
                                                                  ) [BraExpr]
                                                                ) [AddArrayExpression]
                                                              ) [Designator]
                                                            ) [DesignatorFact]
                                                          ) [SingleTerm]
                                                        ) [PositiveStartExpr]
                                                      ) [BraExpr]
                                                    ) [AddArrayExpression]
                                                  ) [Designator]
                                                ) [DesignatorFact]
                                              ) [SingleTerm]
                                              Multiply(
                                              ) [Multiply]
                                              NumberConst(
                                               3
                                              ) [NumberConst]
                                            ) [MultipleTerms]
                                          ) [PositiveStartExpr]
                                        ) [DesignatorExpr]
                                      ) [DesignatorStat]
                                    ) [Statements]
                                    DesignatorStat(
                                      DesignatorExpr(
                                        Designator(
                                          WithoutNamespace(
                                           bodovi
                                          ) [WithoutNamespace]
                                          NoArrayExpression(
                                          ) [NoArrayExpression]
                                        ) [Designator]
                                        AssignOperation(
                                        ) [AssignOperation]
                                        PositiveStartExpr(
                                          MultipleTerms(
                                            SingleTerm(
                                              DesignatorFact(
                                                Designator(
                                                  WithoutNamespace(
                                                   niz
                                                  ) [WithoutNamespace]
                                                  AddArrayExpression(
                                                    BraExpr(
                                                      PositiveStartExpr(
                                                        SingleTerm(
                                                          NumberConst(
                                                           2
                                                          ) [NumberConst]
                                                        ) [SingleTerm]
                                                      ) [PositiveStartExpr]
                                                    ) [BraExpr]
                                                  ) [AddArrayExpression]
                                                ) [Designator]
                                              ) [DesignatorFact]
                                            ) [SingleTerm]
                                            Divide(
                                            ) [Divide]
                                            DesignatorFact(
                                              Designator(
                                                WithoutNamespace(
                                                 niz
                                                ) [WithoutNamespace]
                                                AddArrayExpression(
                                                  BraExpr(
                                                    PositiveStartExpr(
                                                      SingleTerm(
                                                        NumberConst(
                                                         0
                                                        ) [NumberConst]
                                                      ) [SingleTerm]
                                                    ) [PositiveStartExpr]
                                                  ) [BraExpr]
                                                ) [AddArrayExpression]
                                              ) [Designator]
                                            ) [DesignatorFact]
                                          ) [MultipleTerms]
                                        ) [PositiveStartExpr]
                                      ) [DesignatorExpr]
                                    ) [DesignatorStat]
                                  ) [Statements]
                                  PrintExpr(
                                    PositiveStartExpr(
                                      SingleTerm(
                                        DesignatorFact(
                                          Designator(
                                            WithoutNamespace(
                                             bodovi
                                            ) [WithoutNamespace]
                                            NoArrayExpression(
                                            ) [NoArrayExpression]
                                          ) [Designator]
                                        ) [DesignatorFact]
                                      ) [SingleTerm]
                                    ) [PositiveStartExpr]
                                    NoNumConstOpt(
                                    ) [NoNumConstOpt]
                                  ) [PrintExpr]
                                ) [Statements]
                                PrintExpr(
                                  PositiveStartExpr(
                                    SingleTerm(
                                      DesignatorFact(
                                        Designator(
                                          WithoutNamespace(
                                           niz
                                          ) [WithoutNamespace]
                                          AddArrayExpression(
                                            BraExpr(
                                              PositiveStartExpr(
                                                SingleTerm(
                                                  NumberConst(
                                                   2
                                                  ) [NumberConst]
                                                ) [SingleTerm]
                                              ) [PositiveStartExpr]
                                            ) [BraExpr]
                                          ) [AddArrayExpression]
                                        ) [Designator]
                                      ) [DesignatorFact]
                                    ) [SingleTerm]
                                  ) [PositiveStartExpr]
                                  NoNumConstOpt(
                                  ) [NoNumConstOpt]
                                ) [PrintExpr]
                              ) [Statements]
                              DesignatorStat(
                                DesignatorExpr(
                                  Designator(
                                    WithoutNamespace(
                                     nizch
                                    ) [WithoutNamespace]
                                    NoArrayExpression(
                                    ) [NoArrayExpression]
                                  ) [Designator]
                                  AssignOperation(
                                  ) [AssignOperation]
                                  PositiveStartExpr(
                                    SingleTerm(
                                      NewType(
                                        Type(
                                         char
                                        ) [Type]
                                        PositiveStartExpr(
                                          SingleTerm(
                                            NumberConst(
                                             3
                                            ) [NumberConst]
                                          ) [SingleTerm]
                                        ) [PositiveStartExpr]
                                      ) [NewType]
                                    ) [SingleTerm]
                                  ) [PositiveStartExpr]
                                ) [DesignatorExpr]
                              ) [DesignatorStat]
                            ) [Statements]
                            DesignatorStat(
                              DesignatorExpr(
                                Designator(
                                  WithoutNamespace(
                                   nizch
                                  ) [WithoutNamespace]
                                  AddArrayExpression(
                                    BraExpr(
                                      PositiveStartExpr(
                                        SingleTerm(
                                          NumberConst(
                                           0
                                          ) [NumberConst]
                                        ) [SingleTerm]
                                      ) [PositiveStartExpr]
                                    ) [BraExpr]
                                  ) [AddArrayExpression]
                                ) [Designator]
                                AssignOperation(
                                ) [AssignOperation]
                                PositiveStartExpr(
                                  SingleTerm(
                                    CharacterConst(
                                     a
                                    ) [CharacterConst]
                                  ) [SingleTerm]
                                ) [PositiveStartExpr]
                              ) [DesignatorExpr]
                            ) [DesignatorStat]
                          ) [Statements]
                          DesignatorStat(
                            DesignatorExpr(
                              Designator(
                                WithoutNamespace(
                                 nizch
                                ) [WithoutNamespace]
                                AddArrayExpression(
                                  BraExpr(
                                    PositiveStartExpr(
                                      SingleTerm(
                                        DesignatorFact(
                                          Designator(
                                            WithoutNamespace(
                                             jedan
                                            ) [WithoutNamespace]
                                            NoArrayExpression(
                                            ) [NoArrayExpression]
                                          ) [Designator]
                                        ) [DesignatorFact]
                                      ) [SingleTerm]
                                    ) [PositiveStartExpr]
                                  ) [BraExpr]
                                ) [AddArrayExpression]
                              ) [Designator]
                              AssignOperation(
                              ) [AssignOperation]
                              PositiveStartExpr(
                                SingleTerm(
                                  CharacterConst(
                                   b
                                  ) [CharacterConst]
                                ) [SingleTerm]
                              ) [PositiveStartExpr]
                            ) [DesignatorExpr]
                          ) [DesignatorStat]
                        ) [Statements]
                        DesignatorStat(
                          DesignatorExpr(
                            Designator(
                              WithoutNamespace(
                               nizch
                              ) [WithoutNamespace]
                              AddArrayExpression(
                                BraExpr(
                                  AddExpression(
                                    PositiveStartExpr(
                                      SingleTerm(
                                        DesignatorFact(
                                          Designator(
                                            WithoutNamespace(
                                             pet
                                            ) [WithoutNamespace]
                                            NoArrayExpression(
                                            ) [NoArrayExpression]
                                          ) [Designator]
                                        ) [DesignatorFact]
                                      ) [SingleTerm]
                                    ) [PositiveStartExpr]
                                    Minus(
                                    ) [Minus]
                                    SingleTerm(
                                      NumberConst(
                                       3
                                      ) [NumberConst]
                                    ) [SingleTerm]
                                  ) [AddExpression]
                                ) [BraExpr]
                              ) [AddArrayExpression]
                            ) [Designator]
                            AssignOperation(
                            ) [AssignOperation]
                            PositiveStartExpr(
                              SingleTerm(
                                CharacterConst(
                                 c
                                ) [CharacterConst]
                              ) [SingleTerm]
                            ) [PositiveStartExpr]
                          ) [DesignatorExpr]
                        ) [DesignatorStat]
                      ) [Statements]
                      PrintExpr(
                        PositiveStartExpr(
                          SingleTerm(
                            DesignatorFact(
                              Designator(
                                WithoutNamespace(
                                 nizch
                                ) [WithoutNamespace]
                                AddArrayExpression(
                                  BraExpr(
                                    PositiveStartExpr(
                                      SingleTerm(
                                        NumberConst(
                                         1
                                        ) [NumberConst]
                                      ) [SingleTerm]
                                    ) [PositiveStartExpr]
                                  ) [BraExpr]
                                ) [AddArrayExpression]
                              ) [Designator]
                            ) [DesignatorFact]
                          ) [SingleTerm]
                        ) [PositiveStartExpr]
                        NoNumConstOpt(
                        ) [NoNumConstOpt]
                      ) [PrintExpr]
                    ) [Statements]
                    PrintExpr(
                      PositiveStartExpr(
                        SingleTerm(
                          DesignatorFact(
                            Designator(
                              WithoutNamespace(
                               nizch
                              ) [WithoutNamespace]
                              AddArrayExpression(
                                BraExpr(
                                  PositiveStartExpr(
                                    MultipleTerms(
                                      SingleTerm(
                                        DesignatorFact(
                                          Designator(
                                            WithoutNamespace(
                                             jedan
                                            ) [WithoutNamespace]
                                            NoArrayExpression(
                                            ) [NoArrayExpression]
                                          ) [Designator]
                                        ) [DesignatorFact]
                                      ) [SingleTerm]
                                      Multiply(
                                      ) [Multiply]
                                      NumberConst(
                                       2
                                      ) [NumberConst]
                                    ) [MultipleTerms]
                                  ) [PositiveStartExpr]
                                ) [BraExpr]
                              ) [AddArrayExpression]
                            ) [Designator]
                          ) [DesignatorFact]
                        ) [SingleTerm]
                      ) [PositiveStartExpr]
                      NoNumConstOpt(
                      ) [NoNumConstOpt]
                    ) [PrintExpr]
                  ) [Statements]
                  DesignatorStat(
                    DesignatorExpr(
                      Designator(
                        WithoutNamespace(
                         bodovi
                        ) [WithoutNamespace]
                        NoArrayExpression(
                        ) [NoArrayExpression]
                      ) [Designator]
                      AssignOperation(
                      ) [AssignOperation]
                      AddExpression(
                        AddExpression(
                          PositiveStartExpr(
                            SingleTerm(
                              DesignatorFact(
                                Designator(
                                  WithoutNamespace(
                                   bodovi
                                  ) [WithoutNamespace]
                                  NoArrayExpression(
                                  ) [NoArrayExpression]
                                ) [Designator]
                              ) [DesignatorFact]
                            ) [SingleTerm]
                          ) [PositiveStartExpr]
                          Plus(
                          ) [Plus]
                          MultipleTerms(
                            SingleTerm(
                              ExpressionFact(
                                AddExpression(
                                  PositiveStartExpr(
                                    MultipleTerms(
                                      SingleTerm(
                                        DesignatorFact(
                                          Designator(
                                            WithoutNamespace(
                                             pet
                                            ) [WithoutNamespace]
                                            NoArrayExpression(
                                            ) [NoArrayExpression]
                                          ) [Designator]
                                        ) [DesignatorFact]
                                      ) [SingleTerm]
                                      Multiply(
                                      ) [Multiply]
                                      DesignatorFact(
                                        Designator(
                                          WithoutNamespace(
                                           jedan
                                          ) [WithoutNamespace]
                                          NoArrayExpression(
                                          ) [NoArrayExpression]
                                        ) [Designator]
                                      ) [DesignatorFact]
                                    ) [MultipleTerms]
                                  ) [PositiveStartExpr]
                                  Minus(
                                  ) [Minus]
                                  SingleTerm(
                                    NumberConst(
                                     1
                                    ) [NumberConst]
                                  ) [SingleTerm]
                                ) [AddExpression]
                              ) [ExpressionFact]
                            ) [SingleTerm]
                            Multiply(
                            ) [Multiply]
                            DesignatorFact(
                              Designator(
                                WithoutNamespace(
                                 bodovi
                                ) [WithoutNamespace]
                                NoArrayExpression(
                                ) [NoArrayExpression]
                              ) [Designator]
                            ) [DesignatorFact]
                          ) [MultipleTerms]
                        ) [AddExpression]
                        Minus(
                        ) [Minus]
                        SingleTerm(
                          ExpressionFact(
                            AddExpression(
                              AddExpression(
                                PositiveStartExpr(
                                  MultipleTerms(
                                    SingleTerm(
                                      NumberConst(
                                       3
                                      ) [NumberConst]
                                    ) [SingleTerm]
                                    Modulo(
                                    ) [Modulo]
                                    NumberConst(
                                     2
                                    ) [NumberConst]
                                  ) [MultipleTerms]
                                ) [PositiveStartExpr]
                                Plus(
                                ) [Plus]
                                MultipleTerms(
                                  SingleTerm(
                                    NumberConst(
                                     3
                                    ) [NumberConst]
                                  ) [SingleTerm]
                                  Multiply(
                                  ) [Multiply]
                                  NumberConst(
                                   2
                                  ) [NumberConst]
                                ) [MultipleTerms]
                              ) [AddExpression]
                              Minus(
                              ) [Minus]
                              SingleTerm(
                                NumberConst(
                                 3
                                ) [NumberConst]
                              ) [SingleTerm]
                            ) [AddExpression]
                          ) [ExpressionFact]
                        ) [SingleTerm]
                      ) [AddExpression]
                    ) [DesignatorExpr]
                  ) [DesignatorStat]
                ) [Statements]
                PrintExpr(
                  PositiveStartExpr(
                    SingleTerm(
                      DesignatorFact(
                        Designator(
                          WithoutNamespace(
                           bodovi
                          ) [WithoutNamespace]
                          NoArrayExpression(
                          ) [NoArrayExpression]
                        ) [Designator]
                      ) [DesignatorFact]
                    ) [SingleTerm]
                  ) [PositiveStartExpr]
                  NoNumConstOpt(
                  ) [NoNumConstOpt]
                ) [PrintExpr]
              ) [Statements]
              ReadDesignator(
                Designator(
                  WithoutNamespace(
                   bodovi
                  ) [WithoutNamespace]
                  NoArrayExpression(
                  ) [NoArrayExpression]
                ) [Designator]
              ) [ReadDesignator]
            ) [Statements]
            PrintExpr(
              PositiveStartExpr(
                SingleTerm(
                  DesignatorFact(
                    Designator(
                      WithoutNamespace(
                       bodovi
                      ) [WithoutNamespace]
                      NoArrayExpression(
                      ) [NoArrayExpression]
                    ) [Designator]
                  ) [DesignatorFact]
                ) [SingleTerm]
              ) [PositiveStartExpr]
              NoNumConstOpt(
              ) [NoNumConstOpt]
            ) [PrintExpr]
          ) [Statements]
          DesignatorStat(
            DesignatorExpr(
              Designator(
                WithoutNamespace(
                 niz2
                ) [WithoutNamespace]
                NoArrayExpression(
                ) [NoArrayExpression]
              ) [Designator]
              AssignOperation(
              ) [AssignOperation]
              PositiveStartExpr(
                SingleTerm(
                  RangeExpression(
                    AddExpression(
                      PositiveStartExpr(
                        SingleTerm(
                          DesignatorFact(
                            Designator(
                              WithoutNamespace(
                               bodovi
                              ) [WithoutNamespace]
                              NoArrayExpression(
                              ) [NoArrayExpression]
                            ) [Designator]
                          ) [DesignatorFact]
                        ) [SingleTerm]
                      ) [PositiveStartExpr]
                      Plus(
                      ) [Plus]
                      SingleTerm(
                        NumberConst(
                         1
                        ) [NumberConst]
                      ) [SingleTerm]
                    ) [AddExpression]
                  ) [RangeExpression]
                ) [SingleTerm]
              ) [PositiveStartExpr]
            ) [DesignatorExpr]
          ) [DesignatorStat]
        ) [Statements]
        PrintExpr(
          PositiveStartExpr(
            SingleTerm(
              DesignatorFact(
                Designator(
                  WithoutNamespace(
                   niz2
                  ) [WithoutNamespace]
                  NoArrayExpression(
                  ) [NoArrayExpression]
                ) [Designator]
              ) [DesignatorFact]
            ) [SingleTerm]
          ) [PositiveStartExpr]
          NoNumConstOpt(
          ) [NoNumConstOpt]
        ) [PrintExpr]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  13:41:55,612 - ================ Semanticka obrada ===================
INFO  13:41:55,615 - Const nula defined on line 3
INFO  13:41:55,615 - Const jedan defined on line 4
INFO  13:41:55,615 - Const pet defined on line 5
INFO  13:41:55,615 - Symbol bodovi found on line 15
INFO  13:41:55,615 - Symbol bodovi found on line 16
INFO  13:41:55,615 - Symbol bodovi found on line 17
INFO  13:41:55,615 - Symbol bodovi found on line 17
INFO  13:41:55,615 - Symbol jedan found on line 17
INFO  13:41:55,615 - Symbol bodovi found on line 18
INFO  13:41:55,615 - Symbol bodovi found on line 18
INFO  13:41:55,615 - Symbol pet found on line 18
INFO  13:41:55,615 - Symbol bodovi found on line 19
INFO  13:41:55,615 - Symbol bodovi found on line 20
INFO  13:41:55,615 - Symbol niz found on line 23
INFO  13:41:55,617 - Symbol niz found on line 24
INFO  13:41:55,617 - Symbol nula found on line 24
INFO  13:41:55,617 - Symbol jedan found on line 24
INFO  13:41:55,617 - Symbol niz found on line 25
INFO  13:41:55,617 - Symbol niz found on line 26
INFO  13:41:55,617 - Symbol niz found on line 26
INFO  13:41:55,617 - Symbol jedan found on line 26
INFO  13:41:55,617 - Symbol niz found on line 26
INFO  13:41:55,617 - Symbol niz found on line 26
INFO  13:41:55,617 - Symbol bodovi found on line 27
INFO  13:41:55,617 - Symbol niz found on line 27
INFO  13:41:55,617 - Symbol niz found on line 27
INFO  13:41:55,617 - Symbol bodovi found on line 28
INFO  13:41:55,617 - Symbol niz found on line 29
INFO  13:41:55,617 - Symbol nizch found on line 32
INFO  13:41:55,617 - Symbol nizch found on line 33
INFO  13:41:55,617 - Symbol nizch found on line 34
INFO  13:41:55,617 - Symbol jedan found on line 34
INFO  13:41:55,617 - Symbol nizch found on line 35
INFO  13:41:55,617 - Symbol pet found on line 35
INFO  13:41:55,617 - Symbol nizch found on line 36
INFO  13:41:55,617 - Symbol nizch found on line 37
INFO  13:41:55,617 - Symbol jedan found on line 37
INFO  13:41:55,617 - Symbol bodovi found on line 40
INFO  13:41:55,617 - Symbol bodovi found on line 40
INFO  13:41:55,618 - Symbol pet found on line 40
INFO  13:41:55,618 - Symbol jedan found on line 40
INFO  13:41:55,618 - Symbol bodovi found on line 40
INFO  13:41:55,618 - Symbol bodovi found on line 41
INFO  13:41:55,618 - Symbol bodovi found on line 43
INFO  13:41:55,618 - read() function call on line 43
INFO  13:41:55,618 - Symbol bodovi found on line 44
INFO  13:41:55,618 - Symbol niz2 found on line 46
INFO  13:41:55,618 - Symbol bodovi found on line 46
INFO  13:41:55,618 - Symbol niz2 found on line 47
INFO  13:41:55,618 - main() method found on line 1
INFO  13:41:55,620 - Parser SUCCESS!
INFO  13:42:22,810 - Compiling source file: C:\Users\elena\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  13:42:22,811 - ================= LEKSICKA ANALIZA =================
INFO  13:42:22,837 - #2 program
INFO  13:42:22,837 - #47 test301
INFO  13:42:22,837 - #3 const
INFO  13:42:22,838 - #47 int
INFO  13:42:22,838 - #47 nula
INFO  13:42:22,839 - #24 =
INFO  13:42:22,839 - #46 0
INFO  13:42:22,839 - #27 ;
INFO  13:42:22,840 - #3 const
INFO  13:42:22,840 - #47 int
INFO  13:42:22,840 - #47 jedan
INFO  13:42:22,840 - #24 =
INFO  13:42:22,840 - #46 1
INFO  13:42:22,840 - #27 ;
INFO  13:42:22,840 - #3 const
INFO  13:42:22,840 - #47 int
INFO  13:42:22,840 - #47 pet
INFO  13:42:22,840 - #24 =
INFO  13:42:22,840 - #46 5
INFO  13:42:22,840 - #27 ;
INFO  13:42:22,841 - #47 int
INFO  13:42:22,841 - #47 niz
INFO  13:42:22,841 - #33 [
INFO  13:42:22,841 - #34 ]
INFO  13:42:22,841 - #29 ,
INFO  13:42:22,842 - #47 niz2
INFO  13:42:22,842 - #33 [
INFO  13:42:22,842 - #34 ]
INFO  13:42:22,842 - #27 ;
INFO  13:42:22,842 - #47 char
INFO  13:42:22,842 - #47 nizch
INFO  13:42:22,842 - #33 [
INFO  13:42:22,842 - #34 ]
INFO  13:42:22,842 - #27 ;
INFO  13:42:22,843 - #35 {
INFO  13:42:22,843 - #8 void
INFO  13:42:22,843 - #47 main
INFO  13:42:22,844 - #31 (
INFO  13:42:22,844 - #32 )
INFO  13:42:22,844 - #47 int
INFO  13:42:22,845 - #47 bodovi
INFO  13:42:22,845 - #27 ;
INFO  13:42:22,845 - #47 bool
INFO  13:42:22,845 - #47 bt
INFO  13:42:22,845 - #27 ;
INFO  13:42:22,845 - #35 {
INFO  13:42:22,845 - #47 bodovi
INFO  13:42:22,845 - #24 =
INFO  13:42:22,846 - #46 0
INFO  13:42:22,847 - #27 ;
INFO  13:42:22,847 - #47 bodovi
INFO  13:42:22,847 - #25 ++
INFO  13:42:22,847 - #27 ;
INFO  13:42:22,847 - #47 bodovi
INFO  13:42:22,847 - #24 =
INFO  13:42:22,847 - #47 bodovi
INFO  13:42:22,847 - #11 +
INFO  13:42:22,847 - #47 jedan
INFO  13:42:22,848 - #27 ;
INFO  13:42:22,848 - #47 bodovi
INFO  13:42:22,848 - #24 =
INFO  13:42:22,848 - #47 bodovi
INFO  13:42:22,848 - #13 *
INFO  13:42:22,848 - #47 pet
INFO  13:42:22,849 - #27 ;
INFO  13:42:22,849 - #47 bodovi
INFO  13:42:22,849 - #26 --
INFO  13:42:22,849 - #27 ;
INFO  13:42:22,849 - #5 print
INFO  13:42:22,849 - #31 (
INFO  13:42:22,849 - #47 bodovi
INFO  13:42:22,849 - #32 )
INFO  13:42:22,850 - #27 ;
INFO  13:42:22,850 - #47 niz
INFO  13:42:22,850 - #24 =
INFO  13:42:22,850 - #4 new
INFO  13:42:22,850 - #47 int
INFO  13:42:22,850 - #33 [
INFO  13:42:22,850 - #46 3
INFO  13:42:22,850 - #34 ]
INFO  13:42:22,851 - #27 ;
INFO  13:42:22,851 - #47 niz
INFO  13:42:22,851 - #33 [
INFO  13:42:22,851 - #47 nula
INFO  13:42:22,851 - #34 ]
INFO  13:42:22,851 - #24 =
INFO  13:42:22,852 - #47 jedan
INFO  13:42:22,852 - #27 ;
INFO  13:42:22,852 - #47 niz
INFO  13:42:22,852 - #33 [
INFO  13:42:22,852 - #46 1
INFO  13:42:22,852 - #34 ]
INFO  13:42:22,852 - #24 =
INFO  13:42:22,852 - #46 2
INFO  13:42:22,852 - #27 ;
INFO  13:42:22,852 - #47 niz
INFO  13:42:22,852 - #33 [
INFO  13:42:22,852 - #47 niz
INFO  13:42:22,852 - #33 [
INFO  13:42:22,852 - #47 jedan
INFO  13:42:22,852 - #34 ]
INFO  13:42:22,852 - #34 ]
INFO  13:42:22,852 - #24 =
INFO  13:42:22,852 - #47 niz
INFO  13:42:22,852 - #33 [
INFO  13:42:22,852 - #47 niz
INFO  13:42:22,852 - #33 [
INFO  13:42:22,853 - #46 0
INFO  13:42:22,853 - #34 ]
INFO  13:42:22,853 - #34 ]
INFO  13:42:22,853 - #13 *
INFO  13:42:22,853 - #46 3
INFO  13:42:22,853 - #27 ;
INFO  13:42:22,853 - #47 bodovi
INFO  13:42:22,853 - #24 =
INFO  13:42:22,853 - #47 niz
INFO  13:42:22,853 - #33 [
INFO  13:42:22,853 - #46 2
INFO  13:42:22,853 - #34 ]
INFO  13:42:22,853 - #14 /
INFO  13:42:22,853 - #47 niz
INFO  13:42:22,853 - #33 [
INFO  13:42:22,853 - #46 0
INFO  13:42:22,853 - #34 ]
INFO  13:42:22,854 - #27 ;
INFO  13:42:22,854 - #5 print
INFO  13:42:22,854 - #31 (
INFO  13:42:22,854 - #47 bodovi
INFO  13:42:22,854 - #32 )
INFO  13:42:22,854 - #27 ;
INFO  13:42:22,854 - #5 print
INFO  13:42:22,854 - #31 (
INFO  13:42:22,854 - #47 niz
INFO  13:42:22,854 - #33 [
INFO  13:42:22,854 - #46 2
INFO  13:42:22,854 - #34 ]
INFO  13:42:22,854 - #32 )
INFO  13:42:22,854 - #27 ;
INFO  13:42:22,854 - #47 nizch
INFO  13:42:22,854 - #24 =
INFO  13:42:22,854 - #4 new
INFO  13:42:22,854 - #47 char
INFO  13:42:22,854 - #33 [
INFO  13:42:22,854 - #46 3
INFO  13:42:22,854 - #34 ]
INFO  13:42:22,854 - #27 ;
INFO  13:42:22,854 - #47 nizch
INFO  13:42:22,854 - #33 [
INFO  13:42:22,854 - #46 0
INFO  13:42:22,854 - #34 ]
INFO  13:42:22,854 - #24 =
INFO  13:42:22,856 - #48 a
INFO  13:42:22,856 - #27 ;
INFO  13:42:22,856 - #47 nizch
INFO  13:42:22,856 - #33 [
INFO  13:42:22,856 - #47 jedan
INFO  13:42:22,856 - #34 ]
INFO  13:42:22,856 - #24 =
INFO  13:42:22,856 - #48 b
INFO  13:42:22,856 - #27 ;
INFO  13:42:22,856 - #47 nizch
INFO  13:42:22,856 - #33 [
INFO  13:42:22,856 - #47 pet
INFO  13:42:22,856 - #12 -
INFO  13:42:22,856 - #46 3
INFO  13:42:22,856 - #34 ]
INFO  13:42:22,857 - #24 =
INFO  13:42:22,857 - #48 c
INFO  13:42:22,857 - #27 ;
INFO  13:42:22,857 - #5 print
INFO  13:42:22,857 - #31 (
INFO  13:42:22,857 - #47 nizch
INFO  13:42:22,857 - #33 [
INFO  13:42:22,857 - #46 1
INFO  13:42:22,857 - #34 ]
INFO  13:42:22,857 - #32 )
INFO  13:42:22,857 - #27 ;
INFO  13:42:22,857 - #5 print
INFO  13:42:22,857 - #31 (
INFO  13:42:22,857 - #47 nizch
INFO  13:42:22,857 - #33 [
INFO  13:42:22,857 - #47 jedan
INFO  13:42:22,857 - #13 *
INFO  13:42:22,857 - #46 2
INFO  13:42:22,857 - #34 ]
INFO  13:42:22,857 - #32 )
INFO  13:42:22,857 - #27 ;
INFO  13:42:22,858 - #47 bodovi
INFO  13:42:22,858 - #24 =
INFO  13:42:22,858 - #47 bodovi
INFO  13:42:22,858 - #11 +
INFO  13:42:22,858 - #31 (
INFO  13:42:22,858 - #47 pet
INFO  13:42:22,858 - #13 *
INFO  13:42:22,858 - #47 jedan
INFO  13:42:22,858 - #12 -
INFO  13:42:22,858 - #46 1
INFO  13:42:22,858 - #32 )
INFO  13:42:22,858 - #13 *
INFO  13:42:22,858 - #47 bodovi
INFO  13:42:22,858 - #12 -
INFO  13:42:22,858 - #31 (
INFO  13:42:22,858 - #46 3
INFO  13:42:22,858 - #15 %
INFO  13:42:22,858 - #46 2
INFO  13:42:22,858 - #11 +
INFO  13:42:22,858 - #46 3
INFO  13:42:22,858 - #13 *
INFO  13:42:22,858 - #46 2
INFO  13:42:22,858 - #12 -
INFO  13:42:22,858 - #46 3
INFO  13:42:22,858 - #32 )
INFO  13:42:22,858 - #27 ;
INFO  13:42:22,858 - #5 print
INFO  13:42:22,859 - #31 (
INFO  13:42:22,859 - #47 bodovi
INFO  13:42:22,859 - #32 )
INFO  13:42:22,859 - #27 ;
INFO  13:42:22,859 - #47 niz2
INFO  13:42:22,859 - #24 =
INFO  13:42:22,859 - #45 range
INFO  13:42:22,859 - #31 (
INFO  13:42:22,859 - #47 bodovi
INFO  13:42:22,859 - #11 +
INFO  13:42:22,859 - #46 1
INFO  13:42:22,859 - #32 )
INFO  13:42:22,859 - #27 ;
INFO  13:42:22,859 - #5 print
INFO  13:42:22,859 - #31 (
INFO  13:42:22,859 - #47 niz2
INFO  13:42:22,859 - #32 )
INFO  13:42:22,859 - #27 ;
INFO  13:42:22,859 - #36 }
INFO  13:42:22,859 - #36 }
INFO  13:42:22,860 - ================= PARSIRANO STABLO =================
INFO  13:42:22,865 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  Declarations(
    Declarations(
      Declarations(
        Declarations(
          Declarations(
            NoDeclarations(
            ) [NoDeclarations]
            ConstantDeclaration(
              ConDecl(
                Type(
                 int
                ) [Type]
                ConstDef(
                 nula
                  NumConst(
                   0
                  ) [NumConst]
                ) [ConstDef]
                NoConstantDeclaration(
                ) [NoConstantDeclaration]
              ) [ConDecl]
            ) [ConstantDeclaration]
          ) [Declarations]
          ConstantDeclaration(
            ConDecl(
              Type(
               int
              ) [Type]
              ConstDef(
               jedan
                NumConst(
                 1
                ) [NumConst]
              ) [ConstDef]
              NoConstantDeclaration(
              ) [NoConstantDeclaration]
            ) [ConDecl]
          ) [ConstantDeclaration]
        ) [Declarations]
        ConstantDeclaration(
          ConDecl(
            Type(
             int
            ) [Type]
            ConstDef(
             pet
              NumConst(
               5
              ) [NumConst]
            ) [ConstDef]
            NoConstantDeclaration(
            ) [NoConstantDeclaration]
          ) [ConDecl]
        ) [ConstantDeclaration]
      ) [Declarations]
      VariableDeclaration(
        VarDeclaration(
          Type(
           int
          ) [Type]
          MultipleVarDeclarations(
            OneVarDeclaration(
              AddVarDecl1(
               niz
                Brackets(
                ) [Brackets]
              ) [AddVarDecl1]
            ) [OneVarDeclaration]
            AddVarDecl1(
             niz2
              Brackets(
              ) [Brackets]
            ) [AddVarDecl1]
          ) [MultipleVarDeclarations]
        ) [VarDeclaration]
      ) [VariableDeclaration]
    ) [Declarations]
    VariableDeclaration(
      VarDeclaration(
        Type(
         char
        ) [Type]
        OneVarDeclaration(
          AddVarDecl1(
           nizch
            Brackets(
            ) [Brackets]
          ) [AddVarDecl1]
        ) [OneVarDeclaration]
      ) [VarDeclaration]
    ) [VariableDeclaration]
  ) [Declarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      ListOfVarDecl(
        ListOfVarDecl(
          NoVarDeclarations(
          ) [NoVarDeclarations]
          VarDeclaration(
            Type(
             int
            ) [Type]
            OneVarDeclaration(
              AddVarDecl1(
               bodovi
                NoBrackets(
                ) [NoBrackets]
              ) [AddVarDecl1]
            ) [OneVarDeclaration]
          ) [VarDeclaration]
        ) [ListOfVarDecl]
        VarDeclaration(
          Type(
           bool
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             bt
              NoBrackets(
              ) [NoBrackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [ListOfVarDecl]
      Statements(
        Statements(
          Statements(
            Statements(
              Statements(
                Statements(
                  Statements(
                    Statements(
                      Statements(
                        Statements(
                          Statements(
                            Statements(
                              Statements(
                                Statements(
                                  Statements(
                                    Statements(
                                      Statements(
                                        Statements(
                                          Statements(
                                            Statements(
                                              Statements(
                                                Statements(
                                                  Statements(
                                                    NoStatements(
                                                    ) [NoStatements]
                                                    DesignatorStat(
                                                      DesignatorExpr(
                                                        Designator(
                                                          WithoutNamespace(
                                                           bodovi
                                                          ) [WithoutNamespace]
                                                          NoArrayExpression(
                                                          ) [NoArrayExpression]
                                                        ) [Designator]
                                                        AssignOperation(
                                                        ) [AssignOperation]
                                                        PositiveStartExpr(
                                                          SingleTerm(
                                                            NumberConst(
                                                             0
                                                            ) [NumberConst]
                                                          ) [SingleTerm]
                                                        ) [PositiveStartExpr]
                                                      ) [DesignatorExpr]
                                                    ) [DesignatorStat]
                                                  ) [Statements]
                                                  DesignatorStat(
                                                    DesignatorPP(
                                                      Designator(
                                                        WithoutNamespace(
                                                         bodovi
                                                        ) [WithoutNamespace]
                                                        NoArrayExpression(
                                                        ) [NoArrayExpression]
                                                      ) [Designator]
                                                    ) [DesignatorPP]
                                                  ) [DesignatorStat]
                                                ) [Statements]
                                                DesignatorStat(
                                                  DesignatorExpr(
                                                    Designator(
                                                      WithoutNamespace(
                                                       bodovi
                                                      ) [WithoutNamespace]
                                                      NoArrayExpression(
                                                      ) [NoArrayExpression]
                                                    ) [Designator]
                                                    AssignOperation(
                                                    ) [AssignOperation]
                                                    AddExpression(
                                                      PositiveStartExpr(
                                                        SingleTerm(
                                                          DesignatorFact(
                                                            Designator(
                                                              WithoutNamespace(
                                                               bodovi
                                                              ) [WithoutNamespace]
                                                              NoArrayExpression(
                                                              ) [NoArrayExpression]
                                                            ) [Designator]
                                                          ) [DesignatorFact]
                                                        ) [SingleTerm]
                                                      ) [PositiveStartExpr]
                                                      Plus(
                                                      ) [Plus]
                                                      SingleTerm(
                                                        DesignatorFact(
                                                          Designator(
                                                            WithoutNamespace(
                                                             jedan
                                                            ) [WithoutNamespace]
                                                            NoArrayExpression(
                                                            ) [NoArrayExpression]
                                                          ) [Designator]
                                                        ) [DesignatorFact]
                                                      ) [SingleTerm]
                                                    ) [AddExpression]
                                                  ) [DesignatorExpr]
                                                ) [DesignatorStat]
                                              ) [Statements]
                                              DesignatorStat(
                                                DesignatorExpr(
                                                  Designator(
                                                    WithoutNamespace(
                                                     bodovi
                                                    ) [WithoutNamespace]
                                                    NoArrayExpression(
                                                    ) [NoArrayExpression]
                                                  ) [Designator]
                                                  AssignOperation(
                                                  ) [AssignOperation]
                                                  PositiveStartExpr(
                                                    MultipleTerms(
                                                      SingleTerm(
                                                        DesignatorFact(
                                                          Designator(
                                                            WithoutNamespace(
                                                             bodovi
                                                            ) [WithoutNamespace]
                                                            NoArrayExpression(
                                                            ) [NoArrayExpression]
                                                          ) [Designator]
                                                        ) [DesignatorFact]
                                                      ) [SingleTerm]
                                                      Multiply(
                                                      ) [Multiply]
                                                      DesignatorFact(
                                                        Designator(
                                                          WithoutNamespace(
                                                           pet
                                                          ) [WithoutNamespace]
                                                          NoArrayExpression(
                                                          ) [NoArrayExpression]
                                                        ) [Designator]
                                                      ) [DesignatorFact]
                                                    ) [MultipleTerms]
                                                  ) [PositiveStartExpr]
                                                ) [DesignatorExpr]
                                              ) [DesignatorStat]
                                            ) [Statements]
                                            DesignatorStat(
                                              DesignatorMM(
                                                Designator(
                                                  WithoutNamespace(
                                                   bodovi
                                                  ) [WithoutNamespace]
                                                  NoArrayExpression(
                                                  ) [NoArrayExpression]
                                                ) [Designator]
                                              ) [DesignatorMM]
                                            ) [DesignatorStat]
                                          ) [Statements]
                                          PrintExpr(
                                            PositiveStartExpr(
                                              SingleTerm(
                                                DesignatorFact(
                                                  Designator(
                                                    WithoutNamespace(
                                                     bodovi
                                                    ) [WithoutNamespace]
                                                    NoArrayExpression(
                                                    ) [NoArrayExpression]
                                                  ) [Designator]
                                                ) [DesignatorFact]
                                              ) [SingleTerm]
                                            ) [PositiveStartExpr]
                                            NoNumConstOpt(
                                            ) [NoNumConstOpt]
                                          ) [PrintExpr]
                                        ) [Statements]
                                        DesignatorStat(
                                          DesignatorExpr(
                                            Designator(
                                              WithoutNamespace(
                                               niz
                                              ) [WithoutNamespace]
                                              NoArrayExpression(
                                              ) [NoArrayExpression]
                                            ) [Designator]
                                            AssignOperation(
                                            ) [AssignOperation]
                                            PositiveStartExpr(
                                              SingleTerm(
                                                NewType(
                                                  Type(
                                                   int
                                                  ) [Type]
                                                  PositiveStartExpr(
                                                    SingleTerm(
                                                      NumberConst(
                                                       3
                                                      ) [NumberConst]
                                                    ) [SingleTerm]
                                                  ) [PositiveStartExpr]
                                                ) [NewType]
                                              ) [SingleTerm]
                                            ) [PositiveStartExpr]
                                          ) [DesignatorExpr]
                                        ) [DesignatorStat]
                                      ) [Statements]
                                      DesignatorStat(
                                        DesignatorExpr(
                                          Designator(
                                            WithoutNamespace(
                                             niz
                                            ) [WithoutNamespace]
                                            AddArrayExpression(
                                              BraExpr(
                                                PositiveStartExpr(
                                                  SingleTerm(
                                                    DesignatorFact(
                                                      Designator(
                                                        WithoutNamespace(
                                                         nula
                                                        ) [WithoutNamespace]
                                                        NoArrayExpression(
                                                        ) [NoArrayExpression]
                                                      ) [Designator]
                                                    ) [DesignatorFact]
                                                  ) [SingleTerm]
                                                ) [PositiveStartExpr]
                                              ) [BraExpr]
                                            ) [AddArrayExpression]
                                          ) [Designator]
                                          AssignOperation(
                                          ) [AssignOperation]
                                          PositiveStartExpr(
                                            SingleTerm(
                                              DesignatorFact(
                                                Designator(
                                                  WithoutNamespace(
                                                   jedan
                                                  ) [WithoutNamespace]
                                                  NoArrayExpression(
                                                  ) [NoArrayExpression]
                                                ) [Designator]
                                              ) [DesignatorFact]
                                            ) [SingleTerm]
                                          ) [PositiveStartExpr]
                                        ) [DesignatorExpr]
                                      ) [DesignatorStat]
                                    ) [Statements]
                                    DesignatorStat(
                                      DesignatorExpr(
                                        Designator(
                                          WithoutNamespace(
                                           niz
                                          ) [WithoutNamespace]
                                          AddArrayExpression(
                                            BraExpr(
                                              PositiveStartExpr(
                                                SingleTerm(
                                                  NumberConst(
                                                   1
                                                  ) [NumberConst]
                                                ) [SingleTerm]
                                              ) [PositiveStartExpr]
                                            ) [BraExpr]
                                          ) [AddArrayExpression]
                                        ) [Designator]
                                        AssignOperation(
                                        ) [AssignOperation]
                                        PositiveStartExpr(
                                          SingleTerm(
                                            NumberConst(
                                             2
                                            ) [NumberConst]
                                          ) [SingleTerm]
                                        ) [PositiveStartExpr]
                                      ) [DesignatorExpr]
                                    ) [DesignatorStat]
                                  ) [Statements]
                                  DesignatorStat(
                                    DesignatorExpr(
                                      Designator(
                                        WithoutNamespace(
                                         niz
                                        ) [WithoutNamespace]
                                        AddArrayExpression(
                                          BraExpr(
                                            PositiveStartExpr(
                                              SingleTerm(
                                                DesignatorFact(
                                                  Designator(
                                                    WithoutNamespace(
                                                     niz
                                                    ) [WithoutNamespace]
                                                    AddArrayExpression(
                                                      BraExpr(
                                                        PositiveStartExpr(
                                                          SingleTerm(
                                                            DesignatorFact(
                                                              Designator(
                                                                WithoutNamespace(
                                                                 jedan
                                                                ) [WithoutNamespace]
                                                                NoArrayExpression(
                                                                ) [NoArrayExpression]
                                                              ) [Designator]
                                                            ) [DesignatorFact]
                                                          ) [SingleTerm]
                                                        ) [PositiveStartExpr]
                                                      ) [BraExpr]
                                                    ) [AddArrayExpression]
                                                  ) [Designator]
                                                ) [DesignatorFact]
                                              ) [SingleTerm]
                                            ) [PositiveStartExpr]
                                          ) [BraExpr]
                                        ) [AddArrayExpression]
                                      ) [Designator]
                                      AssignOperation(
                                      ) [AssignOperation]
                                      PositiveStartExpr(
                                        MultipleTerms(
                                          SingleTerm(
                                            DesignatorFact(
                                              Designator(
                                                WithoutNamespace(
                                                 niz
                                                ) [WithoutNamespace]
                                                AddArrayExpression(
                                                  BraExpr(
                                                    PositiveStartExpr(
                                                      SingleTerm(
                                                        DesignatorFact(
                                                          Designator(
                                                            WithoutNamespace(
                                                             niz
                                                            ) [WithoutNamespace]
                                                            AddArrayExpression(
                                                              BraExpr(
                                                                PositiveStartExpr(
                                                                  SingleTerm(
                                                                    NumberConst(
                                                                     0
                                                                    ) [NumberConst]
                                                                  ) [SingleTerm]
                                                                ) [PositiveStartExpr]
                                                              ) [BraExpr]
                                                            ) [AddArrayExpression]
                                                          ) [Designator]
                                                        ) [DesignatorFact]
                                                      ) [SingleTerm]
                                                    ) [PositiveStartExpr]
                                                  ) [BraExpr]
                                                ) [AddArrayExpression]
                                              ) [Designator]
                                            ) [DesignatorFact]
                                          ) [SingleTerm]
                                          Multiply(
                                          ) [Multiply]
                                          NumberConst(
                                           3
                                          ) [NumberConst]
                                        ) [MultipleTerms]
                                      ) [PositiveStartExpr]
                                    ) [DesignatorExpr]
                                  ) [DesignatorStat]
                                ) [Statements]
                                DesignatorStat(
                                  DesignatorExpr(
                                    Designator(
                                      WithoutNamespace(
                                       bodovi
                                      ) [WithoutNamespace]
                                      NoArrayExpression(
                                      ) [NoArrayExpression]
                                    ) [Designator]
                                    AssignOperation(
                                    ) [AssignOperation]
                                    PositiveStartExpr(
                                      MultipleTerms(
                                        SingleTerm(
                                          DesignatorFact(
                                            Designator(
                                              WithoutNamespace(
                                               niz
                                              ) [WithoutNamespace]
                                              AddArrayExpression(
                                                BraExpr(
                                                  PositiveStartExpr(
                                                    SingleTerm(
                                                      NumberConst(
                                                       2
                                                      ) [NumberConst]
                                                    ) [SingleTerm]
                                                  ) [PositiveStartExpr]
                                                ) [BraExpr]
                                              ) [AddArrayExpression]
                                            ) [Designator]
                                          ) [DesignatorFact]
                                        ) [SingleTerm]
                                        Divide(
                                        ) [Divide]
                                        DesignatorFact(
                                          Designator(
                                            WithoutNamespace(
                                             niz
                                            ) [WithoutNamespace]
                                            AddArrayExpression(
                                              BraExpr(
                                                PositiveStartExpr(
                                                  SingleTerm(
                                                    NumberConst(
                                                     0
                                                    ) [NumberConst]
                                                  ) [SingleTerm]
                                                ) [PositiveStartExpr]
                                              ) [BraExpr]
                                            ) [AddArrayExpression]
                                          ) [Designator]
                                        ) [DesignatorFact]
                                      ) [MultipleTerms]
                                    ) [PositiveStartExpr]
                                  ) [DesignatorExpr]
                                ) [DesignatorStat]
                              ) [Statements]
                              PrintExpr(
                                PositiveStartExpr(
                                  SingleTerm(
                                    DesignatorFact(
                                      Designator(
                                        WithoutNamespace(
                                         bodovi
                                        ) [WithoutNamespace]
                                        NoArrayExpression(
                                        ) [NoArrayExpression]
                                      ) [Designator]
                                    ) [DesignatorFact]
                                  ) [SingleTerm]
                                ) [PositiveStartExpr]
                                NoNumConstOpt(
                                ) [NoNumConstOpt]
                              ) [PrintExpr]
                            ) [Statements]
                            PrintExpr(
                              PositiveStartExpr(
                                SingleTerm(
                                  DesignatorFact(
                                    Designator(
                                      WithoutNamespace(
                                       niz
                                      ) [WithoutNamespace]
                                      AddArrayExpression(
                                        BraExpr(
                                          PositiveStartExpr(
                                            SingleTerm(
                                              NumberConst(
                                               2
                                              ) [NumberConst]
                                            ) [SingleTerm]
                                          ) [PositiveStartExpr]
                                        ) [BraExpr]
                                      ) [AddArrayExpression]
                                    ) [Designator]
                                  ) [DesignatorFact]
                                ) [SingleTerm]
                              ) [PositiveStartExpr]
                              NoNumConstOpt(
                              ) [NoNumConstOpt]
                            ) [PrintExpr]
                          ) [Statements]
                          DesignatorStat(
                            DesignatorExpr(
                              Designator(
                                WithoutNamespace(
                                 nizch
                                ) [WithoutNamespace]
                                NoArrayExpression(
                                ) [NoArrayExpression]
                              ) [Designator]
                              AssignOperation(
                              ) [AssignOperation]
                              PositiveStartExpr(
                                SingleTerm(
                                  NewType(
                                    Type(
                                     char
                                    ) [Type]
                                    PositiveStartExpr(
                                      SingleTerm(
                                        NumberConst(
                                         3
                                        ) [NumberConst]
                                      ) [SingleTerm]
                                    ) [PositiveStartExpr]
                                  ) [NewType]
                                ) [SingleTerm]
                              ) [PositiveStartExpr]
                            ) [DesignatorExpr]
                          ) [DesignatorStat]
                        ) [Statements]
                        DesignatorStat(
                          DesignatorExpr(
                            Designator(
                              WithoutNamespace(
                               nizch
                              ) [WithoutNamespace]
                              AddArrayExpression(
                                BraExpr(
                                  PositiveStartExpr(
                                    SingleTerm(
                                      NumberConst(
                                       0
                                      ) [NumberConst]
                                    ) [SingleTerm]
                                  ) [PositiveStartExpr]
                                ) [BraExpr]
                              ) [AddArrayExpression]
                            ) [Designator]
                            AssignOperation(
                            ) [AssignOperation]
                            PositiveStartExpr(
                              SingleTerm(
                                CharacterConst(
                                 a
                                ) [CharacterConst]
                              ) [SingleTerm]
                            ) [PositiveStartExpr]
                          ) [DesignatorExpr]
                        ) [DesignatorStat]
                      ) [Statements]
                      DesignatorStat(
                        DesignatorExpr(
                          Designator(
                            WithoutNamespace(
                             nizch
                            ) [WithoutNamespace]
                            AddArrayExpression(
                              BraExpr(
                                PositiveStartExpr(
                                  SingleTerm(
                                    DesignatorFact(
                                      Designator(
                                        WithoutNamespace(
                                         jedan
                                        ) [WithoutNamespace]
                                        NoArrayExpression(
                                        ) [NoArrayExpression]
                                      ) [Designator]
                                    ) [DesignatorFact]
                                  ) [SingleTerm]
                                ) [PositiveStartExpr]
                              ) [BraExpr]
                            ) [AddArrayExpression]
                          ) [Designator]
                          AssignOperation(
                          ) [AssignOperation]
                          PositiveStartExpr(
                            SingleTerm(
                              CharacterConst(
                               b
                              ) [CharacterConst]
                            ) [SingleTerm]
                          ) [PositiveStartExpr]
                        ) [DesignatorExpr]
                      ) [DesignatorStat]
                    ) [Statements]
                    DesignatorStat(
                      DesignatorExpr(
                        Designator(
                          WithoutNamespace(
                           nizch
                          ) [WithoutNamespace]
                          AddArrayExpression(
                            BraExpr(
                              AddExpression(
                                PositiveStartExpr(
                                  SingleTerm(
                                    DesignatorFact(
                                      Designator(
                                        WithoutNamespace(
                                         pet
                                        ) [WithoutNamespace]
                                        NoArrayExpression(
                                        ) [NoArrayExpression]
                                      ) [Designator]
                                    ) [DesignatorFact]
                                  ) [SingleTerm]
                                ) [PositiveStartExpr]
                                Minus(
                                ) [Minus]
                                SingleTerm(
                                  NumberConst(
                                   3
                                  ) [NumberConst]
                                ) [SingleTerm]
                              ) [AddExpression]
                            ) [BraExpr]
                          ) [AddArrayExpression]
                        ) [Designator]
                        AssignOperation(
                        ) [AssignOperation]
                        PositiveStartExpr(
                          SingleTerm(
                            CharacterConst(
                             c
                            ) [CharacterConst]
                          ) [SingleTerm]
                        ) [PositiveStartExpr]
                      ) [DesignatorExpr]
                    ) [DesignatorStat]
                  ) [Statements]
                  PrintExpr(
                    PositiveStartExpr(
                      SingleTerm(
                        DesignatorFact(
                          Designator(
                            WithoutNamespace(
                             nizch
                            ) [WithoutNamespace]
                            AddArrayExpression(
                              BraExpr(
                                PositiveStartExpr(
                                  SingleTerm(
                                    NumberConst(
                                     1
                                    ) [NumberConst]
                                  ) [SingleTerm]
                                ) [PositiveStartExpr]
                              ) [BraExpr]
                            ) [AddArrayExpression]
                          ) [Designator]
                        ) [DesignatorFact]
                      ) [SingleTerm]
                    ) [PositiveStartExpr]
                    NoNumConstOpt(
                    ) [NoNumConstOpt]
                  ) [PrintExpr]
                ) [Statements]
                PrintExpr(
                  PositiveStartExpr(
                    SingleTerm(
                      DesignatorFact(
                        Designator(
                          WithoutNamespace(
                           nizch
                          ) [WithoutNamespace]
                          AddArrayExpression(
                            BraExpr(
                              PositiveStartExpr(
                                MultipleTerms(
                                  SingleTerm(
                                    DesignatorFact(
                                      Designator(
                                        WithoutNamespace(
                                         jedan
                                        ) [WithoutNamespace]
                                        NoArrayExpression(
                                        ) [NoArrayExpression]
                                      ) [Designator]
                                    ) [DesignatorFact]
                                  ) [SingleTerm]
                                  Multiply(
                                  ) [Multiply]
                                  NumberConst(
                                   2
                                  ) [NumberConst]
                                ) [MultipleTerms]
                              ) [PositiveStartExpr]
                            ) [BraExpr]
                          ) [AddArrayExpression]
                        ) [Designator]
                      ) [DesignatorFact]
                    ) [SingleTerm]
                  ) [PositiveStartExpr]
                  NoNumConstOpt(
                  ) [NoNumConstOpt]
                ) [PrintExpr]
              ) [Statements]
              DesignatorStat(
                DesignatorExpr(
                  Designator(
                    WithoutNamespace(
                     bodovi
                    ) [WithoutNamespace]
                    NoArrayExpression(
                    ) [NoArrayExpression]
                  ) [Designator]
                  AssignOperation(
                  ) [AssignOperation]
                  AddExpression(
                    AddExpression(
                      PositiveStartExpr(
                        SingleTerm(
                          DesignatorFact(
                            Designator(
                              WithoutNamespace(
                               bodovi
                              ) [WithoutNamespace]
                              NoArrayExpression(
                              ) [NoArrayExpression]
                            ) [Designator]
                          ) [DesignatorFact]
                        ) [SingleTerm]
                      ) [PositiveStartExpr]
                      Plus(
                      ) [Plus]
                      MultipleTerms(
                        SingleTerm(
                          ExpressionFact(
                            AddExpression(
                              PositiveStartExpr(
                                MultipleTerms(
                                  SingleTerm(
                                    DesignatorFact(
                                      Designator(
                                        WithoutNamespace(
                                         pet
                                        ) [WithoutNamespace]
                                        NoArrayExpression(
                                        ) [NoArrayExpression]
                                      ) [Designator]
                                    ) [DesignatorFact]
                                  ) [SingleTerm]
                                  Multiply(
                                  ) [Multiply]
                                  DesignatorFact(
                                    Designator(
                                      WithoutNamespace(
                                       jedan
                                      ) [WithoutNamespace]
                                      NoArrayExpression(
                                      ) [NoArrayExpression]
                                    ) [Designator]
                                  ) [DesignatorFact]
                                ) [MultipleTerms]
                              ) [PositiveStartExpr]
                              Minus(
                              ) [Minus]
                              SingleTerm(
                                NumberConst(
                                 1
                                ) [NumberConst]
                              ) [SingleTerm]
                            ) [AddExpression]
                          ) [ExpressionFact]
                        ) [SingleTerm]
                        Multiply(
                        ) [Multiply]
                        DesignatorFact(
                          Designator(
                            WithoutNamespace(
                             bodovi
                            ) [WithoutNamespace]
                            NoArrayExpression(
                            ) [NoArrayExpression]
                          ) [Designator]
                        ) [DesignatorFact]
                      ) [MultipleTerms]
                    ) [AddExpression]
                    Minus(
                    ) [Minus]
                    SingleTerm(
                      ExpressionFact(
                        AddExpression(
                          AddExpression(
                            PositiveStartExpr(
                              MultipleTerms(
                                SingleTerm(
                                  NumberConst(
                                   3
                                  ) [NumberConst]
                                ) [SingleTerm]
                                Modulo(
                                ) [Modulo]
                                NumberConst(
                                 2
                                ) [NumberConst]
                              ) [MultipleTerms]
                            ) [PositiveStartExpr]
                            Plus(
                            ) [Plus]
                            MultipleTerms(
                              SingleTerm(
                                NumberConst(
                                 3
                                ) [NumberConst]
                              ) [SingleTerm]
                              Multiply(
                              ) [Multiply]
                              NumberConst(
                               2
                              ) [NumberConst]
                            ) [MultipleTerms]
                          ) [AddExpression]
                          Minus(
                          ) [Minus]
                          SingleTerm(
                            NumberConst(
                             3
                            ) [NumberConst]
                          ) [SingleTerm]
                        ) [AddExpression]
                      ) [ExpressionFact]
                    ) [SingleTerm]
                  ) [AddExpression]
                ) [DesignatorExpr]
              ) [DesignatorStat]
            ) [Statements]
            PrintExpr(
              PositiveStartExpr(
                SingleTerm(
                  DesignatorFact(
                    Designator(
                      WithoutNamespace(
                       bodovi
                      ) [WithoutNamespace]
                      NoArrayExpression(
                      ) [NoArrayExpression]
                    ) [Designator]
                  ) [DesignatorFact]
                ) [SingleTerm]
              ) [PositiveStartExpr]
              NoNumConstOpt(
              ) [NoNumConstOpt]
            ) [PrintExpr]
          ) [Statements]
          DesignatorStat(
            DesignatorExpr(
              Designator(
                WithoutNamespace(
                 niz2
                ) [WithoutNamespace]
                NoArrayExpression(
                ) [NoArrayExpression]
              ) [Designator]
              AssignOperation(
              ) [AssignOperation]
              PositiveStartExpr(
                SingleTerm(
                  RangeExpression(
                    AddExpression(
                      PositiveStartExpr(
                        SingleTerm(
                          DesignatorFact(
                            Designator(
                              WithoutNamespace(
                               bodovi
                              ) [WithoutNamespace]
                              NoArrayExpression(
                              ) [NoArrayExpression]
                            ) [Designator]
                          ) [DesignatorFact]
                        ) [SingleTerm]
                      ) [PositiveStartExpr]
                      Plus(
                      ) [Plus]
                      SingleTerm(
                        NumberConst(
                         1
                        ) [NumberConst]
                      ) [SingleTerm]
                    ) [AddExpression]
                  ) [RangeExpression]
                ) [SingleTerm]
              ) [PositiveStartExpr]
            ) [DesignatorExpr]
          ) [DesignatorStat]
        ) [Statements]
        PrintExpr(
          PositiveStartExpr(
            SingleTerm(
              DesignatorFact(
                Designator(
                  WithoutNamespace(
                   niz2
                  ) [WithoutNamespace]
                  NoArrayExpression(
                  ) [NoArrayExpression]
                ) [Designator]
              ) [DesignatorFact]
            ) [SingleTerm]
          ) [PositiveStartExpr]
          NoNumConstOpt(
          ) [NoNumConstOpt]
        ) [PrintExpr]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  13:42:22,866 - ================ Semanticka obrada ===================
INFO  13:42:22,870 - Const nula defined on line 3
INFO  13:42:22,871 - Const jedan defined on line 4
INFO  13:42:22,871 - Const pet defined on line 5
INFO  13:42:22,871 - Symbol bodovi found on line 15
INFO  13:42:22,871 - Symbol bodovi found on line 16
INFO  13:42:22,871 - Symbol bodovi found on line 17
INFO  13:42:22,871 - Symbol bodovi found on line 17
INFO  13:42:22,871 - Symbol jedan found on line 17
INFO  13:42:22,871 - Symbol bodovi found on line 18
INFO  13:42:22,871 - Symbol bodovi found on line 18
INFO  13:42:22,871 - Symbol pet found on line 18
INFO  13:42:22,871 - Symbol bodovi found on line 19
INFO  13:42:22,871 - Symbol bodovi found on line 20
INFO  13:42:22,871 - Symbol niz found on line 23
INFO  13:42:22,871 - Symbol niz found on line 24
INFO  13:42:22,871 - Symbol nula found on line 24
INFO  13:42:22,871 - Symbol jedan found on line 24
INFO  13:42:22,871 - Symbol niz found on line 25
INFO  13:42:22,871 - Symbol niz found on line 26
INFO  13:42:22,871 - Symbol niz found on line 26
INFO  13:42:22,871 - Symbol jedan found on line 26
INFO  13:42:22,872 - Symbol niz found on line 26
INFO  13:42:22,872 - Symbol niz found on line 26
INFO  13:42:22,872 - Symbol bodovi found on line 27
INFO  13:42:22,872 - Symbol niz found on line 27
INFO  13:42:22,872 - Symbol niz found on line 27
INFO  13:42:22,872 - Symbol bodovi found on line 28
INFO  13:42:22,872 - Symbol niz found on line 29
INFO  13:42:22,872 - Symbol nizch found on line 32
INFO  13:42:22,872 - Symbol nizch found on line 33
INFO  13:42:22,872 - Symbol nizch found on line 34
INFO  13:42:22,872 - Symbol jedan found on line 34
INFO  13:42:22,872 - Symbol nizch found on line 35
INFO  13:42:22,872 - Symbol pet found on line 35
INFO  13:42:22,872 - Symbol nizch found on line 36
INFO  13:42:22,872 - Symbol nizch found on line 37
INFO  13:42:22,872 - Symbol jedan found on line 37
INFO  13:42:22,872 - Symbol bodovi found on line 40
INFO  13:42:22,872 - Symbol bodovi found on line 40
INFO  13:42:22,872 - Symbol pet found on line 40
INFO  13:42:22,872 - Symbol jedan found on line 40
INFO  13:42:22,872 - Symbol bodovi found on line 40
INFO  13:42:22,872 - Symbol bodovi found on line 41
INFO  13:42:22,872 - Symbol niz2 found on line 44
INFO  13:42:22,872 - Symbol bodovi found on line 44
INFO  13:42:22,872 - Symbol niz2 found on line 45
INFO  13:42:22,872 - main() method found on line 1
INFO  13:42:22,874 - Parser SUCCESS!
INFO  13:42:24,301 - Compiling source file: C:\Users\elena\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  13:42:24,302 - ================= LEKSICKA ANALIZA =================
INFO  13:42:24,329 - #2 program
INFO  13:42:24,329 - #47 test301
INFO  13:42:24,329 - #3 const
INFO  13:42:24,330 - #47 int
INFO  13:42:24,330 - #47 nula
INFO  13:42:24,331 - #24 =
INFO  13:42:24,331 - #46 0
INFO  13:42:24,331 - #27 ;
INFO  13:42:24,332 - #3 const
INFO  13:42:24,332 - #47 int
INFO  13:42:24,332 - #47 jedan
INFO  13:42:24,332 - #24 =
INFO  13:42:24,332 - #46 1
INFO  13:42:24,332 - #27 ;
INFO  13:42:24,332 - #3 const
INFO  13:42:24,332 - #47 int
INFO  13:42:24,332 - #47 pet
INFO  13:42:24,332 - #24 =
INFO  13:42:24,332 - #46 5
INFO  13:42:24,332 - #27 ;
INFO  13:42:24,332 - #47 int
INFO  13:42:24,332 - #47 niz
INFO  13:42:24,332 - #33 [
INFO  13:42:24,332 - #34 ]
INFO  13:42:24,332 - #29 ,
INFO  13:42:24,333 - #47 niz2
INFO  13:42:24,333 - #33 [
INFO  13:42:24,333 - #34 ]
INFO  13:42:24,333 - #27 ;
INFO  13:42:24,333 - #47 char
INFO  13:42:24,333 - #47 nizch
INFO  13:42:24,334 - #33 [
INFO  13:42:24,334 - #34 ]
INFO  13:42:24,334 - #27 ;
INFO  13:42:24,334 - #35 {
INFO  13:42:24,334 - #8 void
INFO  13:42:24,334 - #47 main
INFO  13:42:24,334 - #31 (
INFO  13:42:24,335 - #32 )
INFO  13:42:24,335 - #47 int
INFO  13:42:24,336 - #47 bodovi
INFO  13:42:24,336 - #27 ;
INFO  13:42:24,336 - #47 bool
INFO  13:42:24,336 - #47 bt
INFO  13:42:24,337 - #27 ;
INFO  13:42:24,337 - #35 {
INFO  13:42:24,337 - #47 bodovi
INFO  13:42:24,337 - #24 =
INFO  13:42:24,338 - #46 0
INFO  13:42:24,339 - #27 ;
INFO  13:42:24,340 - #47 bodovi
INFO  13:42:24,340 - #25 ++
INFO  13:42:24,340 - #27 ;
INFO  13:42:24,340 - #47 bodovi
INFO  13:42:24,340 - #24 =
INFO  13:42:24,340 - #47 bodovi
INFO  13:42:24,340 - #11 +
INFO  13:42:24,340 - #47 jedan
INFO  13:42:24,342 - #27 ;
INFO  13:42:24,342 - #47 bodovi
INFO  13:42:24,342 - #24 =
INFO  13:42:24,342 - #47 bodovi
INFO  13:42:24,342 - #13 *
INFO  13:42:24,342 - #47 pet
INFO  13:42:24,344 - #27 ;
INFO  13:42:24,344 - #47 bodovi
INFO  13:42:24,344 - #26 --
INFO  13:42:24,344 - #27 ;
INFO  13:42:24,344 - #5 print
INFO  13:42:24,344 - #31 (
INFO  13:42:24,344 - #47 bodovi
INFO  13:42:24,344 - #32 )
INFO  13:42:24,344 - #27 ;
INFO  13:42:24,344 - #47 niz
INFO  13:42:24,344 - #24 =
INFO  13:42:24,344 - #4 new
INFO  13:42:24,344 - #47 int
INFO  13:42:24,344 - #33 [
INFO  13:42:24,344 - #46 3
INFO  13:42:24,344 - #34 ]
INFO  13:42:24,344 - #27 ;
INFO  13:42:24,344 - #47 niz
INFO  13:42:24,344 - #33 [
INFO  13:42:24,344 - #47 nula
INFO  13:42:24,344 - #34 ]
INFO  13:42:24,344 - #24 =
INFO  13:42:24,346 - #47 jedan
INFO  13:42:24,346 - #27 ;
INFO  13:42:24,346 - #47 niz
INFO  13:42:24,346 - #33 [
INFO  13:42:24,346 - #46 1
INFO  13:42:24,346 - #34 ]
INFO  13:42:24,346 - #24 =
INFO  13:42:24,346 - #46 2
INFO  13:42:24,346 - #27 ;
INFO  13:42:24,346 - #47 niz
INFO  13:42:24,346 - #33 [
INFO  13:42:24,346 - #47 niz
INFO  13:42:24,346 - #33 [
INFO  13:42:24,346 - #47 jedan
INFO  13:42:24,346 - #34 ]
INFO  13:42:24,347 - #34 ]
INFO  13:42:24,347 - #24 =
INFO  13:42:24,347 - #47 niz
INFO  13:42:24,347 - #33 [
INFO  13:42:24,347 - #47 niz
INFO  13:42:24,347 - #33 [
INFO  13:42:24,347 - #46 0
INFO  13:42:24,347 - #34 ]
INFO  13:42:24,347 - #34 ]
INFO  13:42:24,347 - #13 *
INFO  13:42:24,347 - #46 3
INFO  13:42:24,347 - #27 ;
INFO  13:42:24,347 - #47 bodovi
INFO  13:42:24,347 - #24 =
INFO  13:42:24,347 - #47 niz
INFO  13:42:24,347 - #33 [
INFO  13:42:24,347 - #46 2
INFO  13:42:24,347 - #34 ]
INFO  13:42:24,347 - #14 /
INFO  13:42:24,347 - #47 niz
INFO  13:42:24,348 - #33 [
INFO  13:42:24,348 - #46 0
INFO  13:42:24,348 - #34 ]
INFO  13:42:24,348 - #27 ;
INFO  13:42:24,348 - #5 print
INFO  13:42:24,348 - #31 (
INFO  13:42:24,348 - #47 bodovi
INFO  13:42:24,348 - #32 )
INFO  13:42:24,348 - #27 ;
INFO  13:42:24,348 - #5 print
INFO  13:42:24,348 - #31 (
INFO  13:42:24,348 - #47 niz
INFO  13:42:24,348 - #33 [
INFO  13:42:24,348 - #46 2
INFO  13:42:24,348 - #34 ]
INFO  13:42:24,348 - #32 )
INFO  13:42:24,348 - #27 ;
INFO  13:42:24,348 - #47 nizch
INFO  13:42:24,348 - #24 =
INFO  13:42:24,348 - #4 new
INFO  13:42:24,348 - #47 char
INFO  13:42:24,348 - #33 [
INFO  13:42:24,348 - #46 3
INFO  13:42:24,348 - #34 ]
INFO  13:42:24,348 - #27 ;
INFO  13:42:24,348 - #47 nizch
INFO  13:42:24,348 - #33 [
INFO  13:42:24,348 - #46 0
INFO  13:42:24,348 - #34 ]
INFO  13:42:24,348 - #24 =
INFO  13:42:24,350 - #48 a
INFO  13:42:24,350 - #27 ;
INFO  13:42:24,350 - #47 nizch
INFO  13:42:24,350 - #33 [
INFO  13:42:24,350 - #47 jedan
INFO  13:42:24,350 - #34 ]
INFO  13:42:24,350 - #24 =
INFO  13:42:24,350 - #48 b
INFO  13:42:24,350 - #27 ;
INFO  13:42:24,350 - #47 nizch
INFO  13:42:24,350 - #33 [
INFO  13:42:24,350 - #47 pet
INFO  13:42:24,350 - #12 -
INFO  13:42:24,350 - #46 3
INFO  13:42:24,351 - #34 ]
INFO  13:42:24,351 - #24 =
INFO  13:42:24,351 - #48 c
INFO  13:42:24,351 - #27 ;
INFO  13:42:24,351 - #5 print
INFO  13:42:24,351 - #31 (
INFO  13:42:24,351 - #47 nizch
INFO  13:42:24,351 - #33 [
INFO  13:42:24,351 - #46 1
INFO  13:42:24,351 - #34 ]
INFO  13:42:24,351 - #32 )
INFO  13:42:24,351 - #27 ;
INFO  13:42:24,352 - #5 print
INFO  13:42:24,352 - #31 (
INFO  13:42:24,352 - #47 nizch
INFO  13:42:24,352 - #33 [
INFO  13:42:24,352 - #47 jedan
INFO  13:42:24,352 - #13 *
INFO  13:42:24,352 - #46 2
INFO  13:42:24,352 - #34 ]
INFO  13:42:24,352 - #32 )
INFO  13:42:24,352 - #27 ;
INFO  13:42:24,352 - #47 bodovi
INFO  13:42:24,352 - #24 =
INFO  13:42:24,352 - #47 bodovi
INFO  13:42:24,352 - #11 +
INFO  13:42:24,352 - #31 (
INFO  13:42:24,352 - #47 pet
INFO  13:42:24,352 - #13 *
INFO  13:42:24,352 - #47 jedan
INFO  13:42:24,352 - #12 -
INFO  13:42:24,352 - #46 1
INFO  13:42:24,352 - #32 )
INFO  13:42:24,352 - #13 *
INFO  13:42:24,352 - #47 bodovi
INFO  13:42:24,352 - #12 -
INFO  13:42:24,352 - #31 (
INFO  13:42:24,352 - #46 3
INFO  13:42:24,352 - #15 %
INFO  13:42:24,352 - #46 2
INFO  13:42:24,353 - #11 +
INFO  13:42:24,353 - #46 3
INFO  13:42:24,353 - #13 *
INFO  13:42:24,353 - #46 2
INFO  13:42:24,353 - #12 -
INFO  13:42:24,353 - #46 3
INFO  13:42:24,353 - #32 )
INFO  13:42:24,353 - #27 ;
INFO  13:42:24,353 - #5 print
INFO  13:42:24,353 - #31 (
INFO  13:42:24,353 - #47 bodovi
INFO  13:42:24,353 - #32 )
INFO  13:42:24,354 - #27 ;
INFO  13:42:24,354 - #47 niz2
INFO  13:42:24,354 - #24 =
INFO  13:42:24,354 - #45 range
INFO  13:42:24,354 - #31 (
INFO  13:42:24,354 - #47 bodovi
INFO  13:42:24,354 - #11 +
INFO  13:42:24,354 - #46 1
INFO  13:42:24,354 - #32 )
INFO  13:42:24,354 - #27 ;
INFO  13:42:24,354 - #5 print
INFO  13:42:24,354 - #31 (
INFO  13:42:24,354 - #47 niz2
INFO  13:42:24,354 - #32 )
INFO  13:42:24,354 - #27 ;
INFO  13:42:24,354 - #36 }
INFO  13:42:24,354 - #36 }
INFO  13:42:24,356 - ================= PARSIRANO STABLO =================
INFO  13:42:24,363 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  Declarations(
    Declarations(
      Declarations(
        Declarations(
          Declarations(
            NoDeclarations(
            ) [NoDeclarations]
            ConstantDeclaration(
              ConDecl(
                Type(
                 int
                ) [Type]
                ConstDef(
                 nula
                  NumConst(
                   0
                  ) [NumConst]
                ) [ConstDef]
                NoConstantDeclaration(
                ) [NoConstantDeclaration]
              ) [ConDecl]
            ) [ConstantDeclaration]
          ) [Declarations]
          ConstantDeclaration(
            ConDecl(
              Type(
               int
              ) [Type]
              ConstDef(
               jedan
                NumConst(
                 1
                ) [NumConst]
              ) [ConstDef]
              NoConstantDeclaration(
              ) [NoConstantDeclaration]
            ) [ConDecl]
          ) [ConstantDeclaration]
        ) [Declarations]
        ConstantDeclaration(
          ConDecl(
            Type(
             int
            ) [Type]
            ConstDef(
             pet
              NumConst(
               5
              ) [NumConst]
            ) [ConstDef]
            NoConstantDeclaration(
            ) [NoConstantDeclaration]
          ) [ConDecl]
        ) [ConstantDeclaration]
      ) [Declarations]
      VariableDeclaration(
        VarDeclaration(
          Type(
           int
          ) [Type]
          MultipleVarDeclarations(
            OneVarDeclaration(
              AddVarDecl1(
               niz
                Brackets(
                ) [Brackets]
              ) [AddVarDecl1]
            ) [OneVarDeclaration]
            AddVarDecl1(
             niz2
              Brackets(
              ) [Brackets]
            ) [AddVarDecl1]
          ) [MultipleVarDeclarations]
        ) [VarDeclaration]
      ) [VariableDeclaration]
    ) [Declarations]
    VariableDeclaration(
      VarDeclaration(
        Type(
         char
        ) [Type]
        OneVarDeclaration(
          AddVarDecl1(
           nizch
            Brackets(
            ) [Brackets]
          ) [AddVarDecl1]
        ) [OneVarDeclaration]
      ) [VarDeclaration]
    ) [VariableDeclaration]
  ) [Declarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      ListOfVarDecl(
        ListOfVarDecl(
          NoVarDeclarations(
          ) [NoVarDeclarations]
          VarDeclaration(
            Type(
             int
            ) [Type]
            OneVarDeclaration(
              AddVarDecl1(
               bodovi
                NoBrackets(
                ) [NoBrackets]
              ) [AddVarDecl1]
            ) [OneVarDeclaration]
          ) [VarDeclaration]
        ) [ListOfVarDecl]
        VarDeclaration(
          Type(
           bool
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             bt
              NoBrackets(
              ) [NoBrackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [ListOfVarDecl]
      Statements(
        Statements(
          Statements(
            Statements(
              Statements(
                Statements(
                  Statements(
                    Statements(
                      Statements(
                        Statements(
                          Statements(
                            Statements(
                              Statements(
                                Statements(
                                  Statements(
                                    Statements(
                                      Statements(
                                        Statements(
                                          Statements(
                                            Statements(
                                              Statements(
                                                Statements(
                                                  Statements(
                                                    NoStatements(
                                                    ) [NoStatements]
                                                    DesignatorStat(
                                                      DesignatorExpr(
                                                        Designator(
                                                          WithoutNamespace(
                                                           bodovi
                                                          ) [WithoutNamespace]
                                                          NoArrayExpression(
                                                          ) [NoArrayExpression]
                                                        ) [Designator]
                                                        AssignOperation(
                                                        ) [AssignOperation]
                                                        PositiveStartExpr(
                                                          SingleTerm(
                                                            NumberConst(
                                                             0
                                                            ) [NumberConst]
                                                          ) [SingleTerm]
                                                        ) [PositiveStartExpr]
                                                      ) [DesignatorExpr]
                                                    ) [DesignatorStat]
                                                  ) [Statements]
                                                  DesignatorStat(
                                                    DesignatorPP(
                                                      Designator(
                                                        WithoutNamespace(
                                                         bodovi
                                                        ) [WithoutNamespace]
                                                        NoArrayExpression(
                                                        ) [NoArrayExpression]
                                                      ) [Designator]
                                                    ) [DesignatorPP]
                                                  ) [DesignatorStat]
                                                ) [Statements]
                                                DesignatorStat(
                                                  DesignatorExpr(
                                                    Designator(
                                                      WithoutNamespace(
                                                       bodovi
                                                      ) [WithoutNamespace]
                                                      NoArrayExpression(
                                                      ) [NoArrayExpression]
                                                    ) [Designator]
                                                    AssignOperation(
                                                    ) [AssignOperation]
                                                    AddExpression(
                                                      PositiveStartExpr(
                                                        SingleTerm(
                                                          DesignatorFact(
                                                            Designator(
                                                              WithoutNamespace(
                                                               bodovi
                                                              ) [WithoutNamespace]
                                                              NoArrayExpression(
                                                              ) [NoArrayExpression]
                                                            ) [Designator]
                                                          ) [DesignatorFact]
                                                        ) [SingleTerm]
                                                      ) [PositiveStartExpr]
                                                      Plus(
                                                      ) [Plus]
                                                      SingleTerm(
                                                        DesignatorFact(
                                                          Designator(
                                                            WithoutNamespace(
                                                             jedan
                                                            ) [WithoutNamespace]
                                                            NoArrayExpression(
                                                            ) [NoArrayExpression]
                                                          ) [Designator]
                                                        ) [DesignatorFact]
                                                      ) [SingleTerm]
                                                    ) [AddExpression]
                                                  ) [DesignatorExpr]
                                                ) [DesignatorStat]
                                              ) [Statements]
                                              DesignatorStat(
                                                DesignatorExpr(
                                                  Designator(
                                                    WithoutNamespace(
                                                     bodovi
                                                    ) [WithoutNamespace]
                                                    NoArrayExpression(
                                                    ) [NoArrayExpression]
                                                  ) [Designator]
                                                  AssignOperation(
                                                  ) [AssignOperation]
                                                  PositiveStartExpr(
                                                    MultipleTerms(
                                                      SingleTerm(
                                                        DesignatorFact(
                                                          Designator(
                                                            WithoutNamespace(
                                                             bodovi
                                                            ) [WithoutNamespace]
                                                            NoArrayExpression(
                                                            ) [NoArrayExpression]
                                                          ) [Designator]
                                                        ) [DesignatorFact]
                                                      ) [SingleTerm]
                                                      Multiply(
                                                      ) [Multiply]
                                                      DesignatorFact(
                                                        Designator(
                                                          WithoutNamespace(
                                                           pet
                                                          ) [WithoutNamespace]
                                                          NoArrayExpression(
                                                          ) [NoArrayExpression]
                                                        ) [Designator]
                                                      ) [DesignatorFact]
                                                    ) [MultipleTerms]
                                                  ) [PositiveStartExpr]
                                                ) [DesignatorExpr]
                                              ) [DesignatorStat]
                                            ) [Statements]
                                            DesignatorStat(
                                              DesignatorMM(
                                                Designator(
                                                  WithoutNamespace(
                                                   bodovi
                                                  ) [WithoutNamespace]
                                                  NoArrayExpression(
                                                  ) [NoArrayExpression]
                                                ) [Designator]
                                              ) [DesignatorMM]
                                            ) [DesignatorStat]
                                          ) [Statements]
                                          PrintExpr(
                                            PositiveStartExpr(
                                              SingleTerm(
                                                DesignatorFact(
                                                  Designator(
                                                    WithoutNamespace(
                                                     bodovi
                                                    ) [WithoutNamespace]
                                                    NoArrayExpression(
                                                    ) [NoArrayExpression]
                                                  ) [Designator]
                                                ) [DesignatorFact]
                                              ) [SingleTerm]
                                            ) [PositiveStartExpr]
                                            NoNumConstOpt(
                                            ) [NoNumConstOpt]
                                          ) [PrintExpr]
                                        ) [Statements]
                                        DesignatorStat(
                                          DesignatorExpr(
                                            Designator(
                                              WithoutNamespace(
                                               niz
                                              ) [WithoutNamespace]
                                              NoArrayExpression(
                                              ) [NoArrayExpression]
                                            ) [Designator]
                                            AssignOperation(
                                            ) [AssignOperation]
                                            PositiveStartExpr(
                                              SingleTerm(
                                                NewType(
                                                  Type(
                                                   int
                                                  ) [Type]
                                                  PositiveStartExpr(
                                                    SingleTerm(
                                                      NumberConst(
                                                       3
                                                      ) [NumberConst]
                                                    ) [SingleTerm]
                                                  ) [PositiveStartExpr]
                                                ) [NewType]
                                              ) [SingleTerm]
                                            ) [PositiveStartExpr]
                                          ) [DesignatorExpr]
                                        ) [DesignatorStat]
                                      ) [Statements]
                                      DesignatorStat(
                                        DesignatorExpr(
                                          Designator(
                                            WithoutNamespace(
                                             niz
                                            ) [WithoutNamespace]
                                            AddArrayExpression(
                                              BraExpr(
                                                PositiveStartExpr(
                                                  SingleTerm(
                                                    DesignatorFact(
                                                      Designator(
                                                        WithoutNamespace(
                                                         nula
                                                        ) [WithoutNamespace]
                                                        NoArrayExpression(
                                                        ) [NoArrayExpression]
                                                      ) [Designator]
                                                    ) [DesignatorFact]
                                                  ) [SingleTerm]
                                                ) [PositiveStartExpr]
                                              ) [BraExpr]
                                            ) [AddArrayExpression]
                                          ) [Designator]
                                          AssignOperation(
                                          ) [AssignOperation]
                                          PositiveStartExpr(
                                            SingleTerm(
                                              DesignatorFact(
                                                Designator(
                                                  WithoutNamespace(
                                                   jedan
                                                  ) [WithoutNamespace]
                                                  NoArrayExpression(
                                                  ) [NoArrayExpression]
                                                ) [Designator]
                                              ) [DesignatorFact]
                                            ) [SingleTerm]
                                          ) [PositiveStartExpr]
                                        ) [DesignatorExpr]
                                      ) [DesignatorStat]
                                    ) [Statements]
                                    DesignatorStat(
                                      DesignatorExpr(
                                        Designator(
                                          WithoutNamespace(
                                           niz
                                          ) [WithoutNamespace]
                                          AddArrayExpression(
                                            BraExpr(
                                              PositiveStartExpr(
                                                SingleTerm(
                                                  NumberConst(
                                                   1
                                                  ) [NumberConst]
                                                ) [SingleTerm]
                                              ) [PositiveStartExpr]
                                            ) [BraExpr]
                                          ) [AddArrayExpression]
                                        ) [Designator]
                                        AssignOperation(
                                        ) [AssignOperation]
                                        PositiveStartExpr(
                                          SingleTerm(
                                            NumberConst(
                                             2
                                            ) [NumberConst]
                                          ) [SingleTerm]
                                        ) [PositiveStartExpr]
                                      ) [DesignatorExpr]
                                    ) [DesignatorStat]
                                  ) [Statements]
                                  DesignatorStat(
                                    DesignatorExpr(
                                      Designator(
                                        WithoutNamespace(
                                         niz
                                        ) [WithoutNamespace]
                                        AddArrayExpression(
                                          BraExpr(
                                            PositiveStartExpr(
                                              SingleTerm(
                                                DesignatorFact(
                                                  Designator(
                                                    WithoutNamespace(
                                                     niz
                                                    ) [WithoutNamespace]
                                                    AddArrayExpression(
                                                      BraExpr(
                                                        PositiveStartExpr(
                                                          SingleTerm(
                                                            DesignatorFact(
                                                              Designator(
                                                                WithoutNamespace(
                                                                 jedan
                                                                ) [WithoutNamespace]
                                                                NoArrayExpression(
                                                                ) [NoArrayExpression]
                                                              ) [Designator]
                                                            ) [DesignatorFact]
                                                          ) [SingleTerm]
                                                        ) [PositiveStartExpr]
                                                      ) [BraExpr]
                                                    ) [AddArrayExpression]
                                                  ) [Designator]
                                                ) [DesignatorFact]
                                              ) [SingleTerm]
                                            ) [PositiveStartExpr]
                                          ) [BraExpr]
                                        ) [AddArrayExpression]
                                      ) [Designator]
                                      AssignOperation(
                                      ) [AssignOperation]
                                      PositiveStartExpr(
                                        MultipleTerms(
                                          SingleTerm(
                                            DesignatorFact(
                                              Designator(
                                                WithoutNamespace(
                                                 niz
                                                ) [WithoutNamespace]
                                                AddArrayExpression(
                                                  BraExpr(
                                                    PositiveStartExpr(
                                                      SingleTerm(
                                                        DesignatorFact(
                                                          Designator(
                                                            WithoutNamespace(
                                                             niz
                                                            ) [WithoutNamespace]
                                                            AddArrayExpression(
                                                              BraExpr(
                                                                PositiveStartExpr(
                                                                  SingleTerm(
                                                                    NumberConst(
                                                                     0
                                                                    ) [NumberConst]
                                                                  ) [SingleTerm]
                                                                ) [PositiveStartExpr]
                                                              ) [BraExpr]
                                                            ) [AddArrayExpression]
                                                          ) [Designator]
                                                        ) [DesignatorFact]
                                                      ) [SingleTerm]
                                                    ) [PositiveStartExpr]
                                                  ) [BraExpr]
                                                ) [AddArrayExpression]
                                              ) [Designator]
                                            ) [DesignatorFact]
                                          ) [SingleTerm]
                                          Multiply(
                                          ) [Multiply]
                                          NumberConst(
                                           3
                                          ) [NumberConst]
                                        ) [MultipleTerms]
                                      ) [PositiveStartExpr]
                                    ) [DesignatorExpr]
                                  ) [DesignatorStat]
                                ) [Statements]
                                DesignatorStat(
                                  DesignatorExpr(
                                    Designator(
                                      WithoutNamespace(
                                       bodovi
                                      ) [WithoutNamespace]
                                      NoArrayExpression(
                                      ) [NoArrayExpression]
                                    ) [Designator]
                                    AssignOperation(
                                    ) [AssignOperation]
                                    PositiveStartExpr(
                                      MultipleTerms(
                                        SingleTerm(
                                          DesignatorFact(
                                            Designator(
                                              WithoutNamespace(
                                               niz
                                              ) [WithoutNamespace]
                                              AddArrayExpression(
                                                BraExpr(
                                                  PositiveStartExpr(
                                                    SingleTerm(
                                                      NumberConst(
                                                       2
                                                      ) [NumberConst]
                                                    ) [SingleTerm]
                                                  ) [PositiveStartExpr]
                                                ) [BraExpr]
                                              ) [AddArrayExpression]
                                            ) [Designator]
                                          ) [DesignatorFact]
                                        ) [SingleTerm]
                                        Divide(
                                        ) [Divide]
                                        DesignatorFact(
                                          Designator(
                                            WithoutNamespace(
                                             niz
                                            ) [WithoutNamespace]
                                            AddArrayExpression(
                                              BraExpr(
                                                PositiveStartExpr(
                                                  SingleTerm(
                                                    NumberConst(
                                                     0
                                                    ) [NumberConst]
                                                  ) [SingleTerm]
                                                ) [PositiveStartExpr]
                                              ) [BraExpr]
                                            ) [AddArrayExpression]
                                          ) [Designator]
                                        ) [DesignatorFact]
                                      ) [MultipleTerms]
                                    ) [PositiveStartExpr]
                                  ) [DesignatorExpr]
                                ) [DesignatorStat]
                              ) [Statements]
                              PrintExpr(
                                PositiveStartExpr(
                                  SingleTerm(
                                    DesignatorFact(
                                      Designator(
                                        WithoutNamespace(
                                         bodovi
                                        ) [WithoutNamespace]
                                        NoArrayExpression(
                                        ) [NoArrayExpression]
                                      ) [Designator]
                                    ) [DesignatorFact]
                                  ) [SingleTerm]
                                ) [PositiveStartExpr]
                                NoNumConstOpt(
                                ) [NoNumConstOpt]
                              ) [PrintExpr]
                            ) [Statements]
                            PrintExpr(
                              PositiveStartExpr(
                                SingleTerm(
                                  DesignatorFact(
                                    Designator(
                                      WithoutNamespace(
                                       niz
                                      ) [WithoutNamespace]
                                      AddArrayExpression(
                                        BraExpr(
                                          PositiveStartExpr(
                                            SingleTerm(
                                              NumberConst(
                                               2
                                              ) [NumberConst]
                                            ) [SingleTerm]
                                          ) [PositiveStartExpr]
                                        ) [BraExpr]
                                      ) [AddArrayExpression]
                                    ) [Designator]
                                  ) [DesignatorFact]
                                ) [SingleTerm]
                              ) [PositiveStartExpr]
                              NoNumConstOpt(
                              ) [NoNumConstOpt]
                            ) [PrintExpr]
                          ) [Statements]
                          DesignatorStat(
                            DesignatorExpr(
                              Designator(
                                WithoutNamespace(
                                 nizch
                                ) [WithoutNamespace]
                                NoArrayExpression(
                                ) [NoArrayExpression]
                              ) [Designator]
                              AssignOperation(
                              ) [AssignOperation]
                              PositiveStartExpr(
                                SingleTerm(
                                  NewType(
                                    Type(
                                     char
                                    ) [Type]
                                    PositiveStartExpr(
                                      SingleTerm(
                                        NumberConst(
                                         3
                                        ) [NumberConst]
                                      ) [SingleTerm]
                                    ) [PositiveStartExpr]
                                  ) [NewType]
                                ) [SingleTerm]
                              ) [PositiveStartExpr]
                            ) [DesignatorExpr]
                          ) [DesignatorStat]
                        ) [Statements]
                        DesignatorStat(
                          DesignatorExpr(
                            Designator(
                              WithoutNamespace(
                               nizch
                              ) [WithoutNamespace]
                              AddArrayExpression(
                                BraExpr(
                                  PositiveStartExpr(
                                    SingleTerm(
                                      NumberConst(
                                       0
                                      ) [NumberConst]
                                    ) [SingleTerm]
                                  ) [PositiveStartExpr]
                                ) [BraExpr]
                              ) [AddArrayExpression]
                            ) [Designator]
                            AssignOperation(
                            ) [AssignOperation]
                            PositiveStartExpr(
                              SingleTerm(
                                CharacterConst(
                                 a
                                ) [CharacterConst]
                              ) [SingleTerm]
                            ) [PositiveStartExpr]
                          ) [DesignatorExpr]
                        ) [DesignatorStat]
                      ) [Statements]
                      DesignatorStat(
                        DesignatorExpr(
                          Designator(
                            WithoutNamespace(
                             nizch
                            ) [WithoutNamespace]
                            AddArrayExpression(
                              BraExpr(
                                PositiveStartExpr(
                                  SingleTerm(
                                    DesignatorFact(
                                      Designator(
                                        WithoutNamespace(
                                         jedan
                                        ) [WithoutNamespace]
                                        NoArrayExpression(
                                        ) [NoArrayExpression]
                                      ) [Designator]
                                    ) [DesignatorFact]
                                  ) [SingleTerm]
                                ) [PositiveStartExpr]
                              ) [BraExpr]
                            ) [AddArrayExpression]
                          ) [Designator]
                          AssignOperation(
                          ) [AssignOperation]
                          PositiveStartExpr(
                            SingleTerm(
                              CharacterConst(
                               b
                              ) [CharacterConst]
                            ) [SingleTerm]
                          ) [PositiveStartExpr]
                        ) [DesignatorExpr]
                      ) [DesignatorStat]
                    ) [Statements]
                    DesignatorStat(
                      DesignatorExpr(
                        Designator(
                          WithoutNamespace(
                           nizch
                          ) [WithoutNamespace]
                          AddArrayExpression(
                            BraExpr(
                              AddExpression(
                                PositiveStartExpr(
                                  SingleTerm(
                                    DesignatorFact(
                                      Designator(
                                        WithoutNamespace(
                                         pet
                                        ) [WithoutNamespace]
                                        NoArrayExpression(
                                        ) [NoArrayExpression]
                                      ) [Designator]
                                    ) [DesignatorFact]
                                  ) [SingleTerm]
                                ) [PositiveStartExpr]
                                Minus(
                                ) [Minus]
                                SingleTerm(
                                  NumberConst(
                                   3
                                  ) [NumberConst]
                                ) [SingleTerm]
                              ) [AddExpression]
                            ) [BraExpr]
                          ) [AddArrayExpression]
                        ) [Designator]
                        AssignOperation(
                        ) [AssignOperation]
                        PositiveStartExpr(
                          SingleTerm(
                            CharacterConst(
                             c
                            ) [CharacterConst]
                          ) [SingleTerm]
                        ) [PositiveStartExpr]
                      ) [DesignatorExpr]
                    ) [DesignatorStat]
                  ) [Statements]
                  PrintExpr(
                    PositiveStartExpr(
                      SingleTerm(
                        DesignatorFact(
                          Designator(
                            WithoutNamespace(
                             nizch
                            ) [WithoutNamespace]
                            AddArrayExpression(
                              BraExpr(
                                PositiveStartExpr(
                                  SingleTerm(
                                    NumberConst(
                                     1
                                    ) [NumberConst]
                                  ) [SingleTerm]
                                ) [PositiveStartExpr]
                              ) [BraExpr]
                            ) [AddArrayExpression]
                          ) [Designator]
                        ) [DesignatorFact]
                      ) [SingleTerm]
                    ) [PositiveStartExpr]
                    NoNumConstOpt(
                    ) [NoNumConstOpt]
                  ) [PrintExpr]
                ) [Statements]
                PrintExpr(
                  PositiveStartExpr(
                    SingleTerm(
                      DesignatorFact(
                        Designator(
                          WithoutNamespace(
                           nizch
                          ) [WithoutNamespace]
                          AddArrayExpression(
                            BraExpr(
                              PositiveStartExpr(
                                MultipleTerms(
                                  SingleTerm(
                                    DesignatorFact(
                                      Designator(
                                        WithoutNamespace(
                                         jedan
                                        ) [WithoutNamespace]
                                        NoArrayExpression(
                                        ) [NoArrayExpression]
                                      ) [Designator]
                                    ) [DesignatorFact]
                                  ) [SingleTerm]
                                  Multiply(
                                  ) [Multiply]
                                  NumberConst(
                                   2
                                  ) [NumberConst]
                                ) [MultipleTerms]
                              ) [PositiveStartExpr]
                            ) [BraExpr]
                          ) [AddArrayExpression]
                        ) [Designator]
                      ) [DesignatorFact]
                    ) [SingleTerm]
                  ) [PositiveStartExpr]
                  NoNumConstOpt(
                  ) [NoNumConstOpt]
                ) [PrintExpr]
              ) [Statements]
              DesignatorStat(
                DesignatorExpr(
                  Designator(
                    WithoutNamespace(
                     bodovi
                    ) [WithoutNamespace]
                    NoArrayExpression(
                    ) [NoArrayExpression]
                  ) [Designator]
                  AssignOperation(
                  ) [AssignOperation]
                  AddExpression(
                    AddExpression(
                      PositiveStartExpr(
                        SingleTerm(
                          DesignatorFact(
                            Designator(
                              WithoutNamespace(
                               bodovi
                              ) [WithoutNamespace]
                              NoArrayExpression(
                              ) [NoArrayExpression]
                            ) [Designator]
                          ) [DesignatorFact]
                        ) [SingleTerm]
                      ) [PositiveStartExpr]
                      Plus(
                      ) [Plus]
                      MultipleTerms(
                        SingleTerm(
                          ExpressionFact(
                            AddExpression(
                              PositiveStartExpr(
                                MultipleTerms(
                                  SingleTerm(
                                    DesignatorFact(
                                      Designator(
                                        WithoutNamespace(
                                         pet
                                        ) [WithoutNamespace]
                                        NoArrayExpression(
                                        ) [NoArrayExpression]
                                      ) [Designator]
                                    ) [DesignatorFact]
                                  ) [SingleTerm]
                                  Multiply(
                                  ) [Multiply]
                                  DesignatorFact(
                                    Designator(
                                      WithoutNamespace(
                                       jedan
                                      ) [WithoutNamespace]
                                      NoArrayExpression(
                                      ) [NoArrayExpression]
                                    ) [Designator]
                                  ) [DesignatorFact]
                                ) [MultipleTerms]
                              ) [PositiveStartExpr]
                              Minus(
                              ) [Minus]
                              SingleTerm(
                                NumberConst(
                                 1
                                ) [NumberConst]
                              ) [SingleTerm]
                            ) [AddExpression]
                          ) [ExpressionFact]
                        ) [SingleTerm]
                        Multiply(
                        ) [Multiply]
                        DesignatorFact(
                          Designator(
                            WithoutNamespace(
                             bodovi
                            ) [WithoutNamespace]
                            NoArrayExpression(
                            ) [NoArrayExpression]
                          ) [Designator]
                        ) [DesignatorFact]
                      ) [MultipleTerms]
                    ) [AddExpression]
                    Minus(
                    ) [Minus]
                    SingleTerm(
                      ExpressionFact(
                        AddExpression(
                          AddExpression(
                            PositiveStartExpr(
                              MultipleTerms(
                                SingleTerm(
                                  NumberConst(
                                   3
                                  ) [NumberConst]
                                ) [SingleTerm]
                                Modulo(
                                ) [Modulo]
                                NumberConst(
                                 2
                                ) [NumberConst]
                              ) [MultipleTerms]
                            ) [PositiveStartExpr]
                            Plus(
                            ) [Plus]
                            MultipleTerms(
                              SingleTerm(
                                NumberConst(
                                 3
                                ) [NumberConst]
                              ) [SingleTerm]
                              Multiply(
                              ) [Multiply]
                              NumberConst(
                               2
                              ) [NumberConst]
                            ) [MultipleTerms]
                          ) [AddExpression]
                          Minus(
                          ) [Minus]
                          SingleTerm(
                            NumberConst(
                             3
                            ) [NumberConst]
                          ) [SingleTerm]
                        ) [AddExpression]
                      ) [ExpressionFact]
                    ) [SingleTerm]
                  ) [AddExpression]
                ) [DesignatorExpr]
              ) [DesignatorStat]
            ) [Statements]
            PrintExpr(
              PositiveStartExpr(
                SingleTerm(
                  DesignatorFact(
                    Designator(
                      WithoutNamespace(
                       bodovi
                      ) [WithoutNamespace]
                      NoArrayExpression(
                      ) [NoArrayExpression]
                    ) [Designator]
                  ) [DesignatorFact]
                ) [SingleTerm]
              ) [PositiveStartExpr]
              NoNumConstOpt(
              ) [NoNumConstOpt]
            ) [PrintExpr]
          ) [Statements]
          DesignatorStat(
            DesignatorExpr(
              Designator(
                WithoutNamespace(
                 niz2
                ) [WithoutNamespace]
                NoArrayExpression(
                ) [NoArrayExpression]
              ) [Designator]
              AssignOperation(
              ) [AssignOperation]
              PositiveStartExpr(
                SingleTerm(
                  RangeExpression(
                    AddExpression(
                      PositiveStartExpr(
                        SingleTerm(
                          DesignatorFact(
                            Designator(
                              WithoutNamespace(
                               bodovi
                              ) [WithoutNamespace]
                              NoArrayExpression(
                              ) [NoArrayExpression]
                            ) [Designator]
                          ) [DesignatorFact]
                        ) [SingleTerm]
                      ) [PositiveStartExpr]
                      Plus(
                      ) [Plus]
                      SingleTerm(
                        NumberConst(
                         1
                        ) [NumberConst]
                      ) [SingleTerm]
                    ) [AddExpression]
                  ) [RangeExpression]
                ) [SingleTerm]
              ) [PositiveStartExpr]
            ) [DesignatorExpr]
          ) [DesignatorStat]
        ) [Statements]
        PrintExpr(
          PositiveStartExpr(
            SingleTerm(
              DesignatorFact(
                Designator(
                  WithoutNamespace(
                   niz2
                  ) [WithoutNamespace]
                  NoArrayExpression(
                  ) [NoArrayExpression]
                ) [Designator]
              ) [DesignatorFact]
            ) [SingleTerm]
          ) [PositiveStartExpr]
          NoNumConstOpt(
          ) [NoNumConstOpt]
        ) [PrintExpr]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  13:42:24,363 - ================ Semanticka obrada ===================
INFO  13:42:24,366 - Const nula defined on line 3
INFO  13:42:24,366 - Const jedan defined on line 4
INFO  13:42:24,366 - Const pet defined on line 5
INFO  13:42:24,366 - Symbol bodovi found on line 15
INFO  13:42:24,366 - Symbol bodovi found on line 16
INFO  13:42:24,366 - Symbol bodovi found on line 17
INFO  13:42:24,366 - Symbol bodovi found on line 17
INFO  13:42:24,366 - Symbol jedan found on line 17
INFO  13:42:24,366 - Symbol bodovi found on line 18
INFO  13:42:24,366 - Symbol bodovi found on line 18
INFO  13:42:24,366 - Symbol pet found on line 18
INFO  13:42:24,366 - Symbol bodovi found on line 19
INFO  13:42:24,366 - Symbol bodovi found on line 20
INFO  13:42:24,366 - Symbol niz found on line 23
INFO  13:42:24,366 - Symbol niz found on line 24
INFO  13:42:24,366 - Symbol nula found on line 24
INFO  13:42:24,366 - Symbol jedan found on line 24
INFO  13:42:24,366 - Symbol niz found on line 25
INFO  13:42:24,367 - Symbol niz found on line 26
INFO  13:42:24,367 - Symbol niz found on line 26
INFO  13:42:24,367 - Symbol jedan found on line 26
INFO  13:42:24,367 - Symbol niz found on line 26
INFO  13:42:24,367 - Symbol niz found on line 26
INFO  13:42:24,367 - Symbol bodovi found on line 27
INFO  13:42:24,367 - Symbol niz found on line 27
INFO  13:42:24,367 - Symbol niz found on line 27
INFO  13:42:24,367 - Symbol bodovi found on line 28
INFO  13:42:24,367 - Symbol niz found on line 29
INFO  13:42:24,367 - Symbol nizch found on line 32
INFO  13:42:24,367 - Symbol nizch found on line 33
INFO  13:42:24,367 - Symbol nizch found on line 34
INFO  13:42:24,368 - Symbol jedan found on line 34
INFO  13:42:24,368 - Symbol nizch found on line 35
INFO  13:42:24,368 - Symbol pet found on line 35
INFO  13:42:24,368 - Symbol nizch found on line 36
INFO  13:42:24,368 - Symbol nizch found on line 37
INFO  13:42:24,368 - Symbol jedan found on line 37
INFO  13:42:24,368 - Symbol bodovi found on line 40
INFO  13:42:24,368 - Symbol bodovi found on line 40
INFO  13:42:24,368 - Symbol pet found on line 40
INFO  13:42:24,368 - Symbol jedan found on line 40
INFO  13:42:24,368 - Symbol bodovi found on line 40
INFO  13:42:24,368 - Symbol bodovi found on line 41
INFO  13:42:24,368 - Symbol niz2 found on line 44
INFO  13:42:24,368 - Symbol bodovi found on line 44
INFO  13:42:24,368 - Symbol niz2 found on line 45
INFO  13:42:24,368 - main() method found on line 1
INFO  13:42:24,371 - Parser SUCCESS!
INFO  13:48:20,507 - Compiling source file: C:\Users\elena\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  13:48:20,507 - ================= LEKSICKA ANALIZA =================
INFO  13:48:20,534 - #2 program
INFO  13:48:20,534 - #47 test301
INFO  13:48:20,534 - #3 const
INFO  13:48:20,534 - #47 char
INFO  13:48:20,534 - #47 c
INFO  13:48:20,535 - #24 =
INFO  13:48:20,535 - #48 c
INFO  13:48:20,535 - #27 ;
INFO  13:48:20,535 - #35 {
INFO  13:48:20,535 - #8 void
INFO  13:48:20,535 - #47 main
INFO  13:48:20,537 - #31 (
INFO  13:48:20,537 - #32 )
INFO  13:48:20,537 - #47 int
INFO  13:48:20,537 - #47 bodovi
INFO  13:48:20,537 - #27 ;
INFO  13:48:20,538 - #47 bool
INFO  13:48:20,538 - #47 niz
INFO  13:48:20,538 - #33 [
INFO  13:48:20,538 - #46 3
ERROR 13:48:20,538 - 
Sintaksna greska on line 7
INFO  13:48:20,538 - #34 ]
INFO  13:48:20,538 - #27 ;
INFO  13:48:20,538 - #35 {
INFO  13:48:20,539 - #47 niz
INFO  13:48:20,539 - #33 [
ERROR 13:48:20,539 - Recovered from error7
INFO  13:48:20,540 - #46 0
INFO  13:48:20,540 - #34 ]
INFO  13:48:20,540 - #24 =
INFO  13:48:20,542 - #47 True
INFO  13:48:20,542 - #27 ;
INFO  13:48:20,543 - #47 niz
INFO  13:48:20,543 - #33 [
INFO  13:48:20,543 - #46 1
INFO  13:48:20,543 - #34 ]
INFO  13:48:20,543 - #24 =
INFO  13:48:20,543 - #47 False
INFO  13:48:20,543 - #27 ;
INFO  13:48:20,543 - #47 niz
INFO  13:48:20,543 - #33 [
INFO  13:48:20,543 - #46 2
INFO  13:48:20,543 - #34 ]
INFO  13:48:20,543 - #24 =
INFO  13:48:20,543 - #47 True
INFO  13:48:20,543 - #27 ;
INFO  13:48:20,544 - #5 print
INFO  13:48:20,544 - #31 (
INFO  13:48:20,544 - #47 c
INFO  13:48:20,544 - #32 )
INFO  13:48:20,544 - #27 ;
INFO  13:48:20,544 - #5 print
INFO  13:48:20,544 - #31 (
INFO  13:48:20,544 - #47 niz
INFO  13:48:20,544 - #32 )
INFO  13:48:20,545 - #27 ;
INFO  13:48:20,545 - #36 }
INFO  13:48:20,545 - #36 }
INFO  13:48:20,546 - ================= PARSIRANO STABLO =================
INFO  13:48:20,548 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  Declarations(
    NoDeclarations(
    ) [NoDeclarations]
    ConstantDeclaration(
      ConDecl(
        Type(
         char
        ) [Type]
        ConstDef(
         c
          CharConst(
           c
          ) [CharConst]
        ) [ConstDef]
        NoConstantDeclaration(
        ) [NoConstantDeclaration]
      ) [ConDecl]
    ) [ConstantDeclaration]
  ) [Declarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      ListOfVarDecl(
        ListOfVarDecl(
          NoVarDeclarations(
          ) [NoVarDeclarations]
          VarDeclaration(
            Type(
             int
            ) [Type]
            OneVarDeclaration(
              AddVarDecl1(
               bodovi
                NoBrackets(
                ) [NoBrackets]
              ) [AddVarDecl1]
            ) [OneVarDeclaration]
          ) [VarDeclaration]
        ) [ListOfVarDecl]
        VarDeclaration(
          Type(
           bool
          ) [Type]
          OneVarDeclaration(
            AddVarDeclDerived1(
            ) [AddVarDeclDerived1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [ListOfVarDecl]
      Statements(
        Statements(
          Statements(
            Statements(
              Statements(
                NoStatements(
                ) [NoStatements]
                DesignatorStat(
                  DesignatorExpr(
                    Designator(
                      WithoutNamespace(
                       niz
                      ) [WithoutNamespace]
                      AddArrayExpression(
                        BraExpr(
                          PositiveStartExpr(
                            SingleTerm(
                              NumberConst(
                               0
                              ) [NumberConst]
                            ) [SingleTerm]
                          ) [PositiveStartExpr]
                        ) [BraExpr]
                      ) [AddArrayExpression]
                    ) [Designator]
                    AssignOperation(
                    ) [AssignOperation]
                    PositiveStartExpr(
                      SingleTerm(
                        DesignatorFact(
                          Designator(
                            WithoutNamespace(
                             True
                            ) [WithoutNamespace]
                            NoArrayExpression(
                            ) [NoArrayExpression]
                          ) [Designator]
                        ) [DesignatorFact]
                      ) [SingleTerm]
                    ) [PositiveStartExpr]
                  ) [DesignatorExpr]
                ) [DesignatorStat]
              ) [Statements]
              DesignatorStat(
                DesignatorExpr(
                  Designator(
                    WithoutNamespace(
                     niz
                    ) [WithoutNamespace]
                    AddArrayExpression(
                      BraExpr(
                        PositiveStartExpr(
                          SingleTerm(
                            NumberConst(
                             1
                            ) [NumberConst]
                          ) [SingleTerm]
                        ) [PositiveStartExpr]
                      ) [BraExpr]
                    ) [AddArrayExpression]
                  ) [Designator]
                  AssignOperation(
                  ) [AssignOperation]
                  PositiveStartExpr(
                    SingleTerm(
                      DesignatorFact(
                        Designator(
                          WithoutNamespace(
                           False
                          ) [WithoutNamespace]
                          NoArrayExpression(
                          ) [NoArrayExpression]
                        ) [Designator]
                      ) [DesignatorFact]
                    ) [SingleTerm]
                  ) [PositiveStartExpr]
                ) [DesignatorExpr]
              ) [DesignatorStat]
            ) [Statements]
            DesignatorStat(
              DesignatorExpr(
                Designator(
                  WithoutNamespace(
                   niz
                  ) [WithoutNamespace]
                  AddArrayExpression(
                    BraExpr(
                      PositiveStartExpr(
                        SingleTerm(
                          NumberConst(
                           2
                          ) [NumberConst]
                        ) [SingleTerm]
                      ) [PositiveStartExpr]
                    ) [BraExpr]
                  ) [AddArrayExpression]
                ) [Designator]
                AssignOperation(
                ) [AssignOperation]
                PositiveStartExpr(
                  SingleTerm(
                    DesignatorFact(
                      Designator(
                        WithoutNamespace(
                         True
                        ) [WithoutNamespace]
                        NoArrayExpression(
                        ) [NoArrayExpression]
                      ) [Designator]
                    ) [DesignatorFact]
                  ) [SingleTerm]
                ) [PositiveStartExpr]
              ) [DesignatorExpr]
            ) [DesignatorStat]
          ) [Statements]
          PrintExpr(
            PositiveStartExpr(
              SingleTerm(
                DesignatorFact(
                  Designator(
                    WithoutNamespace(
                     c
                    ) [WithoutNamespace]
                    NoArrayExpression(
                    ) [NoArrayExpression]
                  ) [Designator]
                ) [DesignatorFact]
              ) [SingleTerm]
            ) [PositiveStartExpr]
            NoNumConstOpt(
            ) [NoNumConstOpt]
          ) [PrintExpr]
        ) [Statements]
        PrintExpr(
          PositiveStartExpr(
            SingleTerm(
              DesignatorFact(
                Designator(
                  WithoutNamespace(
                   niz
                  ) [WithoutNamespace]
                  NoArrayExpression(
                  ) [NoArrayExpression]
                ) [Designator]
              ) [DesignatorFact]
            ) [SingleTerm]
          ) [PositiveStartExpr]
          NoNumConstOpt(
          ) [NoNumConstOpt]
        ) [PrintExpr]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  13:48:20,549 - ================ Semanticka obrada ===================
INFO  13:48:20,551 - Const c defined on line 3
ERROR 13:48:20,552 - Symbol niz does not exist on line 9
ERROR 13:48:20,552 - Identifier does not exist  on line 9
ERROR 13:48:20,552 - Symbol True does not exist on line 9
ERROR 13:48:20,552 - Identifier does not exist  on line 9
INFO  13:48:56,269 - Compiling source file: C:\Users\elena\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  13:48:56,270 - ================= LEKSICKA ANALIZA =================
INFO  13:48:56,293 - #2 program
INFO  13:48:56,294 - #47 test301
INFO  13:48:56,294 - #3 const
INFO  13:48:56,295 - #47 char
INFO  13:48:56,295 - #47 c
INFO  13:48:56,295 - #24 =
INFO  13:48:56,295 - #48 c
INFO  13:48:56,295 - #27 ;
INFO  13:48:56,296 - #35 {
INFO  13:48:56,296 - #8 void
INFO  13:48:56,296 - #47 main
INFO  13:48:56,296 - #31 (
INFO  13:48:56,296 - #32 )
INFO  13:48:56,296 - #47 int
INFO  13:48:56,298 - #47 bodovi
INFO  13:48:56,298 - #27 ;
INFO  13:48:56,298 - #47 bool
INFO  13:48:56,298 - #47 niz
INFO  13:48:56,298 - #33 [
INFO  13:48:56,298 - #34 ]
INFO  13:48:56,299 - #27 ;
INFO  13:48:56,299 - #35 {
INFO  13:48:56,299 - #47 niz
INFO  13:48:56,299 - #24 =
INFO  13:48:56,299 - #4 new
INFO  13:48:56,300 - #47 bool
INFO  13:48:56,300 - #33 [
INFO  13:48:56,300 - #34 ]
ERROR 13:48:56,300 - 
Sintaksna greska on line 9
INFO  13:48:56,300 - #27 ;
INFO  13:48:56,300 - #47 niz
INFO  13:48:56,300 - #33 [
INFO  13:48:56,301 - #46 0
INFO  13:48:56,301 - #34 ]
ERROR 13:48:56,301 - Recovered from error9
INFO  13:48:56,301 - #24 =
ERROR 13:48:56,302 - 
Sintaksna greska on line 10
INFO  13:48:56,303 - #47 True
INFO  13:48:56,303 - #27 ;
INFO  13:48:56,303 - #47 niz
INFO  13:48:56,303 - #33 [
ERROR 13:48:56,303 - Recovered from error9
INFO  13:48:56,303 - #46 1
INFO  13:48:56,303 - #34 ]
INFO  13:48:56,303 - #24 =
INFO  13:48:56,303 - #47 False
INFO  13:48:56,303 - #27 ;
INFO  13:48:56,303 - #47 niz
INFO  13:48:56,303 - #33 [
INFO  13:48:56,303 - #46 2
INFO  13:48:56,303 - #34 ]
INFO  13:48:56,303 - #24 =
INFO  13:48:56,304 - #47 True
INFO  13:48:56,304 - #27 ;
INFO  13:48:56,304 - #5 print
INFO  13:48:56,304 - #31 (
INFO  13:48:56,304 - #47 c
INFO  13:48:56,304 - #32 )
INFO  13:48:56,307 - #27 ;
INFO  13:48:56,307 - #5 print
INFO  13:48:56,307 - #31 (
INFO  13:48:56,307 - #47 niz
INFO  13:48:56,307 - #32 )
INFO  13:48:56,307 - #27 ;
INFO  13:48:56,307 - #36 }
INFO  13:48:56,307 - #36 }
INFO  13:48:56,309 - ================= PARSIRANO STABLO =================
INFO  13:48:56,317 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  Declarations(
    NoDeclarations(
    ) [NoDeclarations]
    ConstantDeclaration(
      ConDecl(
        Type(
         char
        ) [Type]
        ConstDef(
         c
          CharConst(
           c
          ) [CharConst]
        ) [ConstDef]
        NoConstantDeclaration(
        ) [NoConstantDeclaration]
      ) [ConDecl]
    ) [ConstantDeclaration]
  ) [Declarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      ListOfVarDecl(
        ListOfVarDecl(
          NoVarDeclarations(
          ) [NoVarDeclarations]
          VarDeclaration(
            Type(
             int
            ) [Type]
            OneVarDeclaration(
              AddVarDecl1(
               bodovi
                NoBrackets(
                ) [NoBrackets]
              ) [AddVarDecl1]
            ) [OneVarDeclaration]
          ) [VarDeclaration]
        ) [ListOfVarDecl]
        VarDeclaration(
          Type(
           bool
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             niz
              Brackets(
              ) [Brackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [ListOfVarDecl]
      Statements(
        Statements(
          Statements(
            Statements(
              Statements(
                NoStatements(
                ) [NoStatements]
                DesignatorStat(
                  DesignatorExpr(
                    Designator(
                      WithoutNamespace(
                       niz
                      ) [WithoutNamespace]
                      NoArrayExpression(
                      ) [NoArrayExpression]
                    ) [Designator]
                    AssignopDerived1(
                    ) [AssignopDerived1]
                    PositiveStartExpr(
                      SingleTerm(
                        DesignatorFact(
                          Designator(
                            WithoutNamespace(
                             True
                            ) [WithoutNamespace]
                            NoArrayExpression(
                            ) [NoArrayExpression]
                          ) [Designator]
                        ) [DesignatorFact]
                      ) [SingleTerm]
                    ) [PositiveStartExpr]
                  ) [DesignatorExpr]
                ) [DesignatorStat]
              ) [Statements]
              DesignatorStat(
                DesignatorExpr(
                  Designator(
                    WithoutNamespace(
                     niz
                    ) [WithoutNamespace]
                    AddArrayExpression(
                      BraExpr(
                        PositiveStartExpr(
                          SingleTerm(
                            NumberConst(
                             1
                            ) [NumberConst]
                          ) [SingleTerm]
                        ) [PositiveStartExpr]
                      ) [BraExpr]
                    ) [AddArrayExpression]
                  ) [Designator]
                  AssignOperation(
                  ) [AssignOperation]
                  PositiveStartExpr(
                    SingleTerm(
                      DesignatorFact(
                        Designator(
                          WithoutNamespace(
                           False
                          ) [WithoutNamespace]
                          NoArrayExpression(
                          ) [NoArrayExpression]
                        ) [Designator]
                      ) [DesignatorFact]
                    ) [SingleTerm]
                  ) [PositiveStartExpr]
                ) [DesignatorExpr]
              ) [DesignatorStat]
            ) [Statements]
            DesignatorStat(
              DesignatorExpr(
                Designator(
                  WithoutNamespace(
                   niz
                  ) [WithoutNamespace]
                  AddArrayExpression(
                    BraExpr(
                      PositiveStartExpr(
                        SingleTerm(
                          NumberConst(
                           2
                          ) [NumberConst]
                        ) [SingleTerm]
                      ) [PositiveStartExpr]
                    ) [BraExpr]
                  ) [AddArrayExpression]
                ) [Designator]
                AssignOperation(
                ) [AssignOperation]
                PositiveStartExpr(
                  SingleTerm(
                    DesignatorFact(
                      Designator(
                        WithoutNamespace(
                         True
                        ) [WithoutNamespace]
                        NoArrayExpression(
                        ) [NoArrayExpression]
                      ) [Designator]
                    ) [DesignatorFact]
                  ) [SingleTerm]
                ) [PositiveStartExpr]
              ) [DesignatorExpr]
            ) [DesignatorStat]
          ) [Statements]
          PrintExpr(
            PositiveStartExpr(
              SingleTerm(
                DesignatorFact(
                  Designator(
                    WithoutNamespace(
                     c
                    ) [WithoutNamespace]
                    NoArrayExpression(
                    ) [NoArrayExpression]
                  ) [Designator]
                ) [DesignatorFact]
              ) [SingleTerm]
            ) [PositiveStartExpr]
            NoNumConstOpt(
            ) [NoNumConstOpt]
          ) [PrintExpr]
        ) [Statements]
        PrintExpr(
          PositiveStartExpr(
            SingleTerm(
              DesignatorFact(
                Designator(
                  WithoutNamespace(
                   niz
                  ) [WithoutNamespace]
                  NoArrayExpression(
                  ) [NoArrayExpression]
                ) [Designator]
              ) [DesignatorFact]
            ) [SingleTerm]
          ) [PositiveStartExpr]
          NoNumConstOpt(
          ) [NoNumConstOpt]
        ) [PrintExpr]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  13:48:56,317 - ================ Semanticka obrada ===================
INFO  13:48:56,322 - Const c defined on line 3
INFO  13:48:56,322 - Symbol niz found on line 9
ERROR 13:48:56,322 - Symbol True does not exist on line 10
ERROR 13:48:56,322 - Identifier does not exist  on line 10
INFO  13:49:29,081 - Compiling source file: C:\Users\elena\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  13:49:29,082 - ================= LEKSICKA ANALIZA =================
INFO  13:49:29,105 - #2 program
INFO  13:49:29,105 - #47 test301
INFO  13:49:29,105 - #3 const
INFO  13:49:29,107 - #47 char
INFO  13:49:29,107 - #47 c
INFO  13:49:29,107 - #24 =
INFO  13:49:29,107 - #48 c
INFO  13:49:29,107 - #27 ;
INFO  13:49:29,108 - #35 {
INFO  13:49:29,108 - #8 void
INFO  13:49:29,108 - #47 main
INFO  13:49:29,109 - #31 (
INFO  13:49:29,109 - #32 )
INFO  13:49:29,109 - #47 int
INFO  13:49:29,109 - #47 bodovi
INFO  13:49:29,109 - #27 ;
INFO  13:49:29,110 - #47 char
INFO  13:49:29,110 - #47 nizch
INFO  13:49:29,110 - #33 [
INFO  13:49:29,110 - #34 ]
INFO  13:49:29,110 - #27 ;
INFO  13:49:29,111 - #35 {
INFO  13:49:29,111 - #47 niz
INFO  13:49:29,111 - #24 =
INFO  13:49:29,113 - #4 new
INFO  13:49:29,113 - #47 bool
INFO  13:49:29,113 - #33 [
INFO  13:49:29,113 - #46 3
INFO  13:49:29,113 - #34 ]
INFO  13:49:29,113 - #27 ;
INFO  13:49:29,113 - #47 niz
INFO  13:49:29,113 - #33 [
INFO  13:49:29,113 - #46 0
INFO  13:49:29,113 - #34 ]
INFO  13:49:29,113 - #24 =
INFO  13:49:29,113 - #47 True
INFO  13:49:29,113 - #27 ;
INFO  13:49:29,113 - #47 niz
INFO  13:49:29,113 - #33 [
INFO  13:49:29,113 - #46 1
INFO  13:49:29,113 - #34 ]
INFO  13:49:29,113 - #24 =
INFO  13:49:29,113 - #47 False
INFO  13:49:29,115 - #27 ;
INFO  13:49:29,115 - #47 niz
INFO  13:49:29,115 - #33 [
INFO  13:49:29,115 - #46 2
INFO  13:49:29,115 - #34 ]
INFO  13:49:29,115 - #24 =
INFO  13:49:29,115 - #47 True
INFO  13:49:29,115 - #27 ;
INFO  13:49:29,115 - #5 print
INFO  13:49:29,115 - #31 (
INFO  13:49:29,115 - #47 c
INFO  13:49:29,115 - #32 )
INFO  13:49:29,115 - #27 ;
INFO  13:49:29,115 - #5 print
INFO  13:49:29,116 - #31 (
INFO  13:49:29,116 - #47 niz
INFO  13:49:29,116 - #32 )
INFO  13:49:29,116 - #27 ;
INFO  13:49:29,116 - #36 }
INFO  13:49:29,116 - #36 }
INFO  13:49:29,117 - ================= PARSIRANO STABLO =================
INFO  13:49:29,120 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  Declarations(
    NoDeclarations(
    ) [NoDeclarations]
    ConstantDeclaration(
      ConDecl(
        Type(
         char
        ) [Type]
        ConstDef(
         c
          CharConst(
           c
          ) [CharConst]
        ) [ConstDef]
        NoConstantDeclaration(
        ) [NoConstantDeclaration]
      ) [ConDecl]
    ) [ConstantDeclaration]
  ) [Declarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      ListOfVarDecl(
        ListOfVarDecl(
          NoVarDeclarations(
          ) [NoVarDeclarations]
          VarDeclaration(
            Type(
             int
            ) [Type]
            OneVarDeclaration(
              AddVarDecl1(
               bodovi
                NoBrackets(
                ) [NoBrackets]
              ) [AddVarDecl1]
            ) [OneVarDeclaration]
          ) [VarDeclaration]
        ) [ListOfVarDecl]
        VarDeclaration(
          Type(
           char
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             nizch
              Brackets(
              ) [Brackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [ListOfVarDecl]
      Statements(
        Statements(
          Statements(
            Statements(
              Statements(
                Statements(
                  NoStatements(
                  ) [NoStatements]
                  DesignatorStat(
                    DesignatorExpr(
                      Designator(
                        WithoutNamespace(
                         niz
                        ) [WithoutNamespace]
                        NoArrayExpression(
                        ) [NoArrayExpression]
                      ) [Designator]
                      AssignOperation(
                      ) [AssignOperation]
                      PositiveStartExpr(
                        SingleTerm(
                          NewType(
                            Type(
                             bool
                            ) [Type]
                            PositiveStartExpr(
                              SingleTerm(
                                NumberConst(
                                 3
                                ) [NumberConst]
                              ) [SingleTerm]
                            ) [PositiveStartExpr]
                          ) [NewType]
                        ) [SingleTerm]
                      ) [PositiveStartExpr]
                    ) [DesignatorExpr]
                  ) [DesignatorStat]
                ) [Statements]
                DesignatorStat(
                  DesignatorExpr(
                    Designator(
                      WithoutNamespace(
                       niz
                      ) [WithoutNamespace]
                      AddArrayExpression(
                        BraExpr(
                          PositiveStartExpr(
                            SingleTerm(
                              NumberConst(
                               0
                              ) [NumberConst]
                            ) [SingleTerm]
                          ) [PositiveStartExpr]
                        ) [BraExpr]
                      ) [AddArrayExpression]
                    ) [Designator]
                    AssignOperation(
                    ) [AssignOperation]
                    PositiveStartExpr(
                      SingleTerm(
                        DesignatorFact(
                          Designator(
                            WithoutNamespace(
                             True
                            ) [WithoutNamespace]
                            NoArrayExpression(
                            ) [NoArrayExpression]
                          ) [Designator]
                        ) [DesignatorFact]
                      ) [SingleTerm]
                    ) [PositiveStartExpr]
                  ) [DesignatorExpr]
                ) [DesignatorStat]
              ) [Statements]
              DesignatorStat(
                DesignatorExpr(
                  Designator(
                    WithoutNamespace(
                     niz
                    ) [WithoutNamespace]
                    AddArrayExpression(
                      BraExpr(
                        PositiveStartExpr(
                          SingleTerm(
                            NumberConst(
                             1
                            ) [NumberConst]
                          ) [SingleTerm]
                        ) [PositiveStartExpr]
                      ) [BraExpr]
                    ) [AddArrayExpression]
                  ) [Designator]
                  AssignOperation(
                  ) [AssignOperation]
                  PositiveStartExpr(
                    SingleTerm(
                      DesignatorFact(
                        Designator(
                          WithoutNamespace(
                           False
                          ) [WithoutNamespace]
                          NoArrayExpression(
                          ) [NoArrayExpression]
                        ) [Designator]
                      ) [DesignatorFact]
                    ) [SingleTerm]
                  ) [PositiveStartExpr]
                ) [DesignatorExpr]
              ) [DesignatorStat]
            ) [Statements]
            DesignatorStat(
              DesignatorExpr(
                Designator(
                  WithoutNamespace(
                   niz
                  ) [WithoutNamespace]
                  AddArrayExpression(
                    BraExpr(
                      PositiveStartExpr(
                        SingleTerm(
                          NumberConst(
                           2
                          ) [NumberConst]
                        ) [SingleTerm]
                      ) [PositiveStartExpr]
                    ) [BraExpr]
                  ) [AddArrayExpression]
                ) [Designator]
                AssignOperation(
                ) [AssignOperation]
                PositiveStartExpr(
                  SingleTerm(
                    DesignatorFact(
                      Designator(
                        WithoutNamespace(
                         True
                        ) [WithoutNamespace]
                        NoArrayExpression(
                        ) [NoArrayExpression]
                      ) [Designator]
                    ) [DesignatorFact]
                  ) [SingleTerm]
                ) [PositiveStartExpr]
              ) [DesignatorExpr]
            ) [DesignatorStat]
          ) [Statements]
          PrintExpr(
            PositiveStartExpr(
              SingleTerm(
                DesignatorFact(
                  Designator(
                    WithoutNamespace(
                     c
                    ) [WithoutNamespace]
                    NoArrayExpression(
                    ) [NoArrayExpression]
                  ) [Designator]
                ) [DesignatorFact]
              ) [SingleTerm]
            ) [PositiveStartExpr]
            NoNumConstOpt(
            ) [NoNumConstOpt]
          ) [PrintExpr]
        ) [Statements]
        PrintExpr(
          PositiveStartExpr(
            SingleTerm(
              DesignatorFact(
                Designator(
                  WithoutNamespace(
                   niz
                  ) [WithoutNamespace]
                  NoArrayExpression(
                  ) [NoArrayExpression]
                ) [Designator]
              ) [DesignatorFact]
            ) [SingleTerm]
          ) [PositiveStartExpr]
          NoNumConstOpt(
          ) [NoNumConstOpt]
        ) [PrintExpr]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  13:49:29,120 - ================ Semanticka obrada ===================
INFO  13:49:29,122 - Const c defined on line 3
ERROR 13:49:29,123 - Symbol niz does not exist on line 9
ERROR 13:49:29,123 - Identifier does not exist  on line 9
INFO  13:49:38,104 - Compiling source file: C:\Users\elena\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  13:49:38,105 - ================= LEKSICKA ANALIZA =================
INFO  13:49:38,135 - #2 program
INFO  13:49:38,136 - #47 test301
INFO  13:49:38,136 - #3 const
INFO  13:49:38,138 - #47 char
INFO  13:49:38,138 - #47 c
INFO  13:49:38,138 - #24 =
INFO  13:49:38,139 - #48 c
INFO  13:49:38,139 - #27 ;
INFO  13:49:38,140 - #35 {
INFO  13:49:38,140 - #8 void
INFO  13:49:38,140 - #47 main
INFO  13:49:38,141 - #31 (
INFO  13:49:38,141 - #32 )
INFO  13:49:38,141 - #47 int
INFO  13:49:38,142 - #47 bodovi
INFO  13:49:38,142 - #27 ;
INFO  13:49:38,143 - #47 char
INFO  13:49:38,144 - #47 nizch
INFO  13:49:38,144 - #33 [
INFO  13:49:38,144 - #34 ]
INFO  13:49:38,144 - #27 ;
INFO  13:49:38,144 - #35 {
INFO  13:49:38,144 - #47 niz
INFO  13:49:38,145 - #24 =
INFO  13:49:38,145 - #4 new
INFO  13:49:38,147 - #47 bool
INFO  13:49:38,147 - #33 [
INFO  13:49:38,147 - #46 3
INFO  13:49:38,147 - #34 ]
INFO  13:49:38,147 - #27 ;
INFO  13:49:38,148 - #47 niz
INFO  13:49:38,148 - #33 [
INFO  13:49:38,148 - #46 0
INFO  13:49:38,148 - #34 ]
INFO  13:49:38,148 - #24 =
INFO  13:49:38,149 - #47 True
INFO  13:49:38,149 - #27 ;
INFO  13:49:38,149 - #47 niz
INFO  13:49:38,149 - #33 [
INFO  13:49:38,149 - #46 1
INFO  13:49:38,149 - #34 ]
INFO  13:49:38,149 - #24 =
INFO  13:49:38,149 - #47 False
INFO  13:49:38,149 - #27 ;
INFO  13:49:38,149 - #47 niz
INFO  13:49:38,149 - #33 [
INFO  13:49:38,149 - #46 2
INFO  13:49:38,149 - #34 ]
INFO  13:49:38,149 - #24 =
INFO  13:49:38,149 - #47 True
INFO  13:49:38,150 - #27 ;
INFO  13:49:38,150 - #5 print
INFO  13:49:38,150 - #31 (
INFO  13:49:38,150 - #47 c
INFO  13:49:38,150 - #32 )
INFO  13:49:38,151 - #27 ;
INFO  13:49:38,151 - #5 print
INFO  13:49:38,151 - #31 (
INFO  13:49:38,151 - #47 niz
INFO  13:49:38,151 - #32 )
INFO  13:49:38,151 - #27 ;
INFO  13:49:38,151 - #36 }
INFO  13:49:38,151 - #36 }
INFO  13:49:38,153 - ================= PARSIRANO STABLO =================
INFO  13:49:38,157 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  Declarations(
    NoDeclarations(
    ) [NoDeclarations]
    ConstantDeclaration(
      ConDecl(
        Type(
         char
        ) [Type]
        ConstDef(
         c
          CharConst(
           c
          ) [CharConst]
        ) [ConstDef]
        NoConstantDeclaration(
        ) [NoConstantDeclaration]
      ) [ConDecl]
    ) [ConstantDeclaration]
  ) [Declarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      ListOfVarDecl(
        ListOfVarDecl(
          NoVarDeclarations(
          ) [NoVarDeclarations]
          VarDeclaration(
            Type(
             int
            ) [Type]
            OneVarDeclaration(
              AddVarDecl1(
               bodovi
                NoBrackets(
                ) [NoBrackets]
              ) [AddVarDecl1]
            ) [OneVarDeclaration]
          ) [VarDeclaration]
        ) [ListOfVarDecl]
        VarDeclaration(
          Type(
           char
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             nizch
              Brackets(
              ) [Brackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [ListOfVarDecl]
      Statements(
        Statements(
          Statements(
            Statements(
              Statements(
                Statements(
                  NoStatements(
                  ) [NoStatements]
                  DesignatorStat(
                    DesignatorExpr(
                      Designator(
                        WithoutNamespace(
                         niz
                        ) [WithoutNamespace]
                        NoArrayExpression(
                        ) [NoArrayExpression]
                      ) [Designator]
                      AssignOperation(
                      ) [AssignOperation]
                      PositiveStartExpr(
                        SingleTerm(
                          NewType(
                            Type(
                             bool
                            ) [Type]
                            PositiveStartExpr(
                              SingleTerm(
                                NumberConst(
                                 3
                                ) [NumberConst]
                              ) [SingleTerm]
                            ) [PositiveStartExpr]
                          ) [NewType]
                        ) [SingleTerm]
                      ) [PositiveStartExpr]
                    ) [DesignatorExpr]
                  ) [DesignatorStat]
                ) [Statements]
                DesignatorStat(
                  DesignatorExpr(
                    Designator(
                      WithoutNamespace(
                       niz
                      ) [WithoutNamespace]
                      AddArrayExpression(
                        BraExpr(
                          PositiveStartExpr(
                            SingleTerm(
                              NumberConst(
                               0
                              ) [NumberConst]
                            ) [SingleTerm]
                          ) [PositiveStartExpr]
                        ) [BraExpr]
                      ) [AddArrayExpression]
                    ) [Designator]
                    AssignOperation(
                    ) [AssignOperation]
                    PositiveStartExpr(
                      SingleTerm(
                        DesignatorFact(
                          Designator(
                            WithoutNamespace(
                             True
                            ) [WithoutNamespace]
                            NoArrayExpression(
                            ) [NoArrayExpression]
                          ) [Designator]
                        ) [DesignatorFact]
                      ) [SingleTerm]
                    ) [PositiveStartExpr]
                  ) [DesignatorExpr]
                ) [DesignatorStat]
              ) [Statements]
              DesignatorStat(
                DesignatorExpr(
                  Designator(
                    WithoutNamespace(
                     niz
                    ) [WithoutNamespace]
                    AddArrayExpression(
                      BraExpr(
                        PositiveStartExpr(
                          SingleTerm(
                            NumberConst(
                             1
                            ) [NumberConst]
                          ) [SingleTerm]
                        ) [PositiveStartExpr]
                      ) [BraExpr]
                    ) [AddArrayExpression]
                  ) [Designator]
                  AssignOperation(
                  ) [AssignOperation]
                  PositiveStartExpr(
                    SingleTerm(
                      DesignatorFact(
                        Designator(
                          WithoutNamespace(
                           False
                          ) [WithoutNamespace]
                          NoArrayExpression(
                          ) [NoArrayExpression]
                        ) [Designator]
                      ) [DesignatorFact]
                    ) [SingleTerm]
                  ) [PositiveStartExpr]
                ) [DesignatorExpr]
              ) [DesignatorStat]
            ) [Statements]
            DesignatorStat(
              DesignatorExpr(
                Designator(
                  WithoutNamespace(
                   niz
                  ) [WithoutNamespace]
                  AddArrayExpression(
                    BraExpr(
                      PositiveStartExpr(
                        SingleTerm(
                          NumberConst(
                           2
                          ) [NumberConst]
                        ) [SingleTerm]
                      ) [PositiveStartExpr]
                    ) [BraExpr]
                  ) [AddArrayExpression]
                ) [Designator]
                AssignOperation(
                ) [AssignOperation]
                PositiveStartExpr(
                  SingleTerm(
                    DesignatorFact(
                      Designator(
                        WithoutNamespace(
                         True
                        ) [WithoutNamespace]
                        NoArrayExpression(
                        ) [NoArrayExpression]
                      ) [Designator]
                    ) [DesignatorFact]
                  ) [SingleTerm]
                ) [PositiveStartExpr]
              ) [DesignatorExpr]
            ) [DesignatorStat]
          ) [Statements]
          PrintExpr(
            PositiveStartExpr(
              SingleTerm(
                DesignatorFact(
                  Designator(
                    WithoutNamespace(
                     c
                    ) [WithoutNamespace]
                    NoArrayExpression(
                    ) [NoArrayExpression]
                  ) [Designator]
                ) [DesignatorFact]
              ) [SingleTerm]
            ) [PositiveStartExpr]
            NoNumConstOpt(
            ) [NoNumConstOpt]
          ) [PrintExpr]
        ) [Statements]
        PrintExpr(
          PositiveStartExpr(
            SingleTerm(
              DesignatorFact(
                Designator(
                  WithoutNamespace(
                   niz
                  ) [WithoutNamespace]
                  NoArrayExpression(
                  ) [NoArrayExpression]
                ) [Designator]
              ) [DesignatorFact]
            ) [SingleTerm]
          ) [PositiveStartExpr]
          NoNumConstOpt(
          ) [NoNumConstOpt]
        ) [PrintExpr]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  13:49:38,158 - ================ Semanticka obrada ===================
INFO  13:49:38,161 - Const c defined on line 3
ERROR 13:49:38,161 - Symbol niz does not exist on line 9
ERROR 13:49:38,161 - Identifier does not exist  on line 9
INFO  13:50:02,423 - Compiling source file: C:\Users\elena\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  13:50:02,423 - ================= LEKSICKA ANALIZA =================
INFO  13:50:02,450 - #2 program
INFO  13:50:02,450 - #47 test301
INFO  13:50:02,450 - #3 const
INFO  13:50:02,452 - #47 char
INFO  13:50:02,452 - #47 c
INFO  13:50:02,452 - #24 =
INFO  13:50:02,452 - #48 c
INFO  13:50:02,452 - #27 ;
INFO  13:50:02,453 - #35 {
INFO  13:50:02,453 - #8 void
INFO  13:50:02,453 - #47 main
INFO  13:50:02,453 - #31 (
INFO  13:50:02,453 - #32 )
INFO  13:50:02,453 - #47 int
INFO  13:50:02,453 - #47 bodovi
INFO  13:50:02,455 - #27 ;
INFO  13:50:02,455 - #47 char
INFO  13:50:02,455 - #47 niz
INFO  13:50:02,455 - #33 [
INFO  13:50:02,455 - #34 ]
INFO  13:50:02,455 - #27 ;
INFO  13:50:02,456 - #35 {
INFO  13:50:02,456 - #47 niz
INFO  13:50:02,456 - #24 =
INFO  13:50:02,456 - #4 new
INFO  13:50:02,457 - #47 bool
INFO  13:50:02,457 - #33 [
INFO  13:50:02,457 - #46 3
INFO  13:50:02,457 - #34 ]
INFO  13:50:02,457 - #27 ;
INFO  13:50:02,457 - #47 niz
INFO  13:50:02,457 - #33 [
INFO  13:50:02,457 - #46 0
INFO  13:50:02,457 - #34 ]
INFO  13:50:02,457 - #24 =
INFO  13:50:02,459 - #47 True
INFO  13:50:02,459 - #27 ;
INFO  13:50:02,459 - #47 niz
INFO  13:50:02,459 - #33 [
INFO  13:50:02,459 - #46 1
INFO  13:50:02,459 - #34 ]
INFO  13:50:02,459 - #24 =
INFO  13:50:02,459 - #47 False
INFO  13:50:02,459 - #27 ;
INFO  13:50:02,459 - #47 niz
INFO  13:50:02,459 - #33 [
INFO  13:50:02,459 - #46 2
INFO  13:50:02,459 - #34 ]
INFO  13:50:02,459 - #24 =
INFO  13:50:02,460 - #47 True
INFO  13:50:02,460 - #27 ;
INFO  13:50:02,460 - #5 print
INFO  13:50:02,460 - #31 (
INFO  13:50:02,460 - #47 c
INFO  13:50:02,460 - #32 )
INFO  13:50:02,460 - #27 ;
INFO  13:50:02,460 - #5 print
INFO  13:50:02,460 - #31 (
INFO  13:50:02,460 - #47 niz
INFO  13:50:02,460 - #32 )
INFO  13:50:02,460 - #27 ;
INFO  13:50:02,460 - #36 }
INFO  13:50:02,460 - #36 }
INFO  13:50:02,462 - ================= PARSIRANO STABLO =================
INFO  13:50:02,465 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  Declarations(
    NoDeclarations(
    ) [NoDeclarations]
    ConstantDeclaration(
      ConDecl(
        Type(
         char
        ) [Type]
        ConstDef(
         c
          CharConst(
           c
          ) [CharConst]
        ) [ConstDef]
        NoConstantDeclaration(
        ) [NoConstantDeclaration]
      ) [ConDecl]
    ) [ConstantDeclaration]
  ) [Declarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      ListOfVarDecl(
        ListOfVarDecl(
          NoVarDeclarations(
          ) [NoVarDeclarations]
          VarDeclaration(
            Type(
             int
            ) [Type]
            OneVarDeclaration(
              AddVarDecl1(
               bodovi
                NoBrackets(
                ) [NoBrackets]
              ) [AddVarDecl1]
            ) [OneVarDeclaration]
          ) [VarDeclaration]
        ) [ListOfVarDecl]
        VarDeclaration(
          Type(
           char
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             niz
              Brackets(
              ) [Brackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [ListOfVarDecl]
      Statements(
        Statements(
          Statements(
            Statements(
              Statements(
                Statements(
                  NoStatements(
                  ) [NoStatements]
                  DesignatorStat(
                    DesignatorExpr(
                      Designator(
                        WithoutNamespace(
                         niz
                        ) [WithoutNamespace]
                        NoArrayExpression(
                        ) [NoArrayExpression]
                      ) [Designator]
                      AssignOperation(
                      ) [AssignOperation]
                      PositiveStartExpr(
                        SingleTerm(
                          NewType(
                            Type(
                             bool
                            ) [Type]
                            PositiveStartExpr(
                              SingleTerm(
                                NumberConst(
                                 3
                                ) [NumberConst]
                              ) [SingleTerm]
                            ) [PositiveStartExpr]
                          ) [NewType]
                        ) [SingleTerm]
                      ) [PositiveStartExpr]
                    ) [DesignatorExpr]
                  ) [DesignatorStat]
                ) [Statements]
                DesignatorStat(
                  DesignatorExpr(
                    Designator(
                      WithoutNamespace(
                       niz
                      ) [WithoutNamespace]
                      AddArrayExpression(
                        BraExpr(
                          PositiveStartExpr(
                            SingleTerm(
                              NumberConst(
                               0
                              ) [NumberConst]
                            ) [SingleTerm]
                          ) [PositiveStartExpr]
                        ) [BraExpr]
                      ) [AddArrayExpression]
                    ) [Designator]
                    AssignOperation(
                    ) [AssignOperation]
                    PositiveStartExpr(
                      SingleTerm(
                        DesignatorFact(
                          Designator(
                            WithoutNamespace(
                             True
                            ) [WithoutNamespace]
                            NoArrayExpression(
                            ) [NoArrayExpression]
                          ) [Designator]
                        ) [DesignatorFact]
                      ) [SingleTerm]
                    ) [PositiveStartExpr]
                  ) [DesignatorExpr]
                ) [DesignatorStat]
              ) [Statements]
              DesignatorStat(
                DesignatorExpr(
                  Designator(
                    WithoutNamespace(
                     niz
                    ) [WithoutNamespace]
                    AddArrayExpression(
                      BraExpr(
                        PositiveStartExpr(
                          SingleTerm(
                            NumberConst(
                             1
                            ) [NumberConst]
                          ) [SingleTerm]
                        ) [PositiveStartExpr]
                      ) [BraExpr]
                    ) [AddArrayExpression]
                  ) [Designator]
                  AssignOperation(
                  ) [AssignOperation]
                  PositiveStartExpr(
                    SingleTerm(
                      DesignatorFact(
                        Designator(
                          WithoutNamespace(
                           False
                          ) [WithoutNamespace]
                          NoArrayExpression(
                          ) [NoArrayExpression]
                        ) [Designator]
                      ) [DesignatorFact]
                    ) [SingleTerm]
                  ) [PositiveStartExpr]
                ) [DesignatorExpr]
              ) [DesignatorStat]
            ) [Statements]
            DesignatorStat(
              DesignatorExpr(
                Designator(
                  WithoutNamespace(
                   niz
                  ) [WithoutNamespace]
                  AddArrayExpression(
                    BraExpr(
                      PositiveStartExpr(
                        SingleTerm(
                          NumberConst(
                           2
                          ) [NumberConst]
                        ) [SingleTerm]
                      ) [PositiveStartExpr]
                    ) [BraExpr]
                  ) [AddArrayExpression]
                ) [Designator]
                AssignOperation(
                ) [AssignOperation]
                PositiveStartExpr(
                  SingleTerm(
                    DesignatorFact(
                      Designator(
                        WithoutNamespace(
                         True
                        ) [WithoutNamespace]
                        NoArrayExpression(
                        ) [NoArrayExpression]
                      ) [Designator]
                    ) [DesignatorFact]
                  ) [SingleTerm]
                ) [PositiveStartExpr]
              ) [DesignatorExpr]
            ) [DesignatorStat]
          ) [Statements]
          PrintExpr(
            PositiveStartExpr(
              SingleTerm(
                DesignatorFact(
                  Designator(
                    WithoutNamespace(
                     c
                    ) [WithoutNamespace]
                    NoArrayExpression(
                    ) [NoArrayExpression]
                  ) [Designator]
                ) [DesignatorFact]
              ) [SingleTerm]
            ) [PositiveStartExpr]
            NoNumConstOpt(
            ) [NoNumConstOpt]
          ) [PrintExpr]
        ) [Statements]
        PrintExpr(
          PositiveStartExpr(
            SingleTerm(
              DesignatorFact(
                Designator(
                  WithoutNamespace(
                   niz
                  ) [WithoutNamespace]
                  NoArrayExpression(
                  ) [NoArrayExpression]
                ) [Designator]
              ) [DesignatorFact]
            ) [SingleTerm]
          ) [PositiveStartExpr]
          NoNumConstOpt(
          ) [NoNumConstOpt]
        ) [PrintExpr]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  13:50:02,465 - ================ Semanticka obrada ===================
INFO  13:50:02,469 - Const c defined on line 3
INFO  13:50:02,469 - Symbol niz found on line 9
ERROR 13:50:02,469 - Error: Types not matching  on line 9
INFO  13:50:02,469 - Symbol niz found on line 10
ERROR 13:50:02,469 - Symbol True does not exist on line 10
ERROR 13:50:02,469 - Identifier does not exist  on line 10
INFO  13:50:24,894 - Compiling source file: C:\Users\elena\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  13:50:24,895 - ================= LEKSICKA ANALIZA =================
INFO  13:50:24,920 - #2 program
INFO  13:50:24,920 - #47 test301
INFO  13:50:24,920 - #3 const
INFO  13:50:24,922 - #47 char
INFO  13:50:24,922 - #47 c
INFO  13:50:24,922 - #24 =
INFO  13:50:24,922 - #48 c
INFO  13:50:24,922 - #27 ;
INFO  13:50:24,924 - #35 {
INFO  13:50:24,924 - #8 void
INFO  13:50:24,924 - #47 main
INFO  13:50:24,924 - #31 (
INFO  13:50:24,924 - #32 )
INFO  13:50:24,924 - #47 int
INFO  13:50:24,925 - #47 bodovi
INFO  13:50:24,925 - #27 ;
INFO  13:50:24,925 - #47 char
INFO  13:50:24,925 - #47 niz
INFO  13:50:24,926 - #33 [
INFO  13:50:24,926 - #34 ]
INFO  13:50:24,926 - #27 ;
INFO  13:50:24,926 - #35 {
INFO  13:50:24,926 - #47 niz
INFO  13:50:24,926 - #24 =
INFO  13:50:24,927 - #4 new
INFO  13:50:24,927 - #47 bool
INFO  13:50:24,927 - #33 [
INFO  13:50:24,927 - #46 3
INFO  13:50:24,927 - #34 ]
INFO  13:50:24,927 - #27 ;
INFO  13:50:24,928 - #47 niz
INFO  13:50:24,928 - #33 [
INFO  13:50:24,928 - #46 0
INFO  13:50:24,928 - #34 ]
INFO  13:50:24,928 - #24 =
INFO  13:50:24,928 - #49 true
INFO  13:50:24,928 - #27 ;
INFO  13:50:24,928 - #47 niz
INFO  13:50:24,928 - #33 [
INFO  13:50:24,928 - #46 1
INFO  13:50:24,930 - #34 ]
INFO  13:50:24,930 - #24 =
INFO  13:50:24,930 - #49 false
INFO  13:50:24,930 - #27 ;
INFO  13:50:24,930 - #47 niz
INFO  13:50:24,930 - #33 [
INFO  13:50:24,930 - #46 2
INFO  13:50:24,930 - #34 ]
INFO  13:50:24,930 - #24 =
INFO  13:50:24,930 - #49 true
INFO  13:50:24,930 - #27 ;
INFO  13:50:24,930 - #5 print
INFO  13:50:24,930 - #31 (
INFO  13:50:24,930 - #47 c
INFO  13:50:24,930 - #32 )
INFO  13:50:24,931 - #27 ;
INFO  13:50:24,931 - #5 print
INFO  13:50:24,931 - #31 (
INFO  13:50:24,931 - #47 niz
INFO  13:50:24,931 - #32 )
INFO  13:50:24,931 - #27 ;
INFO  13:50:24,931 - #36 }
INFO  13:50:24,931 - #36 }
INFO  13:50:24,932 - ================= PARSIRANO STABLO =================
INFO  13:50:24,936 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  Declarations(
    NoDeclarations(
    ) [NoDeclarations]
    ConstantDeclaration(
      ConDecl(
        Type(
         char
        ) [Type]
        ConstDef(
         c
          CharConst(
           c
          ) [CharConst]
        ) [ConstDef]
        NoConstantDeclaration(
        ) [NoConstantDeclaration]
      ) [ConDecl]
    ) [ConstantDeclaration]
  ) [Declarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      ListOfVarDecl(
        ListOfVarDecl(
          NoVarDeclarations(
          ) [NoVarDeclarations]
          VarDeclaration(
            Type(
             int
            ) [Type]
            OneVarDeclaration(
              AddVarDecl1(
               bodovi
                NoBrackets(
                ) [NoBrackets]
              ) [AddVarDecl1]
            ) [OneVarDeclaration]
          ) [VarDeclaration]
        ) [ListOfVarDecl]
        VarDeclaration(
          Type(
           char
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             niz
              Brackets(
              ) [Brackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [ListOfVarDecl]
      Statements(
        Statements(
          Statements(
            Statements(
              Statements(
                Statements(
                  NoStatements(
                  ) [NoStatements]
                  DesignatorStat(
                    DesignatorExpr(
                      Designator(
                        WithoutNamespace(
                         niz
                        ) [WithoutNamespace]
                        NoArrayExpression(
                        ) [NoArrayExpression]
                      ) [Designator]
                      AssignOperation(
                      ) [AssignOperation]
                      PositiveStartExpr(
                        SingleTerm(
                          NewType(
                            Type(
                             bool
                            ) [Type]
                            PositiveStartExpr(
                              SingleTerm(
                                NumberConst(
                                 3
                                ) [NumberConst]
                              ) [SingleTerm]
                            ) [PositiveStartExpr]
                          ) [NewType]
                        ) [SingleTerm]
                      ) [PositiveStartExpr]
                    ) [DesignatorExpr]
                  ) [DesignatorStat]
                ) [Statements]
                DesignatorStat(
                  DesignatorExpr(
                    Designator(
                      WithoutNamespace(
                       niz
                      ) [WithoutNamespace]
                      AddArrayExpression(
                        BraExpr(
                          PositiveStartExpr(
                            SingleTerm(
                              NumberConst(
                               0
                              ) [NumberConst]
                            ) [SingleTerm]
                          ) [PositiveStartExpr]
                        ) [BraExpr]
                      ) [AddArrayExpression]
                    ) [Designator]
                    AssignOperation(
                    ) [AssignOperation]
                    PositiveStartExpr(
                      SingleTerm(
                        BooleanConst(
                         true
                        ) [BooleanConst]
                      ) [SingleTerm]
                    ) [PositiveStartExpr]
                  ) [DesignatorExpr]
                ) [DesignatorStat]
              ) [Statements]
              DesignatorStat(
                DesignatorExpr(
                  Designator(
                    WithoutNamespace(
                     niz
                    ) [WithoutNamespace]
                    AddArrayExpression(
                      BraExpr(
                        PositiveStartExpr(
                          SingleTerm(
                            NumberConst(
                             1
                            ) [NumberConst]
                          ) [SingleTerm]
                        ) [PositiveStartExpr]
                      ) [BraExpr]
                    ) [AddArrayExpression]
                  ) [Designator]
                  AssignOperation(
                  ) [AssignOperation]
                  PositiveStartExpr(
                    SingleTerm(
                      BooleanConst(
                       false
                      ) [BooleanConst]
                    ) [SingleTerm]
                  ) [PositiveStartExpr]
                ) [DesignatorExpr]
              ) [DesignatorStat]
            ) [Statements]
            DesignatorStat(
              DesignatorExpr(
                Designator(
                  WithoutNamespace(
                   niz
                  ) [WithoutNamespace]
                  AddArrayExpression(
                    BraExpr(
                      PositiveStartExpr(
                        SingleTerm(
                          NumberConst(
                           2
                          ) [NumberConst]
                        ) [SingleTerm]
                      ) [PositiveStartExpr]
                    ) [BraExpr]
                  ) [AddArrayExpression]
                ) [Designator]
                AssignOperation(
                ) [AssignOperation]
                PositiveStartExpr(
                  SingleTerm(
                    BooleanConst(
                     true
                    ) [BooleanConst]
                  ) [SingleTerm]
                ) [PositiveStartExpr]
              ) [DesignatorExpr]
            ) [DesignatorStat]
          ) [Statements]
          PrintExpr(
            PositiveStartExpr(
              SingleTerm(
                DesignatorFact(
                  Designator(
                    WithoutNamespace(
                     c
                    ) [WithoutNamespace]
                    NoArrayExpression(
                    ) [NoArrayExpression]
                  ) [Designator]
                ) [DesignatorFact]
              ) [SingleTerm]
            ) [PositiveStartExpr]
            NoNumConstOpt(
            ) [NoNumConstOpt]
          ) [PrintExpr]
        ) [Statements]
        PrintExpr(
          PositiveStartExpr(
            SingleTerm(
              DesignatorFact(
                Designator(
                  WithoutNamespace(
                   niz
                  ) [WithoutNamespace]
                  NoArrayExpression(
                  ) [NoArrayExpression]
                ) [Designator]
              ) [DesignatorFact]
            ) [SingleTerm]
          ) [PositiveStartExpr]
          NoNumConstOpt(
          ) [NoNumConstOpt]
        ) [PrintExpr]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  13:50:24,937 - ================ Semanticka obrada ===================
INFO  13:50:24,939 - Const c defined on line 3
INFO  13:50:24,939 - Symbol niz found on line 9
ERROR 13:50:24,939 - Error: Types not matching  on line 9
INFO  13:50:24,939 - Symbol niz found on line 10
ERROR 13:50:24,939 - Error: Types not matching  on line 10
INFO  13:50:24,939 - Symbol niz found on line 11
ERROR 13:50:24,939 - Error: Types not matching  on line 11
INFO  13:50:24,939 - Symbol niz found on line 12
ERROR 13:50:24,939 - Error: Types not matching  on line 12
INFO  13:50:24,939 - Symbol c found on line 13
INFO  13:50:24,939 - Symbol niz found on line 14
INFO  13:50:24,939 - main() method found on line 1
ERROR 13:50:24,939 - Parser FAIL!
INFO  13:51:04,042 - Compiling source file: C:\Users\elena\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  13:51:04,043 - ================= LEKSICKA ANALIZA =================
INFO  13:51:04,066 - #2 program
INFO  13:51:04,066 - #47 test301
INFO  13:51:04,066 - #3 const
INFO  13:51:04,067 - #47 char
INFO  13:51:04,067 - #47 c
INFO  13:51:04,067 - #24 =
INFO  13:51:04,067 - #48 c
INFO  13:51:04,067 - #27 ;
INFO  13:51:04,068 - #35 {
INFO  13:51:04,068 - #8 void
INFO  13:51:04,068 - #47 main
INFO  13:51:04,069 - #31 (
INFO  13:51:04,069 - #32 )
INFO  13:51:04,070 - #47 int
INFO  13:51:04,070 - #47 bodovi
INFO  13:51:04,070 - #27 ;
INFO  13:51:04,071 - #47 bool
INFO  13:51:04,071 - #47 niz
INFO  13:51:04,071 - #33 [
INFO  13:51:04,071 - #34 ]
INFO  13:51:04,071 - #27 ;
INFO  13:51:04,072 - #35 {
INFO  13:51:04,072 - #47 niz
INFO  13:51:04,072 - #24 =
INFO  13:51:04,073 - #4 new
INFO  13:51:04,075 - #47 bool
INFO  13:51:04,075 - #33 [
INFO  13:51:04,075 - #46 3
INFO  13:51:04,075 - #34 ]
INFO  13:51:04,075 - #27 ;
INFO  13:51:04,075 - #47 niz
INFO  13:51:04,076 - #33 [
INFO  13:51:04,076 - #46 0
INFO  13:51:04,076 - #34 ]
INFO  13:51:04,076 - #24 =
INFO  13:51:04,076 - #49 true
INFO  13:51:04,076 - #27 ;
INFO  13:51:04,077 - #47 niz
INFO  13:51:04,077 - #33 [
INFO  13:51:04,077 - #46 1
INFO  13:51:04,077 - #34 ]
INFO  13:51:04,077 - #24 =
INFO  13:51:04,077 - #49 false
INFO  13:51:04,077 - #27 ;
INFO  13:51:04,077 - #47 niz
INFO  13:51:04,077 - #33 [
INFO  13:51:04,077 - #46 2
INFO  13:51:04,077 - #34 ]
INFO  13:51:04,077 - #24 =
INFO  13:51:04,077 - #49 true
INFO  13:51:04,077 - #27 ;
INFO  13:51:04,077 - #5 print
INFO  13:51:04,077 - #31 (
INFO  13:51:04,077 - #47 c
INFO  13:51:04,077 - #32 )
INFO  13:51:04,078 - #27 ;
INFO  13:51:04,078 - #5 print
INFO  13:51:04,078 - #31 (
INFO  13:51:04,078 - #47 niz
INFO  13:51:04,078 - #32 )
INFO  13:51:04,078 - #27 ;
INFO  13:51:04,078 - #36 }
INFO  13:51:04,078 - #36 }
INFO  13:51:04,079 - ================= PARSIRANO STABLO =================
INFO  13:51:04,081 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  Declarations(
    NoDeclarations(
    ) [NoDeclarations]
    ConstantDeclaration(
      ConDecl(
        Type(
         char
        ) [Type]
        ConstDef(
         c
          CharConst(
           c
          ) [CharConst]
        ) [ConstDef]
        NoConstantDeclaration(
        ) [NoConstantDeclaration]
      ) [ConDecl]
    ) [ConstantDeclaration]
  ) [Declarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      ListOfVarDecl(
        ListOfVarDecl(
          NoVarDeclarations(
          ) [NoVarDeclarations]
          VarDeclaration(
            Type(
             int
            ) [Type]
            OneVarDeclaration(
              AddVarDecl1(
               bodovi
                NoBrackets(
                ) [NoBrackets]
              ) [AddVarDecl1]
            ) [OneVarDeclaration]
          ) [VarDeclaration]
        ) [ListOfVarDecl]
        VarDeclaration(
          Type(
           bool
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             niz
              Brackets(
              ) [Brackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [ListOfVarDecl]
      Statements(
        Statements(
          Statements(
            Statements(
              Statements(
                Statements(
                  NoStatements(
                  ) [NoStatements]
                  DesignatorStat(
                    DesignatorExpr(
                      Designator(
                        WithoutNamespace(
                         niz
                        ) [WithoutNamespace]
                        NoArrayExpression(
                        ) [NoArrayExpression]
                      ) [Designator]
                      AssignOperation(
                      ) [AssignOperation]
                      PositiveStartExpr(
                        SingleTerm(
                          NewType(
                            Type(
                             bool
                            ) [Type]
                            PositiveStartExpr(
                              SingleTerm(
                                NumberConst(
                                 3
                                ) [NumberConst]
                              ) [SingleTerm]
                            ) [PositiveStartExpr]
                          ) [NewType]
                        ) [SingleTerm]
                      ) [PositiveStartExpr]
                    ) [DesignatorExpr]
                  ) [DesignatorStat]
                ) [Statements]
                DesignatorStat(
                  DesignatorExpr(
                    Designator(
                      WithoutNamespace(
                       niz
                      ) [WithoutNamespace]
                      AddArrayExpression(
                        BraExpr(
                          PositiveStartExpr(
                            SingleTerm(
                              NumberConst(
                               0
                              ) [NumberConst]
                            ) [SingleTerm]
                          ) [PositiveStartExpr]
                        ) [BraExpr]
                      ) [AddArrayExpression]
                    ) [Designator]
                    AssignOperation(
                    ) [AssignOperation]
                    PositiveStartExpr(
                      SingleTerm(
                        BooleanConst(
                         true
                        ) [BooleanConst]
                      ) [SingleTerm]
                    ) [PositiveStartExpr]
                  ) [DesignatorExpr]
                ) [DesignatorStat]
              ) [Statements]
              DesignatorStat(
                DesignatorExpr(
                  Designator(
                    WithoutNamespace(
                     niz
                    ) [WithoutNamespace]
                    AddArrayExpression(
                      BraExpr(
                        PositiveStartExpr(
                          SingleTerm(
                            NumberConst(
                             1
                            ) [NumberConst]
                          ) [SingleTerm]
                        ) [PositiveStartExpr]
                      ) [BraExpr]
                    ) [AddArrayExpression]
                  ) [Designator]
                  AssignOperation(
                  ) [AssignOperation]
                  PositiveStartExpr(
                    SingleTerm(
                      BooleanConst(
                       false
                      ) [BooleanConst]
                    ) [SingleTerm]
                  ) [PositiveStartExpr]
                ) [DesignatorExpr]
              ) [DesignatorStat]
            ) [Statements]
            DesignatorStat(
              DesignatorExpr(
                Designator(
                  WithoutNamespace(
                   niz
                  ) [WithoutNamespace]
                  AddArrayExpression(
                    BraExpr(
                      PositiveStartExpr(
                        SingleTerm(
                          NumberConst(
                           2
                          ) [NumberConst]
                        ) [SingleTerm]
                      ) [PositiveStartExpr]
                    ) [BraExpr]
                  ) [AddArrayExpression]
                ) [Designator]
                AssignOperation(
                ) [AssignOperation]
                PositiveStartExpr(
                  SingleTerm(
                    BooleanConst(
                     true
                    ) [BooleanConst]
                  ) [SingleTerm]
                ) [PositiveStartExpr]
              ) [DesignatorExpr]
            ) [DesignatorStat]
          ) [Statements]
          PrintExpr(
            PositiveStartExpr(
              SingleTerm(
                DesignatorFact(
                  Designator(
                    WithoutNamespace(
                     c
                    ) [WithoutNamespace]
                    NoArrayExpression(
                    ) [NoArrayExpression]
                  ) [Designator]
                ) [DesignatorFact]
              ) [SingleTerm]
            ) [PositiveStartExpr]
            NoNumConstOpt(
            ) [NoNumConstOpt]
          ) [PrintExpr]
        ) [Statements]
        PrintExpr(
          PositiveStartExpr(
            SingleTerm(
              DesignatorFact(
                Designator(
                  WithoutNamespace(
                   niz
                  ) [WithoutNamespace]
                  NoArrayExpression(
                  ) [NoArrayExpression]
                ) [Designator]
              ) [DesignatorFact]
            ) [SingleTerm]
          ) [PositiveStartExpr]
          NoNumConstOpt(
          ) [NoNumConstOpt]
        ) [PrintExpr]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  13:51:04,082 - ================ Semanticka obrada ===================
INFO  13:51:04,084 - Const c defined on line 3
INFO  13:51:04,084 - Symbol niz found on line 9
INFO  13:51:04,084 - Symbol niz found on line 10
INFO  13:51:04,085 - Symbol niz found on line 11
INFO  13:51:04,085 - Symbol niz found on line 12
INFO  13:51:04,085 - Symbol c found on line 13
INFO  13:51:04,085 - Symbol niz found on line 14
INFO  13:51:04,085 - main() method found on line 1
INFO  13:51:04,086 - Parser SUCCESS!
INFO  13:52:32,621 - Compiling source file: C:\Users\elena\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  13:52:32,623 - ================= LEKSICKA ANALIZA =================
INFO  13:52:32,645 - #2 program
INFO  13:52:32,645 - #47 test301
INFO  13:52:32,645 - #3 const
INFO  13:52:32,645 - #47 char
INFO  13:52:32,645 - #47 c
INFO  13:52:32,646 - #24 =
INFO  13:52:32,646 - #48 c
INFO  13:52:32,646 - #27 ;
INFO  13:52:32,647 - #35 {
INFO  13:52:32,647 - #8 void
INFO  13:52:32,647 - #47 main
INFO  13:52:32,647 - #31 (
INFO  13:52:32,648 - #32 )
INFO  13:52:32,648 - #47 int
INFO  13:52:32,648 - #47 bodovi
INFO  13:52:32,648 - #27 ;
INFO  13:52:32,648 - #47 char
INFO  13:52:32,649 - #47 c1
INFO  13:52:32,649 - #27 ;
INFO  13:52:32,649 - #47 bool
INFO  13:52:32,649 - #47 niz
INFO  13:52:32,649 - #33 [
INFO  13:52:32,649 - #34 ]
INFO  13:52:32,649 - #27 ;
INFO  13:52:32,649 - #35 {
INFO  13:52:32,649 - #47 c1
INFO  13:52:32,650 - #24 =
INFO  13:52:32,650 - #48 c
INFO  13:52:32,651 - #27 ;
INFO  13:52:32,651 - #47 niz
INFO  13:52:32,651 - #24 =
INFO  13:52:32,651 - #4 new
INFO  13:52:32,651 - #47 bool
INFO  13:52:32,651 - #33 [
INFO  13:52:32,651 - #46 3
INFO  13:52:32,651 - #34 ]
INFO  13:52:32,652 - #27 ;
INFO  13:52:32,652 - #47 niz
INFO  13:52:32,652 - #33 [
INFO  13:52:32,652 - #46 0
INFO  13:52:32,652 - #34 ]
INFO  13:52:32,652 - #24 =
INFO  13:52:32,654 - #49 true
INFO  13:52:32,654 - #27 ;
INFO  13:52:32,654 - #47 niz
INFO  13:52:32,654 - #33 [
INFO  13:52:32,654 - #46 1
INFO  13:52:32,655 - #34 ]
INFO  13:52:32,655 - #24 =
INFO  13:52:32,655 - #49 false
INFO  13:52:32,655 - #27 ;
INFO  13:52:32,655 - #47 niz
INFO  13:52:32,655 - #33 [
INFO  13:52:32,655 - #46 2
INFO  13:52:32,655 - #34 ]
INFO  13:52:32,655 - #24 =
INFO  13:52:32,655 - #49 true
INFO  13:52:32,655 - #27 ;
INFO  13:52:32,655 - #5 print
INFO  13:52:32,655 - #31 (
INFO  13:52:32,655 - #47 c1
INFO  13:52:32,655 - #32 )
INFO  13:52:32,656 - #27 ;
INFO  13:52:32,656 - #5 print
INFO  13:52:32,656 - #31 (
INFO  13:52:32,656 - #47 niz
INFO  13:52:32,656 - #32 )
INFO  13:52:32,656 - #27 ;
INFO  13:52:32,656 - #36 }
INFO  13:52:32,656 - #36 }
INFO  13:52:32,657 - ================= PARSIRANO STABLO =================
INFO  13:52:32,659 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  Declarations(
    NoDeclarations(
    ) [NoDeclarations]
    ConstantDeclaration(
      ConDecl(
        Type(
         char
        ) [Type]
        ConstDef(
         c
          CharConst(
           c
          ) [CharConst]
        ) [ConstDef]
        NoConstantDeclaration(
        ) [NoConstantDeclaration]
      ) [ConDecl]
    ) [ConstantDeclaration]
  ) [Declarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      ListOfVarDecl(
        ListOfVarDecl(
          ListOfVarDecl(
            NoVarDeclarations(
            ) [NoVarDeclarations]
            VarDeclaration(
              Type(
               int
              ) [Type]
              OneVarDeclaration(
                AddVarDecl1(
                 bodovi
                  NoBrackets(
                  ) [NoBrackets]
                ) [AddVarDecl1]
              ) [OneVarDeclaration]
            ) [VarDeclaration]
          ) [ListOfVarDecl]
          VarDeclaration(
            Type(
             char
            ) [Type]
            OneVarDeclaration(
              AddVarDecl1(
               c1
                NoBrackets(
                ) [NoBrackets]
              ) [AddVarDecl1]
            ) [OneVarDeclaration]
          ) [VarDeclaration]
        ) [ListOfVarDecl]
        VarDeclaration(
          Type(
           bool
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             niz
              Brackets(
              ) [Brackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [ListOfVarDecl]
      Statements(
        Statements(
          Statements(
            Statements(
              Statements(
                Statements(
                  Statements(
                    NoStatements(
                    ) [NoStatements]
                    DesignatorStat(
                      DesignatorExpr(
                        Designator(
                          WithoutNamespace(
                           c1
                          ) [WithoutNamespace]
                          NoArrayExpression(
                          ) [NoArrayExpression]
                        ) [Designator]
                        AssignOperation(
                        ) [AssignOperation]
                        PositiveStartExpr(
                          SingleTerm(
                            CharacterConst(
                             c
                            ) [CharacterConst]
                          ) [SingleTerm]
                        ) [PositiveStartExpr]
                      ) [DesignatorExpr]
                    ) [DesignatorStat]
                  ) [Statements]
                  DesignatorStat(
                    DesignatorExpr(
                      Designator(
                        WithoutNamespace(
                         niz
                        ) [WithoutNamespace]
                        NoArrayExpression(
                        ) [NoArrayExpression]
                      ) [Designator]
                      AssignOperation(
                      ) [AssignOperation]
                      PositiveStartExpr(
                        SingleTerm(
                          NewType(
                            Type(
                             bool
                            ) [Type]
                            PositiveStartExpr(
                              SingleTerm(
                                NumberConst(
                                 3
                                ) [NumberConst]
                              ) [SingleTerm]
                            ) [PositiveStartExpr]
                          ) [NewType]
                        ) [SingleTerm]
                      ) [PositiveStartExpr]
                    ) [DesignatorExpr]
                  ) [DesignatorStat]
                ) [Statements]
                DesignatorStat(
                  DesignatorExpr(
                    Designator(
                      WithoutNamespace(
                       niz
                      ) [WithoutNamespace]
                      AddArrayExpression(
                        BraExpr(
                          PositiveStartExpr(
                            SingleTerm(
                              NumberConst(
                               0
                              ) [NumberConst]
                            ) [SingleTerm]
                          ) [PositiveStartExpr]
                        ) [BraExpr]
                      ) [AddArrayExpression]
                    ) [Designator]
                    AssignOperation(
                    ) [AssignOperation]
                    PositiveStartExpr(
                      SingleTerm(
                        BooleanConst(
                         true
                        ) [BooleanConst]
                      ) [SingleTerm]
                    ) [PositiveStartExpr]
                  ) [DesignatorExpr]
                ) [DesignatorStat]
              ) [Statements]
              DesignatorStat(
                DesignatorExpr(
                  Designator(
                    WithoutNamespace(
                     niz
                    ) [WithoutNamespace]
                    AddArrayExpression(
                      BraExpr(
                        PositiveStartExpr(
                          SingleTerm(
                            NumberConst(
                             1
                            ) [NumberConst]
                          ) [SingleTerm]
                        ) [PositiveStartExpr]
                      ) [BraExpr]
                    ) [AddArrayExpression]
                  ) [Designator]
                  AssignOperation(
                  ) [AssignOperation]
                  PositiveStartExpr(
                    SingleTerm(
                      BooleanConst(
                       false
                      ) [BooleanConst]
                    ) [SingleTerm]
                  ) [PositiveStartExpr]
                ) [DesignatorExpr]
              ) [DesignatorStat]
            ) [Statements]
            DesignatorStat(
              DesignatorExpr(
                Designator(
                  WithoutNamespace(
                   niz
                  ) [WithoutNamespace]
                  AddArrayExpression(
                    BraExpr(
                      PositiveStartExpr(
                        SingleTerm(
                          NumberConst(
                           2
                          ) [NumberConst]
                        ) [SingleTerm]
                      ) [PositiveStartExpr]
                    ) [BraExpr]
                  ) [AddArrayExpression]
                ) [Designator]
                AssignOperation(
                ) [AssignOperation]
                PositiveStartExpr(
                  SingleTerm(
                    BooleanConst(
                     true
                    ) [BooleanConst]
                  ) [SingleTerm]
                ) [PositiveStartExpr]
              ) [DesignatorExpr]
            ) [DesignatorStat]
          ) [Statements]
          PrintExpr(
            PositiveStartExpr(
              SingleTerm(
                DesignatorFact(
                  Designator(
                    WithoutNamespace(
                     c1
                    ) [WithoutNamespace]
                    NoArrayExpression(
                    ) [NoArrayExpression]
                  ) [Designator]
                ) [DesignatorFact]
              ) [SingleTerm]
            ) [PositiveStartExpr]
            NoNumConstOpt(
            ) [NoNumConstOpt]
          ) [PrintExpr]
        ) [Statements]
        PrintExpr(
          PositiveStartExpr(
            SingleTerm(
              DesignatorFact(
                Designator(
                  WithoutNamespace(
                   niz
                  ) [WithoutNamespace]
                  NoArrayExpression(
                  ) [NoArrayExpression]
                ) [Designator]
              ) [DesignatorFact]
            ) [SingleTerm]
          ) [PositiveStartExpr]
          NoNumConstOpt(
          ) [NoNumConstOpt]
        ) [PrintExpr]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  13:52:32,659 - ================ Semanticka obrada ===================
INFO  13:52:32,662 - Const c defined on line 3
INFO  13:52:32,662 - Symbol c1 found on line 10
INFO  13:52:32,662 - Symbol niz found on line 11
INFO  13:52:32,662 - Symbol niz found on line 12
INFO  13:52:32,662 - Symbol niz found on line 13
INFO  13:52:32,662 - Symbol niz found on line 14
INFO  13:52:32,662 - Symbol c1 found on line 15
INFO  13:52:32,662 - Symbol niz found on line 16
INFO  13:52:32,662 - main() method found on line 1
INFO  13:52:32,664 - Parser SUCCESS!
INFO  13:53:02,932 - Compiling source file: C:\Users\elena\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  13:53:02,933 - ================= LEKSICKA ANALIZA =================
INFO  13:53:02,962 - #2 program
INFO  13:53:02,962 - #47 test301
INFO  13:53:02,962 - #3 const
INFO  13:53:02,963 - #47 char
INFO  13:53:02,963 - #47 c
INFO  13:53:02,963 - #24 =
INFO  13:53:02,963 - #48 c
INFO  13:53:02,963 - #27 ;
INFO  13:53:02,964 - #35 {
INFO  13:53:02,964 - #8 void
INFO  13:53:02,964 - #47 main
INFO  13:53:02,965 - #31 (
INFO  13:53:02,965 - #32 )
INFO  13:53:02,965 - #47 int
INFO  13:53:02,966 - #47 bodovi
INFO  13:53:02,966 - #27 ;
INFO  13:53:02,966 - #47 char
INFO  13:53:02,966 - #47 c1
INFO  13:53:02,967 - #27 ;
INFO  13:53:02,967 - #47 bool
INFO  13:53:02,967 - #47 niz
INFO  13:53:02,967 - #33 [
INFO  13:53:02,967 - #34 ]
INFO  13:53:02,967 - #27 ;
INFO  13:53:02,967 - #35 {
INFO  13:53:02,967 - #47 c1
INFO  13:53:02,968 - #24 =
INFO  13:53:02,968 - #48 c
INFO  13:53:02,970 - #27 ;
INFO  13:53:02,970 - #47 niz
INFO  13:53:02,970 - #24 =
INFO  13:53:02,970 - #4 new
INFO  13:53:02,970 - #47 bool
INFO  13:53:02,970 - #33 [
INFO  13:53:02,971 - #46 3
INFO  13:53:02,971 - #34 ]
INFO  13:53:02,971 - #27 ;
INFO  13:53:02,971 - #47 niz
INFO  13:53:02,971 - #33 [
INFO  13:53:02,971 - #46 0
INFO  13:53:02,971 - #34 ]
INFO  13:53:02,971 - #24 =
INFO  13:53:02,972 - #49 true
INFO  13:53:02,972 - #27 ;
INFO  13:53:02,972 - #47 niz
INFO  13:53:02,972 - #33 [
INFO  13:53:02,972 - #46 1
INFO  13:53:02,972 - #34 ]
INFO  13:53:02,972 - #24 =
INFO  13:53:02,972 - #49 false
INFO  13:53:02,972 - #27 ;
INFO  13:53:02,972 - #47 niz
INFO  13:53:02,972 - #33 [
INFO  13:53:02,972 - #46 2
INFO  13:53:02,972 - #34 ]
INFO  13:53:02,972 - #24 =
INFO  13:53:02,972 - #49 true
INFO  13:53:02,973 - #27 ;
INFO  13:53:02,973 - #5 print
INFO  13:53:02,973 - #31 (
INFO  13:53:02,973 - #47 c1
INFO  13:53:02,973 - #32 )
INFO  13:53:02,973 - #27 ;
INFO  13:53:02,973 - #5 print
INFO  13:53:02,973 - #31 (
INFO  13:53:02,975 - #47 c
INFO  13:53:02,975 - #32 )
INFO  13:53:02,975 - #27 ;
INFO  13:53:02,975 - #5 print
INFO  13:53:02,975 - #31 (
INFO  13:53:02,975 - #47 niz
INFO  13:53:02,975 - #32 )
INFO  13:53:02,975 - #27 ;
INFO  13:53:02,975 - #36 }
INFO  13:53:02,975 - #36 }
INFO  13:53:02,976 - ================= PARSIRANO STABLO =================
INFO  13:53:02,981 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  Declarations(
    NoDeclarations(
    ) [NoDeclarations]
    ConstantDeclaration(
      ConDecl(
        Type(
         char
        ) [Type]
        ConstDef(
         c
          CharConst(
           c
          ) [CharConst]
        ) [ConstDef]
        NoConstantDeclaration(
        ) [NoConstantDeclaration]
      ) [ConDecl]
    ) [ConstantDeclaration]
  ) [Declarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      ListOfVarDecl(
        ListOfVarDecl(
          ListOfVarDecl(
            NoVarDeclarations(
            ) [NoVarDeclarations]
            VarDeclaration(
              Type(
               int
              ) [Type]
              OneVarDeclaration(
                AddVarDecl1(
                 bodovi
                  NoBrackets(
                  ) [NoBrackets]
                ) [AddVarDecl1]
              ) [OneVarDeclaration]
            ) [VarDeclaration]
          ) [ListOfVarDecl]
          VarDeclaration(
            Type(
             char
            ) [Type]
            OneVarDeclaration(
              AddVarDecl1(
               c1
                NoBrackets(
                ) [NoBrackets]
              ) [AddVarDecl1]
            ) [OneVarDeclaration]
          ) [VarDeclaration]
        ) [ListOfVarDecl]
        VarDeclaration(
          Type(
           bool
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             niz
              Brackets(
              ) [Brackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [ListOfVarDecl]
      Statements(
        Statements(
          Statements(
            Statements(
              Statements(
                Statements(
                  Statements(
                    Statements(
                      NoStatements(
                      ) [NoStatements]
                      DesignatorStat(
                        DesignatorExpr(
                          Designator(
                            WithoutNamespace(
                             c1
                            ) [WithoutNamespace]
                            NoArrayExpression(
                            ) [NoArrayExpression]
                          ) [Designator]
                          AssignOperation(
                          ) [AssignOperation]
                          PositiveStartExpr(
                            SingleTerm(
                              CharacterConst(
                               c
                              ) [CharacterConst]
                            ) [SingleTerm]
                          ) [PositiveStartExpr]
                        ) [DesignatorExpr]
                      ) [DesignatorStat]
                    ) [Statements]
                    DesignatorStat(
                      DesignatorExpr(
                        Designator(
                          WithoutNamespace(
                           niz
                          ) [WithoutNamespace]
                          NoArrayExpression(
                          ) [NoArrayExpression]
                        ) [Designator]
                        AssignOperation(
                        ) [AssignOperation]
                        PositiveStartExpr(
                          SingleTerm(
                            NewType(
                              Type(
                               bool
                              ) [Type]
                              PositiveStartExpr(
                                SingleTerm(
                                  NumberConst(
                                   3
                                  ) [NumberConst]
                                ) [SingleTerm]
                              ) [PositiveStartExpr]
                            ) [NewType]
                          ) [SingleTerm]
                        ) [PositiveStartExpr]
                      ) [DesignatorExpr]
                    ) [DesignatorStat]
                  ) [Statements]
                  DesignatorStat(
                    DesignatorExpr(
                      Designator(
                        WithoutNamespace(
                         niz
                        ) [WithoutNamespace]
                        AddArrayExpression(
                          BraExpr(
                            PositiveStartExpr(
                              SingleTerm(
                                NumberConst(
                                 0
                                ) [NumberConst]
                              ) [SingleTerm]
                            ) [PositiveStartExpr]
                          ) [BraExpr]
                        ) [AddArrayExpression]
                      ) [Designator]
                      AssignOperation(
                      ) [AssignOperation]
                      PositiveStartExpr(
                        SingleTerm(
                          BooleanConst(
                           true
                          ) [BooleanConst]
                        ) [SingleTerm]
                      ) [PositiveStartExpr]
                    ) [DesignatorExpr]
                  ) [DesignatorStat]
                ) [Statements]
                DesignatorStat(
                  DesignatorExpr(
                    Designator(
                      WithoutNamespace(
                       niz
                      ) [WithoutNamespace]
                      AddArrayExpression(
                        BraExpr(
                          PositiveStartExpr(
                            SingleTerm(
                              NumberConst(
                               1
                              ) [NumberConst]
                            ) [SingleTerm]
                          ) [PositiveStartExpr]
                        ) [BraExpr]
                      ) [AddArrayExpression]
                    ) [Designator]
                    AssignOperation(
                    ) [AssignOperation]
                    PositiveStartExpr(
                      SingleTerm(
                        BooleanConst(
                         false
                        ) [BooleanConst]
                      ) [SingleTerm]
                    ) [PositiveStartExpr]
                  ) [DesignatorExpr]
                ) [DesignatorStat]
              ) [Statements]
              DesignatorStat(
                DesignatorExpr(
                  Designator(
                    WithoutNamespace(
                     niz
                    ) [WithoutNamespace]
                    AddArrayExpression(
                      BraExpr(
                        PositiveStartExpr(
                          SingleTerm(
                            NumberConst(
                             2
                            ) [NumberConst]
                          ) [SingleTerm]
                        ) [PositiveStartExpr]
                      ) [BraExpr]
                    ) [AddArrayExpression]
                  ) [Designator]
                  AssignOperation(
                  ) [AssignOperation]
                  PositiveStartExpr(
                    SingleTerm(
                      BooleanConst(
                       true
                      ) [BooleanConst]
                    ) [SingleTerm]
                  ) [PositiveStartExpr]
                ) [DesignatorExpr]
              ) [DesignatorStat]
            ) [Statements]
            PrintExpr(
              PositiveStartExpr(
                SingleTerm(
                  DesignatorFact(
                    Designator(
                      WithoutNamespace(
                       c1
                      ) [WithoutNamespace]
                      NoArrayExpression(
                      ) [NoArrayExpression]
                    ) [Designator]
                  ) [DesignatorFact]
                ) [SingleTerm]
              ) [PositiveStartExpr]
              NoNumConstOpt(
              ) [NoNumConstOpt]
            ) [PrintExpr]
          ) [Statements]
          PrintExpr(
            PositiveStartExpr(
              SingleTerm(
                DesignatorFact(
                  Designator(
                    WithoutNamespace(
                     c
                    ) [WithoutNamespace]
                    NoArrayExpression(
                    ) [NoArrayExpression]
                  ) [Designator]
                ) [DesignatorFact]
              ) [SingleTerm]
            ) [PositiveStartExpr]
            NoNumConstOpt(
            ) [NoNumConstOpt]
          ) [PrintExpr]
        ) [Statements]
        PrintExpr(
          PositiveStartExpr(
            SingleTerm(
              DesignatorFact(
                Designator(
                  WithoutNamespace(
                   niz
                  ) [WithoutNamespace]
                  NoArrayExpression(
                  ) [NoArrayExpression]
                ) [Designator]
              ) [DesignatorFact]
            ) [SingleTerm]
          ) [PositiveStartExpr]
          NoNumConstOpt(
          ) [NoNumConstOpt]
        ) [PrintExpr]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  13:53:02,981 - ================ Semanticka obrada ===================
INFO  13:53:02,983 - Const c defined on line 3
INFO  13:53:02,983 - Symbol c1 found on line 10
INFO  13:53:02,983 - Symbol niz found on line 11
INFO  13:53:02,983 - Symbol niz found on line 12
INFO  13:53:02,983 - Symbol niz found on line 13
INFO  13:53:02,983 - Symbol niz found on line 14
INFO  13:53:02,983 - Symbol c1 found on line 15
INFO  13:53:02,983 - Symbol c found on line 16
INFO  13:53:02,984 - Symbol niz found on line 17
INFO  13:53:02,984 - main() method found on line 1
INFO  13:53:02,986 - Parser SUCCESS!
INFO  13:55:53,322 - Compiling source file: C:\Users\elena\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  13:55:53,322 - ================= LEKSICKA ANALIZA =================
INFO  13:55:53,343 - #2 program
INFO  13:55:53,343 - #47 test301
INFO  13:55:53,343 - #3 const
INFO  13:55:53,344 - #47 char
INFO  13:55:53,344 - #47 c
INFO  13:55:53,345 - #24 =
INFO  13:55:53,345 - #48 c
INFO  13:55:53,345 - #27 ;
INFO  13:55:53,345 - #35 {
INFO  13:55:53,346 - #8 void
INFO  13:55:53,346 - #47 main
INFO  13:55:53,346 - #31 (
INFO  13:55:53,346 - #32 )
INFO  13:55:53,347 - #47 int
INFO  13:55:53,347 - #47 bodovi
INFO  13:55:53,347 - #27 ;
INFO  13:55:53,348 - #47 char
INFO  13:55:53,348 - #47 c1
INFO  13:55:53,348 - #27 ;
INFO  13:55:53,348 - #47 bool
INFO  13:55:53,348 - #47 niz
INFO  13:55:53,348 - #33 [
INFO  13:55:53,348 - #34 ]
INFO  13:55:53,348 - #27 ;
INFO  13:55:53,348 - #35 {
INFO  13:55:53,348 - #47 c1
INFO  13:55:53,349 - #24 =
INFO  13:55:53,349 - #48 c
INFO  13:55:53,350 - #27 ;
INFO  13:55:53,350 - #47 niz
INFO  13:55:53,350 - #24 =
INFO  13:55:53,350 - #4 new
INFO  13:55:53,350 - #47 bool
INFO  13:55:53,350 - #33 [
INFO  13:55:53,350 - #46 3
INFO  13:55:53,350 - #34 ]
INFO  13:55:53,350 - #27 ;
INFO  13:55:53,350 - #47 niz
INFO  13:55:53,350 - #33 [
INFO  13:55:53,350 - #46 0
INFO  13:55:53,351 - #34 ]
INFO  13:55:53,351 - #24 =
INFO  13:55:53,351 - #49 true
INFO  13:55:53,351 - #27 ;
INFO  13:55:53,351 - #47 niz
INFO  13:55:53,351 - #33 [
INFO  13:55:53,351 - #46 1
INFO  13:55:53,351 - #34 ]
INFO  13:55:53,351 - #24 =
INFO  13:55:53,351 - #49 false
INFO  13:55:53,351 - #27 ;
INFO  13:55:53,352 - #47 niz
INFO  13:55:53,352 - #33 [
INFO  13:55:53,352 - #46 2
INFO  13:55:53,352 - #34 ]
INFO  13:55:53,352 - #24 =
INFO  13:55:53,352 - #49 true
INFO  13:55:53,352 - #27 ;
INFO  13:55:53,352 - #5 print
INFO  13:55:53,352 - #31 (
INFO  13:55:53,352 - #47 c1
INFO  13:55:53,352 - #32 )
INFO  13:55:53,352 - #27 ;
INFO  13:55:53,352 - #5 print
INFO  13:55:53,352 - #31 (
INFO  13:55:53,352 - #47 c
INFO  13:55:53,352 - #32 )
INFO  13:55:53,353 - #27 ;
INFO  13:55:53,353 - #5 print
INFO  13:55:53,353 - #31 (
INFO  13:55:53,353 - #47 niz
INFO  13:55:53,353 - #32 )
INFO  13:55:53,353 - #27 ;
INFO  13:55:53,353 - #36 }
INFO  13:55:53,353 - #36 }
INFO  13:55:53,354 - ================= PARSIRANO STABLO =================
INFO  13:55:53,357 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  Declarations(
    NoDeclarations(
    ) [NoDeclarations]
    ConstantDeclaration(
      ConDecl(
        Type(
         char
        ) [Type]
        ConstDef(
         c
          CharConst(
           c
          ) [CharConst]
        ) [ConstDef]
        NoConstantDeclaration(
        ) [NoConstantDeclaration]
      ) [ConDecl]
    ) [ConstantDeclaration]
  ) [Declarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      ListOfVarDecl(
        ListOfVarDecl(
          ListOfVarDecl(
            NoVarDeclarations(
            ) [NoVarDeclarations]
            VarDeclaration(
              Type(
               int
              ) [Type]
              OneVarDeclaration(
                AddVarDecl1(
                 bodovi
                  NoBrackets(
                  ) [NoBrackets]
                ) [AddVarDecl1]
              ) [OneVarDeclaration]
            ) [VarDeclaration]
          ) [ListOfVarDecl]
          VarDeclaration(
            Type(
             char
            ) [Type]
            OneVarDeclaration(
              AddVarDecl1(
               c1
                NoBrackets(
                ) [NoBrackets]
              ) [AddVarDecl1]
            ) [OneVarDeclaration]
          ) [VarDeclaration]
        ) [ListOfVarDecl]
        VarDeclaration(
          Type(
           bool
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             niz
              Brackets(
              ) [Brackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [ListOfVarDecl]
      Statements(
        Statements(
          Statements(
            Statements(
              Statements(
                Statements(
                  Statements(
                    Statements(
                      NoStatements(
                      ) [NoStatements]
                      DesignatorStat(
                        DesignatorExpr(
                          Designator(
                            WithoutNamespace(
                             c1
                            ) [WithoutNamespace]
                            NoArrayExpression(
                            ) [NoArrayExpression]
                          ) [Designator]
                          AssignOperation(
                          ) [AssignOperation]
                          PositiveStartExpr(
                            SingleTerm(
                              CharacterConst(
                               c
                              ) [CharacterConst]
                            ) [SingleTerm]
                          ) [PositiveStartExpr]
                        ) [DesignatorExpr]
                      ) [DesignatorStat]
                    ) [Statements]
                    DesignatorStat(
                      DesignatorExpr(
                        Designator(
                          WithoutNamespace(
                           niz
                          ) [WithoutNamespace]
                          NoArrayExpression(
                          ) [NoArrayExpression]
                        ) [Designator]
                        AssignOperation(
                        ) [AssignOperation]
                        PositiveStartExpr(
                          SingleTerm(
                            NewType(
                              Type(
                               bool
                              ) [Type]
                              PositiveStartExpr(
                                SingleTerm(
                                  NumberConst(
                                   3
                                  ) [NumberConst]
                                ) [SingleTerm]
                              ) [PositiveStartExpr]
                            ) [NewType]
                          ) [SingleTerm]
                        ) [PositiveStartExpr]
                      ) [DesignatorExpr]
                    ) [DesignatorStat]
                  ) [Statements]
                  DesignatorStat(
                    DesignatorExpr(
                      Designator(
                        WithoutNamespace(
                         niz
                        ) [WithoutNamespace]
                        AddArrayExpression(
                          BraExpr(
                            PositiveStartExpr(
                              SingleTerm(
                                NumberConst(
                                 0
                                ) [NumberConst]
                              ) [SingleTerm]
                            ) [PositiveStartExpr]
                          ) [BraExpr]
                        ) [AddArrayExpression]
                      ) [Designator]
                      AssignOperation(
                      ) [AssignOperation]
                      PositiveStartExpr(
                        SingleTerm(
                          BooleanConst(
                           true
                          ) [BooleanConst]
                        ) [SingleTerm]
                      ) [PositiveStartExpr]
                    ) [DesignatorExpr]
                  ) [DesignatorStat]
                ) [Statements]
                DesignatorStat(
                  DesignatorExpr(
                    Designator(
                      WithoutNamespace(
                       niz
                      ) [WithoutNamespace]
                      AddArrayExpression(
                        BraExpr(
                          PositiveStartExpr(
                            SingleTerm(
                              NumberConst(
                               1
                              ) [NumberConst]
                            ) [SingleTerm]
                          ) [PositiveStartExpr]
                        ) [BraExpr]
                      ) [AddArrayExpression]
                    ) [Designator]
                    AssignOperation(
                    ) [AssignOperation]
                    PositiveStartExpr(
                      SingleTerm(
                        BooleanConst(
                         false
                        ) [BooleanConst]
                      ) [SingleTerm]
                    ) [PositiveStartExpr]
                  ) [DesignatorExpr]
                ) [DesignatorStat]
              ) [Statements]
              DesignatorStat(
                DesignatorExpr(
                  Designator(
                    WithoutNamespace(
                     niz
                    ) [WithoutNamespace]
                    AddArrayExpression(
                      BraExpr(
                        PositiveStartExpr(
                          SingleTerm(
                            NumberConst(
                             2
                            ) [NumberConst]
                          ) [SingleTerm]
                        ) [PositiveStartExpr]
                      ) [BraExpr]
                    ) [AddArrayExpression]
                  ) [Designator]
                  AssignOperation(
                  ) [AssignOperation]
                  PositiveStartExpr(
                    SingleTerm(
                      BooleanConst(
                       true
                      ) [BooleanConst]
                    ) [SingleTerm]
                  ) [PositiveStartExpr]
                ) [DesignatorExpr]
              ) [DesignatorStat]
            ) [Statements]
            PrintExpr(
              PositiveStartExpr(
                SingleTerm(
                  DesignatorFact(
                    Designator(
                      WithoutNamespace(
                       c1
                      ) [WithoutNamespace]
                      NoArrayExpression(
                      ) [NoArrayExpression]
                    ) [Designator]
                  ) [DesignatorFact]
                ) [SingleTerm]
              ) [PositiveStartExpr]
              NoNumConstOpt(
              ) [NoNumConstOpt]
            ) [PrintExpr]
          ) [Statements]
          PrintExpr(
            PositiveStartExpr(
              SingleTerm(
                DesignatorFact(
                  Designator(
                    WithoutNamespace(
                     c
                    ) [WithoutNamespace]
                    NoArrayExpression(
                    ) [NoArrayExpression]
                  ) [Designator]
                ) [DesignatorFact]
              ) [SingleTerm]
            ) [PositiveStartExpr]
            NoNumConstOpt(
            ) [NoNumConstOpt]
          ) [PrintExpr]
        ) [Statements]
        PrintExpr(
          PositiveStartExpr(
            SingleTerm(
              DesignatorFact(
                Designator(
                  WithoutNamespace(
                   niz
                  ) [WithoutNamespace]
                  NoArrayExpression(
                  ) [NoArrayExpression]
                ) [Designator]
              ) [DesignatorFact]
            ) [SingleTerm]
          ) [PositiveStartExpr]
          NoNumConstOpt(
          ) [NoNumConstOpt]
        ) [PrintExpr]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  13:55:53,358 - ================ Semanticka obrada ===================
INFO  13:55:53,360 - Const c defined on line 3
INFO  13:55:53,360 - Symbol c1 found on line 10
INFO  13:55:53,360 - Symbol niz found on line 11
INFO  13:55:53,360 - Symbol niz found on line 12
INFO  13:55:53,360 - Symbol niz found on line 13
INFO  13:55:53,360 - Symbol niz found on line 14
INFO  13:55:53,360 - Symbol c1 found on line 15
INFO  13:55:53,360 - Symbol c found on line 16
INFO  13:55:53,360 - Symbol niz found on line 17
INFO  13:55:53,360 - main() method found on line 1
INFO  13:55:53,363 - Parser SUCCESS!
INFO  14:02:03,711 - Compiling source file: C:\Users\elena\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  14:02:03,712 - ================= LEKSICKA ANALIZA =================
INFO  14:02:03,738 - #2 program
INFO  14:02:03,738 - #47 test301
INFO  14:02:03,738 - #3 const
INFO  14:02:03,739 - #47 char
INFO  14:02:03,739 - #47 c
INFO  14:02:03,739 - #24 =
INFO  14:02:03,739 - #48 c
INFO  14:02:03,740 - #27 ;
INFO  14:02:03,740 - #35 {
INFO  14:02:03,740 - #8 void
INFO  14:02:03,741 - #47 main
INFO  14:02:03,741 - #31 (
INFO  14:02:03,741 - #32 )
INFO  14:02:03,741 - #47 int
INFO  14:02:03,743 - #47 bodovi
INFO  14:02:03,743 - #27 ;
INFO  14:02:03,744 - #47 char
INFO  14:02:03,744 - #47 c1
INFO  14:02:03,744 - #27 ;
INFO  14:02:03,744 - #47 bool
INFO  14:02:03,744 - #47 niz
INFO  14:02:03,744 - #33 [
INFO  14:02:03,744 - #34 ]
INFO  14:02:03,744 - #27 ;
INFO  14:02:03,744 - #35 {
INFO  14:02:03,744 - #47 c1
INFO  14:02:03,745 - #24 =
INFO  14:02:03,746 - #48 c
INFO  14:02:03,746 - #27 ;
INFO  14:02:03,746 - #47 niz
INFO  14:02:03,746 - #24 =
INFO  14:02:03,746 - #4 new
INFO  14:02:03,746 - #47 bool
INFO  14:02:03,746 - #33 [
INFO  14:02:03,746 - #46 3
INFO  14:02:03,746 - #34 ]
INFO  14:02:03,748 - #27 ;
INFO  14:02:03,748 - #47 niz
INFO  14:02:03,748 - #33 [
INFO  14:02:03,748 - #46 0
INFO  14:02:03,748 - #34 ]
INFO  14:02:03,748 - #24 =
INFO  14:02:03,748 - #49 true
INFO  14:02:03,748 - #27 ;
INFO  14:02:03,749 - #47 niz
INFO  14:02:03,749 - #33 [
INFO  14:02:03,749 - #46 1
INFO  14:02:03,749 - #34 ]
INFO  14:02:03,749 - #24 =
INFO  14:02:03,749 - #49 false
INFO  14:02:03,749 - #27 ;
INFO  14:02:03,749 - #47 niz
INFO  14:02:03,749 - #33 [
INFO  14:02:03,749 - #46 2
INFO  14:02:03,749 - #34 ]
INFO  14:02:03,749 - #24 =
INFO  14:02:03,749 - #49 true
INFO  14:02:03,749 - #27 ;
INFO  14:02:03,749 - #5 print
INFO  14:02:03,749 - #31 (
INFO  14:02:03,749 - #47 c1
INFO  14:02:03,749 - #32 )
INFO  14:02:03,750 - #27 ;
INFO  14:02:03,750 - #5 print
INFO  14:02:03,750 - #31 (
INFO  14:02:03,750 - #47 c
INFO  14:02:03,750 - #32 )
INFO  14:02:03,750 - #27 ;
INFO  14:02:03,750 - #5 print
INFO  14:02:03,750 - #31 (
INFO  14:02:03,750 - #47 niz
INFO  14:02:03,750 - #32 )
INFO  14:02:03,750 - #27 ;
INFO  14:02:03,750 - #36 }
INFO  14:02:03,750 - #36 }
INFO  14:02:03,752 - ================= PARSIRANO STABLO =================
INFO  14:02:03,755 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  Declarations(
    NoDeclarations(
    ) [NoDeclarations]
    ConstantDeclaration(
      ConDecl(
        Type(
         char
        ) [Type]
        ConstDef(
         c
          CharConst(
           c
          ) [CharConst]
        ) [ConstDef]
        NoConstantDeclaration(
        ) [NoConstantDeclaration]
      ) [ConDecl]
    ) [ConstantDeclaration]
  ) [Declarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      ListOfVarDecl(
        ListOfVarDecl(
          ListOfVarDecl(
            NoVarDeclarations(
            ) [NoVarDeclarations]
            VarDeclaration(
              Type(
               int
              ) [Type]
              OneVarDeclaration(
                AddVarDecl1(
                 bodovi
                  NoBrackets(
                  ) [NoBrackets]
                ) [AddVarDecl1]
              ) [OneVarDeclaration]
            ) [VarDeclaration]
          ) [ListOfVarDecl]
          VarDeclaration(
            Type(
             char
            ) [Type]
            OneVarDeclaration(
              AddVarDecl1(
               c1
                NoBrackets(
                ) [NoBrackets]
              ) [AddVarDecl1]
            ) [OneVarDeclaration]
          ) [VarDeclaration]
        ) [ListOfVarDecl]
        VarDeclaration(
          Type(
           bool
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             niz
              Brackets(
              ) [Brackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [ListOfVarDecl]
      Statements(
        Statements(
          Statements(
            Statements(
              Statements(
                Statements(
                  Statements(
                    Statements(
                      NoStatements(
                      ) [NoStatements]
                      DesignatorStat(
                        DesignatorExpr(
                          Designator(
                            WithoutNamespace(
                             c1
                            ) [WithoutNamespace]
                            NoArrayExpression(
                            ) [NoArrayExpression]
                          ) [Designator]
                          AssignOperation(
                          ) [AssignOperation]
                          PositiveStartExpr(
                            SingleTerm(
                              CharacterConst(
                               c
                              ) [CharacterConst]
                            ) [SingleTerm]
                          ) [PositiveStartExpr]
                        ) [DesignatorExpr]
                      ) [DesignatorStat]
                    ) [Statements]
                    DesignatorStat(
                      DesignatorExpr(
                        Designator(
                          WithoutNamespace(
                           niz
                          ) [WithoutNamespace]
                          NoArrayExpression(
                          ) [NoArrayExpression]
                        ) [Designator]
                        AssignOperation(
                        ) [AssignOperation]
                        PositiveStartExpr(
                          SingleTerm(
                            NewType(
                              Type(
                               bool
                              ) [Type]
                              PositiveStartExpr(
                                SingleTerm(
                                  NumberConst(
                                   3
                                  ) [NumberConst]
                                ) [SingleTerm]
                              ) [PositiveStartExpr]
                            ) [NewType]
                          ) [SingleTerm]
                        ) [PositiveStartExpr]
                      ) [DesignatorExpr]
                    ) [DesignatorStat]
                  ) [Statements]
                  DesignatorStat(
                    DesignatorExpr(
                      Designator(
                        WithoutNamespace(
                         niz
                        ) [WithoutNamespace]
                        AddArrayExpression(
                          BraExpr(
                            PositiveStartExpr(
                              SingleTerm(
                                NumberConst(
                                 0
                                ) [NumberConst]
                              ) [SingleTerm]
                            ) [PositiveStartExpr]
                          ) [BraExpr]
                        ) [AddArrayExpression]
                      ) [Designator]
                      AssignOperation(
                      ) [AssignOperation]
                      PositiveStartExpr(
                        SingleTerm(
                          BooleanConst(
                           true
                          ) [BooleanConst]
                        ) [SingleTerm]
                      ) [PositiveStartExpr]
                    ) [DesignatorExpr]
                  ) [DesignatorStat]
                ) [Statements]
                DesignatorStat(
                  DesignatorExpr(
                    Designator(
                      WithoutNamespace(
                       niz
                      ) [WithoutNamespace]
                      AddArrayExpression(
                        BraExpr(
                          PositiveStartExpr(
                            SingleTerm(
                              NumberConst(
                               1
                              ) [NumberConst]
                            ) [SingleTerm]
                          ) [PositiveStartExpr]
                        ) [BraExpr]
                      ) [AddArrayExpression]
                    ) [Designator]
                    AssignOperation(
                    ) [AssignOperation]
                    PositiveStartExpr(
                      SingleTerm(
                        BooleanConst(
                         false
                        ) [BooleanConst]
                      ) [SingleTerm]
                    ) [PositiveStartExpr]
                  ) [DesignatorExpr]
                ) [DesignatorStat]
              ) [Statements]
              DesignatorStat(
                DesignatorExpr(
                  Designator(
                    WithoutNamespace(
                     niz
                    ) [WithoutNamespace]
                    AddArrayExpression(
                      BraExpr(
                        PositiveStartExpr(
                          SingleTerm(
                            NumberConst(
                             2
                            ) [NumberConst]
                          ) [SingleTerm]
                        ) [PositiveStartExpr]
                      ) [BraExpr]
                    ) [AddArrayExpression]
                  ) [Designator]
                  AssignOperation(
                  ) [AssignOperation]
                  PositiveStartExpr(
                    SingleTerm(
                      BooleanConst(
                       true
                      ) [BooleanConst]
                    ) [SingleTerm]
                  ) [PositiveStartExpr]
                ) [DesignatorExpr]
              ) [DesignatorStat]
            ) [Statements]
            PrintExpr(
              PositiveStartExpr(
                SingleTerm(
                  DesignatorFact(
                    Designator(
                      WithoutNamespace(
                       c1
                      ) [WithoutNamespace]
                      NoArrayExpression(
                      ) [NoArrayExpression]
                    ) [Designator]
                  ) [DesignatorFact]
                ) [SingleTerm]
              ) [PositiveStartExpr]
              NoNumConstOpt(
              ) [NoNumConstOpt]
            ) [PrintExpr]
          ) [Statements]
          PrintExpr(
            PositiveStartExpr(
              SingleTerm(
                DesignatorFact(
                  Designator(
                    WithoutNamespace(
                     c
                    ) [WithoutNamespace]
                    NoArrayExpression(
                    ) [NoArrayExpression]
                  ) [Designator]
                ) [DesignatorFact]
              ) [SingleTerm]
            ) [PositiveStartExpr]
            NoNumConstOpt(
            ) [NoNumConstOpt]
          ) [PrintExpr]
        ) [Statements]
        PrintExpr(
          PositiveStartExpr(
            SingleTerm(
              DesignatorFact(
                Designator(
                  WithoutNamespace(
                   niz
                  ) [WithoutNamespace]
                  NoArrayExpression(
                  ) [NoArrayExpression]
                ) [Designator]
              ) [DesignatorFact]
            ) [SingleTerm]
          ) [PositiveStartExpr]
          NoNumConstOpt(
          ) [NoNumConstOpt]
        ) [PrintExpr]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  14:02:03,755 - ================ Semanticka obrada ===================
INFO  14:02:03,757 - Const c defined on line 3
INFO  14:02:03,759 - Symbol c1 found on line 10
INFO  14:02:03,759 - Symbol niz found on line 11
INFO  14:02:03,759 - Symbol niz found on line 12
INFO  14:02:03,759 - Symbol niz found on line 13
INFO  14:02:03,759 - Symbol niz found on line 14
INFO  14:02:03,759 - Symbol c1 found on line 15
INFO  14:02:03,759 - Symbol c found on line 16
INFO  14:02:03,759 - Symbol niz found on line 17
INFO  14:02:03,759 - main() method found on line 1
INFO  14:02:03,763 - Parser SUCCESS!
