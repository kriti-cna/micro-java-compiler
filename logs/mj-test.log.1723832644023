INFO  20:22:45,064 - Compiling source file: C:\Users\elena\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  20:22:45,067 - ================= LEKSICKA ANALIZA =================
INFO  20:22:45,189 - #2 program
INFO  20:22:45,189 - #47 test301
INFO  20:22:45,190 - #47 int
INFO  20:22:45,194 - #47 niz
INFO  20:22:45,196 - #33 [
INFO  20:22:45,196 - #34 ]
INFO  20:22:45,197 - #27 ;
INFO  20:22:45,200 - #47 int
INFO  20:22:45,201 - #47 mat
INFO  20:22:45,201 - #33 [
INFO  20:22:45,201 - #34 ]
INFO  20:22:45,202 - #33 [
INFO  20:22:45,202 - #34 ]
INFO  20:22:45,203 - #27 ;
INFO  20:22:45,205 - #47 char
INFO  20:22:45,205 - #47 c
INFO  20:22:45,205 - #27 ;
INFO  20:22:45,207 - #35 {
INFO  20:22:45,209 - #8 void
INFO  20:22:45,210 - #47 main
INFO  20:22:45,212 - #31 (
INFO  20:22:45,214 - #32 )
INFO  20:22:45,216 - #35 {
INFO  20:22:45,219 - #47 niz
INFO  20:22:45,220 - #24 =
INFO  20:22:45,225 - #4 new
INFO  20:22:45,229 - #47 int
INFO  20:22:45,229 - #33 [
INFO  20:22:45,229 - #46 5
INFO  20:22:45,230 - #34 ]
INFO  20:22:45,231 - #27 ;
INFO  20:22:45,233 - #47 niz
INFO  20:22:45,233 - #33 [
INFO  20:22:45,233 - #46 0
INFO  20:22:45,233 - #34 ]
INFO  20:22:45,233 - #24 =
INFO  20:22:45,235 - #46 1
INFO  20:22:45,235 - #27 ;
INFO  20:22:45,235 - #47 mat
INFO  20:22:45,235 - #24 =
INFO  20:22:45,236 - #4 new
INFO  20:22:45,236 - #47 int
INFO  20:22:45,236 - #33 [
INFO  20:22:45,236 - #46 2
INFO  20:22:45,237 - #34 ]
INFO  20:22:45,237 - #33 [
INFO  20:22:45,237 - #46 3
INFO  20:22:45,237 - #34 ]
INFO  20:22:45,238 - #27 ;
INFO  20:22:45,238 - #47 mat
INFO  20:22:45,238 - #33 [
INFO  20:22:45,238 - #46 2
INFO  20:22:45,239 - #34 ]
INFO  20:22:45,239 - #33 [
INFO  20:22:45,239 - #46 3
INFO  20:22:45,239 - #34 ]
INFO  20:22:45,239 - #24 =
INFO  20:22:45,240 - #46 5
INFO  20:22:45,240 - #27 ;
INFO  20:22:45,240 - #36 }
INFO  20:22:45,240 - #36 }
INFO  20:22:45,243 - ================= PARSIRANO STABLO =================
INFO  20:22:45,252 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  Declarations(
    Declarations(
      Declarations(
        NoDeclarations(
        ) [NoDeclarations]
        VariableDeclaration(
          VarDeclaration(
            Type(
             int
            ) [Type]
            OneVarDeclaration(
              AddVarDecl1(
               niz
                Brackets(
                ) [Brackets]
              ) [AddVarDecl1]
            ) [OneVarDeclaration]
          ) [VarDeclaration]
        ) [VariableDeclaration]
      ) [Declarations]
      VariableDeclaration(
        VarDeclaration(
          Type(
           int
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             mat
              TwoBrackets(
              ) [TwoBrackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [VariableDeclaration]
    ) [Declarations]
    VariableDeclaration(
      VarDeclaration(
        Type(
         char
        ) [Type]
        OneVarDeclaration(
          AddVarDecl1(
           c
            NoBrackets(
            ) [NoBrackets]
          ) [AddVarDecl1]
        ) [OneVarDeclaration]
      ) [VarDeclaration]
    ) [VariableDeclaration]
  ) [Declarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      NoVarDeclarations(
      ) [NoVarDeclarations]
      Statements(
        Statements(
          Statements(
            Statements(
              NoStatements(
              ) [NoStatements]
              DesignatorStat(
                DesignatorExpr(
                  Designator(
                    WithoutNamespace(
                     niz
                    ) [WithoutNamespace]
                    NoArrayExpression(
                    ) [NoArrayExpression]
                  ) [Designator]
                  AssignOperation(
                  ) [AssignOperation]
                  PositiveStartExpr(
                    SingleTerm(
                      NewType(
                        Type(
                         int
                        ) [Type]
                        PositiveStartExpr(
                          SingleTerm(
                            NumberConst(
                             5
                            ) [NumberConst]
                          ) [SingleTerm]
                        ) [PositiveStartExpr]
                      ) [NewType]
                    ) [SingleTerm]
                  ) [PositiveStartExpr]
                ) [DesignatorExpr]
              ) [DesignatorStat]
            ) [Statements]
            DesignatorStat(
              DesignatorExpr(
                Designator(
                  WithoutNamespace(
                   niz
                  ) [WithoutNamespace]
                  AddArrayExpression(
                    BraExpr(
                      PositiveStartExpr(
                        SingleTerm(
                          NumberConst(
                           0
                          ) [NumberConst]
                        ) [SingleTerm]
                      ) [PositiveStartExpr]
                    ) [BraExpr]
                  ) [AddArrayExpression]
                ) [Designator]
                AssignOperation(
                ) [AssignOperation]
                PositiveStartExpr(
                  SingleTerm(
                    NumberConst(
                     1
                    ) [NumberConst]
                  ) [SingleTerm]
                ) [PositiveStartExpr]
              ) [DesignatorExpr]
            ) [DesignatorStat]
          ) [Statements]
          DesignatorStat(
            DesignatorExpr(
              Designator(
                WithoutNamespace(
                 mat
                ) [WithoutNamespace]
                NoArrayExpression(
                ) [NoArrayExpression]
              ) [Designator]
              AssignOperation(
              ) [AssignOperation]
              PositiveStartExpr(
                SingleTerm(
                  NewTypeMat(
                    Type(
                     int
                    ) [Type]
                    PositiveStartExpr(
                      SingleTerm(
                        NumberConst(
                         2
                        ) [NumberConst]
                      ) [SingleTerm]
                    ) [PositiveStartExpr]
                    PositiveStartExpr(
                      SingleTerm(
                        NumberConst(
                         3
                        ) [NumberConst]
                      ) [SingleTerm]
                    ) [PositiveStartExpr]
                  ) [NewTypeMat]
                ) [SingleTerm]
              ) [PositiveStartExpr]
            ) [DesignatorExpr]
          ) [DesignatorStat]
        ) [Statements]
        DesignatorStat(
          DesignatorExpr(
            Designator(
              WithoutNamespace(
               mat
              ) [WithoutNamespace]
              AddMatrixExpression(
                BraExpr(
                  PositiveStartExpr(
                    SingleTerm(
                      NumberConst(
                       2
                      ) [NumberConst]
                    ) [SingleTerm]
                  ) [PositiveStartExpr]
                ) [BraExpr]
                BraExpr(
                  PositiveStartExpr(
                    SingleTerm(
                      NumberConst(
                       3
                      ) [NumberConst]
                    ) [SingleTerm]
                  ) [PositiveStartExpr]
                ) [BraExpr]
              ) [AddMatrixExpression]
            ) [Designator]
            AssignOperation(
            ) [AssignOperation]
            PositiveStartExpr(
              SingleTerm(
                NumberConst(
                 5
                ) [NumberConst]
              ) [SingleTerm]
            ) [PositiveStartExpr]
          ) [DesignatorExpr]
        ) [DesignatorStat]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  20:22:45,253 - ================ Semanticka obrada ===================
INFO  20:22:45,259 - NEW SYMBOL
INFO  20:22:45,260 - Var niz: Arr of int, 0, 0 on line 2
INFO  20:22:45,260 - NEW SYMBOL
INFO  20:22:45,260 - Var mat: Matrix of int, 1, 0 on line 3
INFO  20:22:45,260 - NEW SYMBOL
INFO  20:22:45,260 - Var c: char, 2, 0 on line 4
INFO  20:22:45,260 - Var niz: Arr of int, 0, 0 on line 10
INFO  20:22:45,260 - Var niz: Arr of int, 0, 0 on line 11
INFO  20:22:45,261 - Var mat: Matrix of int, 1, 0 on line 12
INFO  20:22:45,261 - Var mat: Matrix of int, 1, 0 on line 13
ERROR 20:22:45,261 - Types not matching  on line 13
INFO  20:22:45,261 - Meth main: notype, 0, 0 on line 1
ERROR 20:22:45,261 - Parser FAIL!
