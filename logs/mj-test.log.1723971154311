INFO  18:35:50,387 - Compiling source file: C:\Users\elena\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  18:35:50,388 - ================= LEKSICKA ANALIZA =================
INFO  18:35:50,425 - #2 program
INFO  18:35:50,425 - #47 test301
INFO  18:35:50,425 - #47 int
INFO  18:35:50,426 - #47 niz
INFO  18:35:50,427 - #33 [
INFO  18:35:50,427 - #34 ]
INFO  18:35:50,427 - #27 ;
INFO  18:35:50,428 - #47 int
INFO  18:35:50,428 - #47 mat
INFO  18:35:50,428 - #33 [
INFO  18:35:50,428 - #34 ]
INFO  18:35:50,429 - #33 [
INFO  18:35:50,429 - #34 ]
INFO  18:35:50,429 - #27 ;
INFO  18:35:50,429 - #47 char
INFO  18:35:50,429 - #47 c
INFO  18:35:50,429 - #27 ;
INFO  18:35:50,430 - #47 bool
INFO  18:35:50,467 - #47 a
INFO  18:35:50,467 - #27 ;
INFO  18:35:50,467 - #35 {
INFO  18:35:50,467 - #8 void
INFO  18:35:50,469 - #47 main
INFO  18:35:50,471 - #31 (
INFO  18:35:50,472 - #32 )
INFO  18:35:50,475 - #35 {
INFO  18:35:50,477 - #47 mat
INFO  18:35:50,480 - #24 =
INFO  18:35:50,485 - #4 new
INFO  18:35:50,490 - #47 int
INFO  18:35:50,490 - #33 [
INFO  18:35:50,490 - #46 7
INFO  18:35:50,491 - #34 ]
INFO  18:35:50,491 - #33 [
INFO  18:35:50,493 - #46 8
INFO  18:35:50,493 - #34 ]
INFO  18:35:50,493 - #27 ;
INFO  18:35:50,494 - #36 }
INFO  18:35:50,495 - #36 }
INFO  18:35:50,500 - ================= PARSIRANO STABLO =================
INFO  18:35:50,514 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  Declarations(
    Declarations(
      Declarations(
        Declarations(
          NoDeclarations(
          ) [NoDeclarations]
          VariableDeclaration(
            VarDeclaration(
              Type(
               int
              ) [Type]
              OneVarDeclaration(
                AddVarDecl1(
                 niz
                  Brackets(
                  ) [Brackets]
                ) [AddVarDecl1]
              ) [OneVarDeclaration]
            ) [VarDeclaration]
          ) [VariableDeclaration]
        ) [Declarations]
        VariableDeclaration(
          VarDeclaration(
            Type(
             int
            ) [Type]
            OneVarDeclaration(
              AddVarDecl1(
               mat
                TwoBrackets(
                ) [TwoBrackets]
              ) [AddVarDecl1]
            ) [OneVarDeclaration]
          ) [VarDeclaration]
        ) [VariableDeclaration]
      ) [Declarations]
      VariableDeclaration(
        VarDeclaration(
          Type(
           char
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             c
              NoBrackets(
              ) [NoBrackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [VariableDeclaration]
    ) [Declarations]
    VariableDeclaration(
      VarDeclaration(
        Type(
         bool
        ) [Type]
        OneVarDeclaration(
          AddVarDecl1(
           a
            NoBrackets(
            ) [NoBrackets]
          ) [AddVarDecl1]
        ) [OneVarDeclaration]
      ) [VarDeclaration]
    ) [VariableDeclaration]
  ) [Declarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      NoVarDeclarations(
      ) [NoVarDeclarations]
      Statements(
        NoStatements(
        ) [NoStatements]
        DesignatorStat(
          DesignatorExpr(
            Designator(
              WithoutNamespace(
               mat
              ) [WithoutNamespace]
              NoArrayExpression(
              ) [NoArrayExpression]
            ) [Designator]
            AssignOperation(
            ) [AssignOperation]
            PositiveStartExpr(
              SingleTerm(
                NewTypeMat(
                  Type(
                   int
                  ) [Type]
                  PositiveStartExpr(
                    SingleTerm(
                      NumberConst(
                       7
                      ) [NumberConst]
                    ) [SingleTerm]
                  ) [PositiveStartExpr]
                  PositiveStartExpr(
                    SingleTerm(
                      NumberConst(
                       8
                      ) [NumberConst]
                    ) [SingleTerm]
                  ) [PositiveStartExpr]
                ) [NewTypeMat]
              ) [SingleTerm]
            ) [PositiveStartExpr]
          ) [DesignatorExpr]
        ) [DesignatorStat]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  18:35:50,515 - ================ Semanticka obrada ===================
INFO  18:35:50,525 - NEW SYMBOL
INFO  18:35:50,526 - Var niz: Arr of int, 0, 0 on line 2
INFO  18:35:50,527 - NEW SYMBOL
INFO  18:35:50,527 - Var mat: Matrix of int, 1, 0 on line 3
INFO  18:35:50,527 - NEW SYMBOL
INFO  18:35:50,528 - Var c: char, 2, 0 on line 4
INFO  18:35:50,528 - NEW SYMBOL
INFO  18:35:50,528 - Var a: boolean, 3, 0 on line 5
INFO  18:35:50,528 - Var mat: Matrix of int, 1, 0 on line 14
INFO  18:35:50,530 - Meth main: notype, 0, 0 on line 1
INFO  18:35:50,541 - Parser SUCCESS!
