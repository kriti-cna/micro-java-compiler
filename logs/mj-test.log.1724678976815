INFO  15:28:33,270 - Compiling source file: C:\Users\se200106\Desktop\wsp\MJCompilerAVGUST3.zip_expanded\MJCompiler\test\program.mj
INFO  15:28:33,271 - ================= LEKSICKA ANALIZA =================
INFO  15:28:33,287 - #2 program
INFO  15:28:33,287 - #47 test301
INFO  15:28:33,287 - #3 const
INFO  15:28:33,288 - #47 int
INFO  15:28:33,288 - #47 nula
INFO  15:28:33,288 - #24 =
INFO  15:28:33,288 - #46 0
INFO  15:28:33,288 - #27 ;
INFO  15:28:33,289 - #3 const
INFO  15:28:33,289 - #47 int
INFO  15:28:33,289 - #47 jedan
INFO  15:28:33,289 - #24 =
INFO  15:28:33,289 - #46 1
INFO  15:28:33,289 - #27 ;
INFO  15:28:33,289 - #3 const
INFO  15:28:33,289 - #47 int
INFO  15:28:33,289 - #47 pet
INFO  15:28:33,289 - #24 =
INFO  15:28:33,289 - #46 5
INFO  15:28:33,289 - #27 ;
INFO  15:28:33,289 - #47 int
INFO  15:28:33,290 - #47 niz
INFO  15:28:33,290 - #33 [
INFO  15:28:33,290 - #34 ]
INFO  15:28:33,290 - #27 ;
INFO  15:28:33,290 - #47 char
INFO  15:28:33,290 - #47 mat
INFO  15:28:33,290 - #33 [
INFO  15:28:33,290 - #34 ]
INFO  15:28:33,290 - #33 [
INFO  15:28:33,291 - #34 ]
INFO  15:28:33,291 - #27 ;
INFO  15:28:33,291 - #47 int
INFO  15:28:33,291 - #47 a
INFO  15:28:33,291 - #27 ;
INFO  15:28:33,291 - #35 {
INFO  15:28:33,291 - #8 void
INFO  15:28:33,292 - #47 main
INFO  15:28:33,292 - #31 (
INFO  15:28:33,292 - #32 )
INFO  15:28:33,292 - #35 {
INFO  15:28:33,293 - #47 mat
INFO  15:28:33,293 - #24 =
INFO  15:28:33,293 - #4 new
INFO  15:28:33,294 - #47 char
INFO  15:28:33,294 - #33 [
INFO  15:28:33,294 - #46 2
INFO  15:28:33,294 - #34 ]
INFO  15:28:33,294 - #33 [
INFO  15:28:33,294 - #46 3
INFO  15:28:33,294 - #34 ]
INFO  15:28:33,294 - #27 ;
INFO  15:28:33,294 - #47 mat
INFO  15:28:33,294 - #33 [
INFO  15:28:33,294 - #47 nula
INFO  15:28:33,295 - #34 ]
INFO  15:28:33,295 - #33 [
INFO  15:28:33,295 - #47 jedan
INFO  15:28:33,295 - #12 -
INFO  15:28:33,295 - #46 1
INFO  15:28:33,295 - #34 ]
INFO  15:28:33,296 - #24 =
INFO  15:28:33,296 - #48 a
INFO  15:28:33,296 - #27 ;
INFO  15:28:33,296 - #36 }
INFO  15:28:33,296 - #36 }
INFO  15:28:33,297 - ================= PARSIRANO STABLO =================
INFO  15:28:33,299 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  Declarations(
    Declarations(
      Declarations(
        Declarations(
          Declarations(
            Declarations(
              NoDeclarations(
              ) [NoDeclarations]
              ConstantDeclaration(
                ConDecl(
                  Type(
                   int
                  ) [Type]
                  ConstDef(
                   nula
                    NumConst(
                     0
                    ) [NumConst]
                  ) [ConstDef]
                  NoConstantDeclaration(
                  ) [NoConstantDeclaration]
                ) [ConDecl]
              ) [ConstantDeclaration]
            ) [Declarations]
            ConstantDeclaration(
              ConDecl(
                Type(
                 int
                ) [Type]
                ConstDef(
                 jedan
                  NumConst(
                   1
                  ) [NumConst]
                ) [ConstDef]
                NoConstantDeclaration(
                ) [NoConstantDeclaration]
              ) [ConDecl]
            ) [ConstantDeclaration]
          ) [Declarations]
          ConstantDeclaration(
            ConDecl(
              Type(
               int
              ) [Type]
              ConstDef(
               pet
                NumConst(
                 5
                ) [NumConst]
              ) [ConstDef]
              NoConstantDeclaration(
              ) [NoConstantDeclaration]
            ) [ConDecl]
          ) [ConstantDeclaration]
        ) [Declarations]
        VariableDeclaration(
          VarDeclaration(
            Type(
             int
            ) [Type]
            OneVarDeclaration(
              AddVarDecl1(
               niz
                Brackets(
                ) [Brackets]
              ) [AddVarDecl1]
            ) [OneVarDeclaration]
          ) [VarDeclaration]
        ) [VariableDeclaration]
      ) [Declarations]
      VariableDeclaration(
        VarDeclaration(
          Type(
           char
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             mat
              TwoBrackets(
              ) [TwoBrackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [VariableDeclaration]
    ) [Declarations]
    VariableDeclaration(
      VarDeclaration(
        Type(
         int
        ) [Type]
        OneVarDeclaration(
          AddVarDecl1(
           a
            NoBrackets(
            ) [NoBrackets]
          ) [AddVarDecl1]
        ) [OneVarDeclaration]
      ) [VarDeclaration]
    ) [VariableDeclaration]
  ) [Declarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      NoVarDeclarations(
      ) [NoVarDeclarations]
      Statements(
        Statements(
          NoStatements(
          ) [NoStatements]
          DesignatorStat(
            DesignatorExpr(
              Designator(
                WithoutNamespace(
                 mat
                ) [WithoutNamespace]
                NoArrayExpression(
                ) [NoArrayExpression]
              ) [Designator]
              AssignOperation(
              ) [AssignOperation]
              PositiveStartExpr(
                SingleTerm(
                  NewTypeMat(
                    Type(
                     char
                    ) [Type]
                    PositiveStartExpr(
                      SingleTerm(
                        NumberConst(
                         2
                        ) [NumberConst]
                      ) [SingleTerm]
                    ) [PositiveStartExpr]
                    PositiveStartExpr(
                      SingleTerm(
                        NumberConst(
                         3
                        ) [NumberConst]
                      ) [SingleTerm]
                    ) [PositiveStartExpr]
                  ) [NewTypeMat]
                ) [SingleTerm]
              ) [PositiveStartExpr]
            ) [DesignatorExpr]
          ) [DesignatorStat]
        ) [Statements]
        DesignatorStat(
          DesignatorExpr(
            Designator(
              WithoutNamespace(
               mat
              ) [WithoutNamespace]
              AddMatrixExpression(
                BraExpr(
                  PositiveStartExpr(
                    SingleTerm(
                      DesignatorFact(
                        Designator(
                          WithoutNamespace(
                           nula
                          ) [WithoutNamespace]
                          NoArrayExpression(
                          ) [NoArrayExpression]
                        ) [Designator]
                      ) [DesignatorFact]
                    ) [SingleTerm]
                  ) [PositiveStartExpr]
                ) [BraExpr]
                BraExpr(
                  AddExpression(
                    PositiveStartExpr(
                      SingleTerm(
                        DesignatorFact(
                          Designator(
                            WithoutNamespace(
                             jedan
                            ) [WithoutNamespace]
                            NoArrayExpression(
                            ) [NoArrayExpression]
                          ) [Designator]
                        ) [DesignatorFact]
                      ) [SingleTerm]
                    ) [PositiveStartExpr]
                    Minus(
                    ) [Minus]
                    SingleTerm(
                      NumberConst(
                       1
                      ) [NumberConst]
                    ) [SingleTerm]
                  ) [AddExpression]
                ) [BraExpr]
              ) [AddMatrixExpression]
            ) [Designator]
            AssignOperation(
            ) [AssignOperation]
            PositiveStartExpr(
              SingleTerm(
                CharacterConst(
                 a
                ) [CharacterConst]
              ) [SingleTerm]
            ) [PositiveStartExpr]
          ) [DesignatorExpr]
        ) [DesignatorStat]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  15:28:33,299 - ================ Semanticka obrada ===================
INFO  15:28:33,301 - NEW CONST
INFO  15:28:33,301 - Con nula: int, 0, 0 on line 5
INFO  15:28:33,301 - NEW CONST
INFO  15:28:33,301 - Con jedan: int, 1, 0 on line 6
INFO  15:28:33,302 - NEW CONST
INFO  15:28:33,302 - Con pet: int, 5, 0 on line 7
INFO  15:28:33,302 - NEW SYMBOL
INFO  15:28:33,302 - Var niz: Arr of int, 0, 0 on line 9
INFO  15:28:33,302 - NEW SYMBOL
INFO  15:28:33,302 - Var mat: Matrix of char, 1, 0 on line 10
INFO  15:28:33,302 - NEW SYMBOL
INFO  15:28:33,302 - Var a: int, 2, 0 on line 12
INFO  15:28:33,302 - Var mat: Matrix of char, 1, 0 on line 17
INFO  15:28:33,302 - Var mat: Matrix of char, 1, 0 on line 18
INFO  15:28:33,302 - Con nula: int, 0, 0 on line 18
INFO  15:28:33,302 - Con jedan: int, 1, 0 on line 18
INFO  15:28:33,302 - Meth main: notype, 0, 0 on line 3
INFO  15:28:33,304 - Parser SUCCESS!
