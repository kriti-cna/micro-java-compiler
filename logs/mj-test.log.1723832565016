INFO  18:58:49,026 - Compiling source file: C:\Users\elena\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  18:58:49,027 - ================= LEKSICKA ANALIZA =================
INFO  18:58:49,080 - #2 program
INFO  18:58:49,080 - #47 test301
INFO  18:58:49,080 - #47 int
INFO  18:58:49,083 - #47 niz
INFO  18:58:49,084 - #33 [
INFO  18:58:49,084 - #34 ]
INFO  18:58:49,084 - #27 ;
INFO  18:58:49,086 - #47 int
INFO  18:58:49,086 - #47 mat
INFO  18:58:49,086 - #33 [
INFO  18:58:49,086 - #34 ]
INFO  18:58:49,087 - #33 [
INFO  18:58:49,087 - #34 ]
INFO  18:58:49,087 - #27 ;
INFO  18:58:49,087 - #47 char
INFO  18:58:49,088 - #47 c
INFO  18:58:49,088 - #27 ;
INFO  18:58:49,088 - #35 {
INFO  18:58:49,124 - #8 void
INFO  18:58:49,127 - #47 main
INFO  18:58:49,128 - #31 (
INFO  18:58:49,130 - #32 )
INFO  18:58:49,132 - #35 {
INFO  18:58:49,133 - #47 mat
INFO  18:58:49,135 - #24 =
INFO  18:58:49,139 - #4 new
INFO  18:58:49,143 - #47 int
INFO  18:58:49,143 - #33 [
INFO  18:58:49,143 - #46 2
INFO  18:58:49,143 - #34 ]
INFO  18:58:49,144 - #33 [
INFO  18:58:49,144 - #46 3
INFO  18:58:49,144 - #34 ]
INFO  18:58:49,144 - #27 ;
INFO  18:58:49,146 - #47 c
INFO  18:58:49,147 - #33 [
INFO  18:58:49,147 - #46 2
INFO  18:58:49,147 - #34 ]
INFO  18:58:49,147 - #33 [
INFO  18:58:49,149 - #46 3
INFO  18:58:49,150 - #34 ]
INFO  18:58:49,150 - #24 =
INFO  18:58:49,151 - #46 5
INFO  18:58:49,151 - #27 ;
INFO  18:58:49,151 - #36 }
INFO  18:58:49,152 - #36 }
INFO  18:58:49,156 - ================= PARSIRANO STABLO =================
INFO  18:58:49,174 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  Declarations(
    Declarations(
      Declarations(
        NoDeclarations(
        ) [NoDeclarations]
        VariableDeclaration(
          VarDeclaration(
            Type(
             int
            ) [Type]
            OneVarDeclaration(
              AddVarDecl1(
               niz
                Brackets(
                ) [Brackets]
              ) [AddVarDecl1]
            ) [OneVarDeclaration]
          ) [VarDeclaration]
        ) [VariableDeclaration]
      ) [Declarations]
      VariableDeclaration(
        VarDeclaration(
          Type(
           int
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             mat
              TwoBrackets(
              ) [TwoBrackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [VariableDeclaration]
    ) [Declarations]
    VariableDeclaration(
      VarDeclaration(
        Type(
         char
        ) [Type]
        OneVarDeclaration(
          AddVarDecl1(
           c
            NoBrackets(
            ) [NoBrackets]
          ) [AddVarDecl1]
        ) [OneVarDeclaration]
      ) [VarDeclaration]
    ) [VariableDeclaration]
  ) [Declarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      NoVarDeclarations(
      ) [NoVarDeclarations]
      Statements(
        Statements(
          NoStatements(
          ) [NoStatements]
          DesignatorStat(
            DesignatorExpr(
              Designator(
                WithoutNamespace(
                 mat
                ) [WithoutNamespace]
                NoArrayExpression(
                ) [NoArrayExpression]
              ) [Designator]
              AssignOperation(
              ) [AssignOperation]
              PositiveStartExpr(
                SingleTerm(
                  NewTypeMat(
                    Type(
                     int
                    ) [Type]
                    PositiveStartExpr(
                      SingleTerm(
                        NumberConst(
                         2
                        ) [NumberConst]
                      ) [SingleTerm]
                    ) [PositiveStartExpr]
                    PositiveStartExpr(
                      SingleTerm(
                        NumberConst(
                         3
                        ) [NumberConst]
                      ) [SingleTerm]
                    ) [PositiveStartExpr]
                  ) [NewTypeMat]
                ) [SingleTerm]
              ) [PositiveStartExpr]
            ) [DesignatorExpr]
          ) [DesignatorStat]
        ) [Statements]
        DesignatorStat(
          DesignatorExpr(
            Designator(
              WithoutNamespace(
               c
              ) [WithoutNamespace]
              AddMatrixExpression(
                BraExpr(
                  PositiveStartExpr(
                    SingleTerm(
                      NumberConst(
                       2
                      ) [NumberConst]
                    ) [SingleTerm]
                  ) [PositiveStartExpr]
                ) [BraExpr]
                BraExpr(
                  PositiveStartExpr(
                    SingleTerm(
                      NumberConst(
                       3
                      ) [NumberConst]
                    ) [SingleTerm]
                  ) [PositiveStartExpr]
                ) [BraExpr]
              ) [AddMatrixExpression]
            ) [Designator]
            AssignOperation(
            ) [AssignOperation]
            PositiveStartExpr(
              SingleTerm(
                NumberConst(
                 5
                ) [NumberConst]
              ) [SingleTerm]
            ) [PositiveStartExpr]
          ) [DesignatorExpr]
        ) [DesignatorStat]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  18:58:49,176 - ================ Semanticka obrada ===================
INFO  18:58:49,233 - NEW SYMBOL
INFO  18:58:49,234 - Var niz: Arr of int, 0, 0 on line 2
INFO  18:58:49,234 - NEW SYMBOL
INFO  18:58:49,234 - Var mat: Matrix of int, 1, 0 on line 3
INFO  18:58:49,234 - NEW SYMBOL
INFO  18:58:49,234 - Var c: char, 2, 0 on line 4
INFO  18:58:49,234 - Var mat: Matrix of int, 1, 0 on line 12
INFO  18:58:49,236 - Var c: char, 2, 0 on line 13
INFO  19:04:59,985 - Compiling source file: C:\Users\elena\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  19:04:59,987 - ================= LEKSICKA ANALIZA =================
INFO  19:05:00,062 - #2 program
INFO  19:05:00,062 - #47 test301
INFO  19:05:00,063 - #47 int
INFO  19:05:00,065 - #47 niz
INFO  19:05:00,066 - #33 [
INFO  19:05:00,066 - #34 ]
INFO  19:05:00,067 - #27 ;
INFO  19:05:00,069 - #47 int
INFO  19:05:00,069 - #47 mat
INFO  19:05:00,070 - #33 [
INFO  19:05:00,070 - #34 ]
INFO  19:05:00,070 - #33 [
INFO  19:05:00,070 - #34 ]
INFO  19:05:00,070 - #27 ;
INFO  19:05:00,071 - #47 char
INFO  19:05:00,072 - #47 c
INFO  19:05:00,072 - #27 ;
INFO  19:05:00,073 - #35 {
INFO  19:05:00,073 - #8 void
INFO  19:05:00,074 - #47 main
INFO  19:05:00,076 - #31 (
INFO  19:05:00,077 - #32 )
INFO  19:05:00,078 - #35 {
INFO  19:05:00,079 - #47 mat
INFO  19:05:00,080 - #24 =
INFO  19:05:00,084 - #4 new
INFO  19:05:00,086 - #47 int
INFO  19:05:00,086 - #33 [
INFO  19:05:00,086 - #46 2
INFO  19:05:00,086 - #34 ]
INFO  19:05:00,087 - #33 [
INFO  19:05:00,088 - #46 3
INFO  19:05:00,088 - #34 ]
INFO  19:05:00,088 - #27 ;
INFO  19:05:00,088 - #47 c
INFO  19:05:00,089 - #33 [
INFO  19:05:00,089 - #46 2
INFO  19:05:00,089 - #34 ]
INFO  19:05:00,090 - #33 [
INFO  19:05:00,091 - #46 3
INFO  19:05:00,091 - #34 ]
INFO  19:05:00,092 - #24 =
INFO  19:05:00,092 - #46 5
INFO  19:05:00,092 - #27 ;
INFO  19:05:00,093 - #36 }
INFO  19:05:00,093 - #36 }
INFO  19:05:00,097 - ================= PARSIRANO STABLO =================
INFO  19:05:00,107 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  Declarations(
    Declarations(
      Declarations(
        NoDeclarations(
        ) [NoDeclarations]
        VariableDeclaration(
          VarDeclaration(
            Type(
             int
            ) [Type]
            OneVarDeclaration(
              AddVarDecl1(
               niz
                Brackets(
                ) [Brackets]
              ) [AddVarDecl1]
            ) [OneVarDeclaration]
          ) [VarDeclaration]
        ) [VariableDeclaration]
      ) [Declarations]
      VariableDeclaration(
        VarDeclaration(
          Type(
           int
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             mat
              TwoBrackets(
              ) [TwoBrackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [VariableDeclaration]
    ) [Declarations]
    VariableDeclaration(
      VarDeclaration(
        Type(
         char
        ) [Type]
        OneVarDeclaration(
          AddVarDecl1(
           c
            NoBrackets(
            ) [NoBrackets]
          ) [AddVarDecl1]
        ) [OneVarDeclaration]
      ) [VarDeclaration]
    ) [VariableDeclaration]
  ) [Declarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      NoVarDeclarations(
      ) [NoVarDeclarations]
      Statements(
        Statements(
          NoStatements(
          ) [NoStatements]
          DesignatorStat(
            DesignatorExpr(
              Designator(
                WithoutNamespace(
                 mat
                ) [WithoutNamespace]
                NoArrayExpression(
                ) [NoArrayExpression]
              ) [Designator]
              AssignOperation(
              ) [AssignOperation]
              PositiveStartExpr(
                SingleTerm(
                  NewTypeMat(
                    Type(
                     int
                    ) [Type]
                    PositiveStartExpr(
                      SingleTerm(
                        NumberConst(
                         2
                        ) [NumberConst]
                      ) [SingleTerm]
                    ) [PositiveStartExpr]
                    PositiveStartExpr(
                      SingleTerm(
                        NumberConst(
                         3
                        ) [NumberConst]
                      ) [SingleTerm]
                    ) [PositiveStartExpr]
                  ) [NewTypeMat]
                ) [SingleTerm]
              ) [PositiveStartExpr]
            ) [DesignatorExpr]
          ) [DesignatorStat]
        ) [Statements]
        DesignatorStat(
          DesignatorExpr(
            Designator(
              WithoutNamespace(
               c
              ) [WithoutNamespace]
              AddMatrixExpression(
                BraExpr(
                  PositiveStartExpr(
                    SingleTerm(
                      NumberConst(
                       2
                      ) [NumberConst]
                    ) [SingleTerm]
                  ) [PositiveStartExpr]
                ) [BraExpr]
                BraExpr(
                  PositiveStartExpr(
                    SingleTerm(
                      NumberConst(
                       3
                      ) [NumberConst]
                    ) [SingleTerm]
                  ) [PositiveStartExpr]
                ) [BraExpr]
              ) [AddMatrixExpression]
            ) [Designator]
            AssignOperation(
            ) [AssignOperation]
            PositiveStartExpr(
              SingleTerm(
                NumberConst(
                 5
                ) [NumberConst]
              ) [SingleTerm]
            ) [PositiveStartExpr]
          ) [DesignatorExpr]
        ) [DesignatorStat]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  19:05:00,107 - ================ Semanticka obrada ===================
INFO  19:05:00,114 - NEW SYMBOL
INFO  19:05:00,114 - Var niz: Arr of int, 0, 0 on line 2
INFO  19:05:00,114 - NEW SYMBOL
INFO  19:05:00,114 - Var mat: Matrix of int, 1, 0 on line 3
INFO  19:05:00,114 - NEW SYMBOL
INFO  19:05:00,114 - Var c: char, 2, 0 on line 4
INFO  19:05:00,115 - Var mat: Matrix of int, 1, 0 on line 12
INFO  19:05:00,115 - Var c: char, 2, 0 on line 13
ERROR 19:05:00,115 - Designator must be a matrix on line 13
ERROR 19:05:00,115 - Error: Types not matching  on line 13
INFO  19:05:00,116 - Meth main: notype, 0, 0 on line 1
ERROR 19:05:00,116 - Parser FAIL!
INFO  19:09:18,278 - Compiling source file: C:\Users\elena\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  19:09:18,279 - ================= LEKSICKA ANALIZA =================
INFO  19:09:18,333 - #2 program
INFO  19:09:18,333 - #47 test301
INFO  19:09:18,333 - #47 int
INFO  19:09:18,335 - #47 niz
INFO  19:09:18,336 - #33 [
INFO  19:09:18,336 - #34 ]
INFO  19:09:18,336 - #27 ;
INFO  19:09:18,338 - #47 int
INFO  19:09:18,339 - #47 mat
INFO  19:09:18,339 - #33 [
INFO  19:09:18,339 - #34 ]
INFO  19:09:18,339 - #33 [
INFO  19:09:18,339 - #34 ]
INFO  19:09:18,339 - #27 ;
INFO  19:09:18,340 - #47 char
INFO  19:09:18,340 - #47 c
INFO  19:09:18,340 - #27 ;
INFO  19:09:18,341 - #35 {
INFO  19:09:18,341 - #8 void
INFO  19:09:18,341 - #47 main
INFO  19:09:18,343 - #31 (
INFO  19:09:18,344 - #32 )
INFO  19:09:18,345 - #35 {
INFO  19:09:18,346 - #47 mat
INFO  19:09:18,347 - #24 =
INFO  19:09:18,350 - #4 new
INFO  19:09:18,351 - #47 int
INFO  19:09:18,352 - #33 [
INFO  19:09:18,352 - #46 2
INFO  19:09:18,352 - #34 ]
INFO  19:09:18,352 - #33 [
INFO  19:09:18,352 - #46 3
INFO  19:09:18,352 - #34 ]
INFO  19:09:18,353 - #27 ;
INFO  19:09:18,353 - #47 c
INFO  19:09:18,353 - #33 [
INFO  19:09:18,353 - #46 2
INFO  19:09:18,354 - #34 ]
INFO  19:09:18,354 - #33 [
INFO  19:09:18,355 - #48 3
INFO  19:09:18,355 - #34 ]
INFO  19:09:18,356 - #24 =
INFO  19:09:18,356 - #46 5
INFO  19:09:18,356 - #27 ;
INFO  19:09:18,356 - #36 }
INFO  19:09:18,356 - #36 }
INFO  19:09:18,359 - ================= PARSIRANO STABLO =================
INFO  19:09:18,366 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  Declarations(
    Declarations(
      Declarations(
        NoDeclarations(
        ) [NoDeclarations]
        VariableDeclaration(
          VarDeclaration(
            Type(
             int
            ) [Type]
            OneVarDeclaration(
              AddVarDecl1(
               niz
                Brackets(
                ) [Brackets]
              ) [AddVarDecl1]
            ) [OneVarDeclaration]
          ) [VarDeclaration]
        ) [VariableDeclaration]
      ) [Declarations]
      VariableDeclaration(
        VarDeclaration(
          Type(
           int
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             mat
              TwoBrackets(
              ) [TwoBrackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [VariableDeclaration]
    ) [Declarations]
    VariableDeclaration(
      VarDeclaration(
        Type(
         char
        ) [Type]
        OneVarDeclaration(
          AddVarDecl1(
           c
            NoBrackets(
            ) [NoBrackets]
          ) [AddVarDecl1]
        ) [OneVarDeclaration]
      ) [VarDeclaration]
    ) [VariableDeclaration]
  ) [Declarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      NoVarDeclarations(
      ) [NoVarDeclarations]
      Statements(
        Statements(
          NoStatements(
          ) [NoStatements]
          DesignatorStat(
            DesignatorExpr(
              Designator(
                WithoutNamespace(
                 mat
                ) [WithoutNamespace]
                NoArrayExpression(
                ) [NoArrayExpression]
              ) [Designator]
              AssignOperation(
              ) [AssignOperation]
              PositiveStartExpr(
                SingleTerm(
                  NewTypeMat(
                    Type(
                     int
                    ) [Type]
                    PositiveStartExpr(
                      SingleTerm(
                        NumberConst(
                         2
                        ) [NumberConst]
                      ) [SingleTerm]
                    ) [PositiveStartExpr]
                    PositiveStartExpr(
                      SingleTerm(
                        NumberConst(
                         3
                        ) [NumberConst]
                      ) [SingleTerm]
                    ) [PositiveStartExpr]
                  ) [NewTypeMat]
                ) [SingleTerm]
              ) [PositiveStartExpr]
            ) [DesignatorExpr]
          ) [DesignatorStat]
        ) [Statements]
        DesignatorStat(
          DesignatorExpr(
            Designator(
              WithoutNamespace(
               c
              ) [WithoutNamespace]
              AddMatrixExpression(
                BraExpr(
                  PositiveStartExpr(
                    SingleTerm(
                      NumberConst(
                       2
                      ) [NumberConst]
                    ) [SingleTerm]
                  ) [PositiveStartExpr]
                ) [BraExpr]
                BraExpr(
                  PositiveStartExpr(
                    SingleTerm(
                      CharacterConst(
                       3
                      ) [CharacterConst]
                    ) [SingleTerm]
                  ) [PositiveStartExpr]
                ) [BraExpr]
              ) [AddMatrixExpression]
            ) [Designator]
            AssignOperation(
            ) [AssignOperation]
            PositiveStartExpr(
              SingleTerm(
                NumberConst(
                 5
                ) [NumberConst]
              ) [SingleTerm]
            ) [PositiveStartExpr]
          ) [DesignatorExpr]
        ) [DesignatorStat]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  19:09:18,367 - ================ Semanticka obrada ===================
INFO  19:09:18,371 - NEW SYMBOL
INFO  19:09:18,372 - Var niz: Arr of int, 0, 0 on line 2
INFO  19:09:18,372 - NEW SYMBOL
INFO  19:09:18,372 - Var mat: Matrix of int, 1, 0 on line 3
INFO  19:09:18,372 - NEW SYMBOL
INFO  19:09:18,372 - Var c: char, 2, 0 on line 4
INFO  19:09:18,372 - Var mat: Matrix of int, 1, 0 on line 12
INFO  19:09:18,372 - Var c: char, 2, 0 on line 13
ERROR 19:09:18,372 - Designator must be a matrix on line 13
ERROR 19:09:18,372 - Matrix size inside [] must be an Int on line 13
ERROR 19:09:18,372 - Error: Types not matching  on line 13
INFO  19:09:18,374 - Meth main: notype, 0, 0 on line 1
ERROR 19:09:18,374 - Parser FAIL!
INFO  19:14:35,276 - Compiling source file: C:\Users\elena\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  19:14:35,277 - ================= LEKSICKA ANALIZA =================
INFO  19:14:35,336 - #2 program
INFO  19:14:35,337 - #47 test301
INFO  19:14:35,337 - #47 int
INFO  19:14:35,340 - #47 niz
INFO  19:14:35,343 - #33 [
INFO  19:14:35,343 - #34 ]
INFO  19:14:35,343 - #27 ;
INFO  19:14:35,345 - #47 int
INFO  19:14:35,346 - #47 mat
INFO  19:14:35,346 - #33 [
INFO  19:14:35,346 - #34 ]
INFO  19:14:35,346 - #33 [
INFO  19:14:35,346 - #34 ]
INFO  19:14:35,347 - #27 ;
INFO  19:14:35,348 - #47 char
INFO  19:14:35,348 - #47 c
INFO  19:14:35,348 - #27 ;
INFO  19:14:35,350 - #35 {
INFO  19:14:35,350 - #8 void
INFO  19:14:35,352 - #47 main
INFO  19:14:35,354 - #31 (
INFO  19:14:35,356 - #32 )
INFO  19:14:35,358 - #35 {
INFO  19:14:35,359 - #47 mat
INFO  19:14:35,360 - #24 =
INFO  19:14:35,362 - #4 new
INFO  19:14:35,364 - #47 int
INFO  19:14:35,364 - #33 [
INFO  19:14:35,365 - #46 2
INFO  19:14:35,365 - #34 ]
INFO  19:14:35,365 - #33 [
INFO  19:14:35,365 - #46 3
INFO  19:14:35,366 - #34 ]
INFO  19:14:35,366 - #27 ;
INFO  19:14:35,366 - #47 c
INFO  19:14:35,367 - #33 [
INFO  19:14:35,367 - #46 2
INFO  19:14:35,367 - #34 ]
INFO  19:14:35,367 - #33 [
INFO  19:14:35,371 - #48 3
INFO  19:14:35,371 - #34 ]
INFO  19:14:35,372 - #24 =
INFO  19:14:35,372 - #46 5
INFO  19:14:35,373 - #27 ;
INFO  19:14:35,373 - #36 }
INFO  19:14:35,373 - #36 }
INFO  19:14:35,378 - ================= PARSIRANO STABLO =================
INFO  19:14:35,387 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  Declarations(
    Declarations(
      Declarations(
        NoDeclarations(
        ) [NoDeclarations]
        VariableDeclaration(
          VarDeclaration(
            Type(
             int
            ) [Type]
            OneVarDeclaration(
              AddVarDecl1(
               niz
                Brackets(
                ) [Brackets]
              ) [AddVarDecl1]
            ) [OneVarDeclaration]
          ) [VarDeclaration]
        ) [VariableDeclaration]
      ) [Declarations]
      VariableDeclaration(
        VarDeclaration(
          Type(
           int
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             mat
              TwoBrackets(
              ) [TwoBrackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [VariableDeclaration]
    ) [Declarations]
    VariableDeclaration(
      VarDeclaration(
        Type(
         char
        ) [Type]
        OneVarDeclaration(
          AddVarDecl1(
           c
            NoBrackets(
            ) [NoBrackets]
          ) [AddVarDecl1]
        ) [OneVarDeclaration]
      ) [VarDeclaration]
    ) [VariableDeclaration]
  ) [Declarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      NoVarDeclarations(
      ) [NoVarDeclarations]
      Statements(
        Statements(
          NoStatements(
          ) [NoStatements]
          DesignatorStat(
            DesignatorExpr(
              Designator(
                WithoutNamespace(
                 mat
                ) [WithoutNamespace]
                NoArrayExpression(
                ) [NoArrayExpression]
              ) [Designator]
              AssignOperation(
              ) [AssignOperation]
              PositiveStartExpr(
                SingleTerm(
                  NewTypeMat(
                    Type(
                     int
                    ) [Type]
                    PositiveStartExpr(
                      SingleTerm(
                        NumberConst(
                         2
                        ) [NumberConst]
                      ) [SingleTerm]
                    ) [PositiveStartExpr]
                    PositiveStartExpr(
                      SingleTerm(
                        NumberConst(
                         3
                        ) [NumberConst]
                      ) [SingleTerm]
                    ) [PositiveStartExpr]
                  ) [NewTypeMat]
                ) [SingleTerm]
              ) [PositiveStartExpr]
            ) [DesignatorExpr]
          ) [DesignatorStat]
        ) [Statements]
        DesignatorStat(
          DesignatorExpr(
            Designator(
              WithoutNamespace(
               c
              ) [WithoutNamespace]
              AddMatrixExpression(
                BraExpr(
                  PositiveStartExpr(
                    SingleTerm(
                      NumberConst(
                       2
                      ) [NumberConst]
                    ) [SingleTerm]
                  ) [PositiveStartExpr]
                ) [BraExpr]
                BraExpr(
                  PositiveStartExpr(
                    SingleTerm(
                      CharacterConst(
                       3
                      ) [CharacterConst]
                    ) [SingleTerm]
                  ) [PositiveStartExpr]
                ) [BraExpr]
              ) [AddMatrixExpression]
            ) [Designator]
            AssignOperation(
            ) [AssignOperation]
            PositiveStartExpr(
              SingleTerm(
                NumberConst(
                 5
                ) [NumberConst]
              ) [SingleTerm]
            ) [PositiveStartExpr]
          ) [DesignatorExpr]
        ) [DesignatorStat]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  19:14:35,388 - ================ Semanticka obrada ===================
INFO  19:14:35,397 - NEW SYMBOL
INFO  19:14:35,398 - Var niz: Arr of int, 0, 0 on line 2
INFO  19:14:35,398 - NEW SYMBOL
INFO  19:14:35,398 - Var mat: Matrix of int, 1, 0 on line 3
INFO  19:14:35,398 - NEW SYMBOL
INFO  19:14:35,399 - Var c: char, 2, 0 on line 4
INFO  19:14:35,399 - Var mat: Matrix of int, 1, 0 on line 12
INFO  19:14:35,399 - Var c: char, 2, 0 on line 13
ERROR 19:14:35,400 - Designator must be a matrix on line 13
ERROR 19:14:35,400 - Matrix size inside [] must be an Int on line 13
ERROR 19:14:35,400 - Types not matching  on line 13
INFO  19:14:35,401 - Meth main: notype, 0, 0 on line 1
ERROR 19:14:35,401 - Parser FAIL!
INFO  19:14:55,156 - Compiling source file: C:\Users\elena\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  19:14:55,157 - ================= LEKSICKA ANALIZA =================
INFO  19:14:55,212 - #2 program
INFO  19:14:55,212 - #47 test301
INFO  19:14:55,212 - #47 int
INFO  19:14:55,215 - #47 niz
INFO  19:14:55,215 - #33 [
INFO  19:14:55,217 - #34 ]
INFO  19:14:55,217 - #27 ;
INFO  19:14:55,218 - #47 int
INFO  19:14:55,218 - #47 mat
INFO  19:14:55,220 - #33 [
INFO  19:14:55,220 - #34 ]
INFO  19:14:55,220 - #33 [
INFO  19:14:55,220 - #34 ]
INFO  19:14:55,220 - #27 ;
INFO  19:14:55,220 - #47 char
INFO  19:14:55,220 - #47 c
INFO  19:14:55,222 - #27 ;
INFO  19:14:55,222 - #35 {
INFO  19:14:55,223 - #8 void
INFO  19:14:55,224 - #47 main
INFO  19:14:55,224 - #31 (
INFO  19:14:55,225 - #32 )
INFO  19:14:55,226 - #35 {
INFO  19:14:55,227 - #47 mat
INFO  19:14:55,228 - #24 =
INFO  19:14:55,231 - #4 new
INFO  19:14:55,233 - #47 int
INFO  19:14:55,233 - #33 [
INFO  19:14:55,233 - #46 2
INFO  19:14:55,233 - #34 ]
INFO  19:14:55,234 - #33 [
INFO  19:14:55,234 - #46 3
INFO  19:14:55,234 - #34 ]
INFO  19:14:55,234 - #27 ;
INFO  19:14:55,235 - #47 c
INFO  19:14:55,235 - #33 [
INFO  19:14:55,236 - #46 2
INFO  19:14:55,236 - #34 ]
INFO  19:14:55,236 - #33 [
INFO  19:14:55,237 - #46 3
INFO  19:14:55,237 - #34 ]
INFO  19:14:55,237 - #24 =
INFO  19:14:55,239 - #46 5
INFO  19:14:55,239 - #27 ;
INFO  19:14:55,239 - #36 }
INFO  19:14:55,239 - #36 }
INFO  19:14:55,242 - ================= PARSIRANO STABLO =================
INFO  19:14:55,249 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  Declarations(
    Declarations(
      Declarations(
        NoDeclarations(
        ) [NoDeclarations]
        VariableDeclaration(
          VarDeclaration(
            Type(
             int
            ) [Type]
            OneVarDeclaration(
              AddVarDecl1(
               niz
                Brackets(
                ) [Brackets]
              ) [AddVarDecl1]
            ) [OneVarDeclaration]
          ) [VarDeclaration]
        ) [VariableDeclaration]
      ) [Declarations]
      VariableDeclaration(
        VarDeclaration(
          Type(
           int
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             mat
              TwoBrackets(
              ) [TwoBrackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [VariableDeclaration]
    ) [Declarations]
    VariableDeclaration(
      VarDeclaration(
        Type(
         char
        ) [Type]
        OneVarDeclaration(
          AddVarDecl1(
           c
            NoBrackets(
            ) [NoBrackets]
          ) [AddVarDecl1]
        ) [OneVarDeclaration]
      ) [VarDeclaration]
    ) [VariableDeclaration]
  ) [Declarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      NoVarDeclarations(
      ) [NoVarDeclarations]
      Statements(
        Statements(
          NoStatements(
          ) [NoStatements]
          DesignatorStat(
            DesignatorExpr(
              Designator(
                WithoutNamespace(
                 mat
                ) [WithoutNamespace]
                NoArrayExpression(
                ) [NoArrayExpression]
              ) [Designator]
              AssignOperation(
              ) [AssignOperation]
              PositiveStartExpr(
                SingleTerm(
                  NewTypeMat(
                    Type(
                     int
                    ) [Type]
                    PositiveStartExpr(
                      SingleTerm(
                        NumberConst(
                         2
                        ) [NumberConst]
                      ) [SingleTerm]
                    ) [PositiveStartExpr]
                    PositiveStartExpr(
                      SingleTerm(
                        NumberConst(
                         3
                        ) [NumberConst]
                      ) [SingleTerm]
                    ) [PositiveStartExpr]
                  ) [NewTypeMat]
                ) [SingleTerm]
              ) [PositiveStartExpr]
            ) [DesignatorExpr]
          ) [DesignatorStat]
        ) [Statements]
        DesignatorStat(
          DesignatorExpr(
            Designator(
              WithoutNamespace(
               c
              ) [WithoutNamespace]
              AddMatrixExpression(
                BraExpr(
                  PositiveStartExpr(
                    SingleTerm(
                      NumberConst(
                       2
                      ) [NumberConst]
                    ) [SingleTerm]
                  ) [PositiveStartExpr]
                ) [BraExpr]
                BraExpr(
                  PositiveStartExpr(
                    SingleTerm(
                      NumberConst(
                       3
                      ) [NumberConst]
                    ) [SingleTerm]
                  ) [PositiveStartExpr]
                ) [BraExpr]
              ) [AddMatrixExpression]
            ) [Designator]
            AssignOperation(
            ) [AssignOperation]
            PositiveStartExpr(
              SingleTerm(
                NumberConst(
                 5
                ) [NumberConst]
              ) [SingleTerm]
            ) [PositiveStartExpr]
          ) [DesignatorExpr]
        ) [DesignatorStat]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  19:14:55,250 - ================ Semanticka obrada ===================
INFO  19:14:55,256 - NEW SYMBOL
INFO  19:14:55,256 - Var niz: Arr of int, 0, 0 on line 2
INFO  19:14:55,256 - NEW SYMBOL
INFO  19:14:55,256 - Var mat: Matrix of int, 1, 0 on line 3
INFO  19:14:55,256 - NEW SYMBOL
INFO  19:14:55,256 - Var c: char, 2, 0 on line 4
INFO  19:14:55,256 - Var mat: Matrix of int, 1, 0 on line 12
INFO  19:14:55,258 - Var c: char, 2, 0 on line 13
ERROR 19:14:55,258 - Designator must be a matrix on line 13
ERROR 19:14:55,258 - Types not matching  on line 13
INFO  19:14:55,258 - Meth main: notype, 0, 0 on line 1
ERROR 19:14:55,258 - Parser FAIL!
INFO  19:15:06,580 - Compiling source file: C:\Users\elena\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  19:15:06,582 - ================= LEKSICKA ANALIZA =================
INFO  19:15:06,629 - #2 program
INFO  19:15:06,629 - #47 test301
INFO  19:15:06,629 - #47 int
INFO  19:15:06,630 - #47 niz
INFO  19:15:06,631 - #33 [
INFO  19:15:06,631 - #34 ]
INFO  19:15:06,631 - #27 ;
INFO  19:15:06,633 - #47 int
INFO  19:15:06,633 - #47 mat
INFO  19:15:06,633 - #33 [
INFO  19:15:06,633 - #34 ]
INFO  19:15:06,633 - #33 [
INFO  19:15:06,633 - #34 ]
INFO  19:15:06,633 - #27 ;
INFO  19:15:06,635 - #47 char
INFO  19:15:06,635 - #47 c
INFO  19:15:06,635 - #27 ;
INFO  19:15:06,636 - #35 {
INFO  19:15:06,636 - #8 void
INFO  19:15:06,636 - #47 main
INFO  19:15:06,637 - #31 (
INFO  19:15:06,638 - #32 )
INFO  19:15:06,638 - #35 {
INFO  19:15:06,638 - #47 mat
INFO  19:15:06,639 - #24 =
INFO  19:15:06,640 - #4 new
INFO  19:15:06,641 - #47 int
INFO  19:15:06,641 - #33 [
INFO  19:15:06,641 - #46 2
INFO  19:15:06,643 - #34 ]
INFO  19:15:06,643 - #33 [
INFO  19:15:06,643 - #46 3
INFO  19:15:06,643 - #34 ]
INFO  19:15:06,643 - #27 ;
INFO  19:15:06,644 - #47 mat
INFO  19:15:06,644 - #33 [
INFO  19:15:06,644 - #46 2
INFO  19:15:06,644 - #34 ]
INFO  19:15:06,644 - #33 [
INFO  19:15:06,645 - #46 3
INFO  19:15:06,645 - #34 ]
INFO  19:15:06,645 - #24 =
INFO  19:15:06,645 - #46 5
INFO  19:15:06,645 - #27 ;
INFO  19:15:06,646 - #36 }
INFO  19:15:06,646 - #36 }
INFO  19:15:06,647 - ================= PARSIRANO STABLO =================
INFO  19:15:06,653 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  Declarations(
    Declarations(
      Declarations(
        NoDeclarations(
        ) [NoDeclarations]
        VariableDeclaration(
          VarDeclaration(
            Type(
             int
            ) [Type]
            OneVarDeclaration(
              AddVarDecl1(
               niz
                Brackets(
                ) [Brackets]
              ) [AddVarDecl1]
            ) [OneVarDeclaration]
          ) [VarDeclaration]
        ) [VariableDeclaration]
      ) [Declarations]
      VariableDeclaration(
        VarDeclaration(
          Type(
           int
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             mat
              TwoBrackets(
              ) [TwoBrackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [VariableDeclaration]
    ) [Declarations]
    VariableDeclaration(
      VarDeclaration(
        Type(
         char
        ) [Type]
        OneVarDeclaration(
          AddVarDecl1(
           c
            NoBrackets(
            ) [NoBrackets]
          ) [AddVarDecl1]
        ) [OneVarDeclaration]
      ) [VarDeclaration]
    ) [VariableDeclaration]
  ) [Declarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      NoVarDeclarations(
      ) [NoVarDeclarations]
      Statements(
        Statements(
          NoStatements(
          ) [NoStatements]
          DesignatorStat(
            DesignatorExpr(
              Designator(
                WithoutNamespace(
                 mat
                ) [WithoutNamespace]
                NoArrayExpression(
                ) [NoArrayExpression]
              ) [Designator]
              AssignOperation(
              ) [AssignOperation]
              PositiveStartExpr(
                SingleTerm(
                  NewTypeMat(
                    Type(
                     int
                    ) [Type]
                    PositiveStartExpr(
                      SingleTerm(
                        NumberConst(
                         2
                        ) [NumberConst]
                      ) [SingleTerm]
                    ) [PositiveStartExpr]
                    PositiveStartExpr(
                      SingleTerm(
                        NumberConst(
                         3
                        ) [NumberConst]
                      ) [SingleTerm]
                    ) [PositiveStartExpr]
                  ) [NewTypeMat]
                ) [SingleTerm]
              ) [PositiveStartExpr]
            ) [DesignatorExpr]
          ) [DesignatorStat]
        ) [Statements]
        DesignatorStat(
          DesignatorExpr(
            Designator(
              WithoutNamespace(
               mat
              ) [WithoutNamespace]
              AddMatrixExpression(
                BraExpr(
                  PositiveStartExpr(
                    SingleTerm(
                      NumberConst(
                       2
                      ) [NumberConst]
                    ) [SingleTerm]
                  ) [PositiveStartExpr]
                ) [BraExpr]
                BraExpr(
                  PositiveStartExpr(
                    SingleTerm(
                      NumberConst(
                       3
                      ) [NumberConst]
                    ) [SingleTerm]
                  ) [PositiveStartExpr]
                ) [BraExpr]
              ) [AddMatrixExpression]
            ) [Designator]
            AssignOperation(
            ) [AssignOperation]
            PositiveStartExpr(
              SingleTerm(
                NumberConst(
                 5
                ) [NumberConst]
              ) [SingleTerm]
            ) [PositiveStartExpr]
          ) [DesignatorExpr]
        ) [DesignatorStat]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  19:15:06,653 - ================ Semanticka obrada ===================
INFO  19:15:06,657 - NEW SYMBOL
INFO  19:15:06,657 - Var niz: Arr of int, 0, 0 on line 2
INFO  19:15:06,657 - NEW SYMBOL
INFO  19:15:06,657 - Var mat: Matrix of int, 1, 0 on line 3
INFO  19:15:06,657 - NEW SYMBOL
INFO  19:15:06,657 - Var c: char, 2, 0 on line 4
INFO  19:15:06,657 - Var mat: Matrix of int, 1, 0 on line 12
INFO  19:15:06,658 - Var mat: Matrix of int, 1, 0 on line 13
ERROR 19:15:06,658 - Types not matching  on line 13
INFO  19:15:06,658 - Meth main: notype, 0, 0 on line 1
ERROR 19:15:06,658 - Parser FAIL!
INFO  19:17:38,545 - Compiling source file: C:\Users\elena\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  19:17:38,548 - ================= LEKSICKA ANALIZA =================
INFO  19:17:38,610 - #2 program
INFO  19:17:38,610 - #47 test301
INFO  19:17:38,610 - #47 int
INFO  19:17:38,613 - #47 niz
INFO  19:17:38,615 - #33 [
INFO  19:17:38,615 - #34 ]
INFO  19:17:38,615 - #27 ;
INFO  19:17:38,616 - #47 int
INFO  19:17:38,617 - #47 mat
INFO  19:17:38,617 - #33 [
INFO  19:17:38,617 - #34 ]
INFO  19:17:38,618 - #33 [
INFO  19:17:38,618 - #34 ]
INFO  19:17:38,618 - #27 ;
INFO  19:17:38,619 - #47 char
INFO  19:17:38,619 - #47 c
INFO  19:17:38,619 - #27 ;
INFO  19:17:38,620 - #35 {
INFO  19:17:38,620 - #8 void
INFO  19:17:38,621 - #47 main
INFO  19:17:38,622 - #31 (
INFO  19:17:38,623 - #32 )
INFO  19:17:38,623 - #35 {
INFO  19:17:38,625 - #47 niz
INFO  19:17:38,625 - #24 =
INFO  19:17:38,628 - #4 new
INFO  19:17:38,629 - #47 int
INFO  19:17:38,629 - #33 [
INFO  19:17:38,629 - #46 5
INFO  19:17:38,629 - #34 ]
INFO  19:17:38,630 - #27 ;
INFO  19:17:38,632 - #47 niz
INFO  19:17:38,632 - #33 [
INFO  19:17:38,633 - #46 0
INFO  19:17:38,633 - #34 ]
INFO  19:17:38,633 - #24 =
INFO  19:17:38,634 - #46 1
INFO  19:17:38,634 - #27 ;
INFO  19:17:38,634 - #47 mat
INFO  19:17:38,635 - #24 =
INFO  19:17:38,635 - #4 new
INFO  19:17:38,635 - #47 int
INFO  19:17:38,635 - #33 [
INFO  19:17:38,635 - #46 2
INFO  19:17:38,635 - #34 ]
INFO  19:17:38,636 - #33 [
INFO  19:17:38,636 - #46 3
INFO  19:17:38,636 - #34 ]
INFO  19:17:38,636 - #27 ;
INFO  19:17:38,636 - #47 mat
INFO  19:17:38,636 - #33 [
INFO  19:17:38,636 - #46 2
INFO  19:17:38,637 - #34 ]
INFO  19:17:38,637 - #33 [
INFO  19:17:38,637 - #46 3
INFO  19:17:38,637 - #34 ]
INFO  19:17:38,637 - #24 =
INFO  19:17:38,637 - #46 5
INFO  19:17:38,638 - #27 ;
INFO  19:17:38,638 - #36 }
INFO  19:17:38,638 - #36 }
INFO  19:17:38,640 - ================= PARSIRANO STABLO =================
INFO  19:17:38,647 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  Declarations(
    Declarations(
      Declarations(
        NoDeclarations(
        ) [NoDeclarations]
        VariableDeclaration(
          VarDeclaration(
            Type(
             int
            ) [Type]
            OneVarDeclaration(
              AddVarDecl1(
               niz
                Brackets(
                ) [Brackets]
              ) [AddVarDecl1]
            ) [OneVarDeclaration]
          ) [VarDeclaration]
        ) [VariableDeclaration]
      ) [Declarations]
      VariableDeclaration(
        VarDeclaration(
          Type(
           int
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             mat
              TwoBrackets(
              ) [TwoBrackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [VariableDeclaration]
    ) [Declarations]
    VariableDeclaration(
      VarDeclaration(
        Type(
         char
        ) [Type]
        OneVarDeclaration(
          AddVarDecl1(
           c
            NoBrackets(
            ) [NoBrackets]
          ) [AddVarDecl1]
        ) [OneVarDeclaration]
      ) [VarDeclaration]
    ) [VariableDeclaration]
  ) [Declarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      NoVarDeclarations(
      ) [NoVarDeclarations]
      Statements(
        Statements(
          Statements(
            Statements(
              NoStatements(
              ) [NoStatements]
              DesignatorStat(
                DesignatorExpr(
                  Designator(
                    WithoutNamespace(
                     niz
                    ) [WithoutNamespace]
                    NoArrayExpression(
                    ) [NoArrayExpression]
                  ) [Designator]
                  AssignOperation(
                  ) [AssignOperation]
                  PositiveStartExpr(
                    SingleTerm(
                      NewType(
                        Type(
                         int
                        ) [Type]
                        PositiveStartExpr(
                          SingleTerm(
                            NumberConst(
                             5
                            ) [NumberConst]
                          ) [SingleTerm]
                        ) [PositiveStartExpr]
                      ) [NewType]
                    ) [SingleTerm]
                  ) [PositiveStartExpr]
                ) [DesignatorExpr]
              ) [DesignatorStat]
            ) [Statements]
            DesignatorStat(
              DesignatorExpr(
                Designator(
                  WithoutNamespace(
                   niz
                  ) [WithoutNamespace]
                  AddArrayExpression(
                    BraExpr(
                      PositiveStartExpr(
                        SingleTerm(
                          NumberConst(
                           0
                          ) [NumberConst]
                        ) [SingleTerm]
                      ) [PositiveStartExpr]
                    ) [BraExpr]
                  ) [AddArrayExpression]
                ) [Designator]
                AssignOperation(
                ) [AssignOperation]
                PositiveStartExpr(
                  SingleTerm(
                    NumberConst(
                     1
                    ) [NumberConst]
                  ) [SingleTerm]
                ) [PositiveStartExpr]
              ) [DesignatorExpr]
            ) [DesignatorStat]
          ) [Statements]
          DesignatorStat(
            DesignatorExpr(
              Designator(
                WithoutNamespace(
                 mat
                ) [WithoutNamespace]
                NoArrayExpression(
                ) [NoArrayExpression]
              ) [Designator]
              AssignOperation(
              ) [AssignOperation]
              PositiveStartExpr(
                SingleTerm(
                  NewTypeMat(
                    Type(
                     int
                    ) [Type]
                    PositiveStartExpr(
                      SingleTerm(
                        NumberConst(
                         2
                        ) [NumberConst]
                      ) [SingleTerm]
                    ) [PositiveStartExpr]
                    PositiveStartExpr(
                      SingleTerm(
                        NumberConst(
                         3
                        ) [NumberConst]
                      ) [SingleTerm]
                    ) [PositiveStartExpr]
                  ) [NewTypeMat]
                ) [SingleTerm]
              ) [PositiveStartExpr]
            ) [DesignatorExpr]
          ) [DesignatorStat]
        ) [Statements]
        DesignatorStat(
          DesignatorExpr(
            Designator(
              WithoutNamespace(
               mat
              ) [WithoutNamespace]
              AddMatrixExpression(
                BraExpr(
                  PositiveStartExpr(
                    SingleTerm(
                      NumberConst(
                       2
                      ) [NumberConst]
                    ) [SingleTerm]
                  ) [PositiveStartExpr]
                ) [BraExpr]
                BraExpr(
                  PositiveStartExpr(
                    SingleTerm(
                      NumberConst(
                       3
                      ) [NumberConst]
                    ) [SingleTerm]
                  ) [PositiveStartExpr]
                ) [BraExpr]
              ) [AddMatrixExpression]
            ) [Designator]
            AssignOperation(
            ) [AssignOperation]
            PositiveStartExpr(
              SingleTerm(
                NumberConst(
                 5
                ) [NumberConst]
              ) [SingleTerm]
            ) [PositiveStartExpr]
          ) [DesignatorExpr]
        ) [DesignatorStat]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  19:17:38,648 - ================ Semanticka obrada ===================
INFO  19:17:38,654 - NEW SYMBOL
INFO  19:17:38,654 - Var niz: Arr of int, 0, 0 on line 2
INFO  19:17:38,654 - NEW SYMBOL
INFO  19:17:38,654 - Var mat: Matrix of int, 1, 0 on line 3
INFO  19:17:38,654 - NEW SYMBOL
INFO  19:17:38,655 - Var c: char, 2, 0 on line 4
INFO  19:17:38,655 - Var niz: Arr of int, 0, 0 on line 10
INFO  19:17:38,656 - Var niz: Arr of int, 0, 0 on line 11
INFO  19:17:38,656 - Var mat: Matrix of int, 1, 0 on line 12
INFO  19:17:38,657 - Var mat: Matrix of int, 1, 0 on line 13
ERROR 19:17:38,657 - Types not matching  on line 13
INFO  19:17:38,657 - Meth main: notype, 0, 0 on line 1
ERROR 19:17:38,657 - Parser FAIL!
ERROR 19:19:50,405 - Designator must be a matrix on line 13
INFO  19:28:44,379 - Compiling source file: C:\Users\elena\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  19:28:44,380 - ================= LEKSICKA ANALIZA =================
INFO  19:28:44,419 - #2 program
INFO  19:28:44,419 - #47 test301
INFO  19:28:44,419 - #47 int
INFO  19:28:44,421 - #47 niz
INFO  19:28:44,421 - #33 [
INFO  19:28:44,421 - #34 ]
INFO  19:28:44,421 - #27 ;
INFO  19:28:44,422 - #47 int
INFO  19:28:44,422 - #47 mat
INFO  19:28:44,423 - #33 [
INFO  19:28:44,423 - #34 ]
INFO  19:28:44,423 - #33 [
INFO  19:28:44,423 - #34 ]
INFO  19:28:44,423 - #27 ;
INFO  19:28:44,423 - #47 char
INFO  19:28:44,423 - #47 c
INFO  19:28:44,423 - #27 ;
INFO  19:28:44,424 - #35 {
INFO  19:28:44,424 - #8 void
INFO  19:28:44,424 - #47 main
INFO  19:28:44,425 - #31 (
INFO  19:28:44,426 - #32 )
INFO  19:28:44,426 - #35 {
INFO  19:28:44,427 - #47 mat
INFO  19:28:44,427 - #24 =
INFO  19:28:44,429 - #4 new
INFO  19:28:44,430 - #47 int
INFO  19:28:44,430 - #33 [
INFO  19:28:44,431 - #46 2
INFO  19:28:44,431 - #34 ]
INFO  19:28:44,431 - #33 [
INFO  19:28:44,431 - #46 3
INFO  19:28:44,431 - #34 ]
INFO  19:28:44,431 - #27 ;
INFO  19:28:44,431 - #47 mat
INFO  19:28:44,432 - #33 [
INFO  19:28:44,432 - #46 2
INFO  19:28:44,432 - #34 ]
INFO  19:28:44,432 - #33 [
INFO  19:28:44,432 - #46 3
INFO  19:28:44,432 - #34 ]
INFO  19:28:44,432 - #24 =
INFO  19:28:44,433 - #46 5
INFO  19:28:44,433 - #27 ;
INFO  19:28:44,433 - #36 }
INFO  19:28:44,433 - #36 }
INFO  19:28:44,435 - ================= PARSIRANO STABLO =================
INFO  19:28:44,443 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  Declarations(
    Declarations(
      Declarations(
        NoDeclarations(
        ) [NoDeclarations]
        VariableDeclaration(
          VarDeclaration(
            Type(
             int
            ) [Type]
            OneVarDeclaration(
              AddVarDecl1(
               niz
                Brackets(
                ) [Brackets]
              ) [AddVarDecl1]
            ) [OneVarDeclaration]
          ) [VarDeclaration]
        ) [VariableDeclaration]
      ) [Declarations]
      VariableDeclaration(
        VarDeclaration(
          Type(
           int
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             mat
              TwoBrackets(
              ) [TwoBrackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [VariableDeclaration]
    ) [Declarations]
    VariableDeclaration(
      VarDeclaration(
        Type(
         char
        ) [Type]
        OneVarDeclaration(
          AddVarDecl1(
           c
            NoBrackets(
            ) [NoBrackets]
          ) [AddVarDecl1]
        ) [OneVarDeclaration]
      ) [VarDeclaration]
    ) [VariableDeclaration]
  ) [Declarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      NoVarDeclarations(
      ) [NoVarDeclarations]
      Statements(
        Statements(
          NoStatements(
          ) [NoStatements]
          DesignatorStat(
            DesignatorExpr(
              Designator(
                WithoutNamespace(
                 mat
                ) [WithoutNamespace]
                NoArrayExpression(
                ) [NoArrayExpression]
              ) [Designator]
              AssignOperation(
              ) [AssignOperation]
              PositiveStartExpr(
                SingleTerm(
                  NewTypeMat(
                    Type(
                     int
                    ) [Type]
                    PositiveStartExpr(
                      SingleTerm(
                        NumberConst(
                         2
                        ) [NumberConst]
                      ) [SingleTerm]
                    ) [PositiveStartExpr]
                    PositiveStartExpr(
                      SingleTerm(
                        NumberConst(
                         3
                        ) [NumberConst]
                      ) [SingleTerm]
                    ) [PositiveStartExpr]
                  ) [NewTypeMat]
                ) [SingleTerm]
              ) [PositiveStartExpr]
            ) [DesignatorExpr]
          ) [DesignatorStat]
        ) [Statements]
        DesignatorStat(
          DesignatorExpr(
            Designator(
              WithoutNamespace(
               mat
              ) [WithoutNamespace]
              AddMatrixExpression(
                BraExpr(
                  PositiveStartExpr(
                    SingleTerm(
                      NumberConst(
                       2
                      ) [NumberConst]
                    ) [SingleTerm]
                  ) [PositiveStartExpr]
                ) [BraExpr]
                BraExpr(
                  PositiveStartExpr(
                    SingleTerm(
                      NumberConst(
                       3
                      ) [NumberConst]
                    ) [SingleTerm]
                  ) [PositiveStartExpr]
                ) [BraExpr]
              ) [AddMatrixExpression]
            ) [Designator]
            AssignOperation(
            ) [AssignOperation]
            PositiveStartExpr(
              SingleTerm(
                NumberConst(
                 5
                ) [NumberConst]
              ) [SingleTerm]
            ) [PositiveStartExpr]
          ) [DesignatorExpr]
        ) [DesignatorStat]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  19:28:44,443 - ================ Semanticka obrada ===================
INFO  19:28:44,447 - NEW SYMBOL
INFO  19:28:44,447 - Var niz: Arr of int, 0, 0 on line 2
INFO  19:28:44,447 - NEW SYMBOL
INFO  19:28:44,447 - Var mat: Matrix of int, 1, 0 on line 3
INFO  19:28:44,447 - NEW SYMBOL
INFO  19:28:44,447 - Var c: char, 2, 0 on line 4
INFO  19:28:44,447 - Var mat: Matrix of int, 1, 0 on line 12
INFO  19:28:44,448 - Var mat: Matrix of int, 1, 0 on line 13
ERROR 19:28:44,448 - Types not matching  on line 13
INFO  19:28:44,448 - Meth main: notype, 0, 0 on line 1
ERROR 19:28:44,448 - Parser FAIL!
INFO  19:28:54,671 - Compiling source file: C:\Users\elena\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  19:28:54,673 - ================= LEKSICKA ANALIZA =================
INFO  19:28:54,751 - #2 program
INFO  19:28:54,751 - #47 test301
INFO  19:28:54,751 - #47 int
INFO  19:28:54,754 - #47 niz
INFO  19:28:54,757 - #33 [
INFO  19:28:54,757 - #34 ]
INFO  19:28:54,758 - #27 ;
INFO  19:28:54,760 - #47 int
INFO  19:28:54,760 - #47 mat
INFO  19:28:54,760 - #33 [
INFO  19:28:54,761 - #34 ]
INFO  19:28:54,761 - #33 [
INFO  19:28:54,761 - #34 ]
INFO  19:28:54,761 - #27 ;
INFO  19:28:54,762 - #47 char
INFO  19:28:54,762 - #47 c
INFO  19:28:54,762 - #27 ;
INFO  19:28:54,763 - #35 {
INFO  19:28:54,764 - #8 void
INFO  19:28:54,765 - #47 main
INFO  19:28:54,766 - #31 (
INFO  19:28:54,767 - #32 )
INFO  19:28:54,768 - #35 {
INFO  19:28:54,769 - #47 mat
INFO  19:28:54,770 - #24 =
INFO  19:28:54,772 - #4 new
INFO  19:28:54,775 - #47 int
INFO  19:28:54,775 - #33 [
INFO  19:28:54,775 - #46 2
INFO  19:28:54,775 - #34 ]
INFO  19:28:54,776 - #33 [
INFO  19:28:54,777 - #46 3
INFO  19:28:54,777 - #34 ]
INFO  19:28:54,777 - #27 ;
INFO  19:28:54,779 - #47 mat
INFO  19:28:54,779 - #33 [
INFO  19:28:54,780 - #46 2
INFO  19:28:54,780 - #34 ]
INFO  19:28:54,780 - #33 [
INFO  19:28:54,781 - #46 3
INFO  19:28:54,781 - #34 ]
INFO  19:28:54,782 - #24 =
INFO  19:28:54,782 - #46 5
INFO  19:28:54,782 - #27 ;
INFO  19:28:54,782 - #36 }
INFO  19:28:54,782 - #36 }
INFO  19:28:54,787 - ================= PARSIRANO STABLO =================
INFO  19:28:54,798 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  Declarations(
    Declarations(
      Declarations(
        NoDeclarations(
        ) [NoDeclarations]
        VariableDeclaration(
          VarDeclaration(
            Type(
             int
            ) [Type]
            OneVarDeclaration(
              AddVarDecl1(
               niz
                Brackets(
                ) [Brackets]
              ) [AddVarDecl1]
            ) [OneVarDeclaration]
          ) [VarDeclaration]
        ) [VariableDeclaration]
      ) [Declarations]
      VariableDeclaration(
        VarDeclaration(
          Type(
           int
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             mat
              TwoBrackets(
              ) [TwoBrackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [VariableDeclaration]
    ) [Declarations]
    VariableDeclaration(
      VarDeclaration(
        Type(
         char
        ) [Type]
        OneVarDeclaration(
          AddVarDecl1(
           c
            NoBrackets(
            ) [NoBrackets]
          ) [AddVarDecl1]
        ) [OneVarDeclaration]
      ) [VarDeclaration]
    ) [VariableDeclaration]
  ) [Declarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      NoVarDeclarations(
      ) [NoVarDeclarations]
      Statements(
        Statements(
          NoStatements(
          ) [NoStatements]
          DesignatorStat(
            DesignatorExpr(
              Designator(
                WithoutNamespace(
                 mat
                ) [WithoutNamespace]
                NoArrayExpression(
                ) [NoArrayExpression]
              ) [Designator]
              AssignOperation(
              ) [AssignOperation]
              PositiveStartExpr(
                SingleTerm(
                  NewTypeMat(
                    Type(
                     int
                    ) [Type]
                    PositiveStartExpr(
                      SingleTerm(
                        NumberConst(
                         2
                        ) [NumberConst]
                      ) [SingleTerm]
                    ) [PositiveStartExpr]
                    PositiveStartExpr(
                      SingleTerm(
                        NumberConst(
                         3
                        ) [NumberConst]
                      ) [SingleTerm]
                    ) [PositiveStartExpr]
                  ) [NewTypeMat]
                ) [SingleTerm]
              ) [PositiveStartExpr]
            ) [DesignatorExpr]
          ) [DesignatorStat]
        ) [Statements]
        DesignatorStat(
          DesignatorExpr(
            Designator(
              WithoutNamespace(
               mat
              ) [WithoutNamespace]
              AddMatrixExpression(
                BraExpr(
                  PositiveStartExpr(
                    SingleTerm(
                      NumberConst(
                       2
                      ) [NumberConst]
                    ) [SingleTerm]
                  ) [PositiveStartExpr]
                ) [BraExpr]
                BraExpr(
                  PositiveStartExpr(
                    SingleTerm(
                      NumberConst(
                       3
                      ) [NumberConst]
                    ) [SingleTerm]
                  ) [PositiveStartExpr]
                ) [BraExpr]
              ) [AddMatrixExpression]
            ) [Designator]
            AssignOperation(
            ) [AssignOperation]
            PositiveStartExpr(
              SingleTerm(
                NumberConst(
                 5
                ) [NumberConst]
              ) [SingleTerm]
            ) [PositiveStartExpr]
          ) [DesignatorExpr]
        ) [DesignatorStat]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  19:28:54,799 - ================ Semanticka obrada ===================
INFO  19:28:54,820 - NEW SYMBOL
INFO  19:28:54,821 - Var niz: Arr of int, 0, 0 on line 2
INFO  19:28:54,821 - NEW SYMBOL
INFO  19:28:54,821 - Var mat: Matrix of int, 1, 0 on line 3
INFO  19:28:54,821 - NEW SYMBOL
INFO  19:28:54,821 - Var c: char, 2, 0 on line 4
INFO  19:28:54,822 - Var mat: Matrix of int, 1, 0 on line 12
INFO  19:28:54,822 - Var mat: Matrix of int, 1, 0 on line 13
INFO  19:30:48,487 - Compiling source file: C:\Users\elena\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  19:30:48,489 - ================= LEKSICKA ANALIZA =================
INFO  19:30:48,550 - #2 program
INFO  19:30:48,550 - #47 test301
INFO  19:30:48,550 - #47 int
INFO  19:30:48,552 - #47 niz
INFO  19:30:48,552 - #33 [
INFO  19:30:48,553 - #34 ]
INFO  19:30:48,553 - #27 ;
INFO  19:30:48,554 - #47 int
INFO  19:30:48,554 - #47 mat
INFO  19:30:48,554 - #33 [
INFO  19:30:48,554 - #34 ]
INFO  19:30:48,556 - #33 [
INFO  19:30:48,556 - #34 ]
INFO  19:30:48,556 - #27 ;
INFO  19:30:48,556 - #47 char
INFO  19:30:48,556 - #47 c
INFO  19:30:48,556 - #27 ;
INFO  19:30:48,557 - #35 {
INFO  19:30:48,557 - #8 void
INFO  19:30:48,558 - #47 main
INFO  19:30:48,559 - #31 (
INFO  19:30:48,559 - #32 )
INFO  19:30:48,560 - #35 {
INFO  19:30:48,561 - #47 niz
INFO  19:30:48,563 - #24 =
INFO  19:30:48,565 - #4 new
INFO  19:30:48,566 - #47 int
INFO  19:30:48,566 - #33 [
INFO  19:30:48,566 - #46 5
INFO  19:30:48,566 - #34 ]
INFO  19:30:48,567 - #27 ;
INFO  19:30:48,567 - #47 niz
INFO  19:30:48,567 - #33 [
INFO  19:30:48,567 - #46 0
INFO  19:30:48,567 - #34 ]
INFO  19:30:48,567 - #24 =
INFO  19:30:48,568 - #46 1
INFO  19:30:48,568 - #27 ;
INFO  19:30:48,568 - #47 mat
INFO  19:30:48,568 - #24 =
INFO  19:30:48,568 - #4 new
INFO  19:30:48,568 - #47 int
INFO  19:30:48,568 - #33 [
INFO  19:30:48,569 - #46 2
INFO  19:30:48,569 - #34 ]
INFO  19:30:48,569 - #33 [
INFO  19:30:48,569 - #46 3
INFO  19:30:48,569 - #34 ]
INFO  19:30:48,569 - #27 ;
INFO  19:30:48,569 - #47 mat
INFO  19:30:48,569 - #33 [
INFO  19:30:48,569 - #46 2
INFO  19:30:48,570 - #34 ]
INFO  19:30:48,570 - #33 [
INFO  19:30:48,570 - #46 3
INFO  19:30:48,570 - #34 ]
INFO  19:30:48,570 - #24 =
INFO  19:30:48,570 - #46 5
INFO  19:30:48,570 - #27 ;
INFO  19:30:48,570 - #36 }
INFO  19:30:48,570 - #36 }
INFO  19:30:48,572 - ================= PARSIRANO STABLO =================
INFO  19:30:48,578 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  Declarations(
    Declarations(
      Declarations(
        NoDeclarations(
        ) [NoDeclarations]
        VariableDeclaration(
          VarDeclaration(
            Type(
             int
            ) [Type]
            OneVarDeclaration(
              AddVarDecl1(
               niz
                Brackets(
                ) [Brackets]
              ) [AddVarDecl1]
            ) [OneVarDeclaration]
          ) [VarDeclaration]
        ) [VariableDeclaration]
      ) [Declarations]
      VariableDeclaration(
        VarDeclaration(
          Type(
           int
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             mat
              TwoBrackets(
              ) [TwoBrackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [VariableDeclaration]
    ) [Declarations]
    VariableDeclaration(
      VarDeclaration(
        Type(
         char
        ) [Type]
        OneVarDeclaration(
          AddVarDecl1(
           c
            NoBrackets(
            ) [NoBrackets]
          ) [AddVarDecl1]
        ) [OneVarDeclaration]
      ) [VarDeclaration]
    ) [VariableDeclaration]
  ) [Declarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      NoVarDeclarations(
      ) [NoVarDeclarations]
      Statements(
        Statements(
          Statements(
            Statements(
              NoStatements(
              ) [NoStatements]
              DesignatorStat(
                DesignatorExpr(
                  Designator(
                    WithoutNamespace(
                     niz
                    ) [WithoutNamespace]
                    NoArrayExpression(
                    ) [NoArrayExpression]
                  ) [Designator]
                  AssignOperation(
                  ) [AssignOperation]
                  PositiveStartExpr(
                    SingleTerm(
                      NewType(
                        Type(
                         int
                        ) [Type]
                        PositiveStartExpr(
                          SingleTerm(
                            NumberConst(
                             5
                            ) [NumberConst]
                          ) [SingleTerm]
                        ) [PositiveStartExpr]
                      ) [NewType]
                    ) [SingleTerm]
                  ) [PositiveStartExpr]
                ) [DesignatorExpr]
              ) [DesignatorStat]
            ) [Statements]
            DesignatorStat(
              DesignatorExpr(
                Designator(
                  WithoutNamespace(
                   niz
                  ) [WithoutNamespace]
                  AddArrayExpression(
                    BraExpr(
                      PositiveStartExpr(
                        SingleTerm(
                          NumberConst(
                           0
                          ) [NumberConst]
                        ) [SingleTerm]
                      ) [PositiveStartExpr]
                    ) [BraExpr]
                  ) [AddArrayExpression]
                ) [Designator]
                AssignOperation(
                ) [AssignOperation]
                PositiveStartExpr(
                  SingleTerm(
                    NumberConst(
                     1
                    ) [NumberConst]
                  ) [SingleTerm]
                ) [PositiveStartExpr]
              ) [DesignatorExpr]
            ) [DesignatorStat]
          ) [Statements]
          DesignatorStat(
            DesignatorExpr(
              Designator(
                WithoutNamespace(
                 mat
                ) [WithoutNamespace]
                NoArrayExpression(
                ) [NoArrayExpression]
              ) [Designator]
              AssignOperation(
              ) [AssignOperation]
              PositiveStartExpr(
                SingleTerm(
                  NewTypeMat(
                    Type(
                     int
                    ) [Type]
                    PositiveStartExpr(
                      SingleTerm(
                        NumberConst(
                         2
                        ) [NumberConst]
                      ) [SingleTerm]
                    ) [PositiveStartExpr]
                    PositiveStartExpr(
                      SingleTerm(
                        NumberConst(
                         3
                        ) [NumberConst]
                      ) [SingleTerm]
                    ) [PositiveStartExpr]
                  ) [NewTypeMat]
                ) [SingleTerm]
              ) [PositiveStartExpr]
            ) [DesignatorExpr]
          ) [DesignatorStat]
        ) [Statements]
        DesignatorStat(
          DesignatorExpr(
            Designator(
              WithoutNamespace(
               mat
              ) [WithoutNamespace]
              AddMatrixExpression(
                BraExpr(
                  PositiveStartExpr(
                    SingleTerm(
                      NumberConst(
                       2
                      ) [NumberConst]
                    ) [SingleTerm]
                  ) [PositiveStartExpr]
                ) [BraExpr]
                BraExpr(
                  PositiveStartExpr(
                    SingleTerm(
                      NumberConst(
                       3
                      ) [NumberConst]
                    ) [SingleTerm]
                  ) [PositiveStartExpr]
                ) [BraExpr]
              ) [AddMatrixExpression]
            ) [Designator]
            AssignOperation(
            ) [AssignOperation]
            PositiveStartExpr(
              SingleTerm(
                NumberConst(
                 5
                ) [NumberConst]
              ) [SingleTerm]
            ) [PositiveStartExpr]
          ) [DesignatorExpr]
        ) [DesignatorStat]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  19:30:48,579 - ================ Semanticka obrada ===================
INFO  19:30:48,583 - NEW SYMBOL
INFO  19:30:48,583 - Var niz: Arr of int, 0, 0 on line 2
INFO  19:30:48,583 - NEW SYMBOL
INFO  19:30:48,583 - Var mat: Matrix of int, 1, 0 on line 3
INFO  19:30:48,583 - NEW SYMBOL
INFO  19:30:48,583 - Var c: char, 2, 0 on line 4
INFO  19:30:48,584 - Var niz: Arr of int, 0, 0 on line 10
INFO  19:30:48,584 - Var niz: Arr of int, 0, 0 on line 11
INFO  19:30:48,584 - Var mat: Matrix of int, 1, 0 on line 12
INFO  19:30:48,584 - Var mat: Matrix of int, 1, 0 on line 13
ERROR 19:30:48,584 - Types not matching  on line 13
INFO  19:30:48,584 - Meth main: notype, 0, 0 on line 1
ERROR 19:30:48,584 - Parser FAIL!
INFO  19:31:04,524 - Compiling source file: C:\Users\elena\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  19:31:04,525 - ================= LEKSICKA ANALIZA =================
INFO  19:31:04,579 - #2 program
INFO  19:31:04,579 - #47 test301
INFO  19:31:04,579 - #47 int
INFO  19:31:04,581 - #47 niz
INFO  19:31:04,582 - #33 [
INFO  19:31:04,582 - #34 ]
INFO  19:31:04,582 - #27 ;
INFO  19:31:04,585 - #47 int
INFO  19:31:04,585 - #47 mat
INFO  19:31:04,585 - #33 [
INFO  19:31:04,585 - #34 ]
INFO  19:31:04,585 - #33 [
INFO  19:31:04,585 - #34 ]
INFO  19:31:04,585 - #27 ;
INFO  19:31:04,586 - #47 char
INFO  19:31:04,586 - #47 c
INFO  19:31:04,586 - #27 ;
INFO  19:31:04,587 - #35 {
INFO  19:31:04,587 - #8 void
INFO  19:31:04,587 - #47 main
INFO  19:31:04,588 - #31 (
INFO  19:31:04,589 - #32 )
INFO  19:31:04,589 - #35 {
INFO  19:31:04,591 - #47 niz
INFO  19:31:04,591 - #24 =
INFO  19:31:04,592 - #4 new
INFO  19:31:04,594 - #47 int
INFO  19:31:04,594 - #33 [
INFO  19:31:04,594 - #46 5
INFO  19:31:04,594 - #34 ]
INFO  19:31:04,595 - #27 ;
INFO  19:31:04,596 - #47 niz
INFO  19:31:04,596 - #33 [
INFO  19:31:04,596 - #46 0
INFO  19:31:04,596 - #34 ]
INFO  19:31:04,596 - #24 =
INFO  19:31:04,597 - #46 1
INFO  19:31:04,597 - #27 ;
INFO  19:31:04,597 - #47 mat
INFO  19:31:04,597 - #24 =
INFO  19:31:04,597 - #4 new
INFO  19:31:04,598 - #47 int
INFO  19:31:04,598 - #33 [
INFO  19:31:04,598 - #46 2
INFO  19:31:04,598 - #34 ]
INFO  19:31:04,598 - #33 [
INFO  19:31:04,598 - #46 3
INFO  19:31:04,598 - #34 ]
INFO  19:31:04,598 - #27 ;
INFO  19:31:04,599 - #47 mat
INFO  19:31:04,599 - #33 [
INFO  19:31:04,599 - #46 2
INFO  19:31:04,599 - #34 ]
INFO  19:31:04,599 - #33 [
INFO  19:31:04,599 - #46 3
INFO  19:31:04,599 - #34 ]
INFO  19:31:04,600 - #24 =
INFO  19:31:04,600 - #46 5
INFO  19:31:04,600 - #27 ;
INFO  19:31:04,600 - #36 }
INFO  19:31:04,600 - #36 }
INFO  19:31:04,604 - ================= PARSIRANO STABLO =================
INFO  19:31:04,609 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  Declarations(
    Declarations(
      Declarations(
        NoDeclarations(
        ) [NoDeclarations]
        VariableDeclaration(
          VarDeclaration(
            Type(
             int
            ) [Type]
            OneVarDeclaration(
              AddVarDecl1(
               niz
                Brackets(
                ) [Brackets]
              ) [AddVarDecl1]
            ) [OneVarDeclaration]
          ) [VarDeclaration]
        ) [VariableDeclaration]
      ) [Declarations]
      VariableDeclaration(
        VarDeclaration(
          Type(
           int
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             mat
              TwoBrackets(
              ) [TwoBrackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [VariableDeclaration]
    ) [Declarations]
    VariableDeclaration(
      VarDeclaration(
        Type(
         char
        ) [Type]
        OneVarDeclaration(
          AddVarDecl1(
           c
            NoBrackets(
            ) [NoBrackets]
          ) [AddVarDecl1]
        ) [OneVarDeclaration]
      ) [VarDeclaration]
    ) [VariableDeclaration]
  ) [Declarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      NoVarDeclarations(
      ) [NoVarDeclarations]
      Statements(
        Statements(
          Statements(
            Statements(
              NoStatements(
              ) [NoStatements]
              DesignatorStat(
                DesignatorExpr(
                  Designator(
                    WithoutNamespace(
                     niz
                    ) [WithoutNamespace]
                    NoArrayExpression(
                    ) [NoArrayExpression]
                  ) [Designator]
                  AssignOperation(
                  ) [AssignOperation]
                  PositiveStartExpr(
                    SingleTerm(
                      NewType(
                        Type(
                         int
                        ) [Type]
                        PositiveStartExpr(
                          SingleTerm(
                            NumberConst(
                             5
                            ) [NumberConst]
                          ) [SingleTerm]
                        ) [PositiveStartExpr]
                      ) [NewType]
                    ) [SingleTerm]
                  ) [PositiveStartExpr]
                ) [DesignatorExpr]
              ) [DesignatorStat]
            ) [Statements]
            DesignatorStat(
              DesignatorExpr(
                Designator(
                  WithoutNamespace(
                   niz
                  ) [WithoutNamespace]
                  AddArrayExpression(
                    BraExpr(
                      PositiveStartExpr(
                        SingleTerm(
                          NumberConst(
                           0
                          ) [NumberConst]
                        ) [SingleTerm]
                      ) [PositiveStartExpr]
                    ) [BraExpr]
                  ) [AddArrayExpression]
                ) [Designator]
                AssignOperation(
                ) [AssignOperation]
                PositiveStartExpr(
                  SingleTerm(
                    NumberConst(
                     1
                    ) [NumberConst]
                  ) [SingleTerm]
                ) [PositiveStartExpr]
              ) [DesignatorExpr]
            ) [DesignatorStat]
          ) [Statements]
          DesignatorStat(
            DesignatorExpr(
              Designator(
                WithoutNamespace(
                 mat
                ) [WithoutNamespace]
                NoArrayExpression(
                ) [NoArrayExpression]
              ) [Designator]
              AssignOperation(
              ) [AssignOperation]
              PositiveStartExpr(
                SingleTerm(
                  NewTypeMat(
                    Type(
                     int
                    ) [Type]
                    PositiveStartExpr(
                      SingleTerm(
                        NumberConst(
                         2
                        ) [NumberConst]
                      ) [SingleTerm]
                    ) [PositiveStartExpr]
                    PositiveStartExpr(
                      SingleTerm(
                        NumberConst(
                         3
                        ) [NumberConst]
                      ) [SingleTerm]
                    ) [PositiveStartExpr]
                  ) [NewTypeMat]
                ) [SingleTerm]
              ) [PositiveStartExpr]
            ) [DesignatorExpr]
          ) [DesignatorStat]
        ) [Statements]
        DesignatorStat(
          DesignatorExpr(
            Designator(
              WithoutNamespace(
               mat
              ) [WithoutNamespace]
              AddMatrixExpression(
                BraExpr(
                  PositiveStartExpr(
                    SingleTerm(
                      NumberConst(
                       2
                      ) [NumberConst]
                    ) [SingleTerm]
                  ) [PositiveStartExpr]
                ) [BraExpr]
                BraExpr(
                  PositiveStartExpr(
                    SingleTerm(
                      NumberConst(
                       3
                      ) [NumberConst]
                    ) [SingleTerm]
                  ) [PositiveStartExpr]
                ) [BraExpr]
              ) [AddMatrixExpression]
            ) [Designator]
            AssignOperation(
            ) [AssignOperation]
            PositiveStartExpr(
              SingleTerm(
                NumberConst(
                 5
                ) [NumberConst]
              ) [SingleTerm]
            ) [PositiveStartExpr]
          ) [DesignatorExpr]
        ) [DesignatorStat]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  19:31:04,609 - ================ Semanticka obrada ===================
INFO  19:31:04,623 - NEW SYMBOL
INFO  19:31:04,623 - Var niz: Arr of int, 0, 0 on line 2
INFO  19:31:04,623 - NEW SYMBOL
INFO  19:31:04,623 - Var mat: Matrix of int, 1, 0 on line 3
INFO  19:31:04,623 - NEW SYMBOL
INFO  19:31:04,623 - Var c: char, 2, 0 on line 4
INFO  19:31:04,623 - Var niz: Arr of int, 0, 0 on line 10
INFO  19:31:04,624 - Var niz: Arr of int, 0, 0 on line 11
INFO  19:31:04,624 - Var mat: Matrix of int, 1, 0 on line 12
INFO  19:31:04,624 - Var mat: Matrix of int, 1, 0 on line 13
INFO  19:31:29,168 - Compiling source file: C:\Users\elena\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  19:31:29,169 - ================= LEKSICKA ANALIZA =================
INFO  19:31:29,214 - #2 program
INFO  19:31:29,214 - #47 test301
INFO  19:31:29,216 - #47 int
INFO  19:31:29,217 - #47 niz
INFO  19:31:29,218 - #33 [
INFO  19:31:29,218 - #34 ]
INFO  19:31:29,218 - #27 ;
INFO  19:31:29,219 - #47 int
INFO  19:31:29,220 - #47 mat
INFO  19:31:29,220 - #33 [
INFO  19:31:29,220 - #34 ]
INFO  19:31:29,220 - #33 [
INFO  19:31:29,220 - #34 ]
INFO  19:31:29,220 - #27 ;
INFO  19:31:29,220 - #47 char
INFO  19:31:29,220 - #47 c
INFO  19:31:29,220 - #27 ;
INFO  19:31:29,221 - #35 {
INFO  19:31:29,221 - #8 void
INFO  19:31:29,222 - #47 main
INFO  19:31:29,223 - #31 (
INFO  19:31:29,224 - #32 )
INFO  19:31:29,224 - #35 {
INFO  19:31:29,225 - #47 niz
INFO  19:31:29,225 - #24 =
INFO  19:31:29,227 - #4 new
INFO  19:31:29,228 - #47 int
INFO  19:31:29,228 - #33 [
INFO  19:31:29,228 - #46 5
INFO  19:31:29,228 - #34 ]
INFO  19:31:29,228 - #27 ;
INFO  19:31:29,229 - #47 niz
INFO  19:31:29,229 - #33 [
INFO  19:31:29,229 - #46 0
INFO  19:31:29,229 - #34 ]
INFO  19:31:29,229 - #24 =
INFO  19:31:29,230 - #46 1
INFO  19:31:29,230 - #27 ;
INFO  19:31:29,230 - #47 mat
INFO  19:31:29,230 - #24 =
INFO  19:31:29,230 - #4 new
INFO  19:31:29,230 - #47 int
INFO  19:31:29,231 - #33 [
INFO  19:31:29,231 - #46 2
INFO  19:31:29,231 - #34 ]
INFO  19:31:29,231 - #33 [
INFO  19:31:29,231 - #46 3
INFO  19:31:29,231 - #34 ]
INFO  19:31:29,231 - #27 ;
INFO  19:31:29,231 - #47 mat
INFO  19:31:29,231 - #33 [
INFO  19:31:29,231 - #46 2
INFO  19:31:29,231 - #34 ]
INFO  19:31:29,231 - #33 [
INFO  19:31:29,231 - #46 3
INFO  19:31:29,232 - #34 ]
INFO  19:31:29,232 - #24 =
INFO  19:31:29,232 - #46 5
INFO  19:31:29,232 - #27 ;
INFO  19:31:29,232 - #36 }
INFO  19:31:29,232 - #36 }
INFO  19:31:29,234 - ================= PARSIRANO STABLO =================
INFO  19:31:29,243 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  Declarations(
    Declarations(
      Declarations(
        NoDeclarations(
        ) [NoDeclarations]
        VariableDeclaration(
          VarDeclaration(
            Type(
             int
            ) [Type]
            OneVarDeclaration(
              AddVarDecl1(
               niz
                Brackets(
                ) [Brackets]
              ) [AddVarDecl1]
            ) [OneVarDeclaration]
          ) [VarDeclaration]
        ) [VariableDeclaration]
      ) [Declarations]
      VariableDeclaration(
        VarDeclaration(
          Type(
           int
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             mat
              TwoBrackets(
              ) [TwoBrackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [VariableDeclaration]
    ) [Declarations]
    VariableDeclaration(
      VarDeclaration(
        Type(
         char
        ) [Type]
        OneVarDeclaration(
          AddVarDecl1(
           c
            NoBrackets(
            ) [NoBrackets]
          ) [AddVarDecl1]
        ) [OneVarDeclaration]
      ) [VarDeclaration]
    ) [VariableDeclaration]
  ) [Declarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      NoVarDeclarations(
      ) [NoVarDeclarations]
      Statements(
        Statements(
          Statements(
            Statements(
              NoStatements(
              ) [NoStatements]
              DesignatorStat(
                DesignatorExpr(
                  Designator(
                    WithoutNamespace(
                     niz
                    ) [WithoutNamespace]
                    NoArrayExpression(
                    ) [NoArrayExpression]
                  ) [Designator]
                  AssignOperation(
                  ) [AssignOperation]
                  PositiveStartExpr(
                    SingleTerm(
                      NewType(
                        Type(
                         int
                        ) [Type]
                        PositiveStartExpr(
                          SingleTerm(
                            NumberConst(
                             5
                            ) [NumberConst]
                          ) [SingleTerm]
                        ) [PositiveStartExpr]
                      ) [NewType]
                    ) [SingleTerm]
                  ) [PositiveStartExpr]
                ) [DesignatorExpr]
              ) [DesignatorStat]
            ) [Statements]
            DesignatorStat(
              DesignatorExpr(
                Designator(
                  WithoutNamespace(
                   niz
                  ) [WithoutNamespace]
                  AddArrayExpression(
                    BraExpr(
                      PositiveStartExpr(
                        SingleTerm(
                          NumberConst(
                           0
                          ) [NumberConst]
                        ) [SingleTerm]
                      ) [PositiveStartExpr]
                    ) [BraExpr]
                  ) [AddArrayExpression]
                ) [Designator]
                AssignOperation(
                ) [AssignOperation]
                PositiveStartExpr(
                  SingleTerm(
                    NumberConst(
                     1
                    ) [NumberConst]
                  ) [SingleTerm]
                ) [PositiveStartExpr]
              ) [DesignatorExpr]
            ) [DesignatorStat]
          ) [Statements]
          DesignatorStat(
            DesignatorExpr(
              Designator(
                WithoutNamespace(
                 mat
                ) [WithoutNamespace]
                NoArrayExpression(
                ) [NoArrayExpression]
              ) [Designator]
              AssignOperation(
              ) [AssignOperation]
              PositiveStartExpr(
                SingleTerm(
                  NewTypeMat(
                    Type(
                     int
                    ) [Type]
                    PositiveStartExpr(
                      SingleTerm(
                        NumberConst(
                         2
                        ) [NumberConst]
                      ) [SingleTerm]
                    ) [PositiveStartExpr]
                    PositiveStartExpr(
                      SingleTerm(
                        NumberConst(
                         3
                        ) [NumberConst]
                      ) [SingleTerm]
                    ) [PositiveStartExpr]
                  ) [NewTypeMat]
                ) [SingleTerm]
              ) [PositiveStartExpr]
            ) [DesignatorExpr]
          ) [DesignatorStat]
        ) [Statements]
        DesignatorStat(
          DesignatorExpr(
            Designator(
              WithoutNamespace(
               mat
              ) [WithoutNamespace]
              AddMatrixExpression(
                BraExpr(
                  PositiveStartExpr(
                    SingleTerm(
                      NumberConst(
                       2
                      ) [NumberConst]
                    ) [SingleTerm]
                  ) [PositiveStartExpr]
                ) [BraExpr]
                BraExpr(
                  PositiveStartExpr(
                    SingleTerm(
                      NumberConst(
                       3
                      ) [NumberConst]
                    ) [SingleTerm]
                  ) [PositiveStartExpr]
                ) [BraExpr]
              ) [AddMatrixExpression]
            ) [Designator]
            AssignOperation(
            ) [AssignOperation]
            PositiveStartExpr(
              SingleTerm(
                NumberConst(
                 5
                ) [NumberConst]
              ) [SingleTerm]
            ) [PositiveStartExpr]
          ) [DesignatorExpr]
        ) [DesignatorStat]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  19:31:29,243 - ================ Semanticka obrada ===================
INFO  19:31:29,257 - NEW SYMBOL
INFO  19:31:29,257 - Var niz: Arr of int, 0, 0 on line 2
INFO  19:31:29,257 - NEW SYMBOL
INFO  19:31:29,257 - Var mat: Matrix of int, 1, 0 on line 3
INFO  19:31:29,257 - NEW SYMBOL
INFO  19:31:29,257 - Var c: char, 2, 0 on line 4
INFO  19:31:29,257 - Var niz: Arr of int, 0, 0 on line 10
INFO  19:31:29,257 - Var niz: Arr of int, 0, 0 on line 11
INFO  19:31:29,257 - Var mat: Matrix of int, 1, 0 on line 12
INFO  19:31:29,257 - Var mat: Matrix of int, 1, 0 on line 13
ERROR 19:32:13,685 - Types not matching  on line 13
INFO  19:32:13,685 - Meth main: notype, 0, 0 on line 1
ERROR 19:32:13,685 - Parser FAIL!
INFO  19:32:54,712 - Compiling source file: C:\Users\elena\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  19:32:54,714 - ================= LEKSICKA ANALIZA =================
INFO  19:32:54,798 - #2 program
INFO  19:32:54,799 - #47 test301
INFO  19:32:54,799 - #47 int
INFO  19:32:54,801 - #47 niz
INFO  19:32:54,802 - #33 [
INFO  19:32:54,802 - #34 ]
INFO  19:32:54,803 - #27 ;
INFO  19:32:54,805 - #47 int
INFO  19:32:54,805 - #47 mat
INFO  19:32:54,806 - #33 [
INFO  19:32:54,806 - #34 ]
INFO  19:32:54,806 - #33 [
INFO  19:32:54,806 - #34 ]
INFO  19:32:54,806 - #27 ;
INFO  19:32:54,808 - #47 char
INFO  19:32:54,808 - #47 c
INFO  19:32:54,808 - #27 ;
INFO  19:32:54,809 - #35 {
INFO  19:32:54,809 - #8 void
INFO  19:32:54,810 - #47 main
INFO  19:32:54,811 - #31 (
INFO  19:32:54,812 - #32 )
INFO  19:32:54,813 - #35 {
INFO  19:32:54,813 - #47 niz
INFO  19:32:54,814 - #24 =
INFO  19:32:54,816 - #4 new
INFO  19:32:54,818 - #47 int
INFO  19:32:54,818 - #33 [
INFO  19:32:54,818 - #46 5
INFO  19:32:54,818 - #34 ]
INFO  19:32:54,819 - #27 ;
INFO  19:32:54,819 - #47 niz
INFO  19:32:54,819 - #33 [
INFO  19:32:54,819 - #46 0
INFO  19:32:54,819 - #34 ]
INFO  19:32:54,819 - #24 =
INFO  19:32:54,821 - #46 1
INFO  19:32:54,821 - #27 ;
INFO  19:32:54,821 - #47 mat
INFO  19:32:54,821 - #24 =
INFO  19:32:54,822 - #4 new
INFO  19:32:54,822 - #47 int
INFO  19:32:54,822 - #33 [
INFO  19:32:54,822 - #46 2
INFO  19:32:54,822 - #34 ]
INFO  19:32:54,822 - #33 [
INFO  19:32:54,822 - #46 3
INFO  19:32:54,822 - #34 ]
INFO  19:32:54,824 - #27 ;
INFO  19:32:54,824 - #47 mat
INFO  19:32:54,824 - #33 [
INFO  19:32:54,824 - #46 2
INFO  19:32:54,824 - #34 ]
INFO  19:32:54,824 - #33 [
INFO  19:32:54,824 - #46 3
INFO  19:32:54,824 - #34 ]
INFO  19:32:54,825 - #24 =
INFO  19:32:54,825 - #46 5
INFO  19:32:54,825 - #27 ;
INFO  19:32:54,825 - #36 }
INFO  19:32:54,825 - #36 }
INFO  19:32:54,828 - ================= PARSIRANO STABLO =================
INFO  19:32:54,836 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  Declarations(
    Declarations(
      Declarations(
        NoDeclarations(
        ) [NoDeclarations]
        VariableDeclaration(
          VarDeclaration(
            Type(
             int
            ) [Type]
            OneVarDeclaration(
              AddVarDecl1(
               niz
                Brackets(
                ) [Brackets]
              ) [AddVarDecl1]
            ) [OneVarDeclaration]
          ) [VarDeclaration]
        ) [VariableDeclaration]
      ) [Declarations]
      VariableDeclaration(
        VarDeclaration(
          Type(
           int
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             mat
              TwoBrackets(
              ) [TwoBrackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [VariableDeclaration]
    ) [Declarations]
    VariableDeclaration(
      VarDeclaration(
        Type(
         char
        ) [Type]
        OneVarDeclaration(
          AddVarDecl1(
           c
            NoBrackets(
            ) [NoBrackets]
          ) [AddVarDecl1]
        ) [OneVarDeclaration]
      ) [VarDeclaration]
    ) [VariableDeclaration]
  ) [Declarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      NoVarDeclarations(
      ) [NoVarDeclarations]
      Statements(
        Statements(
          Statements(
            Statements(
              NoStatements(
              ) [NoStatements]
              DesignatorStat(
                DesignatorExpr(
                  Designator(
                    WithoutNamespace(
                     niz
                    ) [WithoutNamespace]
                    NoArrayExpression(
                    ) [NoArrayExpression]
                  ) [Designator]
                  AssignOperation(
                  ) [AssignOperation]
                  PositiveStartExpr(
                    SingleTerm(
                      NewType(
                        Type(
                         int
                        ) [Type]
                        PositiveStartExpr(
                          SingleTerm(
                            NumberConst(
                             5
                            ) [NumberConst]
                          ) [SingleTerm]
                        ) [PositiveStartExpr]
                      ) [NewType]
                    ) [SingleTerm]
                  ) [PositiveStartExpr]
                ) [DesignatorExpr]
              ) [DesignatorStat]
            ) [Statements]
            DesignatorStat(
              DesignatorExpr(
                Designator(
                  WithoutNamespace(
                   niz
                  ) [WithoutNamespace]
                  AddArrayExpression(
                    BraExpr(
                      PositiveStartExpr(
                        SingleTerm(
                          NumberConst(
                           0
                          ) [NumberConst]
                        ) [SingleTerm]
                      ) [PositiveStartExpr]
                    ) [BraExpr]
                  ) [AddArrayExpression]
                ) [Designator]
                AssignOperation(
                ) [AssignOperation]
                PositiveStartExpr(
                  SingleTerm(
                    NumberConst(
                     1
                    ) [NumberConst]
                  ) [SingleTerm]
                ) [PositiveStartExpr]
              ) [DesignatorExpr]
            ) [DesignatorStat]
          ) [Statements]
          DesignatorStat(
            DesignatorExpr(
              Designator(
                WithoutNamespace(
                 mat
                ) [WithoutNamespace]
                NoArrayExpression(
                ) [NoArrayExpression]
              ) [Designator]
              AssignOperation(
              ) [AssignOperation]
              PositiveStartExpr(
                SingleTerm(
                  NewTypeMat(
                    Type(
                     int
                    ) [Type]
                    PositiveStartExpr(
                      SingleTerm(
                        NumberConst(
                         2
                        ) [NumberConst]
                      ) [SingleTerm]
                    ) [PositiveStartExpr]
                    PositiveStartExpr(
                      SingleTerm(
                        NumberConst(
                         3
                        ) [NumberConst]
                      ) [SingleTerm]
                    ) [PositiveStartExpr]
                  ) [NewTypeMat]
                ) [SingleTerm]
              ) [PositiveStartExpr]
            ) [DesignatorExpr]
          ) [DesignatorStat]
        ) [Statements]
        DesignatorStat(
          DesignatorExpr(
            Designator(
              WithoutNamespace(
               mat
              ) [WithoutNamespace]
              AddMatrixExpression(
                BraExpr(
                  PositiveStartExpr(
                    SingleTerm(
                      NumberConst(
                       2
                      ) [NumberConst]
                    ) [SingleTerm]
                  ) [PositiveStartExpr]
                ) [BraExpr]
                BraExpr(
                  PositiveStartExpr(
                    SingleTerm(
                      NumberConst(
                       3
                      ) [NumberConst]
                    ) [SingleTerm]
                  ) [PositiveStartExpr]
                ) [BraExpr]
              ) [AddMatrixExpression]
            ) [Designator]
            AssignOperation(
            ) [AssignOperation]
            PositiveStartExpr(
              SingleTerm(
                NumberConst(
                 5
                ) [NumberConst]
              ) [SingleTerm]
            ) [PositiveStartExpr]
          ) [DesignatorExpr]
        ) [DesignatorStat]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  19:32:54,836 - ================ Semanticka obrada ===================
INFO  19:32:54,850 - NEW SYMBOL
INFO  19:32:54,850 - Var niz: Arr of int, 0, 0 on line 2
INFO  19:32:54,851 - NEW SYMBOL
INFO  19:32:54,851 - Var mat: Matrix of int, 1, 0 on line 3
INFO  19:32:54,851 - NEW SYMBOL
INFO  19:32:54,851 - Var c: char, 2, 0 on line 4
INFO  19:32:54,851 - Var niz: Arr of int, 0, 0 on line 10
INFO  19:32:54,851 - Var niz: Arr of int, 0, 0 on line 11
INFO  19:32:54,851 - Var mat: Matrix of int, 1, 0 on line 12
INFO  19:32:54,851 - Var mat: Matrix of int, 1, 0 on line 13
INFO  19:33:29,834 - Compiling source file: C:\Users\elena\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  19:33:29,836 - ================= LEKSICKA ANALIZA =================
INFO  19:33:29,902 - #2 program
INFO  19:33:29,902 - #47 test301
INFO  19:33:29,902 - #47 int
INFO  19:33:29,905 - #47 niz
INFO  19:33:29,906 - #33 [
INFO  19:33:29,906 - #34 ]
INFO  19:33:29,906 - #27 ;
INFO  19:33:29,908 - #47 int
INFO  19:33:29,909 - #47 mat
INFO  19:33:29,909 - #33 [
INFO  19:33:29,909 - #34 ]
INFO  19:33:29,909 - #33 [
INFO  19:33:29,909 - #34 ]
INFO  19:33:29,909 - #27 ;
INFO  19:33:29,912 - #47 char
INFO  19:33:29,912 - #47 c
INFO  19:33:29,912 - #27 ;
INFO  19:33:29,912 - #35 {
INFO  19:33:29,913 - #8 void
INFO  19:33:29,913 - #47 main
INFO  19:33:29,914 - #31 (
INFO  19:33:29,915 - #32 )
INFO  19:33:29,916 - #35 {
INFO  19:33:29,917 - #47 niz
INFO  19:33:29,918 - #24 =
INFO  19:33:29,919 - #4 new
INFO  19:33:29,920 - #47 int
INFO  19:33:29,920 - #33 [
INFO  19:33:29,920 - #46 5
INFO  19:33:29,920 - #34 ]
INFO  19:33:29,922 - #27 ;
INFO  19:33:29,922 - #47 niz
INFO  19:33:29,922 - #33 [
INFO  19:33:29,923 - #46 0
INFO  19:33:29,923 - #34 ]
INFO  19:33:29,923 - #24 =
INFO  19:33:29,924 - #46 1
INFO  19:33:29,925 - #27 ;
INFO  19:33:29,925 - #47 mat
INFO  19:33:29,925 - #24 =
INFO  19:33:29,925 - #4 new
INFO  19:33:29,925 - #47 int
INFO  19:33:29,925 - #33 [
INFO  19:33:29,926 - #46 2
INFO  19:33:29,926 - #34 ]
INFO  19:33:29,926 - #33 [
INFO  19:33:29,926 - #46 3
INFO  19:33:29,926 - #34 ]
INFO  19:33:29,926 - #27 ;
INFO  19:33:29,926 - #47 mat
INFO  19:33:29,927 - #33 [
INFO  19:33:29,927 - #46 2
INFO  19:33:29,927 - #34 ]
INFO  19:33:29,928 - #33 [
INFO  19:33:29,928 - #46 3
INFO  19:33:29,928 - #34 ]
INFO  19:33:29,928 - #24 =
INFO  19:33:29,928 - #46 5
INFO  19:33:29,929 - #27 ;
INFO  19:33:29,929 - #36 }
INFO  19:33:29,929 - #36 }
INFO  19:33:29,932 - ================= PARSIRANO STABLO =================
INFO  19:33:29,941 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  Declarations(
    Declarations(
      Declarations(
        NoDeclarations(
        ) [NoDeclarations]
        VariableDeclaration(
          VarDeclaration(
            Type(
             int
            ) [Type]
            OneVarDeclaration(
              AddVarDecl1(
               niz
                Brackets(
                ) [Brackets]
              ) [AddVarDecl1]
            ) [OneVarDeclaration]
          ) [VarDeclaration]
        ) [VariableDeclaration]
      ) [Declarations]
      VariableDeclaration(
        VarDeclaration(
          Type(
           int
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             mat
              TwoBrackets(
              ) [TwoBrackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [VariableDeclaration]
    ) [Declarations]
    VariableDeclaration(
      VarDeclaration(
        Type(
         char
        ) [Type]
        OneVarDeclaration(
          AddVarDecl1(
           c
            NoBrackets(
            ) [NoBrackets]
          ) [AddVarDecl1]
        ) [OneVarDeclaration]
      ) [VarDeclaration]
    ) [VariableDeclaration]
  ) [Declarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      NoVarDeclarations(
      ) [NoVarDeclarations]
      Statements(
        Statements(
          Statements(
            Statements(
              NoStatements(
              ) [NoStatements]
              DesignatorStat(
                DesignatorExpr(
                  Designator(
                    WithoutNamespace(
                     niz
                    ) [WithoutNamespace]
                    NoArrayExpression(
                    ) [NoArrayExpression]
                  ) [Designator]
                  AssignOperation(
                  ) [AssignOperation]
                  PositiveStartExpr(
                    SingleTerm(
                      NewType(
                        Type(
                         int
                        ) [Type]
                        PositiveStartExpr(
                          SingleTerm(
                            NumberConst(
                             5
                            ) [NumberConst]
                          ) [SingleTerm]
                        ) [PositiveStartExpr]
                      ) [NewType]
                    ) [SingleTerm]
                  ) [PositiveStartExpr]
                ) [DesignatorExpr]
              ) [DesignatorStat]
            ) [Statements]
            DesignatorStat(
              DesignatorExpr(
                Designator(
                  WithoutNamespace(
                   niz
                  ) [WithoutNamespace]
                  AddArrayExpression(
                    BraExpr(
                      PositiveStartExpr(
                        SingleTerm(
                          NumberConst(
                           0
                          ) [NumberConst]
                        ) [SingleTerm]
                      ) [PositiveStartExpr]
                    ) [BraExpr]
                  ) [AddArrayExpression]
                ) [Designator]
                AssignOperation(
                ) [AssignOperation]
                PositiveStartExpr(
                  SingleTerm(
                    NumberConst(
                     1
                    ) [NumberConst]
                  ) [SingleTerm]
                ) [PositiveStartExpr]
              ) [DesignatorExpr]
            ) [DesignatorStat]
          ) [Statements]
          DesignatorStat(
            DesignatorExpr(
              Designator(
                WithoutNamespace(
                 mat
                ) [WithoutNamespace]
                NoArrayExpression(
                ) [NoArrayExpression]
              ) [Designator]
              AssignOperation(
              ) [AssignOperation]
              PositiveStartExpr(
                SingleTerm(
                  NewTypeMat(
                    Type(
                     int
                    ) [Type]
                    PositiveStartExpr(
                      SingleTerm(
                        NumberConst(
                         2
                        ) [NumberConst]
                      ) [SingleTerm]
                    ) [PositiveStartExpr]
                    PositiveStartExpr(
                      SingleTerm(
                        NumberConst(
                         3
                        ) [NumberConst]
                      ) [SingleTerm]
                    ) [PositiveStartExpr]
                  ) [NewTypeMat]
                ) [SingleTerm]
              ) [PositiveStartExpr]
            ) [DesignatorExpr]
          ) [DesignatorStat]
        ) [Statements]
        DesignatorStat(
          DesignatorExpr(
            Designator(
              WithoutNamespace(
               mat
              ) [WithoutNamespace]
              AddMatrixExpression(
                BraExpr(
                  PositiveStartExpr(
                    SingleTerm(
                      NumberConst(
                       2
                      ) [NumberConst]
                    ) [SingleTerm]
                  ) [PositiveStartExpr]
                ) [BraExpr]
                BraExpr(
                  PositiveStartExpr(
                    SingleTerm(
                      NumberConst(
                       3
                      ) [NumberConst]
                    ) [SingleTerm]
                  ) [PositiveStartExpr]
                ) [BraExpr]
              ) [AddMatrixExpression]
            ) [Designator]
            AssignOperation(
            ) [AssignOperation]
            PositiveStartExpr(
              SingleTerm(
                NumberConst(
                 5
                ) [NumberConst]
              ) [SingleTerm]
            ) [PositiveStartExpr]
          ) [DesignatorExpr]
        ) [DesignatorStat]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  19:33:29,941 - ================ Semanticka obrada ===================
INFO  19:33:29,956 - NEW SYMBOL
INFO  19:33:29,956 - Var niz: Arr of int, 0, 0 on line 2
INFO  19:33:29,956 - NEW SYMBOL
INFO  19:33:29,956 - Var mat: Matrix of int, 1, 0 on line 3
INFO  19:33:29,956 - NEW SYMBOL
INFO  19:33:29,956 - Var c: char, 2, 0 on line 4
INFO  19:33:29,956 - Var niz: Arr of int, 0, 0 on line 10
INFO  19:34:14,869 - Var niz: Arr of int, 0, 0 on line 11
INFO  19:34:34,941 - Var mat: Matrix of int, 1, 0 on line 12
INFO  19:34:41,461 - Var mat: Matrix of int, 1, 0 on line 13
INFO  19:37:54,009 - Compiling source file: C:\Users\elena\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  19:37:54,009 - ================= LEKSICKA ANALIZA =================
INFO  19:37:54,054 - #2 program
INFO  19:37:54,054 - #47 test301
INFO  19:37:54,054 - #47 int
INFO  19:37:54,055 - #47 niz
INFO  19:37:54,056 - #33 [
INFO  19:37:54,056 - #34 ]
INFO  19:37:54,056 - #27 ;
INFO  19:37:54,057 - #47 int
INFO  19:37:54,058 - #47 mat
INFO  19:37:54,058 - #33 [
INFO  19:37:54,058 - #34 ]
INFO  19:37:54,058 - #33 [
INFO  19:37:54,058 - #34 ]
INFO  19:37:54,058 - #27 ;
INFO  19:37:54,058 - #47 char
INFO  19:37:54,058 - #47 c
INFO  19:37:54,058 - #27 ;
INFO  19:37:54,060 - #35 {
INFO  19:37:54,060 - #8 void
INFO  19:37:54,061 - #47 main
INFO  19:37:54,061 - #31 (
INFO  19:37:54,061 - #32 )
INFO  19:37:54,062 - #35 {
INFO  19:37:54,062 - #47 niz
INFO  19:37:54,063 - #24 =
INFO  19:37:54,066 - #4 new
INFO  19:37:54,069 - #47 int
INFO  19:37:54,069 - #33 [
INFO  19:37:54,069 - #46 5
INFO  19:37:54,069 - #34 ]
INFO  19:37:54,069 - #27 ;
INFO  19:37:54,070 - #47 niz
INFO  19:37:54,070 - #33 [
INFO  19:37:54,070 - #46 0
INFO  19:37:54,070 - #34 ]
INFO  19:37:54,070 - #24 =
INFO  19:37:54,071 - #46 1
INFO  19:37:54,071 - #27 ;
INFO  19:37:54,071 - #47 mat
INFO  19:37:54,071 - #24 =
INFO  19:37:54,072 - #4 new
INFO  19:37:54,072 - #47 int
INFO  19:37:54,072 - #33 [
INFO  19:37:54,072 - #46 2
INFO  19:37:54,072 - #34 ]
INFO  19:37:54,072 - #33 [
INFO  19:37:54,072 - #46 3
INFO  19:37:54,072 - #34 ]
INFO  19:37:54,072 - #27 ;
INFO  19:37:54,072 - #47 mat
INFO  19:37:54,073 - #33 [
INFO  19:37:54,073 - #46 2
INFO  19:37:54,073 - #34 ]
INFO  19:37:54,073 - #33 [
INFO  19:37:54,073 - #46 3
INFO  19:37:54,073 - #34 ]
INFO  19:37:54,073 - #24 =
INFO  19:37:54,073 - #46 5
INFO  19:37:54,073 - #27 ;
INFO  19:37:54,074 - #36 }
INFO  19:37:54,074 - #36 }
INFO  19:37:54,076 - ================= PARSIRANO STABLO =================
INFO  19:37:54,081 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  Declarations(
    Declarations(
      Declarations(
        NoDeclarations(
        ) [NoDeclarations]
        VariableDeclaration(
          VarDeclaration(
            Type(
             int
            ) [Type]
            OneVarDeclaration(
              AddVarDecl1(
               niz
                Brackets(
                ) [Brackets]
              ) [AddVarDecl1]
            ) [OneVarDeclaration]
          ) [VarDeclaration]
        ) [VariableDeclaration]
      ) [Declarations]
      VariableDeclaration(
        VarDeclaration(
          Type(
           int
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             mat
              TwoBrackets(
              ) [TwoBrackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [VariableDeclaration]
    ) [Declarations]
    VariableDeclaration(
      VarDeclaration(
        Type(
         char
        ) [Type]
        OneVarDeclaration(
          AddVarDecl1(
           c
            NoBrackets(
            ) [NoBrackets]
          ) [AddVarDecl1]
        ) [OneVarDeclaration]
      ) [VarDeclaration]
    ) [VariableDeclaration]
  ) [Declarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      NoVarDeclarations(
      ) [NoVarDeclarations]
      Statements(
        Statements(
          Statements(
            Statements(
              NoStatements(
              ) [NoStatements]
              DesignatorStat(
                DesignatorExpr(
                  Designator(
                    WithoutNamespace(
                     niz
                    ) [WithoutNamespace]
                    NoArrayExpression(
                    ) [NoArrayExpression]
                  ) [Designator]
                  AssignOperation(
                  ) [AssignOperation]
                  PositiveStartExpr(
                    SingleTerm(
                      NewType(
                        Type(
                         int
                        ) [Type]
                        PositiveStartExpr(
                          SingleTerm(
                            NumberConst(
                             5
                            ) [NumberConst]
                          ) [SingleTerm]
                        ) [PositiveStartExpr]
                      ) [NewType]
                    ) [SingleTerm]
                  ) [PositiveStartExpr]
                ) [DesignatorExpr]
              ) [DesignatorStat]
            ) [Statements]
            DesignatorStat(
              DesignatorExpr(
                Designator(
                  WithoutNamespace(
                   niz
                  ) [WithoutNamespace]
                  AddArrayExpression(
                    BraExpr(
                      PositiveStartExpr(
                        SingleTerm(
                          NumberConst(
                           0
                          ) [NumberConst]
                        ) [SingleTerm]
                      ) [PositiveStartExpr]
                    ) [BraExpr]
                  ) [AddArrayExpression]
                ) [Designator]
                AssignOperation(
                ) [AssignOperation]
                PositiveStartExpr(
                  SingleTerm(
                    NumberConst(
                     1
                    ) [NumberConst]
                  ) [SingleTerm]
                ) [PositiveStartExpr]
              ) [DesignatorExpr]
            ) [DesignatorStat]
          ) [Statements]
          DesignatorStat(
            DesignatorExpr(
              Designator(
                WithoutNamespace(
                 mat
                ) [WithoutNamespace]
                NoArrayExpression(
                ) [NoArrayExpression]
              ) [Designator]
              AssignOperation(
              ) [AssignOperation]
              PositiveStartExpr(
                SingleTerm(
                  NewTypeMat(
                    Type(
                     int
                    ) [Type]
                    PositiveStartExpr(
                      SingleTerm(
                        NumberConst(
                         2
                        ) [NumberConst]
                      ) [SingleTerm]
                    ) [PositiveStartExpr]
                    PositiveStartExpr(
                      SingleTerm(
                        NumberConst(
                         3
                        ) [NumberConst]
                      ) [SingleTerm]
                    ) [PositiveStartExpr]
                  ) [NewTypeMat]
                ) [SingleTerm]
              ) [PositiveStartExpr]
            ) [DesignatorExpr]
          ) [DesignatorStat]
        ) [Statements]
        DesignatorStat(
          DesignatorExpr(
            Designator(
              WithoutNamespace(
               mat
              ) [WithoutNamespace]
              AddMatrixExpression(
                BraExpr(
                  PositiveStartExpr(
                    SingleTerm(
                      NumberConst(
                       2
                      ) [NumberConst]
                    ) [SingleTerm]
                  ) [PositiveStartExpr]
                ) [BraExpr]
                BraExpr(
                  PositiveStartExpr(
                    SingleTerm(
                      NumberConst(
                       3
                      ) [NumberConst]
                    ) [SingleTerm]
                  ) [PositiveStartExpr]
                ) [BraExpr]
              ) [AddMatrixExpression]
            ) [Designator]
            AssignOperation(
            ) [AssignOperation]
            PositiveStartExpr(
              SingleTerm(
                NumberConst(
                 5
                ) [NumberConst]
              ) [SingleTerm]
            ) [PositiveStartExpr]
          ) [DesignatorExpr]
        ) [DesignatorStat]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  19:37:54,083 - ================ Semanticka obrada ===================
INFO  19:37:54,099 - NEW SYMBOL
INFO  19:37:54,099 - Var niz: Arr of int, 0, 0 on line 2
INFO  19:37:54,099 - NEW SYMBOL
INFO  19:37:54,099 - Var mat: Matrix of int, 1, 0 on line 3
INFO  19:37:54,099 - NEW SYMBOL
INFO  19:37:54,099 - Var c: char, 2, 0 on line 4
INFO  19:37:54,100 - Var niz: Arr of int, 0, 0 on line 10
INFO  19:37:54,100 - Var niz: Arr of int, 0, 0 on line 11
INFO  19:37:54,100 - Var mat: Matrix of int, 1, 0 on line 12
INFO  19:37:54,100 - Var mat: Matrix of int, 1, 0 on line 13
ERROR 19:37:54,100 - Types not matching  on line 13
INFO  19:37:54,101 - Meth main: notype, 0, 0 on line 1
ERROR 19:37:54,101 - Parser FAIL!
INFO  19:38:30,175 - Compiling source file: C:\Users\elena\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  19:38:30,176 - ================= LEKSICKA ANALIZA =================
INFO  19:38:30,247 - #2 program
INFO  19:38:30,247 - #47 test301
INFO  19:38:30,247 - #47 int
INFO  19:38:30,251 - #47 niz
INFO  19:38:30,252 - #33 [
INFO  19:38:30,252 - #34 ]
INFO  19:38:30,252 - #27 ;
INFO  19:38:30,253 - #47 int
INFO  19:38:30,254 - #47 mat
INFO  19:38:30,254 - #33 [
INFO  19:38:30,254 - #34 ]
INFO  19:38:30,254 - #33 [
INFO  19:38:30,254 - #34 ]
INFO  19:38:30,254 - #27 ;
INFO  19:38:30,256 - #47 char
INFO  19:38:30,257 - #47 c
INFO  19:38:30,257 - #27 ;
INFO  19:38:30,259 - #35 {
INFO  19:38:30,259 - #8 void
INFO  19:38:30,260 - #47 main
INFO  19:38:30,261 - #31 (
INFO  19:38:30,261 - #32 )
INFO  19:38:30,263 - #35 {
INFO  19:38:30,264 - #47 niz
INFO  19:38:30,265 - #24 =
INFO  19:38:30,266 - #4 new
INFO  19:38:30,269 - #47 int
INFO  19:38:30,269 - #33 [
INFO  19:38:30,269 - #46 5
INFO  19:38:30,269 - #34 ]
INFO  19:38:30,269 - #27 ;
INFO  19:38:30,270 - #47 niz
INFO  19:38:30,272 - #33 [
INFO  19:38:30,272 - #46 0
INFO  19:38:30,272 - #34 ]
INFO  19:38:30,272 - #24 =
INFO  19:38:30,274 - #46 1
INFO  19:38:30,274 - #27 ;
INFO  19:38:30,274 - #47 mat
INFO  19:38:30,274 - #24 =
INFO  19:38:30,274 - #4 new
INFO  19:38:30,274 - #47 int
INFO  19:38:30,274 - #33 [
INFO  19:38:30,274 - #46 2
INFO  19:38:30,275 - #34 ]
INFO  19:38:30,275 - #33 [
INFO  19:38:30,275 - #46 3
INFO  19:38:30,275 - #34 ]
INFO  19:38:30,275 - #27 ;
INFO  19:38:30,275 - #47 mat
INFO  19:38:30,275 - #33 [
INFO  19:38:30,275 - #46 2
INFO  19:38:30,277 - #34 ]
INFO  19:38:30,277 - #33 [
INFO  19:38:30,277 - #46 3
INFO  19:38:30,277 - #34 ]
INFO  19:38:30,277 - #24 =
INFO  19:38:30,277 - #46 5
INFO  19:38:30,277 - #27 ;
INFO  19:38:30,278 - #36 }
INFO  19:38:30,278 - #36 }
INFO  19:38:30,281 - ================= PARSIRANO STABLO =================
INFO  19:38:30,290 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  Declarations(
    Declarations(
      Declarations(
        NoDeclarations(
        ) [NoDeclarations]
        VariableDeclaration(
          VarDeclaration(
            Type(
             int
            ) [Type]
            OneVarDeclaration(
              AddVarDecl1(
               niz
                Brackets(
                ) [Brackets]
              ) [AddVarDecl1]
            ) [OneVarDeclaration]
          ) [VarDeclaration]
        ) [VariableDeclaration]
      ) [Declarations]
      VariableDeclaration(
        VarDeclaration(
          Type(
           int
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             mat
              TwoBrackets(
              ) [TwoBrackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [VariableDeclaration]
    ) [Declarations]
    VariableDeclaration(
      VarDeclaration(
        Type(
         char
        ) [Type]
        OneVarDeclaration(
          AddVarDecl1(
           c
            NoBrackets(
            ) [NoBrackets]
          ) [AddVarDecl1]
        ) [OneVarDeclaration]
      ) [VarDeclaration]
    ) [VariableDeclaration]
  ) [Declarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      NoVarDeclarations(
      ) [NoVarDeclarations]
      Statements(
        Statements(
          Statements(
            Statements(
              NoStatements(
              ) [NoStatements]
              DesignatorStat(
                DesignatorExpr(
                  Designator(
                    WithoutNamespace(
                     niz
                    ) [WithoutNamespace]
                    NoArrayExpression(
                    ) [NoArrayExpression]
                  ) [Designator]
                  AssignOperation(
                  ) [AssignOperation]
                  PositiveStartExpr(
                    SingleTerm(
                      NewType(
                        Type(
                         int
                        ) [Type]
                        PositiveStartExpr(
                          SingleTerm(
                            NumberConst(
                             5
                            ) [NumberConst]
                          ) [SingleTerm]
                        ) [PositiveStartExpr]
                      ) [NewType]
                    ) [SingleTerm]
                  ) [PositiveStartExpr]
                ) [DesignatorExpr]
              ) [DesignatorStat]
            ) [Statements]
            DesignatorStat(
              DesignatorExpr(
                Designator(
                  WithoutNamespace(
                   niz
                  ) [WithoutNamespace]
                  AddArrayExpression(
                    BraExpr(
                      PositiveStartExpr(
                        SingleTerm(
                          NumberConst(
                           0
                          ) [NumberConst]
                        ) [SingleTerm]
                      ) [PositiveStartExpr]
                    ) [BraExpr]
                  ) [AddArrayExpression]
                ) [Designator]
                AssignOperation(
                ) [AssignOperation]
                PositiveStartExpr(
                  SingleTerm(
                    NumberConst(
                     1
                    ) [NumberConst]
                  ) [SingleTerm]
                ) [PositiveStartExpr]
              ) [DesignatorExpr]
            ) [DesignatorStat]
          ) [Statements]
          DesignatorStat(
            DesignatorExpr(
              Designator(
                WithoutNamespace(
                 mat
                ) [WithoutNamespace]
                NoArrayExpression(
                ) [NoArrayExpression]
              ) [Designator]
              AssignOperation(
              ) [AssignOperation]
              PositiveStartExpr(
                SingleTerm(
                  NewTypeMat(
                    Type(
                     int
                    ) [Type]
                    PositiveStartExpr(
                      SingleTerm(
                        NumberConst(
                         2
                        ) [NumberConst]
                      ) [SingleTerm]
                    ) [PositiveStartExpr]
                    PositiveStartExpr(
                      SingleTerm(
                        NumberConst(
                         3
                        ) [NumberConst]
                      ) [SingleTerm]
                    ) [PositiveStartExpr]
                  ) [NewTypeMat]
                ) [SingleTerm]
              ) [PositiveStartExpr]
            ) [DesignatorExpr]
          ) [DesignatorStat]
        ) [Statements]
        DesignatorStat(
          DesignatorExpr(
            Designator(
              WithoutNamespace(
               mat
              ) [WithoutNamespace]
              AddMatrixExpression(
                BraExpr(
                  PositiveStartExpr(
                    SingleTerm(
                      NumberConst(
                       2
                      ) [NumberConst]
                    ) [SingleTerm]
                  ) [PositiveStartExpr]
                ) [BraExpr]
                BraExpr(
                  PositiveStartExpr(
                    SingleTerm(
                      NumberConst(
                       3
                      ) [NumberConst]
                    ) [SingleTerm]
                  ) [PositiveStartExpr]
                ) [BraExpr]
              ) [AddMatrixExpression]
            ) [Designator]
            AssignOperation(
            ) [AssignOperation]
            PositiveStartExpr(
              SingleTerm(
                NumberConst(
                 5
                ) [NumberConst]
              ) [SingleTerm]
            ) [PositiveStartExpr]
          ) [DesignatorExpr]
        ) [DesignatorStat]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  19:38:30,290 - ================ Semanticka obrada ===================
INFO  19:38:30,306 - NEW SYMBOL
INFO  19:38:30,306 - Var niz: Arr of int, 0, 0 on line 2
INFO  19:38:30,306 - NEW SYMBOL
INFO  19:38:30,306 - Var mat: Matrix of int, 1, 0 on line 3
INFO  19:38:30,306 - NEW SYMBOL
INFO  19:38:30,306 - Var c: char, 2, 0 on line 4
INFO  19:38:30,307 - Var niz: Arr of int, 0, 0 on line 10
INFO  19:38:39,524 - Var niz: Arr of int, 0, 0 on line 11
INFO  19:38:44,206 - Var mat: Matrix of int, 1, 0 on line 12
INFO  19:38:47,269 - Var mat: Matrix of int, 1, 0 on line 13
INFO  19:43:12,174 - Compiling source file: C:\Users\elena\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  19:43:12,175 - ================= LEKSICKA ANALIZA =================
INFO  19:43:12,219 - #2 program
INFO  19:43:12,220 - #47 test301
INFO  19:43:12,220 - #47 int
INFO  19:43:12,221 - #47 niz
INFO  19:43:12,222 - #33 [
INFO  19:43:12,222 - #34 ]
INFO  19:43:12,222 - #27 ;
INFO  19:43:12,224 - #47 int
INFO  19:43:12,224 - #47 mat
INFO  19:43:12,224 - #33 [
INFO  19:43:12,224 - #34 ]
INFO  19:43:12,224 - #33 [
INFO  19:43:12,224 - #34 ]
INFO  19:43:12,225 - #27 ;
INFO  19:43:12,225 - #47 char
INFO  19:43:12,225 - #47 c
INFO  19:43:12,225 - #27 ;
INFO  19:43:12,226 - #35 {
INFO  19:43:12,226 - #8 void
INFO  19:43:12,227 - #47 main
INFO  19:43:12,227 - #31 (
INFO  19:43:12,228 - #32 )
INFO  19:43:12,229 - #35 {
INFO  19:43:12,230 - #47 niz
INFO  19:43:12,230 - #24 =
INFO  19:43:12,232 - #4 new
INFO  19:43:12,234 - #47 int
INFO  19:43:12,234 - #33 [
INFO  19:43:12,234 - #46 5
INFO  19:43:12,234 - #34 ]
INFO  19:43:12,235 - #27 ;
INFO  19:43:12,236 - #47 niz
INFO  19:43:12,237 - #33 [
INFO  19:43:12,237 - #46 0
INFO  19:43:12,237 - #34 ]
INFO  19:43:12,237 - #24 =
INFO  19:43:12,238 - #46 1
INFO  19:43:12,238 - #27 ;
INFO  19:43:12,238 - #47 mat
INFO  19:43:12,238 - #24 =
INFO  19:43:12,238 - #4 new
INFO  19:43:12,238 - #47 int
INFO  19:43:12,238 - #33 [
INFO  19:43:12,239 - #46 2
INFO  19:43:12,239 - #34 ]
INFO  19:43:12,239 - #33 [
INFO  19:43:12,239 - #46 3
INFO  19:43:12,239 - #34 ]
INFO  19:43:12,239 - #27 ;
INFO  19:43:12,240 - #47 mat
INFO  19:43:12,240 - #33 [
INFO  19:43:12,240 - #46 2
INFO  19:43:12,240 - #34 ]
INFO  19:43:12,240 - #33 [
INFO  19:43:12,240 - #46 3
INFO  19:43:12,240 - #34 ]
INFO  19:43:12,241 - #24 =
INFO  19:43:12,241 - #46 5
INFO  19:43:12,241 - #27 ;
INFO  19:43:12,241 - #36 }
INFO  19:43:12,241 - #36 }
INFO  19:43:12,242 - ================= PARSIRANO STABLO =================
INFO  19:43:12,248 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  Declarations(
    Declarations(
      Declarations(
        NoDeclarations(
        ) [NoDeclarations]
        VariableDeclaration(
          VarDeclaration(
            Type(
             int
            ) [Type]
            OneVarDeclaration(
              AddVarDecl1(
               niz
                Brackets(
                ) [Brackets]
              ) [AddVarDecl1]
            ) [OneVarDeclaration]
          ) [VarDeclaration]
        ) [VariableDeclaration]
      ) [Declarations]
      VariableDeclaration(
        VarDeclaration(
          Type(
           int
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             mat
              TwoBrackets(
              ) [TwoBrackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [VariableDeclaration]
    ) [Declarations]
    VariableDeclaration(
      VarDeclaration(
        Type(
         char
        ) [Type]
        OneVarDeclaration(
          AddVarDecl1(
           c
            NoBrackets(
            ) [NoBrackets]
          ) [AddVarDecl1]
        ) [OneVarDeclaration]
      ) [VarDeclaration]
    ) [VariableDeclaration]
  ) [Declarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      NoVarDeclarations(
      ) [NoVarDeclarations]
      Statements(
        Statements(
          Statements(
            Statements(
              NoStatements(
              ) [NoStatements]
              DesignatorStat(
                DesignatorExpr(
                  Designator(
                    WithoutNamespace(
                     niz
                    ) [WithoutNamespace]
                    NoArrayExpression(
                    ) [NoArrayExpression]
                  ) [Designator]
                  AssignOperation(
                  ) [AssignOperation]
                  PositiveStartExpr(
                    SingleTerm(
                      NewType(
                        Type(
                         int
                        ) [Type]
                        PositiveStartExpr(
                          SingleTerm(
                            NumberConst(
                             5
                            ) [NumberConst]
                          ) [SingleTerm]
                        ) [PositiveStartExpr]
                      ) [NewType]
                    ) [SingleTerm]
                  ) [PositiveStartExpr]
                ) [DesignatorExpr]
              ) [DesignatorStat]
            ) [Statements]
            DesignatorStat(
              DesignatorExpr(
                Designator(
                  WithoutNamespace(
                   niz
                  ) [WithoutNamespace]
                  AddArrayExpression(
                    BraExpr(
                      PositiveStartExpr(
                        SingleTerm(
                          NumberConst(
                           0
                          ) [NumberConst]
                        ) [SingleTerm]
                      ) [PositiveStartExpr]
                    ) [BraExpr]
                  ) [AddArrayExpression]
                ) [Designator]
                AssignOperation(
                ) [AssignOperation]
                PositiveStartExpr(
                  SingleTerm(
                    NumberConst(
                     1
                    ) [NumberConst]
                  ) [SingleTerm]
                ) [PositiveStartExpr]
              ) [DesignatorExpr]
            ) [DesignatorStat]
          ) [Statements]
          DesignatorStat(
            DesignatorExpr(
              Designator(
                WithoutNamespace(
                 mat
                ) [WithoutNamespace]
                NoArrayExpression(
                ) [NoArrayExpression]
              ) [Designator]
              AssignOperation(
              ) [AssignOperation]
              PositiveStartExpr(
                SingleTerm(
                  NewTypeMat(
                    Type(
                     int
                    ) [Type]
                    PositiveStartExpr(
                      SingleTerm(
                        NumberConst(
                         2
                        ) [NumberConst]
                      ) [SingleTerm]
                    ) [PositiveStartExpr]
                    PositiveStartExpr(
                      SingleTerm(
                        NumberConst(
                         3
                        ) [NumberConst]
                      ) [SingleTerm]
                    ) [PositiveStartExpr]
                  ) [NewTypeMat]
                ) [SingleTerm]
              ) [PositiveStartExpr]
            ) [DesignatorExpr]
          ) [DesignatorStat]
        ) [Statements]
        DesignatorStat(
          DesignatorExpr(
            Designator(
              WithoutNamespace(
               mat
              ) [WithoutNamespace]
              AddMatrixExpression(
                BraExpr(
                  PositiveStartExpr(
                    SingleTerm(
                      NumberConst(
                       2
                      ) [NumberConst]
                    ) [SingleTerm]
                  ) [PositiveStartExpr]
                ) [BraExpr]
                BraExpr(
                  PositiveStartExpr(
                    SingleTerm(
                      NumberConst(
                       3
                      ) [NumberConst]
                    ) [SingleTerm]
                  ) [PositiveStartExpr]
                ) [BraExpr]
              ) [AddMatrixExpression]
            ) [Designator]
            AssignOperation(
            ) [AssignOperation]
            PositiveStartExpr(
              SingleTerm(
                NumberConst(
                 5
                ) [NumberConst]
              ) [SingleTerm]
            ) [PositiveStartExpr]
          ) [DesignatorExpr]
        ) [DesignatorStat]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  19:43:12,248 - ================ Semanticka obrada ===================
INFO  19:43:12,253 - NEW SYMBOL
INFO  19:43:12,253 - Var niz: Arr of int, 0, 0 on line 2
INFO  19:43:12,254 - NEW SYMBOL
INFO  19:43:12,254 - Var mat: Matrix of int, 1, 0 on line 3
INFO  19:43:12,254 - NEW SYMBOL
INFO  19:43:12,254 - Var c: char, 2, 0 on line 4
INFO  19:43:12,254 - Var niz: Arr of int, 0, 0 on line 10
INFO  19:43:12,254 - Var niz: Arr of int, 0, 0 on line 11
INFO  19:43:12,254 - Var mat: Matrix of int, 1, 0 on line 12
INFO  19:43:12,254 - Var mat: Matrix of int, 1, 0 on line 13
ERROR 19:43:12,254 - Types not matching  on line 13
INFO  19:43:12,254 - Meth main: notype, 0, 0 on line 1
ERROR 19:43:12,254 - Parser FAIL!
INFO  19:43:17,042 - Compiling source file: C:\Users\elena\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  19:43:17,043 - ================= LEKSICKA ANALIZA =================
INFO  19:43:17,090 - #2 program
INFO  19:43:17,092 - #47 test301
INFO  19:43:17,092 - #47 int
INFO  19:43:17,093 - #47 niz
INFO  19:43:17,093 - #33 [
INFO  19:43:17,094 - #34 ]
INFO  19:43:17,094 - #27 ;
INFO  19:43:17,096 - #47 int
INFO  19:43:17,096 - #47 mat
INFO  19:43:17,096 - #33 [
INFO  19:43:17,096 - #34 ]
INFO  19:43:17,096 - #33 [
INFO  19:43:17,096 - #34 ]
INFO  19:43:17,097 - #27 ;
INFO  19:43:17,098 - #47 char
INFO  19:43:17,098 - #47 c
INFO  19:43:17,098 - #27 ;
INFO  19:43:17,099 - #35 {
INFO  19:43:17,099 - #8 void
INFO  19:43:17,100 - #47 main
INFO  19:43:17,100 - #31 (
INFO  19:43:17,101 - #32 )
INFO  19:43:17,101 - #35 {
INFO  19:43:17,103 - #47 niz
INFO  19:43:17,103 - #24 =
INFO  19:43:17,104 - #4 new
INFO  19:43:17,105 - #47 int
INFO  19:43:17,106 - #33 [
INFO  19:43:17,106 - #46 5
INFO  19:43:17,106 - #34 ]
INFO  19:43:17,106 - #27 ;
INFO  19:43:17,107 - #47 niz
INFO  19:43:17,107 - #33 [
INFO  19:43:17,107 - #46 0
INFO  19:43:17,107 - #34 ]
INFO  19:43:17,107 - #24 =
INFO  19:43:17,108 - #46 1
INFO  19:43:17,108 - #27 ;
INFO  19:43:17,108 - #47 mat
INFO  19:43:17,108 - #24 =
INFO  19:43:17,109 - #4 new
INFO  19:43:17,109 - #47 int
INFO  19:43:17,109 - #33 [
INFO  19:43:17,109 - #46 2
INFO  19:43:17,109 - #34 ]
INFO  19:43:17,109 - #33 [
INFO  19:43:17,109 - #46 3
INFO  19:43:17,109 - #34 ]
INFO  19:43:17,109 - #27 ;
INFO  19:43:17,109 - #47 mat
INFO  19:43:17,109 - #33 [
INFO  19:43:17,110 - #46 2
INFO  19:43:17,110 - #34 ]
INFO  19:43:17,110 - #33 [
INFO  19:43:17,110 - #46 3
INFO  19:43:17,110 - #34 ]
INFO  19:43:17,110 - #24 =
INFO  19:43:17,110 - #46 5
INFO  19:43:17,110 - #27 ;
INFO  19:43:17,111 - #36 }
INFO  19:43:17,111 - #36 }
INFO  19:43:17,113 - ================= PARSIRANO STABLO =================
INFO  19:43:17,119 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  Declarations(
    Declarations(
      Declarations(
        NoDeclarations(
        ) [NoDeclarations]
        VariableDeclaration(
          VarDeclaration(
            Type(
             int
            ) [Type]
            OneVarDeclaration(
              AddVarDecl1(
               niz
                Brackets(
                ) [Brackets]
              ) [AddVarDecl1]
            ) [OneVarDeclaration]
          ) [VarDeclaration]
        ) [VariableDeclaration]
      ) [Declarations]
      VariableDeclaration(
        VarDeclaration(
          Type(
           int
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             mat
              TwoBrackets(
              ) [TwoBrackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [VariableDeclaration]
    ) [Declarations]
    VariableDeclaration(
      VarDeclaration(
        Type(
         char
        ) [Type]
        OneVarDeclaration(
          AddVarDecl1(
           c
            NoBrackets(
            ) [NoBrackets]
          ) [AddVarDecl1]
        ) [OneVarDeclaration]
      ) [VarDeclaration]
    ) [VariableDeclaration]
  ) [Declarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      NoVarDeclarations(
      ) [NoVarDeclarations]
      Statements(
        Statements(
          Statements(
            Statements(
              NoStatements(
              ) [NoStatements]
              DesignatorStat(
                DesignatorExpr(
                  Designator(
                    WithoutNamespace(
                     niz
                    ) [WithoutNamespace]
                    NoArrayExpression(
                    ) [NoArrayExpression]
                  ) [Designator]
                  AssignOperation(
                  ) [AssignOperation]
                  PositiveStartExpr(
                    SingleTerm(
                      NewType(
                        Type(
                         int
                        ) [Type]
                        PositiveStartExpr(
                          SingleTerm(
                            NumberConst(
                             5
                            ) [NumberConst]
                          ) [SingleTerm]
                        ) [PositiveStartExpr]
                      ) [NewType]
                    ) [SingleTerm]
                  ) [PositiveStartExpr]
                ) [DesignatorExpr]
              ) [DesignatorStat]
            ) [Statements]
            DesignatorStat(
              DesignatorExpr(
                Designator(
                  WithoutNamespace(
                   niz
                  ) [WithoutNamespace]
                  AddArrayExpression(
                    BraExpr(
                      PositiveStartExpr(
                        SingleTerm(
                          NumberConst(
                           0
                          ) [NumberConst]
                        ) [SingleTerm]
                      ) [PositiveStartExpr]
                    ) [BraExpr]
                  ) [AddArrayExpression]
                ) [Designator]
                AssignOperation(
                ) [AssignOperation]
                PositiveStartExpr(
                  SingleTerm(
                    NumberConst(
                     1
                    ) [NumberConst]
                  ) [SingleTerm]
                ) [PositiveStartExpr]
              ) [DesignatorExpr]
            ) [DesignatorStat]
          ) [Statements]
          DesignatorStat(
            DesignatorExpr(
              Designator(
                WithoutNamespace(
                 mat
                ) [WithoutNamespace]
                NoArrayExpression(
                ) [NoArrayExpression]
              ) [Designator]
              AssignOperation(
              ) [AssignOperation]
              PositiveStartExpr(
                SingleTerm(
                  NewTypeMat(
                    Type(
                     int
                    ) [Type]
                    PositiveStartExpr(
                      SingleTerm(
                        NumberConst(
                         2
                        ) [NumberConst]
                      ) [SingleTerm]
                    ) [PositiveStartExpr]
                    PositiveStartExpr(
                      SingleTerm(
                        NumberConst(
                         3
                        ) [NumberConst]
                      ) [SingleTerm]
                    ) [PositiveStartExpr]
                  ) [NewTypeMat]
                ) [SingleTerm]
              ) [PositiveStartExpr]
            ) [DesignatorExpr]
          ) [DesignatorStat]
        ) [Statements]
        DesignatorStat(
          DesignatorExpr(
            Designator(
              WithoutNamespace(
               mat
              ) [WithoutNamespace]
              AddMatrixExpression(
                BraExpr(
                  PositiveStartExpr(
                    SingleTerm(
                      NumberConst(
                       2
                      ) [NumberConst]
                    ) [SingleTerm]
                  ) [PositiveStartExpr]
                ) [BraExpr]
                BraExpr(
                  PositiveStartExpr(
                    SingleTerm(
                      NumberConst(
                       3
                      ) [NumberConst]
                    ) [SingleTerm]
                  ) [PositiveStartExpr]
                ) [BraExpr]
              ) [AddMatrixExpression]
            ) [Designator]
            AssignOperation(
            ) [AssignOperation]
            PositiveStartExpr(
              SingleTerm(
                NumberConst(
                 5
                ) [NumberConst]
              ) [SingleTerm]
            ) [PositiveStartExpr]
          ) [DesignatorExpr]
        ) [DesignatorStat]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  19:43:17,119 - ================ Semanticka obrada ===================
INFO  19:43:17,134 - NEW SYMBOL
INFO  19:43:17,134 - Var niz: Arr of int, 0, 0 on line 2
INFO  19:43:17,134 - NEW SYMBOL
INFO  19:43:17,134 - Var mat: Matrix of int, 1, 0 on line 3
INFO  19:43:17,134 - NEW SYMBOL
INFO  19:43:17,134 - Var c: char, 2, 0 on line 4
INFO  19:43:17,134 - Var niz: Arr of int, 0, 0 on line 10
ERROR 19:45:47,325 - Types not matching  on line 13
INFO  19:45:47,326 - Meth main: notype, 0, 0 on line 1
ERROR 19:45:47,326 - Parser FAIL!
INFO  19:46:02,942 - Compiling source file: C:\Users\elena\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  19:46:02,943 - ================= LEKSICKA ANALIZA =================
INFO  19:46:02,990 - #2 program
INFO  19:46:02,990 - #47 test301
INFO  19:46:02,990 - #47 int
INFO  19:46:02,992 - #47 niz
INFO  19:46:02,992 - #33 [
INFO  19:46:02,992 - #34 ]
INFO  19:46:02,992 - #27 ;
INFO  19:46:02,994 - #47 int
INFO  19:46:02,995 - #47 mat
INFO  19:46:02,995 - #33 [
INFO  19:46:02,995 - #34 ]
INFO  19:46:02,995 - #33 [
INFO  19:46:02,995 - #34 ]
INFO  19:46:02,995 - #27 ;
INFO  19:46:02,995 - #47 char
INFO  19:46:02,995 - #47 c
INFO  19:46:02,995 - #27 ;
INFO  19:46:02,996 - #35 {
INFO  19:46:02,996 - #8 void
INFO  19:46:02,996 - #47 main
INFO  19:46:02,997 - #31 (
INFO  19:46:02,998 - #32 )
INFO  19:46:02,999 - #35 {
INFO  19:46:03,000 - #47 niz
INFO  19:46:03,002 - #24 =
INFO  19:46:03,003 - #4 new
INFO  19:46:03,004 - #47 int
INFO  19:46:03,004 - #33 [
INFO  19:46:03,004 - #46 5
INFO  19:46:03,004 - #34 ]
INFO  19:46:03,005 - #27 ;
INFO  19:46:03,005 - #47 niz
INFO  19:46:03,005 - #33 [
INFO  19:46:03,005 - #46 0
INFO  19:46:03,005 - #34 ]
INFO  19:46:03,005 - #24 =
INFO  19:46:03,006 - #46 1
INFO  19:46:03,006 - #27 ;
INFO  19:46:03,006 - #47 mat
INFO  19:46:03,006 - #24 =
INFO  19:46:03,007 - #4 new
INFO  19:46:03,007 - #47 int
INFO  19:46:03,007 - #33 [
INFO  19:46:03,007 - #46 2
INFO  19:46:03,007 - #34 ]
INFO  19:46:03,007 - #33 [
INFO  19:46:03,007 - #46 3
INFO  19:46:03,007 - #34 ]
INFO  19:46:03,007 - #27 ;
INFO  19:46:03,008 - #47 mat
INFO  19:46:03,008 - #33 [
INFO  19:46:03,008 - #46 2
INFO  19:46:03,008 - #34 ]
INFO  19:46:03,008 - #33 [
INFO  19:46:03,008 - #46 3
INFO  19:46:03,008 - #34 ]
INFO  19:46:03,008 - #24 =
INFO  19:46:03,008 - #46 5
INFO  19:46:03,008 - #27 ;
INFO  19:46:03,010 - #36 }
INFO  19:46:03,010 - #36 }
INFO  19:46:03,012 - ================= PARSIRANO STABLO =================
INFO  19:46:03,017 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  Declarations(
    Declarations(
      Declarations(
        NoDeclarations(
        ) [NoDeclarations]
        VariableDeclaration(
          VarDeclaration(
            Type(
             int
            ) [Type]
            OneVarDeclaration(
              AddVarDecl1(
               niz
                Brackets(
                ) [Brackets]
              ) [AddVarDecl1]
            ) [OneVarDeclaration]
          ) [VarDeclaration]
        ) [VariableDeclaration]
      ) [Declarations]
      VariableDeclaration(
        VarDeclaration(
          Type(
           int
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             mat
              TwoBrackets(
              ) [TwoBrackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [VariableDeclaration]
    ) [Declarations]
    VariableDeclaration(
      VarDeclaration(
        Type(
         char
        ) [Type]
        OneVarDeclaration(
          AddVarDecl1(
           c
            NoBrackets(
            ) [NoBrackets]
          ) [AddVarDecl1]
        ) [OneVarDeclaration]
      ) [VarDeclaration]
    ) [VariableDeclaration]
  ) [Declarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      NoVarDeclarations(
      ) [NoVarDeclarations]
      Statements(
        Statements(
          Statements(
            Statements(
              NoStatements(
              ) [NoStatements]
              DesignatorStat(
                DesignatorExpr(
                  Designator(
                    WithoutNamespace(
                     niz
                    ) [WithoutNamespace]
                    NoArrayExpression(
                    ) [NoArrayExpression]
                  ) [Designator]
                  AssignOperation(
                  ) [AssignOperation]
                  PositiveStartExpr(
                    SingleTerm(
                      NewType(
                        Type(
                         int
                        ) [Type]
                        PositiveStartExpr(
                          SingleTerm(
                            NumberConst(
                             5
                            ) [NumberConst]
                          ) [SingleTerm]
                        ) [PositiveStartExpr]
                      ) [NewType]
                    ) [SingleTerm]
                  ) [PositiveStartExpr]
                ) [DesignatorExpr]
              ) [DesignatorStat]
            ) [Statements]
            DesignatorStat(
              DesignatorExpr(
                Designator(
                  WithoutNamespace(
                   niz
                  ) [WithoutNamespace]
                  AddArrayExpression(
                    BraExpr(
                      PositiveStartExpr(
                        SingleTerm(
                          NumberConst(
                           0
                          ) [NumberConst]
                        ) [SingleTerm]
                      ) [PositiveStartExpr]
                    ) [BraExpr]
                  ) [AddArrayExpression]
                ) [Designator]
                AssignOperation(
                ) [AssignOperation]
                PositiveStartExpr(
                  SingleTerm(
                    NumberConst(
                     1
                    ) [NumberConst]
                  ) [SingleTerm]
                ) [PositiveStartExpr]
              ) [DesignatorExpr]
            ) [DesignatorStat]
          ) [Statements]
          DesignatorStat(
            DesignatorExpr(
              Designator(
                WithoutNamespace(
                 mat
                ) [WithoutNamespace]
                NoArrayExpression(
                ) [NoArrayExpression]
              ) [Designator]
              AssignOperation(
              ) [AssignOperation]
              PositiveStartExpr(
                SingleTerm(
                  NewTypeMat(
                    Type(
                     int
                    ) [Type]
                    PositiveStartExpr(
                      SingleTerm(
                        NumberConst(
                         2
                        ) [NumberConst]
                      ) [SingleTerm]
                    ) [PositiveStartExpr]
                    PositiveStartExpr(
                      SingleTerm(
                        NumberConst(
                         3
                        ) [NumberConst]
                      ) [SingleTerm]
                    ) [PositiveStartExpr]
                  ) [NewTypeMat]
                ) [SingleTerm]
              ) [PositiveStartExpr]
            ) [DesignatorExpr]
          ) [DesignatorStat]
        ) [Statements]
        DesignatorStat(
          DesignatorExpr(
            Designator(
              WithoutNamespace(
               mat
              ) [WithoutNamespace]
              AddMatrixExpression(
                BraExpr(
                  PositiveStartExpr(
                    SingleTerm(
                      NumberConst(
                       2
                      ) [NumberConst]
                    ) [SingleTerm]
                  ) [PositiveStartExpr]
                ) [BraExpr]
                BraExpr(
                  PositiveStartExpr(
                    SingleTerm(
                      NumberConst(
                       3
                      ) [NumberConst]
                    ) [SingleTerm]
                  ) [PositiveStartExpr]
                ) [BraExpr]
              ) [AddMatrixExpression]
            ) [Designator]
            AssignOperation(
            ) [AssignOperation]
            PositiveStartExpr(
              SingleTerm(
                NumberConst(
                 5
                ) [NumberConst]
              ) [SingleTerm]
            ) [PositiveStartExpr]
          ) [DesignatorExpr]
        ) [DesignatorStat]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  19:46:03,017 - ================ Semanticka obrada ===================
INFO  19:46:03,029 - NEW SYMBOL
INFO  19:46:03,029 - Var niz: Arr of int, 0, 0 on line 2
INFO  19:46:03,029 - NEW SYMBOL
INFO  19:46:03,029 - Var mat: Matrix of int, 1, 0 on line 3
INFO  19:46:03,029 - NEW SYMBOL
INFO  19:46:03,029 - Var c: char, 2, 0 on line 4
INFO  19:46:03,029 - Var niz: Arr of int, 0, 0 on line 10
INFO  19:46:03,029 - Var niz: Arr of int, 0, 0 on line 11
INFO  19:46:03,030 - Var mat: Matrix of int, 1, 0 on line 12
INFO  19:46:03,030 - Var mat: Matrix of int, 1, 0 on line 13
INFO  19:51:08,469 - Compiling source file: C:\Users\elena\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  19:51:08,469 - ================= LEKSICKA ANALIZA =================
INFO  19:51:08,523 - #2 program
INFO  19:51:08,523 - #47 test301
INFO  19:51:08,523 - #47 int
INFO  19:51:08,525 - #47 niz
INFO  19:51:08,525 - #33 [
INFO  19:51:08,526 - #34 ]
INFO  19:51:08,526 - #27 ;
INFO  19:51:08,528 - #47 int
INFO  19:51:08,528 - #47 mat
INFO  19:51:08,529 - #33 [
INFO  19:51:08,529 - #34 ]
INFO  19:51:08,529 - #33 [
INFO  19:51:08,529 - #34 ]
INFO  19:51:08,529 - #27 ;
INFO  19:51:08,530 - #47 char
INFO  19:51:08,530 - #47 c
INFO  19:51:08,530 - #27 ;
INFO  19:51:08,532 - #35 {
INFO  19:51:08,532 - #8 void
INFO  19:51:08,533 - #47 main
INFO  19:51:08,534 - #31 (
INFO  19:51:08,535 - #32 )
INFO  19:51:08,535 - #35 {
INFO  19:51:08,536 - #47 niz
INFO  19:51:08,537 - #24 =
INFO  19:51:08,539 - #4 new
INFO  19:51:08,541 - #47 int
INFO  19:51:08,541 - #33 [
INFO  19:51:08,543 - #46 5
INFO  19:51:08,543 - #34 ]
INFO  19:51:08,543 - #27 ;
INFO  19:51:08,544 - #47 niz
INFO  19:51:08,544 - #33 [
INFO  19:51:08,544 - #46 0
INFO  19:51:08,544 - #34 ]
INFO  19:51:08,545 - #24 =
INFO  19:51:08,546 - #46 1
INFO  19:51:08,547 - #27 ;
INFO  19:51:08,547 - #47 mat
INFO  19:51:08,547 - #24 =
INFO  19:51:08,547 - #4 new
INFO  19:51:08,548 - #47 int
INFO  19:51:08,548 - #33 [
INFO  19:51:08,548 - #46 2
INFO  19:51:08,548 - #34 ]
INFO  19:51:08,548 - #33 [
INFO  19:51:08,548 - #46 3
INFO  19:51:08,550 - #34 ]
INFO  19:51:08,550 - #27 ;
INFO  19:51:08,550 - #47 mat
INFO  19:51:08,550 - #33 [
INFO  19:51:08,550 - #46 2
INFO  19:51:08,551 - #34 ]
INFO  19:51:08,551 - #33 [
INFO  19:51:08,551 - #46 3
INFO  19:51:08,551 - #34 ]
INFO  19:51:08,551 - #24 =
INFO  19:51:08,552 - #46 5
INFO  19:51:08,552 - #27 ;
INFO  19:51:08,552 - #36 }
INFO  19:51:08,552 - #36 }
INFO  19:51:08,555 - ================= PARSIRANO STABLO =================
INFO  19:51:08,570 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  Declarations(
    Declarations(
      Declarations(
        NoDeclarations(
        ) [NoDeclarations]
        VariableDeclaration(
          VarDeclaration(
            Type(
             int
            ) [Type]
            OneVarDeclaration(
              AddVarDecl1(
               niz
                Brackets(
                ) [Brackets]
              ) [AddVarDecl1]
            ) [OneVarDeclaration]
          ) [VarDeclaration]
        ) [VariableDeclaration]
      ) [Declarations]
      VariableDeclaration(
        VarDeclaration(
          Type(
           int
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             mat
              TwoBrackets(
              ) [TwoBrackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [VariableDeclaration]
    ) [Declarations]
    VariableDeclaration(
      VarDeclaration(
        Type(
         char
        ) [Type]
        OneVarDeclaration(
          AddVarDecl1(
           c
            NoBrackets(
            ) [NoBrackets]
          ) [AddVarDecl1]
        ) [OneVarDeclaration]
      ) [VarDeclaration]
    ) [VariableDeclaration]
  ) [Declarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      NoVarDeclarations(
      ) [NoVarDeclarations]
      Statements(
        Statements(
          Statements(
            Statements(
              NoStatements(
              ) [NoStatements]
              DesignatorStat(
                DesignatorExpr(
                  Designator(
                    WithoutNamespace(
                     niz
                    ) [WithoutNamespace]
                    NoArrayExpression(
                    ) [NoArrayExpression]
                  ) [Designator]
                  AssignOperation(
                  ) [AssignOperation]
                  PositiveStartExpr(
                    SingleTerm(
                      NewType(
                        Type(
                         int
                        ) [Type]
                        PositiveStartExpr(
                          SingleTerm(
                            NumberConst(
                             5
                            ) [NumberConst]
                          ) [SingleTerm]
                        ) [PositiveStartExpr]
                      ) [NewType]
                    ) [SingleTerm]
                  ) [PositiveStartExpr]
                ) [DesignatorExpr]
              ) [DesignatorStat]
            ) [Statements]
            DesignatorStat(
              DesignatorExpr(
                Designator(
                  WithoutNamespace(
                   niz
                  ) [WithoutNamespace]
                  AddArrayExpression(
                    BraExpr(
                      PositiveStartExpr(
                        SingleTerm(
                          NumberConst(
                           0
                          ) [NumberConst]
                        ) [SingleTerm]
                      ) [PositiveStartExpr]
                    ) [BraExpr]
                  ) [AddArrayExpression]
                ) [Designator]
                AssignOperation(
                ) [AssignOperation]
                PositiveStartExpr(
                  SingleTerm(
                    NumberConst(
                     1
                    ) [NumberConst]
                  ) [SingleTerm]
                ) [PositiveStartExpr]
              ) [DesignatorExpr]
            ) [DesignatorStat]
          ) [Statements]
          DesignatorStat(
            DesignatorExpr(
              Designator(
                WithoutNamespace(
                 mat
                ) [WithoutNamespace]
                NoArrayExpression(
                ) [NoArrayExpression]
              ) [Designator]
              AssignOperation(
              ) [AssignOperation]
              PositiveStartExpr(
                SingleTerm(
                  NewTypeMat(
                    Type(
                     int
                    ) [Type]
                    PositiveStartExpr(
                      SingleTerm(
                        NumberConst(
                         2
                        ) [NumberConst]
                      ) [SingleTerm]
                    ) [PositiveStartExpr]
                    PositiveStartExpr(
                      SingleTerm(
                        NumberConst(
                         3
                        ) [NumberConst]
                      ) [SingleTerm]
                    ) [PositiveStartExpr]
                  ) [NewTypeMat]
                ) [SingleTerm]
              ) [PositiveStartExpr]
            ) [DesignatorExpr]
          ) [DesignatorStat]
        ) [Statements]
        DesignatorStat(
          DesignatorExpr(
            Designator(
              WithoutNamespace(
               mat
              ) [WithoutNamespace]
              AddMatrixExpression(
                BraExpr(
                  PositiveStartExpr(
                    SingleTerm(
                      NumberConst(
                       2
                      ) [NumberConst]
                    ) [SingleTerm]
                  ) [PositiveStartExpr]
                ) [BraExpr]
                BraExpr(
                  PositiveStartExpr(
                    SingleTerm(
                      NumberConst(
                       3
                      ) [NumberConst]
                    ) [SingleTerm]
                  ) [PositiveStartExpr]
                ) [BraExpr]
              ) [AddMatrixExpression]
            ) [Designator]
            AssignOperation(
            ) [AssignOperation]
            PositiveStartExpr(
              SingleTerm(
                NumberConst(
                 5
                ) [NumberConst]
              ) [SingleTerm]
            ) [PositiveStartExpr]
          ) [DesignatorExpr]
        ) [DesignatorStat]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  19:51:08,571 - ================ Semanticka obrada ===================
INFO  19:51:08,595 - NEW SYMBOL
INFO  19:51:08,596 - Var niz: Arr of int, 0, 0 on line 2
INFO  19:51:08,596 - NEW SYMBOL
INFO  19:51:08,596 - Var mat: Matrix of int, 1, 0 on line 3
INFO  19:51:08,596 - NEW SYMBOL
INFO  19:51:08,596 - Var c: char, 2, 0 on line 4
INFO  19:51:08,596 - Var niz: Arr of int, 0, 0 on line 10
INFO  19:51:08,596 - Var niz: Arr of int, 0, 0 on line 11
INFO  19:51:08,597 - Var mat: Matrix of int, 1, 0 on line 12
INFO  19:51:08,597 - Var mat: Matrix of int, 1, 0 on line 13
INFO  19:51:20,758 - Compiling source file: C:\Users\elena\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  19:51:20,759 - ================= LEKSICKA ANALIZA =================
INFO  19:51:20,797 - #2 program
INFO  19:51:20,799 - #47 test301
INFO  19:51:20,799 - #47 int
INFO  19:51:20,800 - #47 niz
INFO  19:51:20,801 - #33 [
INFO  19:51:20,801 - #34 ]
INFO  19:51:20,801 - #27 ;
INFO  19:51:20,802 - #47 int
INFO  19:51:20,803 - #47 mat
INFO  19:51:20,803 - #33 [
INFO  19:51:20,803 - #34 ]
INFO  19:51:20,803 - #33 [
INFO  19:51:20,803 - #34 ]
INFO  19:51:20,803 - #27 ;
INFO  19:51:20,804 - #47 char
INFO  19:51:20,804 - #47 c
INFO  19:51:20,804 - #27 ;
INFO  19:51:20,805 - #35 {
INFO  19:51:20,805 - #8 void
INFO  19:51:20,806 - #47 main
INFO  19:51:20,807 - #31 (
INFO  19:51:20,808 - #32 )
INFO  19:51:20,810 - #35 {
INFO  19:51:20,811 - #47 niz
INFO  19:51:20,812 - #24 =
INFO  19:51:20,814 - #4 new
INFO  19:51:20,816 - #47 int
INFO  19:51:20,816 - #33 [
INFO  19:51:20,816 - #46 5
INFO  19:51:20,816 - #34 ]
INFO  19:51:20,816 - #27 ;
INFO  19:51:20,817 - #47 niz
INFO  19:51:20,817 - #33 [
INFO  19:51:20,819 - #46 0
INFO  19:51:20,819 - #34 ]
INFO  19:51:20,819 - #24 =
INFO  19:51:20,820 - #46 1
INFO  19:51:20,821 - #27 ;
INFO  19:51:20,821 - #47 mat
INFO  19:51:20,821 - #24 =
INFO  19:51:20,821 - #4 new
INFO  19:51:20,821 - #47 int
INFO  19:51:20,822 - #33 [
INFO  19:51:20,822 - #46 2
INFO  19:51:20,822 - #34 ]
INFO  19:51:20,822 - #33 [
INFO  19:51:20,822 - #46 3
INFO  19:51:20,822 - #34 ]
INFO  19:51:20,822 - #27 ;
INFO  19:51:20,823 - #47 mat
INFO  19:51:20,823 - #33 [
INFO  19:51:20,823 - #46 2
INFO  19:51:20,823 - #34 ]
INFO  19:51:20,823 - #33 [
INFO  19:51:20,823 - #46 3
INFO  19:51:20,823 - #34 ]
INFO  19:51:20,823 - #24 =
INFO  19:51:20,824 - #46 5
INFO  19:51:20,824 - #27 ;
INFO  19:51:20,824 - #36 }
INFO  19:51:20,824 - #36 }
INFO  19:51:20,827 - ================= PARSIRANO STABLO =================
INFO  19:51:20,832 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  Declarations(
    Declarations(
      Declarations(
        NoDeclarations(
        ) [NoDeclarations]
        VariableDeclaration(
          VarDeclaration(
            Type(
             int
            ) [Type]
            OneVarDeclaration(
              AddVarDecl1(
               niz
                Brackets(
                ) [Brackets]
              ) [AddVarDecl1]
            ) [OneVarDeclaration]
          ) [VarDeclaration]
        ) [VariableDeclaration]
      ) [Declarations]
      VariableDeclaration(
        VarDeclaration(
          Type(
           int
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             mat
              TwoBrackets(
              ) [TwoBrackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [VariableDeclaration]
    ) [Declarations]
    VariableDeclaration(
      VarDeclaration(
        Type(
         char
        ) [Type]
        OneVarDeclaration(
          AddVarDecl1(
           c
            NoBrackets(
            ) [NoBrackets]
          ) [AddVarDecl1]
        ) [OneVarDeclaration]
      ) [VarDeclaration]
    ) [VariableDeclaration]
  ) [Declarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      NoVarDeclarations(
      ) [NoVarDeclarations]
      Statements(
        Statements(
          Statements(
            Statements(
              NoStatements(
              ) [NoStatements]
              DesignatorStat(
                DesignatorExpr(
                  Designator(
                    WithoutNamespace(
                     niz
                    ) [WithoutNamespace]
                    NoArrayExpression(
                    ) [NoArrayExpression]
                  ) [Designator]
                  AssignOperation(
                  ) [AssignOperation]
                  PositiveStartExpr(
                    SingleTerm(
                      NewType(
                        Type(
                         int
                        ) [Type]
                        PositiveStartExpr(
                          SingleTerm(
                            NumberConst(
                             5
                            ) [NumberConst]
                          ) [SingleTerm]
                        ) [PositiveStartExpr]
                      ) [NewType]
                    ) [SingleTerm]
                  ) [PositiveStartExpr]
                ) [DesignatorExpr]
              ) [DesignatorStat]
            ) [Statements]
            DesignatorStat(
              DesignatorExpr(
                Designator(
                  WithoutNamespace(
                   niz
                  ) [WithoutNamespace]
                  AddArrayExpression(
                    BraExpr(
                      PositiveStartExpr(
                        SingleTerm(
                          NumberConst(
                           0
                          ) [NumberConst]
                        ) [SingleTerm]
                      ) [PositiveStartExpr]
                    ) [BraExpr]
                  ) [AddArrayExpression]
                ) [Designator]
                AssignOperation(
                ) [AssignOperation]
                PositiveStartExpr(
                  SingleTerm(
                    NumberConst(
                     1
                    ) [NumberConst]
                  ) [SingleTerm]
                ) [PositiveStartExpr]
              ) [DesignatorExpr]
            ) [DesignatorStat]
          ) [Statements]
          DesignatorStat(
            DesignatorExpr(
              Designator(
                WithoutNamespace(
                 mat
                ) [WithoutNamespace]
                NoArrayExpression(
                ) [NoArrayExpression]
              ) [Designator]
              AssignOperation(
              ) [AssignOperation]
              PositiveStartExpr(
                SingleTerm(
                  NewTypeMat(
                    Type(
                     int
                    ) [Type]
                    PositiveStartExpr(
                      SingleTerm(
                        NumberConst(
                         2
                        ) [NumberConst]
                      ) [SingleTerm]
                    ) [PositiveStartExpr]
                    PositiveStartExpr(
                      SingleTerm(
                        NumberConst(
                         3
                        ) [NumberConst]
                      ) [SingleTerm]
                    ) [PositiveStartExpr]
                  ) [NewTypeMat]
                ) [SingleTerm]
              ) [PositiveStartExpr]
            ) [DesignatorExpr]
          ) [DesignatorStat]
        ) [Statements]
        DesignatorStat(
          DesignatorExpr(
            Designator(
              WithoutNamespace(
               mat
              ) [WithoutNamespace]
              AddMatrixExpression(
                BraExpr(
                  PositiveStartExpr(
                    SingleTerm(
                      NumberConst(
                       2
                      ) [NumberConst]
                    ) [SingleTerm]
                  ) [PositiveStartExpr]
                ) [BraExpr]
                BraExpr(
                  PositiveStartExpr(
                    SingleTerm(
                      NumberConst(
                       3
                      ) [NumberConst]
                    ) [SingleTerm]
                  ) [PositiveStartExpr]
                ) [BraExpr]
              ) [AddMatrixExpression]
            ) [Designator]
            AssignOperation(
            ) [AssignOperation]
            PositiveStartExpr(
              SingleTerm(
                NumberConst(
                 5
                ) [NumberConst]
              ) [SingleTerm]
            ) [PositiveStartExpr]
          ) [DesignatorExpr]
        ) [DesignatorStat]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  19:51:20,833 - ================ Semanticka obrada ===================
INFO  19:51:20,841 - NEW SYMBOL
INFO  19:51:20,841 - Var niz: Arr of int, 0, 0 on line 2
INFO  19:51:20,841 - NEW SYMBOL
INFO  19:51:20,841 - Var mat: Matrix of int, 1, 0 on line 3
INFO  19:51:20,841 - NEW SYMBOL
INFO  19:51:20,841 - Var c: char, 2, 0 on line 4
INFO  19:51:20,841 - Var niz: Arr of int, 0, 0 on line 10
INFO  19:51:20,841 - Var niz: Arr of int, 0, 0 on line 11
INFO  19:51:20,841 - Var mat: Matrix of int, 1, 0 on line 12
INFO  19:51:20,841 - Var mat: Matrix of int, 1, 0 on line 13
ERROR 19:51:20,841 - Types not matching  on line 13
INFO  19:51:20,842 - Meth main: notype, 0, 0 on line 1
ERROR 19:51:20,842 - Parser FAIL!
INFO  19:58:07,905 - Compiling source file: C:\Users\elena\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  19:58:07,906 - ================= LEKSICKA ANALIZA =================
INFO  19:58:08,031 - #2 program
INFO  19:58:08,031 - #47 test301
INFO  19:58:08,031 - #47 int
INFO  19:58:08,035 - #47 niz
INFO  19:58:08,037 - #33 [
INFO  19:58:08,037 - #34 ]
INFO  19:58:08,037 - #27 ;
INFO  19:58:08,040 - #47 int
INFO  19:58:08,041 - #47 mat
INFO  19:58:08,041 - #33 [
INFO  19:58:08,041 - #34 ]
INFO  19:58:08,041 - #33 [
INFO  19:58:08,041 - #34 ]
INFO  19:58:08,041 - #27 ;
INFO  19:58:08,044 - #47 char
INFO  19:58:08,045 - #47 c
INFO  19:58:08,045 - #27 ;
INFO  19:58:08,046 - #35 {
INFO  19:58:08,047 - #8 void
INFO  19:58:08,048 - #47 main
INFO  19:58:08,050 - #31 (
INFO  19:58:08,051 - #32 )
INFO  19:58:08,053 - #35 {
INFO  19:58:08,055 - #47 niz
INFO  19:58:08,057 - #24 =
INFO  19:58:08,063 - #4 new
INFO  19:58:08,066 - #47 int
INFO  19:58:08,066 - #33 [
INFO  19:58:08,066 - #46 5
INFO  19:58:08,067 - #34 ]
INFO  19:58:08,068 - #27 ;
INFO  19:58:08,068 - #47 niz
INFO  19:58:08,069 - #33 [
INFO  19:58:08,070 - #46 0
INFO  19:58:08,070 - #34 ]
INFO  19:58:08,070 - #24 =
INFO  19:58:08,072 - #46 1
INFO  19:58:08,072 - #27 ;
INFO  19:58:08,072 - #47 mat
INFO  19:58:08,073 - #24 =
INFO  19:58:08,073 - #4 new
INFO  19:58:08,073 - #47 int
INFO  19:58:08,073 - #33 [
INFO  19:58:08,073 - #46 2
INFO  19:58:08,073 - #34 ]
INFO  19:58:08,074 - #33 [
INFO  19:58:08,074 - #46 3
INFO  19:58:08,074 - #34 ]
INFO  19:58:08,074 - #27 ;
INFO  19:58:08,075 - #47 mat
INFO  19:58:08,075 - #33 [
INFO  19:58:08,075 - #46 2
INFO  19:58:08,075 - #34 ]
INFO  19:58:08,076 - #33 [
INFO  19:58:08,076 - #46 3
INFO  19:58:08,076 - #34 ]
INFO  19:58:08,076 - #24 =
INFO  19:58:08,076 - #46 5
INFO  19:58:08,076 - #27 ;
INFO  19:58:08,077 - #36 }
INFO  19:58:08,077 - #36 }
INFO  19:58:08,083 - ================= PARSIRANO STABLO =================
INFO  19:58:08,097 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  Declarations(
    Declarations(
      Declarations(
        NoDeclarations(
        ) [NoDeclarations]
        VariableDeclaration(
          VarDeclaration(
            Type(
             int
            ) [Type]
            OneVarDeclaration(
              AddVarDecl1(
               niz
                Brackets(
                ) [Brackets]
              ) [AddVarDecl1]
            ) [OneVarDeclaration]
          ) [VarDeclaration]
        ) [VariableDeclaration]
      ) [Declarations]
      VariableDeclaration(
        VarDeclaration(
          Type(
           int
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             mat
              TwoBrackets(
              ) [TwoBrackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [VariableDeclaration]
    ) [Declarations]
    VariableDeclaration(
      VarDeclaration(
        Type(
         char
        ) [Type]
        OneVarDeclaration(
          AddVarDecl1(
           c
            NoBrackets(
            ) [NoBrackets]
          ) [AddVarDecl1]
        ) [OneVarDeclaration]
      ) [VarDeclaration]
    ) [VariableDeclaration]
  ) [Declarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      NoVarDeclarations(
      ) [NoVarDeclarations]
      Statements(
        Statements(
          Statements(
            Statements(
              NoStatements(
              ) [NoStatements]
              DesignatorStat(
                DesignatorExpr(
                  Designator(
                    WithoutNamespace(
                     niz
                    ) [WithoutNamespace]
                    NoArrayExpression(
                    ) [NoArrayExpression]
                  ) [Designator]
                  AssignOperation(
                  ) [AssignOperation]
                  PositiveStartExpr(
                    SingleTerm(
                      NewType(
                        Type(
                         int
                        ) [Type]
                        PositiveStartExpr(
                          SingleTerm(
                            NumberConst(
                             5
                            ) [NumberConst]
                          ) [SingleTerm]
                        ) [PositiveStartExpr]
                      ) [NewType]
                    ) [SingleTerm]
                  ) [PositiveStartExpr]
                ) [DesignatorExpr]
              ) [DesignatorStat]
            ) [Statements]
            DesignatorStat(
              DesignatorExpr(
                Designator(
                  WithoutNamespace(
                   niz
                  ) [WithoutNamespace]
                  AddArrayExpression(
                    BraExpr(
                      PositiveStartExpr(
                        SingleTerm(
                          NumberConst(
                           0
                          ) [NumberConst]
                        ) [SingleTerm]
                      ) [PositiveStartExpr]
                    ) [BraExpr]
                  ) [AddArrayExpression]
                ) [Designator]
                AssignOperation(
                ) [AssignOperation]
                PositiveStartExpr(
                  SingleTerm(
                    NumberConst(
                     1
                    ) [NumberConst]
                  ) [SingleTerm]
                ) [PositiveStartExpr]
              ) [DesignatorExpr]
            ) [DesignatorStat]
          ) [Statements]
          DesignatorStat(
            DesignatorExpr(
              Designator(
                WithoutNamespace(
                 mat
                ) [WithoutNamespace]
                NoArrayExpression(
                ) [NoArrayExpression]
              ) [Designator]
              AssignOperation(
              ) [AssignOperation]
              PositiveStartExpr(
                SingleTerm(
                  NewTypeMat(
                    Type(
                     int
                    ) [Type]
                    PositiveStartExpr(
                      SingleTerm(
                        NumberConst(
                         2
                        ) [NumberConst]
                      ) [SingleTerm]
                    ) [PositiveStartExpr]
                    PositiveStartExpr(
                      SingleTerm(
                        NumberConst(
                         3
                        ) [NumberConst]
                      ) [SingleTerm]
                    ) [PositiveStartExpr]
                  ) [NewTypeMat]
                ) [SingleTerm]
              ) [PositiveStartExpr]
            ) [DesignatorExpr]
          ) [DesignatorStat]
        ) [Statements]
        DesignatorStat(
          DesignatorExpr(
            Designator(
              WithoutNamespace(
               mat
              ) [WithoutNamespace]
              AddMatrixExpression(
                BraExpr(
                  PositiveStartExpr(
                    SingleTerm(
                      NumberConst(
                       2
                      ) [NumberConst]
                    ) [SingleTerm]
                  ) [PositiveStartExpr]
                ) [BraExpr]
                BraExpr(
                  PositiveStartExpr(
                    SingleTerm(
                      NumberConst(
                       3
                      ) [NumberConst]
                    ) [SingleTerm]
                  ) [PositiveStartExpr]
                ) [BraExpr]
              ) [AddMatrixExpression]
            ) [Designator]
            AssignOperation(
            ) [AssignOperation]
            PositiveStartExpr(
              SingleTerm(
                NumberConst(
                 5
                ) [NumberConst]
              ) [SingleTerm]
            ) [PositiveStartExpr]
          ) [DesignatorExpr]
        ) [DesignatorStat]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  19:58:08,122 - ================ Semanticka obrada ===================
INFO  19:58:08,134 - NEW SYMBOL
INFO  19:58:08,134 - Var niz: Arr of int, 0, 0 on line 2
INFO  19:58:08,134 - NEW SYMBOL
INFO  19:58:08,134 - Var mat: Matrix of int, 1, 0 on line 3
INFO  19:58:08,134 - NEW SYMBOL
INFO  19:58:08,134 - Var c: char, 2, 0 on line 4
INFO  19:58:08,134 - Var niz: Arr of int, 0, 0 on line 10
INFO  19:58:08,135 - Var niz: Arr of int, 0, 0 on line 11
INFO  19:58:08,135 - Var mat: Matrix of int, 1, 0 on line 12
INFO  19:58:08,135 - Var mat: Matrix of int, 1, 0 on line 13
ERROR 19:58:08,135 - Types not matching  on line 13
INFO  19:58:08,135 - Meth main: notype, 0, 0 on line 1
ERROR 19:58:08,135 - Parser FAIL!
INFO  19:58:19,025 - Compiling source file: C:\Users\elena\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  19:58:19,027 - ================= LEKSICKA ANALIZA =================
INFO  19:58:19,079 - #2 program
INFO  19:58:19,079 - #47 test301
INFO  19:58:19,079 - #47 int
INFO  19:58:19,081 - #47 niz
INFO  19:58:19,082 - #33 [
INFO  19:58:19,082 - #34 ]
INFO  19:58:19,082 - #27 ;
INFO  19:58:19,082 - #47 int
INFO  19:58:19,084 - #47 mat
INFO  19:58:19,084 - #33 [
INFO  19:58:19,084 - #34 ]
INFO  19:58:19,084 - #33 [
INFO  19:58:19,084 - #34 ]
INFO  19:58:19,084 - #27 ;
INFO  19:58:19,084 - #47 char
INFO  19:58:19,085 - #47 c
INFO  19:58:19,085 - #27 ;
INFO  19:58:19,085 - #35 {
INFO  19:58:19,085 - #8 void
INFO  19:58:19,086 - #47 main
INFO  19:58:19,086 - #31 (
INFO  19:58:19,087 - #32 )
INFO  19:58:19,087 - #35 {
INFO  19:58:19,088 - #47 niz
INFO  19:58:19,089 - #24 =
INFO  19:58:19,093 - #4 new
INFO  19:58:19,095 - #47 int
INFO  19:58:19,095 - #33 [
INFO  19:58:19,095 - #46 5
INFO  19:58:19,095 - #34 ]
INFO  19:58:19,095 - #27 ;
INFO  19:58:19,096 - #47 niz
INFO  19:58:19,096 - #33 [
INFO  19:58:19,096 - #46 0
INFO  19:58:19,096 - #34 ]
INFO  19:58:19,096 - #24 =
INFO  19:58:19,097 - #46 1
INFO  19:58:19,097 - #27 ;
INFO  19:58:19,098 - #47 mat
INFO  19:58:19,098 - #24 =
INFO  19:58:19,098 - #4 new
INFO  19:58:19,098 - #47 int
INFO  19:58:19,098 - #33 [
INFO  19:58:19,098 - #46 2
INFO  19:58:19,098 - #34 ]
INFO  19:58:19,098 - #33 [
INFO  19:58:19,098 - #46 3
INFO  19:58:19,098 - #34 ]
INFO  19:58:19,098 - #27 ;
INFO  19:58:19,099 - #47 mat
INFO  19:58:19,099 - #33 [
INFO  19:58:19,099 - #46 2
INFO  19:58:19,099 - #34 ]
INFO  19:58:19,099 - #33 [
INFO  19:58:19,099 - #46 3
INFO  19:58:19,099 - #34 ]
INFO  19:58:19,099 - #24 =
INFO  19:58:19,099 - #46 5
INFO  19:58:19,099 - #27 ;
INFO  19:58:19,100 - #36 }
INFO  19:58:19,100 - #36 }
INFO  19:58:19,104 - ================= PARSIRANO STABLO =================
INFO  19:58:19,110 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  Declarations(
    Declarations(
      Declarations(
        NoDeclarations(
        ) [NoDeclarations]
        VariableDeclaration(
          VarDeclaration(
            Type(
             int
            ) [Type]
            OneVarDeclaration(
              AddVarDecl1(
               niz
                Brackets(
                ) [Brackets]
              ) [AddVarDecl1]
            ) [OneVarDeclaration]
          ) [VarDeclaration]
        ) [VariableDeclaration]
      ) [Declarations]
      VariableDeclaration(
        VarDeclaration(
          Type(
           int
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             mat
              TwoBrackets(
              ) [TwoBrackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [VariableDeclaration]
    ) [Declarations]
    VariableDeclaration(
      VarDeclaration(
        Type(
         char
        ) [Type]
        OneVarDeclaration(
          AddVarDecl1(
           c
            NoBrackets(
            ) [NoBrackets]
          ) [AddVarDecl1]
        ) [OneVarDeclaration]
      ) [VarDeclaration]
    ) [VariableDeclaration]
  ) [Declarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      NoVarDeclarations(
      ) [NoVarDeclarations]
      Statements(
        Statements(
          Statements(
            Statements(
              NoStatements(
              ) [NoStatements]
              DesignatorStat(
                DesignatorExpr(
                  Designator(
                    WithoutNamespace(
                     niz
                    ) [WithoutNamespace]
                    NoArrayExpression(
                    ) [NoArrayExpression]
                  ) [Designator]
                  AssignOperation(
                  ) [AssignOperation]
                  PositiveStartExpr(
                    SingleTerm(
                      NewType(
                        Type(
                         int
                        ) [Type]
                        PositiveStartExpr(
                          SingleTerm(
                            NumberConst(
                             5
                            ) [NumberConst]
                          ) [SingleTerm]
                        ) [PositiveStartExpr]
                      ) [NewType]
                    ) [SingleTerm]
                  ) [PositiveStartExpr]
                ) [DesignatorExpr]
              ) [DesignatorStat]
            ) [Statements]
            DesignatorStat(
              DesignatorExpr(
                Designator(
                  WithoutNamespace(
                   niz
                  ) [WithoutNamespace]
                  AddArrayExpression(
                    BraExpr(
                      PositiveStartExpr(
                        SingleTerm(
                          NumberConst(
                           0
                          ) [NumberConst]
                        ) [SingleTerm]
                      ) [PositiveStartExpr]
                    ) [BraExpr]
                  ) [AddArrayExpression]
                ) [Designator]
                AssignOperation(
                ) [AssignOperation]
                PositiveStartExpr(
                  SingleTerm(
                    NumberConst(
                     1
                    ) [NumberConst]
                  ) [SingleTerm]
                ) [PositiveStartExpr]
              ) [DesignatorExpr]
            ) [DesignatorStat]
          ) [Statements]
          DesignatorStat(
            DesignatorExpr(
              Designator(
                WithoutNamespace(
                 mat
                ) [WithoutNamespace]
                NoArrayExpression(
                ) [NoArrayExpression]
              ) [Designator]
              AssignOperation(
              ) [AssignOperation]
              PositiveStartExpr(
                SingleTerm(
                  NewTypeMat(
                    Type(
                     int
                    ) [Type]
                    PositiveStartExpr(
                      SingleTerm(
                        NumberConst(
                         2
                        ) [NumberConst]
                      ) [SingleTerm]
                    ) [PositiveStartExpr]
                    PositiveStartExpr(
                      SingleTerm(
                        NumberConst(
                         3
                        ) [NumberConst]
                      ) [SingleTerm]
                    ) [PositiveStartExpr]
                  ) [NewTypeMat]
                ) [SingleTerm]
              ) [PositiveStartExpr]
            ) [DesignatorExpr]
          ) [DesignatorStat]
        ) [Statements]
        DesignatorStat(
          DesignatorExpr(
            Designator(
              WithoutNamespace(
               mat
              ) [WithoutNamespace]
              AddMatrixExpression(
                BraExpr(
                  PositiveStartExpr(
                    SingleTerm(
                      NumberConst(
                       2
                      ) [NumberConst]
                    ) [SingleTerm]
                  ) [PositiveStartExpr]
                ) [BraExpr]
                BraExpr(
                  PositiveStartExpr(
                    SingleTerm(
                      NumberConst(
                       3
                      ) [NumberConst]
                    ) [SingleTerm]
                  ) [PositiveStartExpr]
                ) [BraExpr]
              ) [AddMatrixExpression]
            ) [Designator]
            AssignOperation(
            ) [AssignOperation]
            PositiveStartExpr(
              SingleTerm(
                NumberConst(
                 5
                ) [NumberConst]
              ) [SingleTerm]
            ) [PositiveStartExpr]
          ) [DesignatorExpr]
        ) [DesignatorStat]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  19:58:19,110 - ================ Semanticka obrada ===================
INFO  19:58:19,114 - NEW SYMBOL
INFO  19:58:19,114 - Var niz: Arr of int, 0, 0 on line 2
INFO  19:58:19,114 - NEW SYMBOL
INFO  19:58:19,114 - Var mat: Matrix of int, 1, 0 on line 3
INFO  19:58:19,114 - NEW SYMBOL
INFO  19:58:19,115 - Var c: char, 2, 0 on line 4
INFO  19:58:19,115 - Var niz: Arr of int, 0, 0 on line 10
INFO  19:58:19,115 - Var niz: Arr of int, 0, 0 on line 11
INFO  19:58:19,115 - Var mat: Matrix of int, 1, 0 on line 12
INFO  19:58:19,115 - Var mat: Matrix of int, 1, 0 on line 13
ERROR 19:58:19,115 - Types not matching  on line 13
INFO  19:58:19,115 - Meth main: notype, 0, 0 on line 1
ERROR 19:58:19,116 - Parser FAIL!
INFO  20:05:53,427 - Compiling source file: C:\Users\elena\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  20:05:53,428 - ================= LEKSICKA ANALIZA =================
INFO  20:05:53,485 - #2 program
INFO  20:05:53,485 - #47 test301
INFO  20:05:53,485 - #47 int
INFO  20:05:53,486 - #47 niz
INFO  20:05:53,487 - #33 [
INFO  20:05:53,487 - #34 ]
INFO  20:05:53,487 - #27 ;
INFO  20:05:53,488 - #47 int
INFO  20:05:53,489 - #47 mat
INFO  20:05:53,489 - #33 [
INFO  20:05:53,489 - #34 ]
INFO  20:05:53,489 - #33 [
INFO  20:05:53,489 - #34 ]
INFO  20:05:53,489 - #27 ;
INFO  20:05:53,491 - #47 char
INFO  20:05:53,491 - #47 c
INFO  20:05:53,491 - #27 ;
INFO  20:05:53,492 - #35 {
INFO  20:05:53,492 - #8 void
INFO  20:05:53,493 - #47 main
INFO  20:05:53,494 - #31 (
INFO  20:05:53,495 - #32 )
INFO  20:05:53,495 - #35 {
INFO  20:05:53,497 - #47 niz
INFO  20:05:53,498 - #24 =
INFO  20:05:53,499 - #4 new
INFO  20:05:53,501 - #47 int
INFO  20:05:53,501 - #33 [
INFO  20:05:53,501 - #46 5
INFO  20:05:53,501 - #34 ]
INFO  20:05:53,502 - #27 ;
INFO  20:05:53,502 - #47 niz
INFO  20:05:53,503 - #33 [
INFO  20:05:53,503 - #46 0
INFO  20:05:53,503 - #34 ]
INFO  20:05:53,503 - #24 =
INFO  20:05:53,505 - #46 1
INFO  20:05:53,505 - #27 ;
INFO  20:05:53,505 - #47 mat
INFO  20:05:53,505 - #24 =
INFO  20:05:53,505 - #4 new
INFO  20:05:53,505 - #47 int
INFO  20:05:53,505 - #33 [
INFO  20:05:53,506 - #46 2
INFO  20:05:53,506 - #34 ]
INFO  20:05:53,506 - #33 [
INFO  20:05:53,506 - #46 3
INFO  20:05:53,506 - #34 ]
INFO  20:05:53,506 - #27 ;
INFO  20:05:53,506 - #47 mat
INFO  20:05:53,506 - #33 [
INFO  20:05:53,506 - #46 2
INFO  20:05:53,506 - #34 ]
INFO  20:05:53,506 - #33 [
INFO  20:05:53,506 - #46 3
INFO  20:05:53,507 - #34 ]
INFO  20:05:53,507 - #24 =
INFO  20:05:53,507 - #46 5
INFO  20:05:53,507 - #27 ;
INFO  20:05:53,507 - #36 }
INFO  20:05:53,507 - #36 }
INFO  20:05:53,511 - ================= PARSIRANO STABLO =================
INFO  20:05:53,518 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  Declarations(
    Declarations(
      Declarations(
        NoDeclarations(
        ) [NoDeclarations]
        VariableDeclaration(
          VarDeclaration(
            Type(
             int
            ) [Type]
            OneVarDeclaration(
              AddVarDecl1(
               niz
                Brackets(
                ) [Brackets]
              ) [AddVarDecl1]
            ) [OneVarDeclaration]
          ) [VarDeclaration]
        ) [VariableDeclaration]
      ) [Declarations]
      VariableDeclaration(
        VarDeclaration(
          Type(
           int
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             mat
              TwoBrackets(
              ) [TwoBrackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [VariableDeclaration]
    ) [Declarations]
    VariableDeclaration(
      VarDeclaration(
        Type(
         char
        ) [Type]
        OneVarDeclaration(
          AddVarDecl1(
           c
            NoBrackets(
            ) [NoBrackets]
          ) [AddVarDecl1]
        ) [OneVarDeclaration]
      ) [VarDeclaration]
    ) [VariableDeclaration]
  ) [Declarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      NoVarDeclarations(
      ) [NoVarDeclarations]
      Statements(
        Statements(
          Statements(
            Statements(
              NoStatements(
              ) [NoStatements]
              DesignatorStat(
                DesignatorExpr(
                  Designator(
                    WithoutNamespace(
                     niz
                    ) [WithoutNamespace]
                    NoArrayExpression(
                    ) [NoArrayExpression]
                  ) [Designator]
                  AssignOperation(
                  ) [AssignOperation]
                  PositiveStartExpr(
                    SingleTerm(
                      NewType(
                        Type(
                         int
                        ) [Type]
                        PositiveStartExpr(
                          SingleTerm(
                            NumberConst(
                             5
                            ) [NumberConst]
                          ) [SingleTerm]
                        ) [PositiveStartExpr]
                      ) [NewType]
                    ) [SingleTerm]
                  ) [PositiveStartExpr]
                ) [DesignatorExpr]
              ) [DesignatorStat]
            ) [Statements]
            DesignatorStat(
              DesignatorExpr(
                Designator(
                  WithoutNamespace(
                   niz
                  ) [WithoutNamespace]
                  AddArrayExpression(
                    BraExpr(
                      PositiveStartExpr(
                        SingleTerm(
                          NumberConst(
                           0
                          ) [NumberConst]
                        ) [SingleTerm]
                      ) [PositiveStartExpr]
                    ) [BraExpr]
                  ) [AddArrayExpression]
                ) [Designator]
                AssignOperation(
                ) [AssignOperation]
                PositiveStartExpr(
                  SingleTerm(
                    NumberConst(
                     1
                    ) [NumberConst]
                  ) [SingleTerm]
                ) [PositiveStartExpr]
              ) [DesignatorExpr]
            ) [DesignatorStat]
          ) [Statements]
          DesignatorStat(
            DesignatorExpr(
              Designator(
                WithoutNamespace(
                 mat
                ) [WithoutNamespace]
                NoArrayExpression(
                ) [NoArrayExpression]
              ) [Designator]
              AssignOperation(
              ) [AssignOperation]
              PositiveStartExpr(
                SingleTerm(
                  NewTypeMat(
                    Type(
                     int
                    ) [Type]
                    PositiveStartExpr(
                      SingleTerm(
                        NumberConst(
                         2
                        ) [NumberConst]
                      ) [SingleTerm]
                    ) [PositiveStartExpr]
                    PositiveStartExpr(
                      SingleTerm(
                        NumberConst(
                         3
                        ) [NumberConst]
                      ) [SingleTerm]
                    ) [PositiveStartExpr]
                  ) [NewTypeMat]
                ) [SingleTerm]
              ) [PositiveStartExpr]
            ) [DesignatorExpr]
          ) [DesignatorStat]
        ) [Statements]
        DesignatorStat(
          DesignatorExpr(
            Designator(
              WithoutNamespace(
               mat
              ) [WithoutNamespace]
              AddMatrixExpression(
                BraExpr(
                  PositiveStartExpr(
                    SingleTerm(
                      NumberConst(
                       2
                      ) [NumberConst]
                    ) [SingleTerm]
                  ) [PositiveStartExpr]
                ) [BraExpr]
                BraExpr(
                  PositiveStartExpr(
                    SingleTerm(
                      NumberConst(
                       3
                      ) [NumberConst]
                    ) [SingleTerm]
                  ) [PositiveStartExpr]
                ) [BraExpr]
              ) [AddMatrixExpression]
            ) [Designator]
            AssignOperation(
            ) [AssignOperation]
            PositiveStartExpr(
              SingleTerm(
                NumberConst(
                 5
                ) [NumberConst]
              ) [SingleTerm]
            ) [PositiveStartExpr]
          ) [DesignatorExpr]
        ) [DesignatorStat]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  20:05:53,520 - ================ Semanticka obrada ===================
INFO  20:05:53,564 - NEW SYMBOL
INFO  20:05:53,565 - Var niz: Arr of int, 0, 0 on line 2
INFO  20:05:53,565 - NEW SYMBOL
INFO  20:05:53,565 - Var mat: Matrix of int, 1, 0 on line 3
INFO  20:05:53,565 - NEW SYMBOL
INFO  20:05:53,565 - Var c: char, 2, 0 on line 4
INFO  20:05:53,567 - Var niz: Arr of int, 0, 0 on line 10
INFO  20:05:53,567 - Var niz: Arr of int, 0, 0 on line 11
INFO  20:05:53,568 - Var mat: Matrix of int, 1, 0 on line 12
INFO  20:05:53,568 - Var mat: Matrix of int, 1, 0 on line 13
ERROR 20:05:53,569 - Types not matching  on line 13
INFO  20:05:53,569 - Meth main: notype, 0, 0 on line 1
ERROR 20:05:53,569 - Parser FAIL!
INFO  20:06:09,044 - Compiling source file: C:\Users\elena\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  20:06:09,045 - ================= LEKSICKA ANALIZA =================
INFO  20:06:09,166 - #2 program
INFO  20:06:09,166 - #47 test301
INFO  20:06:09,166 - #47 int
INFO  20:06:09,169 - #47 niz
INFO  20:06:09,171 - #33 [
INFO  20:06:09,171 - #34 ]
INFO  20:06:09,172 - #27 ;
INFO  20:06:09,174 - #47 int
INFO  20:06:09,175 - #47 mat
INFO  20:06:09,176 - #33 [
INFO  20:06:09,176 - #34 ]
INFO  20:06:09,176 - #33 [
INFO  20:06:09,176 - #34 ]
INFO  20:06:09,176 - #27 ;
INFO  20:06:09,178 - #47 char
INFO  20:06:09,179 - #47 c
INFO  20:06:09,179 - #27 ;
INFO  20:06:09,181 - #35 {
INFO  20:06:09,182 - #8 void
INFO  20:06:09,185 - #47 main
INFO  20:06:09,188 - #31 (
INFO  20:06:09,191 - #32 )
INFO  20:06:09,193 - #35 {
INFO  20:06:09,194 - #47 niz
INFO  20:06:09,197 - #24 =
INFO  20:06:09,203 - #4 new
INFO  20:06:09,205 - #47 int
INFO  20:06:09,205 - #33 [
INFO  20:06:09,206 - #46 5
INFO  20:06:09,206 - #34 ]
INFO  20:06:09,207 - #27 ;
INFO  20:06:09,207 - #47 niz
INFO  20:06:09,209 - #33 [
INFO  20:06:09,209 - #46 0
INFO  20:06:09,209 - #34 ]
INFO  20:06:09,209 - #24 =
INFO  20:06:09,211 - #46 1
INFO  20:06:09,211 - #27 ;
INFO  20:06:09,211 - #47 mat
INFO  20:06:09,211 - #24 =
INFO  20:06:09,212 - #4 new
INFO  20:06:09,212 - #47 int
INFO  20:06:09,212 - #33 [
INFO  20:06:09,212 - #46 2
INFO  20:06:09,212 - #34 ]
INFO  20:06:09,212 - #33 [
INFO  20:06:09,213 - #46 3
INFO  20:06:09,213 - #34 ]
INFO  20:06:09,213 - #27 ;
INFO  20:06:09,214 - #47 mat
INFO  20:06:09,214 - #33 [
INFO  20:06:09,214 - #46 2
INFO  20:06:09,214 - #34 ]
INFO  20:06:09,214 - #33 [
INFO  20:06:09,215 - #46 3
INFO  20:06:09,215 - #34 ]
INFO  20:06:09,215 - #24 =
INFO  20:06:09,215 - #46 5
INFO  20:06:09,216 - #27 ;
INFO  20:06:09,216 - #36 }
INFO  20:06:09,216 - #36 }
INFO  20:06:09,223 - ================= PARSIRANO STABLO =================
INFO  20:06:09,239 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  Declarations(
    Declarations(
      Declarations(
        NoDeclarations(
        ) [NoDeclarations]
        VariableDeclaration(
          VarDeclaration(
            Type(
             int
            ) [Type]
            OneVarDeclaration(
              AddVarDecl1(
               niz
                Brackets(
                ) [Brackets]
              ) [AddVarDecl1]
            ) [OneVarDeclaration]
          ) [VarDeclaration]
        ) [VariableDeclaration]
      ) [Declarations]
      VariableDeclaration(
        VarDeclaration(
          Type(
           int
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             mat
              TwoBrackets(
              ) [TwoBrackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [VariableDeclaration]
    ) [Declarations]
    VariableDeclaration(
      VarDeclaration(
        Type(
         char
        ) [Type]
        OneVarDeclaration(
          AddVarDecl1(
           c
            NoBrackets(
            ) [NoBrackets]
          ) [AddVarDecl1]
        ) [OneVarDeclaration]
      ) [VarDeclaration]
    ) [VariableDeclaration]
  ) [Declarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      NoVarDeclarations(
      ) [NoVarDeclarations]
      Statements(
        Statements(
          Statements(
            Statements(
              NoStatements(
              ) [NoStatements]
              DesignatorStat(
                DesignatorExpr(
                  Designator(
                    WithoutNamespace(
                     niz
                    ) [WithoutNamespace]
                    NoArrayExpression(
                    ) [NoArrayExpression]
                  ) [Designator]
                  AssignOperation(
                  ) [AssignOperation]
                  PositiveStartExpr(
                    SingleTerm(
                      NewType(
                        Type(
                         int
                        ) [Type]
                        PositiveStartExpr(
                          SingleTerm(
                            NumberConst(
                             5
                            ) [NumberConst]
                          ) [SingleTerm]
                        ) [PositiveStartExpr]
                      ) [NewType]
                    ) [SingleTerm]
                  ) [PositiveStartExpr]
                ) [DesignatorExpr]
              ) [DesignatorStat]
            ) [Statements]
            DesignatorStat(
              DesignatorExpr(
                Designator(
                  WithoutNamespace(
                   niz
                  ) [WithoutNamespace]
                  AddArrayExpression(
                    BraExpr(
                      PositiveStartExpr(
                        SingleTerm(
                          NumberConst(
                           0
                          ) [NumberConst]
                        ) [SingleTerm]
                      ) [PositiveStartExpr]
                    ) [BraExpr]
                  ) [AddArrayExpression]
                ) [Designator]
                AssignOperation(
                ) [AssignOperation]
                PositiveStartExpr(
                  SingleTerm(
                    NumberConst(
                     1
                    ) [NumberConst]
                  ) [SingleTerm]
                ) [PositiveStartExpr]
              ) [DesignatorExpr]
            ) [DesignatorStat]
          ) [Statements]
          DesignatorStat(
            DesignatorExpr(
              Designator(
                WithoutNamespace(
                 mat
                ) [WithoutNamespace]
                NoArrayExpression(
                ) [NoArrayExpression]
              ) [Designator]
              AssignOperation(
              ) [AssignOperation]
              PositiveStartExpr(
                SingleTerm(
                  NewTypeMat(
                    Type(
                     int
                    ) [Type]
                    PositiveStartExpr(
                      SingleTerm(
                        NumberConst(
                         2
                        ) [NumberConst]
                      ) [SingleTerm]
                    ) [PositiveStartExpr]
                    PositiveStartExpr(
                      SingleTerm(
                        NumberConst(
                         3
                        ) [NumberConst]
                      ) [SingleTerm]
                    ) [PositiveStartExpr]
                  ) [NewTypeMat]
                ) [SingleTerm]
              ) [PositiveStartExpr]
            ) [DesignatorExpr]
          ) [DesignatorStat]
        ) [Statements]
        DesignatorStat(
          DesignatorExpr(
            Designator(
              WithoutNamespace(
               mat
              ) [WithoutNamespace]
              AddMatrixExpression(
                BraExpr(
                  PositiveStartExpr(
                    SingleTerm(
                      NumberConst(
                       2
                      ) [NumberConst]
                    ) [SingleTerm]
                  ) [PositiveStartExpr]
                ) [BraExpr]
                BraExpr(
                  PositiveStartExpr(
                    SingleTerm(
                      NumberConst(
                       3
                      ) [NumberConst]
                    ) [SingleTerm]
                  ) [PositiveStartExpr]
                ) [BraExpr]
              ) [AddMatrixExpression]
            ) [Designator]
            AssignOperation(
            ) [AssignOperation]
            PositiveStartExpr(
              SingleTerm(
                NumberConst(
                 5
                ) [NumberConst]
              ) [SingleTerm]
            ) [PositiveStartExpr]
          ) [DesignatorExpr]
        ) [DesignatorStat]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  20:06:09,241 - ================ Semanticka obrada ===================
INFO  20:06:09,253 - NEW SYMBOL
INFO  20:06:09,253 - Var niz: Arr of int, 0, 0 on line 2
INFO  20:06:09,253 - NEW SYMBOL
INFO  20:06:09,254 - Var mat: Matrix of int, 1, 0 on line 3
INFO  20:06:09,254 - NEW SYMBOL
INFO  20:06:09,254 - Var c: char, 2, 0 on line 4
INFO  20:06:09,254 - Var niz: Arr of int, 0, 0 on line 10
INFO  20:06:09,254 - Var niz: Arr of int, 0, 0 on line 11
INFO  20:06:09,255 - Var mat: Matrix of int, 1, 0 on line 12
INFO  20:06:09,255 - Var mat: Matrix of int, 1, 0 on line 13
ERROR 20:06:09,255 - Types not matching  on line 13
INFO  20:06:09,255 - Meth main: notype, 0, 0 on line 1
ERROR 20:06:09,255 - Parser FAIL!
INFO  20:06:23,129 - Compiling source file: C:\Users\elena\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  20:06:23,131 - ================= LEKSICKA ANALIZA =================
INFO  20:06:23,224 - #2 program
INFO  20:06:23,224 - #47 test301
INFO  20:06:23,224 - #47 int
INFO  20:06:23,227 - #47 niz
INFO  20:06:23,229 - #33 [
INFO  20:06:23,229 - #34 ]
INFO  20:06:23,229 - #27 ;
INFO  20:06:23,231 - #47 int
INFO  20:06:23,232 - #47 mat
INFO  20:06:23,232 - #33 [
INFO  20:06:23,232 - #34 ]
INFO  20:06:23,232 - #33 [
INFO  20:06:23,232 - #34 ]
INFO  20:06:23,233 - #27 ;
INFO  20:06:23,234 - #47 char
INFO  20:06:23,234 - #47 c
INFO  20:06:23,234 - #27 ;
INFO  20:06:23,235 - #35 {
INFO  20:06:23,235 - #8 void
INFO  20:06:23,237 - #47 main
INFO  20:06:23,238 - #31 (
INFO  20:06:23,239 - #32 )
INFO  20:06:23,240 - #35 {
INFO  20:06:23,242 - #47 niz
INFO  20:06:23,242 - #24 =
INFO  20:06:23,245 - #4 new
INFO  20:06:23,246 - #47 int
INFO  20:06:23,246 - #33 [
INFO  20:06:23,246 - #46 5
INFO  20:06:23,247 - #34 ]
INFO  20:06:23,248 - #27 ;
INFO  20:06:23,248 - #47 niz
INFO  20:06:23,249 - #33 [
INFO  20:06:23,249 - #46 0
INFO  20:06:23,249 - #34 ]
INFO  20:06:23,250 - #24 =
INFO  20:06:23,251 - #46 1
INFO  20:06:23,251 - #27 ;
INFO  20:06:23,251 - #47 mat
INFO  20:06:23,252 - #24 =
INFO  20:06:23,252 - #4 new
INFO  20:06:23,252 - #47 int
INFO  20:06:23,252 - #33 [
INFO  20:06:23,252 - #46 2
INFO  20:06:23,252 - #34 ]
INFO  20:06:23,252 - #33 [
INFO  20:06:23,254 - #46 3
INFO  20:06:23,254 - #34 ]
INFO  20:06:23,254 - #27 ;
INFO  20:06:23,254 - #47 mat
INFO  20:06:23,255 - #33 [
INFO  20:06:23,255 - #46 2
INFO  20:06:23,255 - #34 ]
INFO  20:06:23,255 - #33 [
INFO  20:06:23,255 - #46 3
INFO  20:06:23,255 - #34 ]
INFO  20:06:23,256 - #24 =
INFO  20:06:23,256 - #46 5
INFO  20:06:23,257 - #27 ;
INFO  20:06:23,257 - #36 }
INFO  20:06:23,257 - #36 }
INFO  20:06:23,261 - ================= PARSIRANO STABLO =================
INFO  20:06:23,272 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  Declarations(
    Declarations(
      Declarations(
        NoDeclarations(
        ) [NoDeclarations]
        VariableDeclaration(
          VarDeclaration(
            Type(
             int
            ) [Type]
            OneVarDeclaration(
              AddVarDecl1(
               niz
                Brackets(
                ) [Brackets]
              ) [AddVarDecl1]
            ) [OneVarDeclaration]
          ) [VarDeclaration]
        ) [VariableDeclaration]
      ) [Declarations]
      VariableDeclaration(
        VarDeclaration(
          Type(
           int
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             mat
              TwoBrackets(
              ) [TwoBrackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [VariableDeclaration]
    ) [Declarations]
    VariableDeclaration(
      VarDeclaration(
        Type(
         char
        ) [Type]
        OneVarDeclaration(
          AddVarDecl1(
           c
            NoBrackets(
            ) [NoBrackets]
          ) [AddVarDecl1]
        ) [OneVarDeclaration]
      ) [VarDeclaration]
    ) [VariableDeclaration]
  ) [Declarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      NoVarDeclarations(
      ) [NoVarDeclarations]
      Statements(
        Statements(
          Statements(
            Statements(
              NoStatements(
              ) [NoStatements]
              DesignatorStat(
                DesignatorExpr(
                  Designator(
                    WithoutNamespace(
                     niz
                    ) [WithoutNamespace]
                    NoArrayExpression(
                    ) [NoArrayExpression]
                  ) [Designator]
                  AssignOperation(
                  ) [AssignOperation]
                  PositiveStartExpr(
                    SingleTerm(
                      NewType(
                        Type(
                         int
                        ) [Type]
                        PositiveStartExpr(
                          SingleTerm(
                            NumberConst(
                             5
                            ) [NumberConst]
                          ) [SingleTerm]
                        ) [PositiveStartExpr]
                      ) [NewType]
                    ) [SingleTerm]
                  ) [PositiveStartExpr]
                ) [DesignatorExpr]
              ) [DesignatorStat]
            ) [Statements]
            DesignatorStat(
              DesignatorExpr(
                Designator(
                  WithoutNamespace(
                   niz
                  ) [WithoutNamespace]
                  AddArrayExpression(
                    BraExpr(
                      PositiveStartExpr(
                        SingleTerm(
                          NumberConst(
                           0
                          ) [NumberConst]
                        ) [SingleTerm]
                      ) [PositiveStartExpr]
                    ) [BraExpr]
                  ) [AddArrayExpression]
                ) [Designator]
                AssignOperation(
                ) [AssignOperation]
                PositiveStartExpr(
                  SingleTerm(
                    NumberConst(
                     1
                    ) [NumberConst]
                  ) [SingleTerm]
                ) [PositiveStartExpr]
              ) [DesignatorExpr]
            ) [DesignatorStat]
          ) [Statements]
          DesignatorStat(
            DesignatorExpr(
              Designator(
                WithoutNamespace(
                 mat
                ) [WithoutNamespace]
                NoArrayExpression(
                ) [NoArrayExpression]
              ) [Designator]
              AssignOperation(
              ) [AssignOperation]
              PositiveStartExpr(
                SingleTerm(
                  NewTypeMat(
                    Type(
                     int
                    ) [Type]
                    PositiveStartExpr(
                      SingleTerm(
                        NumberConst(
                         2
                        ) [NumberConst]
                      ) [SingleTerm]
                    ) [PositiveStartExpr]
                    PositiveStartExpr(
                      SingleTerm(
                        NumberConst(
                         3
                        ) [NumberConst]
                      ) [SingleTerm]
                    ) [PositiveStartExpr]
                  ) [NewTypeMat]
                ) [SingleTerm]
              ) [PositiveStartExpr]
            ) [DesignatorExpr]
          ) [DesignatorStat]
        ) [Statements]
        DesignatorStat(
          DesignatorExpr(
            Designator(
              WithoutNamespace(
               mat
              ) [WithoutNamespace]
              AddMatrixExpression(
                BraExpr(
                  PositiveStartExpr(
                    SingleTerm(
                      NumberConst(
                       2
                      ) [NumberConst]
                    ) [SingleTerm]
                  ) [PositiveStartExpr]
                ) [BraExpr]
                BraExpr(
                  PositiveStartExpr(
                    SingleTerm(
                      NumberConst(
                       3
                      ) [NumberConst]
                    ) [SingleTerm]
                  ) [PositiveStartExpr]
                ) [BraExpr]
              ) [AddMatrixExpression]
            ) [Designator]
            AssignOperation(
            ) [AssignOperation]
            PositiveStartExpr(
              SingleTerm(
                NumberConst(
                 5
                ) [NumberConst]
              ) [SingleTerm]
            ) [PositiveStartExpr]
          ) [DesignatorExpr]
        ) [DesignatorStat]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  20:06:23,273 - ================ Semanticka obrada ===================
INFO  20:06:23,298 - NEW SYMBOL
INFO  20:06:23,298 - Var niz: Arr of int, 0, 0 on line 2
INFO  20:06:23,298 - NEW SYMBOL
INFO  20:06:23,298 - Var mat: Matrix of int, 1, 0 on line 3
INFO  20:06:23,298 - NEW SYMBOL
INFO  20:06:23,298 - Var c: char, 2, 0 on line 4
INFO  20:06:23,299 - Var niz: Arr of int, 0, 0 on line 10
INFO  20:07:01,437 - Compiling source file: C:\Users\elena\Desktop\pp1lab.templateAST\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  20:07:01,439 - ================= LEKSICKA ANALIZA =================
INFO  20:07:01,492 - #2 program
INFO  20:07:01,492 - #47 test301
INFO  20:07:01,492 - #47 int
INFO  20:07:01,495 - #47 niz
INFO  20:07:01,495 - #33 [
INFO  20:07:01,496 - #34 ]
INFO  20:07:01,496 - #27 ;
INFO  20:07:01,497 - #47 int
INFO  20:07:01,497 - #47 mat
INFO  20:07:01,497 - #33 [
INFO  20:07:01,497 - #34 ]
INFO  20:07:01,497 - #33 [
INFO  20:07:01,497 - #34 ]
INFO  20:07:01,498 - #27 ;
INFO  20:07:01,498 - #47 char
INFO  20:07:01,498 - #47 c
INFO  20:07:01,498 - #27 ;
INFO  20:07:01,499 - #35 {
INFO  20:07:01,499 - #8 void
INFO  20:07:01,500 - #47 main
INFO  20:07:01,500 - #31 (
INFO  20:07:01,501 - #32 )
INFO  20:07:01,501 - #35 {
INFO  20:07:01,503 - #47 niz
INFO  20:07:01,503 - #24 =
INFO  20:07:01,504 - #4 new
INFO  20:07:01,505 - #47 int
INFO  20:07:01,505 - #33 [
INFO  20:07:01,505 - #46 5
INFO  20:07:01,505 - #34 ]
INFO  20:07:01,506 - #27 ;
INFO  20:07:01,506 - #47 niz
INFO  20:07:01,507 - #33 [
INFO  20:07:01,507 - #46 0
INFO  20:07:01,507 - #34 ]
INFO  20:07:01,507 - #24 =
INFO  20:07:01,508 - #46 1
INFO  20:07:01,508 - #27 ;
INFO  20:07:01,508 - #47 mat
INFO  20:07:01,508 - #24 =
INFO  20:07:01,508 - #4 new
INFO  20:07:01,508 - #47 int
INFO  20:07:01,508 - #33 [
INFO  20:07:01,508 - #46 2
INFO  20:07:01,508 - #34 ]
INFO  20:07:01,508 - #33 [
INFO  20:07:01,509 - #46 3
INFO  20:07:01,509 - #34 ]
INFO  20:07:01,509 - #27 ;
INFO  20:07:01,509 - #47 mat
INFO  20:07:01,509 - #33 [
INFO  20:07:01,509 - #46 2
INFO  20:07:01,509 - #34 ]
INFO  20:07:01,509 - #33 [
INFO  20:07:01,509 - #46 3
INFO  20:07:01,509 - #34 ]
INFO  20:07:01,510 - #24 =
INFO  20:07:01,510 - #46 5
INFO  20:07:01,510 - #27 ;
INFO  20:07:01,510 - #36 }
INFO  20:07:01,510 - #36 }
INFO  20:07:01,512 - ================= PARSIRANO STABLO =================
INFO  20:07:01,517 - Program(
  ProgName(
   test301
  ) [ProgName]
  NoNamespaceDeclarations(
  ) [NoNamespaceDeclarations]
  Declarations(
    Declarations(
      Declarations(
        NoDeclarations(
        ) [NoDeclarations]
        VariableDeclaration(
          VarDeclaration(
            Type(
             int
            ) [Type]
            OneVarDeclaration(
              AddVarDecl1(
               niz
                Brackets(
                ) [Brackets]
              ) [AddVarDecl1]
            ) [OneVarDeclaration]
          ) [VarDeclaration]
        ) [VariableDeclaration]
      ) [Declarations]
      VariableDeclaration(
        VarDeclaration(
          Type(
           int
          ) [Type]
          OneVarDeclaration(
            AddVarDecl1(
             mat
              TwoBrackets(
              ) [TwoBrackets]
            ) [AddVarDecl1]
          ) [OneVarDeclaration]
        ) [VarDeclaration]
      ) [VariableDeclaration]
    ) [Declarations]
    VariableDeclaration(
      VarDeclaration(
        Type(
         char
        ) [Type]
        OneVarDeclaration(
          AddVarDecl1(
           c
            NoBrackets(
            ) [NoBrackets]
          ) [AddVarDecl1]
        ) [OneVarDeclaration]
      ) [VarDeclaration]
    ) [VariableDeclaration]
  ) [Declarations]
  MethodDeclarations(
    NoMethodDeclarations(
    ) [NoMethodDeclarations]
    MethodDecl(
      MethodVoid(
      ) [MethodVoid]
      MethodName(
       main
      ) [MethodName]
      NoFormPars(
      ) [NoFormPars]
      NoVarDeclarations(
      ) [NoVarDeclarations]
      Statements(
        Statements(
          Statements(
            Statements(
              NoStatements(
              ) [NoStatements]
              DesignatorStat(
                DesignatorExpr(
                  Designator(
                    WithoutNamespace(
                     niz
                    ) [WithoutNamespace]
                    NoArrayExpression(
                    ) [NoArrayExpression]
                  ) [Designator]
                  AssignOperation(
                  ) [AssignOperation]
                  PositiveStartExpr(
                    SingleTerm(
                      NewType(
                        Type(
                         int
                        ) [Type]
                        PositiveStartExpr(
                          SingleTerm(
                            NumberConst(
                             5
                            ) [NumberConst]
                          ) [SingleTerm]
                        ) [PositiveStartExpr]
                      ) [NewType]
                    ) [SingleTerm]
                  ) [PositiveStartExpr]
                ) [DesignatorExpr]
              ) [DesignatorStat]
            ) [Statements]
            DesignatorStat(
              DesignatorExpr(
                Designator(
                  WithoutNamespace(
                   niz
                  ) [WithoutNamespace]
                  AddArrayExpression(
                    BraExpr(
                      PositiveStartExpr(
                        SingleTerm(
                          NumberConst(
                           0
                          ) [NumberConst]
                        ) [SingleTerm]
                      ) [PositiveStartExpr]
                    ) [BraExpr]
                  ) [AddArrayExpression]
                ) [Designator]
                AssignOperation(
                ) [AssignOperation]
                PositiveStartExpr(
                  SingleTerm(
                    NumberConst(
                     1
                    ) [NumberConst]
                  ) [SingleTerm]
                ) [PositiveStartExpr]
              ) [DesignatorExpr]
            ) [DesignatorStat]
          ) [Statements]
          DesignatorStat(
            DesignatorExpr(
              Designator(
                WithoutNamespace(
                 mat
                ) [WithoutNamespace]
                NoArrayExpression(
                ) [NoArrayExpression]
              ) [Designator]
              AssignOperation(
              ) [AssignOperation]
              PositiveStartExpr(
                SingleTerm(
                  NewTypeMat(
                    Type(
                     int
                    ) [Type]
                    PositiveStartExpr(
                      SingleTerm(
                        NumberConst(
                         2
                        ) [NumberConst]
                      ) [SingleTerm]
                    ) [PositiveStartExpr]
                    PositiveStartExpr(
                      SingleTerm(
                        NumberConst(
                         3
                        ) [NumberConst]
                      ) [SingleTerm]
                    ) [PositiveStartExpr]
                  ) [NewTypeMat]
                ) [SingleTerm]
              ) [PositiveStartExpr]
            ) [DesignatorExpr]
          ) [DesignatorStat]
        ) [Statements]
        DesignatorStat(
          DesignatorExpr(
            Designator(
              WithoutNamespace(
               mat
              ) [WithoutNamespace]
              AddMatrixExpression(
                BraExpr(
                  PositiveStartExpr(
                    SingleTerm(
                      NumberConst(
                       2
                      ) [NumberConst]
                    ) [SingleTerm]
                  ) [PositiveStartExpr]
                ) [BraExpr]
                BraExpr(
                  PositiveStartExpr(
                    SingleTerm(
                      NumberConst(
                       3
                      ) [NumberConst]
                    ) [SingleTerm]
                  ) [PositiveStartExpr]
                ) [BraExpr]
              ) [AddMatrixExpression]
            ) [Designator]
            AssignOperation(
            ) [AssignOperation]
            PositiveStartExpr(
              SingleTerm(
                NumberConst(
                 5
                ) [NumberConst]
              ) [SingleTerm]
            ) [PositiveStartExpr]
          ) [DesignatorExpr]
        ) [DesignatorStat]
      ) [Statements]
    ) [MethodDecl]
  ) [MethodDeclarations]
) [Program]
INFO  20:07:01,517 - ================ Semanticka obrada ===================
INFO  20:07:01,530 - NEW SYMBOL
INFO  20:07:01,530 - Var niz: Arr of int, 0, 0 on line 2
INFO  20:07:01,530 - NEW SYMBOL
INFO  20:07:01,530 - Var mat: Matrix of int, 1, 0 on line 3
INFO  20:07:01,530 - NEW SYMBOL
INFO  20:07:01,530 - Var c: char, 2, 0 on line 4
INFO  20:07:01,530 - Var niz: Arr of int, 0, 0 on line 10
INFO  20:07:12,557 - Var niz: Arr of int, 0, 0 on line 11
INFO  20:07:23,254 - Var mat: Matrix of int, 1, 0 on line 12
INFO  20:07:29,054 - Var mat: Matrix of int, 1, 0 on line 13
